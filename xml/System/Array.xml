<Type Name="Array" FullName="System.Array">
  <TypeSignature Language="C#" Value="public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Array extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Array" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Array&#xA;Implements ICloneable, IList, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Array abstract : ICloneable, System::Collections::IList, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cb6b2-101">Proporciona métodos para la creación, manipulación, búsqueda y ordenación de matrices, por lo tanto, sirve como clase base para todas las matrices de Common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-102">El <xref:System.Array> clase no es parte de la <xref:System.Collections> los espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-102">The <xref:System.Array> class is not part of the <xref:System.Collections> namespaces.</span></span> <span data-ttu-id="cb6b2-103">Sin embargo, todavía se considera una colección porque se basa en el <xref:System.Collections.IList> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-103">However, it is still considered a collection because it is based on the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="cb6b2-104">La <xref:System.Array> clase es la clase base para las implementaciones de lenguajes que admiten matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-104">The <xref:System.Array> class is the base class for language implementations that support arrays.</span></span> <span data-ttu-id="cb6b2-105">Sin embargo, solamente el sistema y los compiladores pueden derivar explícitamente de la <xref:System.Array> clase.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-105">However, only the system and compilers can derive explicitly from the <xref:System.Array> class.</span></span> <span data-ttu-id="cb6b2-106">Los usuarios deben utilizar los constructores de matriz proporcionados por el lenguaje.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-106">Users should employ the array constructs provided by the language.</span></span>  
  
 <span data-ttu-id="cb6b2-107">Un elemento es un valor en un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-107">An element is a value in an <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-108">La longitud de un <xref:System.Array> es el número total de elementos que puede contener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-108">The length of an <xref:System.Array> is the total number of elements it can contain.</span></span> <span data-ttu-id="cb6b2-109">El límite inferior de un <xref:System.Array> es el índice de su primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-109">The lower bound of an <xref:System.Array> is the index of its first element.</span></span> <span data-ttu-id="cb6b2-110">Un <xref:System.Array> puede tener cualquier límite inferior, pero tiene un límite inferior de cero de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-110">An <xref:System.Array> can have any lower bound, but it has a lower bound of zero by default.</span></span> <span data-ttu-id="cb6b2-111">Se puede definir un límite inferior diferente al crear una instancia de la <xref:System.Array> mediante la clase <xref:System.Array.CreateInstance%2A>. Multidimensional <xref:System.Array> puede tener distintos límites para cada dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-111">A different lower bound can be defined when creating an instance of the <xref:System.Array> class using <xref:System.Array.CreateInstance%2A>.A multidimensional <xref:System.Array> can have different bounds for each dimension.</span></span> <span data-ttu-id="cb6b2-112">Una matriz puede tener un máximo de 32 dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-112">An array can have a maximum of 32 dimensions.</span></span>  
  
 <span data-ttu-id="cb6b2-113">A diferencia de las clases en el <xref:System.Collections> espacios de nombres, <xref:System.Array> tiene una capacidad fija.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-113">Unlike the classes in the <xref:System.Collections> namespaces, <xref:System.Array> has a fixed capacity.</span></span> <span data-ttu-id="cb6b2-114">Para aumentar la capacidad, debe crear una nueva <xref:System.Array> de objetos con la capacidad requerida, copiar los elementos de la antigua <xref:System.Array> el objeto a una nueva y eliminar la antigua <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-114">To increase the capacity, you must create a new <xref:System.Array> object with the required capacity, copy the elements from the old <xref:System.Array> object to the new one, and delete the old <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-115">De forma predeterminada, el tamaño máximo de un <xref:System.Array> es de 2 gigabytes (GB).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-115">By default, the maximum size of an <xref:System.Array> is 2 gigabytes (GB).</span></span> <span data-ttu-id="cb6b2-116">En un entorno de 64 bits, puede evitar la restricción de tamaño estableciendo la `enabled` atributo de la [Gcpermitirobjetosmuygrandes](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elemento de configuración a `true` en el entorno de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-116">In a 64-bit environment, you can avoid the size restriction by setting the `enabled` attribute of the [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span> <span data-ttu-id="cb6b2-117">Sin embargo, la matriz se seguirá limitada a un total de elementos de 4 mil millones y a un índice máximo de 0X7FEFFFFF en cualquier dimensión determinada (0X7FFFFFC7 para matrices de bytes y matrices de estructuras de un solo byte).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-117">However, the array will still be limited to a total of 4 billion elements, and to a maximum index of 0X7FEFFFFF in any given dimension (0X7FFFFFC7 for byte arrays and arrays of single-byte structures).</span></span>  
  
 <span data-ttu-id="cb6b2-118">Matrices unidimensionales implementan la <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> y <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> interfaces genéricas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-118">Single-dimensional arrays implement the <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> and <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> generic interfaces.</span></span> <span data-ttu-id="cb6b2-119">Las implementaciones se proporcionan a las matrices en tiempo de ejecución y, como resultado, las interfaces genéricas no aparecen en la sintaxis de declaración para la <xref:System.Array> clase.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-119">The implementations are provided to arrays at run time, and as a result, the generic interfaces do not appear in the declaration syntax for the <xref:System.Array> class.</span></span> <span data-ttu-id="cb6b2-120">Además, no hay ningún temas de referencia para los miembros de interfaz que son accesibles únicamente al convertir una matriz para el tipo de interfaz genérica (implementaciones de interfaz explícitas).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-120">In addition,  there are no reference topics for interface members that are accessible only by casting an array to the generic interface type (explicit interface implementations).</span></span> <span data-ttu-id="cb6b2-121">Hay que tener en cuenta cuando se convierte una matriz a una de estas interfaces es que los miembros que permiten agregar, insertar o quitar elementos throw <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-121">The key thing to be aware of when you cast an array to one of these interfaces is that members which add, insert, or remove elements throw <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="cb6b2-122"><xref:System.Type> los objetos proporcionan información sobre las declaraciones de tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-122"><xref:System.Type> objects provide information about array type declarations.</span></span> <span data-ttu-id="cb6b2-123"><xref:System.Array> los objetos con el mismo tipo de matriz comparten el mismo <xref:System.Type> objeto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-123"><xref:System.Array> objects with the same array type share the same <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="cb6b2-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> y <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> puede no devolver los resultados esperados con <xref:System.Array> porque si una matriz se convierte al tipo <xref:System.Array>, el resultado es un objeto, no una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> and <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> might not return the expected results with <xref:System.Array> because if an array is cast to the type <xref:System.Array>, the result is an object, not an array.</span></span> <span data-ttu-id="cb6b2-125">Es decir, `typeof(System.Array).IsArray` devuelve `false`, y `typeof(System.Array).GetElementType` devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-125">That is, `typeof(System.Array).IsArray` returns `false`, and `typeof(System.Array).GetElementType` returns `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-126">El <xref:System.Array.Copy%2A?displayProperty=nameWithType> método copia elementos no sólo entre matrices del mismo tipo, sino también entre matrices estándares de tipos diferentes, ya que controla automáticamente la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-126">The <xref:System.Array.Copy%2A?displayProperty=nameWithType> method copies elements not only between arrays of the same type but also between standard arrays of different types; it handles type casting automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-127">Algunos métodos, como <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, y <xref:System.Array.SetValue%2A>, proporcionan sobrecargas que aceptan enteros de 64 bits como parámetros para dar cabida a matrices de gran capacidad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-127">Some methods, such as <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, and <xref:System.Array.SetValue%2A>, provide overloads that accept 64-bit integers as parameters to accommodate large capacity arrays.</span></span> <span data-ttu-id="cb6b2-128"><xref:System.Array.LongLength%2A> y <xref:System.Array.GetLongLength%2A> devuelven enteros de 64 bits que indica la longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-128"><xref:System.Array.LongLength%2A> and <xref:System.Array.GetLongLength%2A> return 64-bit integers indicating the length of the array.</span></span>  
  
 <span data-ttu-id="cb6b2-129">El <xref:System.Array> no se garantiza que se ordenen.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-129">The <xref:System.Array> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="cb6b2-130">Se debe ordenar el <xref:System.Array> antes de realizar operaciones (como <xref:System.Array.BinarySearch%2A>) que requieren el <xref:System.Array> se ordenen.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-130">You must sort the <xref:System.Array> prior to performing operations (such as <xref:System.Array.BinarySearch%2A>) that require the <xref:System.Array> to be sorted.</span></span>  
  
 <span data-ttu-id="cb6b2-131">Con un <xref:System.Array> objeto de punteros en código nativo no se admite y producirá una <xref:System.NotSupportedException> para varios métodos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-131">Using an <xref:System.Array> object of pointers in native code is not supported and will throw a <xref:System.NotSupportedException> for several methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-132">El siguiente ejemplo de código muestra cómo <xref:System.Array.Copy%2A?displayProperty=nameWithType> copia elementos entre una matriz de tipo entero y una matriz de tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-132">The following code example shows how <xref:System.Array.Copy%2A?displayProperty=nameWithType> copies elements between an array of type integer and an array of type <xref:System.Object>.</span></span>  
  
 [!code-cpp[Classic Array Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source.cs#1)]
 [!code-vb[Classic Array Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6b2-133">En el ejemplo de código siguiente se crea e inicializa un <xref:System.Array> y muestra sus propiedades y sus elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-133">The following code example creates and initializes an <xref:System.Array> and displays its properties and its elements.</span></span>  
  
 [!code-cpp[Classic Array Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source3.cpp#2)]
 [!code-csharp[Classic Array Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source3.cs#2)]
 [!code-vb[Classic Array Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source3.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cb6b2-134">Estático público (<see langword="Shared" /> en Visual Basic) miembros de este tipo son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-134">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="cb6b2-135">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-135">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="cb6b2-136">Esta implementación no proporciona un sincronizada contenedor (es seguro para subprocesos) para una <see cref="T:System.Array" />; sin embargo, las clases de .NET Framework basadas en <see cref="T:System.Array" /> proporcionar su propia versión sincronizada de la colección mediante el <see cref="P:System.Array.SyncRoot" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-136">This implementation does not provide a synchronized (thread safe) wrapper for an <see cref="T:System.Array" />; however, .NET Framework classes based on <see cref="T:System.Array" /> provide their own synchronized version of the collection using the <see cref="P:System.Array.SyncRoot" /> property.</span></span>  
  
 <span data-ttu-id="cb6b2-137">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-137">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cb6b2-138">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-138">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cb6b2-139">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-139">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="AsReadOnly&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.AsReadOnly``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsReadOnly(Of T) (array As T()) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-140">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-140">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-141">Matriz unidimensional de base cero para ajustar en un contenedor <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span></span></param>
        <summary><span data-ttu-id="cb6b2-142">Devuelve un contenedor de solo lectura para la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-142">Returns a read-only wrapper for the specified array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-143">Contenedor <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de solo lectura para la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-144">Para evitar que las modificaciones a la matriz, exponen la matriz solo a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-144">To prevent any modifications to the array, expose the array only through this wrapper.</span></span>  
  
 <span data-ttu-id="cb6b2-145">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-145">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="cb6b2-146">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-146">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-147">En el ejemplo siguiente se encapsula una matriz de solo lectura <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-147">The following example wraps an array in a read-only <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 [!code-cpp[System.Array.AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CPP/arrayasreadonly.cpp#1)]
 [!code-csharp[System.Array.AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CS/arrayasreadonly.cs#1)]
 [!code-vb[System.Array.AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.AsReadOnly/VB/arrayasreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-148"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-148"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-149">Busca un valor en una <see cref="T:System.Array" /> unidimensional y ordenada usando un algoritmo de búsqueda binario.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-150">Matriz <see cref="T:System.Array" /> unidimensional y ordenada en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-151">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-151">The object to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-152">Busca un elemento específico en toda una matriz unidimensional y ordenada, usando la interfaz <see cref="T:System.IComparable" /> implementada por cada elemento de la matriz y por el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-153">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-154">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-155">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-156">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-157">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-157">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-158">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-158">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-159">Si el <xref:System.Array> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-159">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-160">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-160">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-161">Si este índice es uno mayor que el límite superior de la matriz, hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-161">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-162">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-162">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-163">Ya sea `value` o todos los elementos de `array` debe implementar la <xref:System.IComparable> interfaz, que se usa para las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-163">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="cb6b2-164">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-164">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-165">Si`value` no implementa la <xref:System.IComparable> de la interfaz, los elementos de `array` no se comprueba si hay <xref:System.IComparable> antes de que comience la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-165">If`value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="cb6b2-166">Se produce una excepción si la búsqueda encuentra un elemento que no implementa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-166">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="cb6b2-167">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-167">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-168">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-168">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-169">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-169">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-170">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-170">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-171">Es decir, el <xref:System.IComparable> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-171">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-172">Este método es una O (registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-172">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-173">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Array.BinarySearch%2A> para localizar un objeto específico en un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-173">The following code example shows how to use <xref:System.Array.BinarySearch%2A> to locate a specific object in an <xref:System.Array>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-174">La matriz se crea con sus elementos en orden ascendente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-174">The array is created with its elements in ascending sort order.</span></span> <span data-ttu-id="cb6b2-175">El <xref:System.Array.BinarySearch%2A> método requiere que la matriz se ordenen en orden ascendente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-175">The <xref:System.Array.BinarySearch%2A> method requires the array to be sorted in ascending order.</span></span>  
  
 [!code-cpp[Classic Array.BinarySearch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.BinarySearch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CS/source.cs#1)]
 [!code-vb[Classic Array.BinarySearch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-176"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-176"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-177"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-177"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-178"><paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-178"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-179"><paramref name="value" /> no implementa la interfaz <see cref="T:System.IComparable" /> y la búsqueda encuentra un elemento que no implementa la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-179"><paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-180">Matriz <see cref="T:System.Array" /> unidimensional y ordenada en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-181">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-181">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-182">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-183">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-183">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-184"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-184"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-185">Busca un valor por toda una matriz unidimensional y ordenada, usando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-185">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-186">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-186">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-187">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-187">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-188">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-188">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-189">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-189">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-190">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-190">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-191">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-191">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-192">Si el <xref:System.Array> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-192">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-193">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-193">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-194">Si este índice es uno mayor que el límite superior de la matriz, hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-194">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-195">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-195">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-196">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-196">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="cb6b2-197">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-197">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="cb6b2-198">Si `comparer` no `null`, los elementos de `array` se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.IComparer> implementación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-198">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="cb6b2-199">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-199">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-200">Si`comparer` es `null`, la comparación se realiza mediante el <xref:System.IComparable> implementación proporcionada por el propio elemento o por el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-200">If`comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="cb6b2-201">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-201">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-202">Si `comparer` es `null` y `value` no implementa la <xref:System.IComparable> de la interfaz, los elementos de `array` no se comprueba si hay <xref:System.IComparable> antes de que comience la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-202">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="cb6b2-203">Se produce una excepción si la búsqueda encuentra un elemento que no implementa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-203">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="cb6b2-204">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-204">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-205">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-205">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-206">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-206">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-207">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-207">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-208">Es decir, el <xref:System.IComparable> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-208">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-209">Este método es una O (registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-209">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-210"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-210"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-211"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-211"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-212"><paramref name="comparer" /> es <see langword="null" /> y <paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-212"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-213"><paramref name="comparer" /> es <see langword="null" />, <paramref name="value" /> no implementa la interfaz <see cref="T:System.IComparable" /> y la búsqueda encuentra un elemento que no implementa la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-213"><paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-214">Matriz <see cref="T:System.Array" /> unidimensional y ordenada en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-214">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-215">Índice inicial del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-215">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-216">Longitud del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-216">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-217">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-217">The object to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-218">Busca un valor en un intervalo de elementos de una matriz unidimensional y ordenada, usando la interfaz <see cref="T:System.IComparable" /> implementada por cada elemento de la matriz y por el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-218">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-219">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-219">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-220">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-220">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-221">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-221">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-222">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-222">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-223">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-223">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-224">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-224">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-225">Si el <xref:System.Array> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-225">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-226">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-226">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="cb6b2-227">Si este índice es uno mayor que el límite superior de la matriz, hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-227">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-228">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-228">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-229">Ya sea `value` o todos los elementos de `array` debe implementar la <xref:System.IComparable> interfaz, que se usa para las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-229">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="cb6b2-230">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-230">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-231">Si `value` no implementa la <xref:System.IComparable> de la interfaz, los elementos de `array` no se comprueba si hay <xref:System.IComparable> antes de que comience la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-231">If `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="cb6b2-232">Se produce una excepción si la búsqueda encuentra un elemento que no implementa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-232">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="cb6b2-233">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-233">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-234">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-234">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-235">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-235">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-236">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-236">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-237">Es decir, el <xref:System.IComparable> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-237">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-238">Este método es una O (registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-238">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-239"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-239"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-240"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-240"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-241"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-241"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-242">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-242">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-243"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-243"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-244"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-244"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-245">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-245">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-246"><paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-246"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-247"><paramref name="value" /> no implementa la interfaz <see cref="T:System.IComparable" /> y la búsqueda encuentra un elemento que no implementa la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-247"><paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-248">Matriz <see cref="T:System.Array" /> unidimensional y ordenada en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-248">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-249">Índice inicial del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-249">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-250">Longitud del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-250">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-251">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-251">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-252">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-252">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-253">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-253">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-254"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-254"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-255">Busca un valor en un intervalo de elementos de una matriz unidimensional y ordenada, usando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-255">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-256">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-256">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-257">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-257">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-258">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-258">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-259">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-259">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-260">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-260">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-261">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-261">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-262">Si el <xref:System.Array> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-262">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-263">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-263">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-264">Si este índice es uno mayor que el límite superior de la matriz, hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-264">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-265">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-265">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-266">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-266">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="cb6b2-267">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-267">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="cb6b2-268">Si `comparer` no `null`, los elementos de `array` se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.IComparer> implementación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-268">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="cb6b2-269">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-269">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-270">Si `comparer` es `null`, la comparación se realiza mediante el <xref:System.IComparable> implementación proporcionada por el propio elemento o por el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-270">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="cb6b2-271">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-271">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-272">Si `comparer` es `null` y `value` no implementa la <xref:System.IComparable> de la interfaz, los elementos de `array` no se comprueba si hay <xref:System.IComparable> antes de que comience la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-272">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="cb6b2-273">Se produce una excepción si la búsqueda encuentra un elemento que no implementa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-273">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="cb6b2-274">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-274">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-275">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-275">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-276">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción al utilizar <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-276">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-277">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-277">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-278">Es decir, el <xref:System.IComparable> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-278">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-279">Este método es una O (registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-279">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-280"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-280"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-281"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-281"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-282"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-282"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-283">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-283">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-284"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-284"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-285"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-285"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-286">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-286">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-287"><paramref name="comparer" /> es <see langword="null" />, y <paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-287"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-288"><paramref name="comparer" /> es <see langword="null" />, <paramref name="value" /> no implementa la interfaz <see cref="T:System.IComparable" /> y la búsqueda encuentra un elemento que no implementa la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-288"><paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-289">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-289">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-290"><see cref="T:System.Array" /> unidimensional ordenada de base cero en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-290">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-291">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-291">The object to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-292">Busca un elemento específico en una matriz unidimensional ordenada completa, usando la interfaz genérica <see cref="T:System.IComparable`1" /> que implementan cada elemento de <see cref="T:System.Array" /> y el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-292">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-293">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-293">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-294">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-294">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-295">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-295">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-296">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-296">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-297">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-297">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-298">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-298">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-299">Si `array` no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-299">If `array` does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-300">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-300">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-301">Si este índice es igual al tamaño de la matriz, no hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-301">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-302">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-302">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-303">`T` debe implementar la <xref:System.IComparable%601> interfaz genérica, que se utiliza para las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-303">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="cb6b2-304">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable%601> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-304">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-305">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-305">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-306">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-306">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-307">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-307">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-308">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable%601> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-308">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-309">Es decir, el <xref:System.IComparable%601> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-309">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-310">Este método es una O (registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-310">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-311">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> sobrecarga del método genérico y el <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-311">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="cb6b2-312">Se crea una matriz de cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-312">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="cb6b2-313">La matriz se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-313">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="cb6b2-314">Se deben ordenar matrices para poder usar el <xref:System.Array.BinarySearch%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-314">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-315">Las llamadas a la <xref:System.Array.Sort%2A> y <xref:System.Array.BinarySearch%2A> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-315">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-316">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-316">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="cb6b2-317">El <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método genérico, a continuación, se usa para buscar dos cadenas, una que no está en la matriz y otra que sí está.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-317">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="cb6b2-318">La matriz y el valor devuelto de la <xref:System.Array.BinarySearch%2A> método se pasan a la `ShowWhere` método genérico, que muestra el valor de índice si se encuentra la cadena y, en caso contrario, los elementos de la cadena de búsqueda que pudieran estar incluidos entre si estuviera en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-318">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="cb6b2-319">El índice es negativo si la cadena no está en la matriz, por lo que la `ShowWhere` método toma el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor`-1 en Visual Basic) para obtener el índice del primer elemento de la lista que es mayor que la búsqueda str realizando una operación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-319">The index is negative if the string is not in the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor`-1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-320"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-320"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-321"><paramref name="T" /> no implementa la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-321"><paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-322">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-322">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-323"><see cref="T:System.Array" /> unidimensional ordenada de base cero en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-323">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-324">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-324">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-325">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-325">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-326">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-326">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-327"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-327"><see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-328">Busca un valor por toda una matriz unidimensional y ordenada, usando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-328">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-329">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-329">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-330">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-330">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-331">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-331">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-332">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-332">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-333">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-333">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-334">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-334">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-335">Si el <xref:System.Array> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-335">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-336">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-336">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="cb6b2-337">Si este índice es igual al tamaño de la matriz, no hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-337">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-338">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-338">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-339">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-339">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="cb6b2-340">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-340">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="cb6b2-341">Si `comparer` no `null`, los elementos de `array` se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.Generic.IComparer%601> implementación de interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-341">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="cb6b2-342">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-342">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-343">Si `comparer` es `null`, la comparación se realiza mediante la <xref:System.IComparable%601> implementación de interfaz genérica proporcionada por `T`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-343">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided by `T`.</span></span> <span data-ttu-id="cb6b2-344">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable%601> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-344">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-345">Si `comparer` es `null` y `value` no implementa la <xref:System.IComparable%601> interfaz genérica, los elementos de `array` no se comprueba si hay <xref:System.IComparable%601> antes de que comience la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-345">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable%601> generic interface, the elements of `array` are not tested for <xref:System.IComparable%601> before the search begins.</span></span> <span data-ttu-id="cb6b2-346">Se produce una excepción si la búsqueda encuentra un elemento que no implementa <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-346">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-347">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-347">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-348">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-348">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-349">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-349">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-350">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable%601> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-350">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-351">Es decir, el <xref:System.IComparable%601> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-351">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-352">Este método es una O (registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-352">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-353">En el ejemplo siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico y el <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-353">The following example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="cb6b2-354">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-354">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-355">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-355">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-356">La matriz se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-356">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="cb6b2-357">Se deben ordenar matrices para poder usar el <xref:System.Array.BinarySearch%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-357">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-358">Las llamadas a la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> y <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-358">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-359">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-359">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="cb6b2-360">El <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico, a continuación, se usa para buscar dos cadenas, una que no está en la matriz y otra que sí está.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-360">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="cb6b2-361">La matriz y el valor devuelto de la <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> método se pasan a la `ShowWhere` método genérico, que muestra el valor de índice si se encuentra la cadena y, en caso contrario, los elementos de la cadena de búsqueda que pudieran estar incluidos entre si estuviera en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-361">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="cb6b2-362">El índice es negativo si la cadena no es n la matriz, por lo que la `ShowWhere` método toma el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) para obtener el índice del primer elemento de la lista que es mayor que el t de búsqueda GN.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-362">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-363"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-363"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-364"><paramref name="comparer" /> es <see langword="null" />, y <paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-364"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-365"><paramref name="comparer" /> es <see langword="null" /> y <paramref name="T" /> no implementa la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-365"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-366">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-366">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-367"><see cref="T:System.Array" /> de base cero, unidimensional y ordenada en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-367">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-368">Índice inicial del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-368">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-369">Longitud del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-369">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-370">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-370">The object to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-371">Busca un valor en un intervalo de elementos de una matriz unidimensional y ordenada, usando la interfaz genérica <see cref="T:System.IComparable`1" /> que implementan cada elemento de <see cref="T:System.Array" /> y el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-371">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-372">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-372">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-373">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-373">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-374">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-374">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-375">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-375">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-376">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-376">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-377">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-377">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-378">Si la matriz no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-378">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-379">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-379">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-380">Si este índice es igual al tamaño de la matriz, no hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-380">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-381">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-381">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-382">`T` debe implementar la <xref:System.IComparable%601> interfaz genérica, que se utiliza para las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-382">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="cb6b2-383">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable%601> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-383">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-384">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-384">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-385">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-385">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-386">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-386">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-387">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable%601> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-387">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-388">Es decir, el <xref:System.IComparable%601> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-388">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-389">Este método es una O (registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-389">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-390"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-390"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-391"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-391"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-392">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-392">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-393"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-393"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-394"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-394"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-395">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-395">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-396"><paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-396"><paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-397"><paramref name="T" /> no implementa la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-397"><paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-398">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-398">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-399"><see cref="T:System.Array" /> de base cero, unidimensional y ordenada en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-399">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-400">Índice inicial del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-400">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-401">Longitud del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-401">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-402">Objeto que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-402">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-403">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-403">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-404">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-404">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-405"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-405"><see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-406">Busca un valor en un intervalo de elementos de una matriz unidimensional y ordenada, usando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-406">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-407">Índice del elemento <paramref name="value" /> especificado en el objeto <paramref name="array" /> especificado, si se encuentra <paramref name="value" />; en caso contrario, un número negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-407">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span></span> <span data-ttu-id="cb6b2-408">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es menor que uno o varios elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del primer elemento que sea mayor que <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-408">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span></span> <span data-ttu-id="cb6b2-409">Si no se encuentra <paramref name="value" /> y <paramref name="value" /> es mayor que cualquiera de los elementos de <paramref name="array" />, el número negativo devuelto es el complemento bit a bit del índice del último elemento más 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-409">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span></span> <span data-ttu-id="cb6b2-410">Si se llama a este método con un objeto <paramref name="array" /> sin clasificar, el valor devuelto puede ser incorrecto y podría devolverse un número negativo, aunque <paramref name="value" /> esté presente en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-410">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-411">Este método no es compatible con Buscar en matrices que contienen índices negativos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-411">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="cb6b2-412">`array` deben estar ordenados antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-412">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="cb6b2-413">Si la matriz no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-413">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="cb6b2-414">Puede aplicar el operador de complemento bit a bit (~ en C#, `Not` en Visual Basic) al resultado negativo para generar un índice.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-414">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="cb6b2-415">Si este índice es igual al tamaño de la matriz, no hay ningún elemento mayor que `value` en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-415">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="cb6b2-416">En caso contrario, es el índice del primer elemento que es mayor que `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-416">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="cb6b2-417">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-417">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="cb6b2-418">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-418">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="cb6b2-419">Si `comparer` no `null`, los elementos de `array` se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.Generic.IComparer%601> implementación de interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-419">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="cb6b2-420">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-420">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-421">Si `comparer` es `null`, la comparación se realiza mediante la <xref:System.IComparable%601> proporcionado por el tipo de implementación de interfaz genérica `T`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-421">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided for type `T`.</span></span> <span data-ttu-id="cb6b2-422">Los elementos de `array` ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable%601> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-422">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="cb6b2-423">Se permiten elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-423">Duplicate elements are allowed.</span></span> <span data-ttu-id="cb6b2-424">Si el <xref:System.Array> contiene más de un elemento igual a `value`, el método devuelve el índice de solo una de las apariciones y no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-424">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="cb6b2-425">`null` siempre puede compararse con cualquier otro tipo de referencia; por lo tanto, las comparaciones con `null` no generan una excepción al utilizar <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-425">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable%601>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-426">Para cada elemento probado, `value` se pasa a la correspondiente <xref:System.IComparable%601> implementación, incluso si `value` es `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-426">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="cb6b2-427">Es decir, el <xref:System.IComparable%601> implementación determina cómo se compara con un elemento determinado `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-427">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="cb6b2-428">Este método es una O (registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-428">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-429"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-429"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-430"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-430"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-431">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-431">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-432"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-432"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-433"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-433"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-434">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-434">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-435"><paramref name="comparer" /> es <see langword="null" />, y <paramref name="value" /> es de un tipo que no es compatible con los elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-435"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-436"><paramref name="comparer" /> es <see langword="null" />, y <paramref name="T" /> no implementa la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-436"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clear(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-437">La matriz cuyos elementos deben borrarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-437">The array whose elements need to be cleared.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-438">Índice inicial del intervalo de elementos que se va a borrar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-438">The starting index of the range of elements to clear.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-439">Número de elementos que se van a borrar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-439">The number of elements to clear.</span></span></param>
        <summary><span data-ttu-id="cb6b2-440">Establece un intervalo de elementos de una matriz en el valor predeterminado de cada tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-440">Sets a range of elements in an array to the default value of each element type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-441">Este método restablece cada elemento de una matriz en el valor predeterminado del tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-441">This method resets each element in an array to the element type's default value.</span></span> <span data-ttu-id="cb6b2-442">Establece elementos de tipos de referencia (incluidos <xref:System.String> elementos) a `null`y se establecen los elementos de tipos de valor a los valores predeterminados que se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-442">It sets elements of reference types (including <xref:System.String> elements) to `null`, and sets elements of value types to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="cb6b2-443">Tipo</span><span class="sxs-lookup"><span data-stu-id="cb6b2-443">Type</span></span>|<span data-ttu-id="cb6b2-444">Valor</span><span class="sxs-lookup"><span data-stu-id="cb6b2-444">Value</span></span>|  
|----------|-----------|  
|<xref:System.Boolean>|`false`|  
|<span data-ttu-id="cb6b2-445">Todos los tipos numéricos enteros y de punto flotante</span><span class="sxs-lookup"><span data-stu-id="cb6b2-445">All integral and floating point numeric types</span></span>|<span data-ttu-id="cb6b2-446">0 (cero)</span><span class="sxs-lookup"><span data-stu-id="cb6b2-446">0 (zero)</span></span>|  
|<xref:System.DateTime>|<xref:System.DateTime.MinValue?displayProperty=nameWithType>|  
|<span data-ttu-id="cb6b2-447">Otros tipos de valor</span><span class="sxs-lookup"><span data-stu-id="cb6b2-447">Other value types</span></span>|<span data-ttu-id="cb6b2-448">Valor predeterminado de los campos del tipo</span><span class="sxs-lookup"><span data-stu-id="cb6b2-448">Default value of the type's fields</span></span>|  
  
 <span data-ttu-id="cb6b2-449">El intervalo de elementos borrados se ajusta en cada fila en una matriz multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-449">The range of cleared elements wrap from row to row in a multi-dimensional array.</span></span>  
  
 <span data-ttu-id="cb6b2-450">Este método solo borra los valores de los elementos; no elimina los propios elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-450">This method only clears the values of the elements; it does not delete the elements themselves.</span></span> <span data-ttu-id="cb6b2-451">Una matriz tiene un tamaño fijo; por lo tanto, los elementos no pueden agregarse o quitarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-451">An array has a fixed size; therefore, elements cannot be added or removed.</span></span>  
  
 <span data-ttu-id="cb6b2-452">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-452">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-453">En el ejemplo siguiente se usa el <xref:System.Array.Clear%2A> método para restablecer los valores enteros en una matriz unidimensional, bidimensional y tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-453">The following example uses the <xref:System.Array.Clear%2A> method to reset integer values in a one-dimensional, two-dimensional, and three-dimensional array.</span></span>  
  
 [!code-csharp[System.Array.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/example.cs#1)]
 [!code-vb[System.Array.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/example.vb#1)]  
  
 <span data-ttu-id="cb6b2-454">En el ejemplo siguiente se define un `TimeZoneTime` estructura que incluye un <xref:System.TimeZoneInfo> campo y un <xref:System.DateTimeOffset> campo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-454">The following example defines a `TimeZoneTime` structure that includes a <xref:System.TimeZoneInfo> field and a <xref:System.DateTimeOffset> field.</span></span> <span data-ttu-id="cb6b2-455">A continuación, se llama la <xref:System.Array.Clear%2A> método para borrar un elemento de una matriz de dos elementos de `TimeZoneTime` valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-455">It then calls the <xref:System.Array.Clear%2A> method to clear one element in a two-element array of `TimeZoneTime` values.</span></span> <span data-ttu-id="cb6b2-456">El método establece el valor del elemento desactivado en el valor predeterminado de un <xref:System.TimeZoneInfo> objeto, que es `null`y el valor predeterminado de un <xref:System.DateTimeOffset> objeto, que es <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-456">The method sets the value of the cleared element to the default value of a <xref:System.TimeZoneInfo> object, which is `null`, and the default value of a <xref:System.DateTimeOffset> object, which is <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Array.Clear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/clearstruct1.cs#2)]
 [!code-vb[System.Array.Clear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/clearstruct1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-457"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-457"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-458"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-458"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-459">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-459">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-460"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-460"><paramref name="length" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-461">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-461">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-462">La suma de <paramref name="index" /> y <paramref name="length" /> es mayor que el tamaño de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-462">The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6b2-463">Crea una copia superficial de la colección <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-463">Creates a shallow copy of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-464">Copia superficial de la colección <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-464">A shallow copy of the <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-465">Una copia superficial de un <xref:System.Array> sólo copia los elementos de la <xref:System.Array>, tanto si son tipos de referencia o tipos de valor, pero no copia los objetos que hacen referencia las referencias.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-465">A shallow copy of an <xref:System.Array> copies only the elements of the <xref:System.Array>, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="cb6b2-466">Las referencias en el nuevo <xref:System.Array> apuntan a los mismos objetos que las referencias en el original <xref:System.Array> seleccione.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-466">The references in the new <xref:System.Array> point to the same objects that the references in the original <xref:System.Array> point to.</span></span>  
  
 <span data-ttu-id="cb6b2-467">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-467">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-468">El clon es del mismo <xref:System.Type> que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-468">The clone is of the same <xref:System.Type> as the original <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-469">Este método es una O (`n`) operación, donde `n` es <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-469">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-470">El siguiente código de ejemplo clones un <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> de matriz y se muestra el comportamiento de una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-470">The following code example clones a <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> array and demonstrates the behavior of a shallow copy.</span></span>  
  
 [!code-cpp[System.Array.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Clone/CPP/arrayclone.cpp#1)]
 [!code-csharp[System.Array.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clone/CS/arrayclone.cs#1)]
 [!code-vb[System.Array.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clone/VB/arrayclone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ConstrainedCopy">
      <MemberSignature Language="C#" Value="public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConstrainedCopy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConstrainedCopy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConstrainedCopy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="cb6b2-471"><see cref="T:System.Array" /> que contiene los datos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-471">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="cb6b2-472">Entero de 32 bits que representa el índice de <c>sourceArray</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-472">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="cb6b2-473"><see cref="T:System.Array" /> que recibe los datos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-473">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="cb6b2-474">Entero de 32 bits que representa el índice de <c>destinationArray</c> donde comienza el almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-474">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-475">Entero de 32 bits que representa el número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-475">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="cb6b2-476">Copia un intervalo de elementos de un objeto <see cref="T:System.Array" /> a partir del índice de origen especificado y los pega en otro objeto <see cref="T:System.Array" /> a partir del índice de destino especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-476">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span>  <span data-ttu-id="cb6b2-477">Garantiza que se deshacen todos los cambios si la copia no se realiza de forma totalmente correcta.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-477">Guarantees that all changes are undone if the copy does not succeed completely.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-478">El `sourceArray` y `destinationArray` parámetros deben tener el mismo número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-478">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span>  <span data-ttu-id="cb6b2-479">El `sourceArray` tipo debe ser igual o derivado de la `destinationArray` escriba; en caso contrario, un <xref:System.ArrayTypeMismatchException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-479">The `sourceArray` type must be the same as or derived from the `destinationArray` type; otherwise, an <xref:System.ArrayTypeMismatchException> is thrown.</span></span>  <span data-ttu-id="cb6b2-480">A diferencia de <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> comprueba la compatibilidad de los tipos de matriz antes de realizar cualquier operación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-480">Unlike <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> verifies the compatibility of the array types before performing any operation.</span></span>  
  
 <span data-ttu-id="cb6b2-481">Al copiar datos entre las matrices multidimensionales, la matriz se comporta como una matriz unidimensional larga, donde las filas (o columnas) se distribuyen conceptualmente-to-end.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-481">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="cb6b2-482">Por ejemplo, si una matriz tiene tres filas (o columnas) con cuatro elementos cada uno, copias seis elementos desde el principio de la matriz copiaría los cuatro elementos de la primera fila (o columna) y los dos primeros elementos de la segunda fila (o columna).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-482">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="cb6b2-483">Para empezar a copiar en el segundo elemento del tercer fila (o columna), `sourceIndex` debe ser el límite superior de la primera fila (o columna) y la longitud de la segunda fila (o columna) más dos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-483">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="cb6b2-484">Si `sourceArray` y `destinationArray` se superponen, este método se comporta como si los valores originales de `sourceArray` se conservan en una ubicación temporal antes de `destinationArray` se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-484">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="cb6b2-485">[C++]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-485">[C++]</span></span>  
  
 <span data-ttu-id="cb6b2-486">Este método es equivalente a la función de C o C++ estándar `memmove`, no `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-486">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="cb6b2-487">Las matrices pueden ser matrices de tipo de referencia o matrices de tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-487">The arrays can be reference-type arrays or value-type arrays.</span></span>  <span data-ttu-id="cb6b2-488">Si `sourceArray` y `destinationArray` son ambas matrices de tipo de referencia o ambas matrices de tipo <xref:System.Object>, se realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-488">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="cb6b2-489">Una copia superficial de un <xref:System.Array> es una nueva <xref:System.Array> que contienen referencias a los mismos elementos que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-489">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-490">Los elementos no se copian a sí mismos o cualquier referencia a los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-490">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="cb6b2-491">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-491">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-492">Si este método produce una excepción durante la copia, la `destinationArray` permanece sin cambios; por lo tanto, <xref:System.Array.ConstrainedCopy%2A> puede utilizarse dentro de una región de ejecución restringida (<xref:System.Runtime.ConstrainedExecution.Cer>).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-492">If this method throws an exception while copying, the `destinationArray` remains unchanged; therefore, <xref:System.Array.ConstrainedCopy%2A> can be used within a constrained execution region (<xref:System.Runtime.ConstrainedExecution.Cer>).</span></span>  
  
 <span data-ttu-id="cb6b2-493">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-493">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-494"><paramref name="sourceArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-494"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-495">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-495">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-496"><paramref name="destinationArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-496"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-497"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> tienen clasificaciones diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-497"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="cb6b2-498">El tipo <paramref name="sourceArray" /> no es el mismo ni se deriva del tipo <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-498">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-499">Al menos un elemento de <paramref name="sourceArray" /> no se puede convertir al tipo de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-499">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-500"><paramref name="sourceIndex" /> es menor que el límite inferior de la primera dimensión de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-500"><paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-501">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-501">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-502"><paramref name="destinationIndex" /> es menor que el límite inferior de la primera dimensión de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-502"><paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-503">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-503">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-504"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-504"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-505"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="sourceIndex" /> hasta el final de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-505"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-506">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-506">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-507"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="destinationIndex" /> hasta el final de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-507"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.Clone" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.Cer" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput[] ConvertAll&lt;TInput,TOutput&gt; (TInput[] array, Converter&lt;TInput,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput[] ConvertAll&lt;TInput, TOutput&gt;(!!TInput[] array, class System.Converter`2&lt;!!TInput, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertAll(Of TInput, TOutput) (array As TInput(), converter As Converter(Of TInput, TOutput)) As TOutput()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static cli::array &lt;TOutput&gt; ^ ConvertAll(cli::array &lt;TInput&gt; ^ array, Converter&lt;TInput, TOutput&gt; ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TInput[]" />
        <Parameter Name="converter" Type="System.Converter&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="cb6b2-508">Tipo de los elementos de la matriz de origen.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-508">The type of the elements of the source array.</span></span></typeparam>
        <typeparam name="TOutput"><span data-ttu-id="cb6b2-509">Tipo de los elementos de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-509">The type of the elements of the target array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-510"><see cref="T:System.Array" /> unidimensional de base cero que se va a convertir en un tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-510">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span></span></param>
        <param name="converter"><span data-ttu-id="cb6b2-511"><see cref="T:System.Converter`2" /> que convierte cada elemento en otro tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-511">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span></span></param>
        <summary><span data-ttu-id="cb6b2-512">Convierte una matriz de un tipo en una matriz de otro tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-512">Converts an array of one type to an array of another type.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-513">Matriz del tipo de destino que contiene los elementos convertidos de la matriz de origen.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-513">An array of the target type containing the converted elements from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-514">El <xref:System.Converter%602> es un delegado a un método que convierte un objeto en el tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-514">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="cb6b2-515">Los elementos de `array` se pasan individualmente a la <xref:System.Converter%602>, y los elementos convertidos se guardan en la nueva matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-515">The elements of `array` are individually passed to the <xref:System.Converter%602>, and the converted elements are saved in the new array.</span></span>  
  
 <span data-ttu-id="cb6b2-516">El origen `array` permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-516">The source `array` remains unchanged.</span></span>  
  
 <span data-ttu-id="cb6b2-517">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-517">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-518">En el ejemplo de código siguiente se define un método denominado `PointFToPoint` que convierte un <xref:System.Drawing.PointF> estructura a un <xref:System.Drawing.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-518">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="cb6b2-519">El ejemplo crea una matriz de <xref:System.Drawing.PointF> estructuras, crea un `Converter<PointF, Point>` delegar (`Converter(Of PointF, Point)` en Visual Basic) para representar el `PointFToPoint` método y pasa el delegado a la <xref:System.Array.ConvertAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-519">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="cb6b2-520">El <xref:System.Array.ConvertAll%2A> método pasa cada elemento de la lista de entrada a la `PointFToPoint` método y coloca los elementos convertidos en una nueva lista de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-520">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="cb6b2-521">Se muestran ambas listas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-521">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-522"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-522"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-523">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-523">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-524"><paramref name="converter" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-524"><paramref name="converter" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-525">Copia un intervalo de elementos de una matriz <see cref="T:System.Array" /> a otra <see cref="T:System.Array" /> y realiza la conversión boxing y la conversión de tipo necesarias.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-525">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="cb6b2-526"><see cref="T:System.Array" /> que contiene los datos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-526">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="cb6b2-527"><see cref="T:System.Array" /> que recibe los datos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-527">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-528">Entero de 32 bits que representa el número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-528">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="cb6b2-529">Copia un intervalo de elementos de una matriz <see cref="T:System.Array" /> comenzando en el primer elemento y los pega en otra matriz <see cref="T:System.Array" /> comenzando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-529">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span></span> <span data-ttu-id="cb6b2-530">La longitud se especifica como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-530">The length is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-531">El `sourceArray` y `destinationArray` parámetros deben tener el mismo número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-531">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="cb6b2-532">Además, `destinationArray` debe ya ha dimensionadas y debe tener un número suficiente de elementos para dar cabida a los datos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-532">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="cb6b2-533">Al copiar datos entre las matrices multidimensionales, la matriz se comporta como una matriz unidimensional larga, donde las filas (o columnas) se distribuyen conceptualmente de extremo a extremo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-533">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="cb6b2-534">Por ejemplo, si una matriz tiene tres filas (o columnas) con cuatro elementos cada uno, copias seis elementos desde el principio de la matriz copiaría los cuatro elementos de la primera fila (o columna) y los dos primeros elementos de la segunda fila (o columna).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-534">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="cb6b2-535">Si `sourceArray` y `destinationArray` se superponen, este método se comporta como si los valores originales de `sourceArray` se conservan en una ubicación temporal antes de `destinationArray` se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-535">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="cb6b2-536">[C++]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-536">[C++]</span></span>  
  
 <span data-ttu-id="cb6b2-537">Este método es equivalente a la función de C o C++ estándar `memmove`, no `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-537">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="cb6b2-538">Las matrices pueden ser matrices de tipo de referencia o matrices de tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-538">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="cb6b2-539">Se realiza la conversión de tipo, según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-539">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="cb6b2-540">Cuando se copian desde una matriz de tipo de referencia a una matriz de tipo de valor, cada elemento se aplica la conversión unboxing y, a continuación, copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-540">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="cb6b2-541">Cuando se copian desde una matriz de tipo de valor a una matriz de tipo de referencia, cada elemento es una conversión boxing y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-541">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="cb6b2-542">Cuando se copian de una matriz de tipo de referencia o tipo de valor a un <xref:System.Object> matriz, un <xref:System.Object> se crea para almacenar cada valor o referencia y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-542">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="cb6b2-543">Al copiar desde un <xref:System.Object> matriz a una matriz de tipo de referencia o tipo de valor y la asignación no es posible, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-543">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="cb6b2-544">Si `sourceArray` y `destinationArray` son ambas matrices de tipo de referencia o ambas matrices de tipo <xref:System.Object>, se realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-544">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="cb6b2-545">Una copia superficial de un <xref:System.Array> es una nueva <xref:System.Array> que contienen referencias a los mismos elementos que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-545">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-546">Los elementos no se copian a sí mismos o cualquier referencia a los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-546">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="cb6b2-547">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-547">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-548">Un <xref:System.ArrayTypeMismatchException> se produce si las matrices son matrices de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-548">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="cb6b2-549">Compatibilidad de tipo se define como sigue:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-549">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-550">Un tipo es compatible con él mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-550">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-551">Un tipo de valor es compatible con <xref:System.Object> y con un tipo de interfaz implementado por dicho tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-551">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="cb6b2-552">Un tipo de valor se considera conectado a una interfaz solo si implementa dicha interfaz directamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-552">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="cb6b2-553">Los tipos desconectados no son compatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-553">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="cb6b2-554">Dos tipos de valor (predefinido) intrínseco son compatibles si la copia del tipo de origen al tipo de destino es una conversión de ampliación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-554">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="cb6b2-555">Una conversión de ampliación nunca pierde información, mientras que una conversión de restricción puede perder información.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-555">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="cb6b2-556">Por ejemplo, la conversión de un entero de 32 bits con signo a un entero de 64 bits con signo es una conversión de ampliación y la conversión de un entero de 64 bits con signo a un entero de 32 bits con signo es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-556">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="cb6b2-557">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-557">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="cb6b2-558">Un tipo de valor no intrínseco (definido por el usuario) sólo es compatible con sí mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-558">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-559">Las enumeraciones tienen una conversión implícita a <xref:System.Enum> y a su tipo subyacente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-559">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="cb6b2-560">Si todos los elementos de `sourceArray` requiere una conversión inferior (por ejemplo, de una clase base para una clase derivada o de una interfaz a un objeto) y uno o varios elementos no se puede convertir al tipo correspondiente en `destinationArray`, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-560">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="cb6b2-561">Si este método produce una excepción durante la copia, el estado de `destinationArray` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-561">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-562">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-562">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-563"><paramref name="sourceArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-563"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-564">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-564">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-565"><paramref name="destinationArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-565"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-566"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> tienen clasificaciones diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-566"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="cb6b2-567"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> son de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-567"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-568">Al menos un elemento de la <paramref name="sourceArray" /> no se puede convertir al tipo de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-568">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-569"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-569"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-570"><paramref name="length" /> es mayor que el número de elementos de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-570"><paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-571">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-571">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-572"><paramref name="length" /> es mayor que el número de elementos de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-572"><paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="cb6b2-573"><see cref="T:System.Array" /> que contiene los datos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-573">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="cb6b2-574"><see cref="T:System.Array" /> que recibe los datos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-574">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-575">Entero de 64 bits que representa el número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-575">A 64-bit integer that represents the number of elements to copy.</span></span> <span data-ttu-id="cb6b2-576">El entero debe estar entre cero y <see cref="F:System.Int32.MaxValue" />, ambos inclusive.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-576">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="cb6b2-577">Copia un intervalo de elementos de una matriz <see cref="T:System.Array" /> comenzando en el primer elemento y los pega en otra matriz <see cref="T:System.Array" /> comenzando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-577">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span></span> <span data-ttu-id="cb6b2-578">La longitud se especifica como un entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-578">The length is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-579">El `sourceArray` y `destinationArray` parámetros deben tener el mismo número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-579">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="cb6b2-580">Además, `destinationArray` debe ya ha dimensionadas y debe tener un número suficiente de elementos para dar cabida a los datos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-580">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="cb6b2-581">Al copiar datos entre las matrices multidimensionales, la matriz se comporta como una matriz unidimensional larga, donde las filas (o columnas) se distribuyen conceptualmente de extremo a extremo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-581">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="cb6b2-582">Por ejemplo, si una matriz tiene tres filas (o columnas) con cuatro elementos cada uno, copias seis elementos desde el principio de la matriz copiaría los cuatro elementos de la primera fila (o columna) y los dos primeros elementos de la segunda fila (o columna).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-582">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="cb6b2-583">Si `sourceArray` y `destinationArray` se superponen, este método se comporta como si los valores originales de `sourceArray` se conservan en una ubicación temporal antes de `destinationArray` se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-583">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="cb6b2-584">[C++]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-584">[C++]</span></span>  
  
 <span data-ttu-id="cb6b2-585">Este método es equivalente a la función de C o C++ estándar `memmove`, no `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-585">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="cb6b2-586">Las matrices pueden ser matrices de tipo de referencia o matrices de tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-586">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="cb6b2-587">Se realiza la conversión de tipo, según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-587">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="cb6b2-588">Cuando se copian desde una matriz de tipo de referencia a una matriz de tipo de valor, cada elemento se aplica la conversión unboxing y, a continuación, copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-588">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="cb6b2-589">Cuando se copian desde una matriz de tipo de valor a una matriz de tipo de referencia, cada elemento es una conversión boxing y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-589">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="cb6b2-590">Cuando se copian de una matriz de tipo de referencia o tipo de valor a un <xref:System.Object> matriz, un <xref:System.Object> se crea para almacenar cada valor o referencia y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-590">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="cb6b2-591">Al copiar desde un <xref:System.Object> matriz a una matriz de tipo de referencia o tipo de valor y la asignación no es posible, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-591">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="cb6b2-592">Si `sourceArray` y `destinationArray` son ambas matrices de tipo de referencia o ambas matrices de tipo <xref:System.Object>, se realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-592">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="cb6b2-593">Una copia superficial de un <xref:System.Array> es una nueva <xref:System.Array> que contienen referencias a los mismos elementos que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-593">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-594">Los elementos no se copian a sí mismos o cualquier referencia a los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-594">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="cb6b2-595">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-595">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-596">Un <xref:System.ArrayTypeMismatchException> se produce si las matrices son matrices de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-596">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="cb6b2-597">Compatibilidad de tipo se define como sigue:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-597">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-598">Un tipo es compatible con él mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-598">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-599">Un tipo de valor es compatible con <xref:System.Object> y con un tipo de interfaz implementado por dicho tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-599">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="cb6b2-600">Un tipo de valor se considera conectado a una interfaz solo si implementa dicha interfaz directamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-600">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="cb6b2-601">Los tipos desconectados no son compatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-601">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="cb6b2-602">Dos tipos de valor (predefinido) intrínseco son compatibles si la copia del tipo de origen al tipo de destino es una conversión de ampliación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-602">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="cb6b2-603">Una conversión de ampliación nunca pierde información, mientras que una conversión de restricción puede perder información.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-603">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="cb6b2-604">Por ejemplo, la conversión de un entero de 32 bits con signo a un entero de 64 bits con signo es una conversión de ampliación y la conversión de un entero de 64 bits con signo a un entero de 32 bits con signo es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-604">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="cb6b2-605">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-605">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="cb6b2-606">Un tipo de valor no intrínseco (definido por el usuario) sólo es compatible con sí mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-606">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-607">Las enumeraciones tienen una conversión implícita a <xref:System.Enum> y a su tipo subyacente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-607">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="cb6b2-608">Si todos los elementos de `sourceArray` requiere una conversión inferior (por ejemplo, de una clase base para una clase derivada o de una interfaz a un objeto) y uno o varios elementos no se puede convertir al tipo correspondiente en `destinationArray`, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-608">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="cb6b2-609">Si este método produce una excepción durante la copia, el estado de `destinationArray` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-609">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-610">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-610">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-611"><paramref name="sourceArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-611"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-612">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-612">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-613"><paramref name="destinationArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-613"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-614"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> tienen clasificaciones diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-614"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="cb6b2-615"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> son de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-615"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-616">Al menos un elemento de <paramref name="sourceArray" /> no se puede convertir al tipo de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-616">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-617"><paramref name="length" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-617"><paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-618"><paramref name="length" /> es mayor que el número de elementos de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-618"><paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-619">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-619">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-620"><paramref name="length" /> es mayor que el número de elementos de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-620"><paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="cb6b2-621"><see cref="T:System.Array" /> que contiene los datos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-621">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="cb6b2-622">Entero de 32 bits que representa el índice de <c>sourceArray</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-622">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="cb6b2-623"><see cref="T:System.Array" /> que recibe los datos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-623">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="cb6b2-624">Entero de 32 bits que representa el índice de <c>destinationArray</c> donde comienza el almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-624">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-625">Entero de 32 bits que representa el número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-625">A 32-bit integer that represents the number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="cb6b2-626">Copia un intervalo de elementos de un objeto <see cref="T:System.Array" /> a partir del índice de origen especificado y los pega en otro objeto <see cref="T:System.Array" /> a partir del índice de destino especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-626">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span> <span data-ttu-id="cb6b2-627">La longitud y los índices se especifican como enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-627">The length and the indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-628">El `sourceArray` y `destinationArray` parámetros deben tener el mismo número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-628">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="cb6b2-629">Además, `destinationArray` debe ya ha dimensionadas y debe tener un número suficiente de elementos a partir de la `destinationIndex` posición para dar cabida a los datos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-629">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="cb6b2-630">Al copiar datos entre las matrices multidimensionales, la matriz se comporta como una matriz unidimensional larga, donde las filas (o columnas) se distribuyen conceptualmente-to-end.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-630">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="cb6b2-631">Por ejemplo, si una matriz tiene tres filas (o columnas) con cuatro elementos cada uno, copias seis elementos desde el principio de la matriz copiaría los cuatro elementos de la primera fila (o columna) y los dos primeros elementos de la segunda fila (o columna).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-631">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="cb6b2-632">Para empezar a copiar en el segundo elemento del tercer fila (o columna), `sourceIndex` debe ser el límite superior de la primera fila (o columna) y la longitud de la segunda fila (o columna) más dos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-632">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="cb6b2-633">Si `sourceArray` y `destinationArray` se superponen, este método se comporta como si los valores originales de `sourceArray` se conservan en una ubicación temporal antes de `destinationArray` se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-633">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="cb6b2-634">[C++]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-634">[C++]</span></span>  
  
 <span data-ttu-id="cb6b2-635">Este método es equivalente a la función de C o C++ estándar `memmove`, no `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-635">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="cb6b2-636">Las matrices pueden ser matrices de tipo de referencia o matrices de tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-636">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="cb6b2-637">Se realiza la conversión de tipo, según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-637">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="cb6b2-638">Cuando se copian desde una matriz de tipo de referencia a una matriz de tipo de valor, cada elemento se aplica la conversión unboxing y, a continuación, copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-638">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="cb6b2-639">Cuando se copian desde una matriz de tipo de valor a una matriz de tipo de referencia, cada elemento es una conversión boxing y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-639">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="cb6b2-640">Cuando se copian de una matriz de tipo de referencia o tipo de valor a un <xref:System.Object> matriz, un <xref:System.Object> se crea para almacenar cada valor o referencia y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-640">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="cb6b2-641">Al copiar desde un <xref:System.Object> matriz a una matriz de tipo de referencia o tipo de valor y la asignación no es posible, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-641">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="cb6b2-642">Si `sourceArray` y `destinationArray` son ambas matrices de tipo de referencia o ambas matrices de tipo <xref:System.Object>, se realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-642">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="cb6b2-643">Una copia superficial de un <xref:System.Array> es una nueva <xref:System.Array> que contienen referencias a los mismos elementos que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-643">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-644">Los elementos no se copian a sí mismos o cualquier referencia a los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-644">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="cb6b2-645">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-645">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-646">Un <xref:System.ArrayTypeMismatchException> se produce si las matrices son matrices de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-646">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="cb6b2-647">Compatibilidad de tipo se define como sigue:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-647">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-648">Un tipo es compatible con él mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-648">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-649">Un tipo de valor es compatible con <xref:System.Object> y con un tipo de interfaz implementado por dicho tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-649">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="cb6b2-650">Un tipo de valor se considera conectado a una interfaz solo si implementa dicha interfaz directamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-650">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="cb6b2-651">Los tipos desconectados no son compatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-651">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="cb6b2-652">Dos tipos de valor (predefinido) intrínseco son compatibles si la copia del tipo de origen al tipo de destino es una conversión de ampliación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-652">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="cb6b2-653">Una conversión de ampliación nunca pierde información, mientras que una conversión de restricción puede perder información.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-653">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="cb6b2-654">Por ejemplo, la conversión de un entero de 32 bits con signo a un entero de 64 bits con signo es una conversión de ampliación y la conversión de un entero de 64 bits con signo a un entero de 32 bits con signo es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-654">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="cb6b2-655">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-655">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="cb6b2-656">Un tipo de valor no intrínseco (definido por el usuario) sólo es compatible con sí mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-656">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-657">Las enumeraciones tienen una conversión implícita a <xref:System.Enum> y a su tipo subyacente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-657">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="cb6b2-658">Si todos los elementos de `sourceArray` requiere una conversión inferior (por ejemplo, de una clase base para una clase derivada o de una interfaz a un objeto) y uno o varios elementos no se puede convertir al tipo correspondiente en `destinationArray`, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-658">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="cb6b2-659">Si este método produce una excepción durante la copia, el estado de `destinationArray` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-659">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-660">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-660">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-661">En el ejemplo de código siguiente se muestra cómo copiar una <xref:System.Array> de tipo <xref:System.Object> a otro <xref:System.Array> de tipo entero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-661">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-662"><paramref name="sourceArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-662"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-663">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-663">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-664"><paramref name="destinationArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-664"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-665"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> tienen clasificaciones diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-665"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="cb6b2-666"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> son de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-666"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-667">Al menos un elemento de <paramref name="sourceArray" /> no se puede convertir al tipo de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-667">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-668"><paramref name="sourceIndex" /> es menor que el límite inferior de la primera dimensión de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-668"><paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-669">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-669">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-670"><paramref name="destinationIndex" /> es menor que el límite inferior de la primera dimensión de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-670"><paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-671">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-671">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-672"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-672"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-673"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="sourceIndex" /> hasta el final de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-673"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-674">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-674">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-675"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="destinationIndex" /> hasta el final de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-675"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int64 sourceIndex, class System.Array destinationArray, int64 destinationIndex, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Long, destinationArray As Array, destinationIndex As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, long sourceIndex, Array ^ destinationArray, long destinationIndex, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int64" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray"><span data-ttu-id="cb6b2-676"><see cref="T:System.Array" /> que contiene los datos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-676">The <see cref="T:System.Array" /> that contains the data to copy.</span></span></param>
        <param name="sourceIndex"><span data-ttu-id="cb6b2-677">Entero de 64 bits que representa el índice de <c>sourceArray</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-677">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span></span></param>
        <param name="destinationArray"><span data-ttu-id="cb6b2-678"><see cref="T:System.Array" /> que recibe los datos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-678">The <see cref="T:System.Array" /> that receives the data.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="cb6b2-679">Entero de 64 bits que representa el índice de <c>destinationArray</c> donde comienza el almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-679">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-680">Entero de 64 bits que representa el número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-680">A 64-bit integer that represents the number of elements to copy.</span></span> <span data-ttu-id="cb6b2-681">El entero debe estar entre cero y <see cref="F:System.Int32.MaxValue" />, ambos inclusive.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-681">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="cb6b2-682">Copia un intervalo de elementos de un objeto <see cref="T:System.Array" /> a partir del índice de origen especificado y los pega en otro objeto <see cref="T:System.Array" /> a partir del índice de destino especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-682">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span></span> <span data-ttu-id="cb6b2-683">La longitud y los índices se especifican como enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-683">The length and the indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-684">El `sourceArray` y `destinationArray` parámetros deben tener el mismo número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-684">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="cb6b2-685">Además, `destinationArray` debe ya ha dimensionadas y debe tener un número suficiente de elementos a partir de la `destinationIndex` posición para dar cabida a los datos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-685">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="cb6b2-686">Al copiar datos entre las matrices multidimensionales, la matriz se comporta como una matriz unidimensional larga, donde las filas (o columnas) se distribuyen conceptualmente-to-end.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-686">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="cb6b2-687">Por ejemplo, si una matriz tiene tres filas (o columnas) con cuatro elementos cada uno, copias seis elementos desde el principio de la matriz copiaría los cuatro elementos de la primera fila (o columna) y los dos primeros elementos de la segunda fila (o columna).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-687">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="cb6b2-688">Para empezar a copiar en el segundo elemento del tercer fila (o columna), `sourceIndex` debe ser el límite superior de la primera fila (o columna) y la longitud de la segunda fila (o columna) más dos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-688">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="cb6b2-689">Si `sourceArray` y `destinationArray` se superponen, este método se comporta como si los valores originales de `sourceArray` se conservan en una ubicación temporal antes de `destinationArray` se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-689">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="cb6b2-690">[C++]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-690">[C++]</span></span>  
  
 <span data-ttu-id="cb6b2-691">Este método es equivalente a la función de C o C++ estándar `memmove`, no `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-691">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="cb6b2-692">Las matrices pueden ser matrices de tipo de referencia o matrices de tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-692">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="cb6b2-693">Se realiza la conversión de tipo, según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-693">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="cb6b2-694">Cuando se copian desde una matriz de tipo de referencia a una matriz de tipo de valor, cada elemento se aplica la conversión unboxing y, a continuación, copiar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-694">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="cb6b2-695">Cuando se copian desde una matriz de tipo de valor a una matriz de tipo de referencia, cada elemento es una conversión boxing y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-695">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="cb6b2-696">Cuando se copian de una matriz de tipo de referencia o tipo de valor a un <xref:System.Object> matriz, un <xref:System.Object> se crea para almacenar cada valor o referencia y, a continuación, se copian.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-696">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="cb6b2-697">Al copiar desde un <xref:System.Object> matriz a una matriz de tipo de referencia o tipo de valor y la asignación no es posible, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-697">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="cb6b2-698">Si `sourceArray` y `destinationArray` son ambas matrices de tipo de referencia o ambas matrices de tipo <xref:System.Object>, se realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-698">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="cb6b2-699">Una copia superficial de un <xref:System.Array> es una nueva <xref:System.Array> que contienen referencias a los mismos elementos que el original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-699">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-700">Los elementos no se copian a sí mismos o cualquier referencia a los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-700">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="cb6b2-701">En cambio, una copia profunda de un <xref:System.Array> copia los elementos y todo lo que hace referencia directa o indirectamente por los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-701">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cb6b2-702">Un <xref:System.ArrayTypeMismatchException> se produce si las matrices son matrices de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-702">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="cb6b2-703">Compatibilidad de tipo se define como sigue:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-703">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-704">Un tipo es compatible con él mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-704">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-705">Un tipo de valor es compatible con <xref:System.Object> y con un tipo de interfaz implementado por dicho tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-705">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="cb6b2-706">Un tipo de valor se considera conectado a una interfaz solo si implementa dicha interfaz directamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-706">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="cb6b2-707">Los tipos desconectados no son compatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-707">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="cb6b2-708">Dos tipos de valor (predefinido) intrínseco son compatibles si la copia del tipo de origen al tipo de destino es una conversión de ampliación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-708">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="cb6b2-709">Una conversión de ampliación nunca pierde información, mientras que una conversión de restricción puede perder información.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-709">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="cb6b2-710">Por ejemplo, la conversión de un entero de 32 bits con signo a un entero de 64 bits con signo es una conversión de ampliación y la conversión de un entero de 64 bits con signo a un entero de 32 bits con signo es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-710">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="cb6b2-711">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-711">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="cb6b2-712">Un tipo de valor no intrínseco (definido por el usuario) sólo es compatible con sí mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-712">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="cb6b2-713">Las enumeraciones tienen una conversión implícita a <xref:System.Enum> y a su tipo subyacente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-713">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="cb6b2-714">Si todos los elementos de `sourceArray` requiere una conversión inferior (por ejemplo, de una clase base para una clase derivada o de una interfaz a un objeto) y uno o varios elementos no se puede convertir al tipo correspondiente en `destinationArray`, un <xref:System.InvalidCastException> se produce.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-714">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="cb6b2-715">Si este método produce una excepción durante la copia, el estado de `destinationArray` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-715">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-716">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-716">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-717">En el ejemplo de código siguiente se muestra cómo copiar una <xref:System.Array> de tipo <xref:System.Object> a otro <xref:System.Array> de tipo entero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-717">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-718"><paramref name="sourceArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-718"><paramref name="sourceArray" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-719">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-719">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-720"><paramref name="destinationArray" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-720"><paramref name="destinationArray" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-721"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> tienen clasificaciones diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-721"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="cb6b2-722"><paramref name="sourceArray" /> y <paramref name="destinationArray" /> son de tipos incompatibles.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-722"><paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-723">Al menos un elemento de <paramref name="sourceArray" /> no se puede convertir al tipo de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-723">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-724"><paramref name="sourceIndex" /> está fuera del intervalo de índices válidos para <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-724"><paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-725">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-725">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-726"><paramref name="destinationIndex" /> está fuera del intervalo de índices válidos para <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-726"><paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-727">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-727">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-728"><paramref name="length" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-728"><paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-729"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="sourceIndex" /> hasta el final de <paramref name="sourceArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-729"><paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span></span>  
  
 <span data-ttu-id="cb6b2-730">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-730">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-731"><paramref name="length" /> es mayor que el número de elementos desde <paramref name="destinationIndex" /> hasta el final de <paramref name="destinationArray" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-731"><paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span></span></exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-732">Copia todos los elementos de la matriz unidimensional actual en la matriz unidimensional especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-732">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-733">Matriz unidimensional que constituye el destino de los elementos copiados desde la matriz actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-733">The one-dimensional array that is the destination of the elements copied from the current array.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-734">Entero de 32 bits que representa el índice de <c>array</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-734">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cb6b2-735">Copia todos los elementos de la matriz unidimensional actual en la matriz unidimensional especificada, empezando en el índice especificado de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-735">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span></span> <span data-ttu-id="cb6b2-736">El índice se especifica como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-736">The index is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-737">Este método copia todos los elementos de la instancia actual de la matriz a la `array` matriz de destino, empezando por el índice `index`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-737">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="cb6b2-738">El `array` matriz de destino debe ya ha dimensionadas y debe tener un número suficiente de elementos para dar cabida a los elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-738">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="cb6b2-739">De lo contrario, el método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-739">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="cb6b2-740">Este método es compatible con la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-740">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="cb6b2-741">Si se implementa <xref:System.Collections.ICollection?displayProperty=nameWithType> es necesario no explícitamente, usar <xref:System.Array.Copy%2A> para evitar un direccionamiento indirecto adicional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-741">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="cb6b2-742">Si este método produce una excepción durante la copia, el estado de `array` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-742">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-743">Este método es una O (`n`) operación, donde `n` es <xref:System.Array.Length%2A>. Realiza una copia superficial sólo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-743">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-744">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Array> a otro <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-744">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6b2-745">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Array> a otro <xref:System.Array> con un límite inferior distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-745">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="cb6b2-746">Tenga en cuenta que el código fuente <xref:System.Array> se copia, incluidos los elementos vacíos que sobrescriben los elementos existentes en el destino <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-746">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-747"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-747"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-748"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-748"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-749"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-749"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-750">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-750">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-751">El número de elementos de la matriz de origen es mayor que el número de elementos disponible desde  <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-751">The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="cb6b2-752">El tipo de la <see cref="T:System.Array" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-752">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-753">La matriz de origen es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-753">The source array is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-754">Al menos un elemento de la <see cref="T:System.Array" /> de origen no se puede convertir al tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-754">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-755">Matriz unidimensional que constituye el destino de los elementos copiados desde la matriz actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-755">The one-dimensional array that is the destination of the elements copied from the current array.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-756">Entero de 64 bits que representa el índice de <c>array</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-756">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cb6b2-757">Copia todos los elementos de la matriz unidimensional actual en la matriz unidimensional especificada, empezando en el índice especificado de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-757">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span></span> <span data-ttu-id="cb6b2-758">El índice se especifica como un entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-758">The index is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-759">Este método copia todos los elementos de la instancia actual de la matriz a la `array` matriz de destino, empezando por el índice `index`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-759">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="cb6b2-760">El `array` matriz de destino debe ya ha dimensionadas y debe tener un número suficiente de elementos para dar cabida a los elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-760">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="cb6b2-761">De lo contrario, el método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-761">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="cb6b2-762">Este método es compatible con la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-762">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="cb6b2-763">Si se implementa <xref:System.Collections.ICollection?displayProperty=nameWithType> es necesario no explícitamente, usar <xref:System.Array.Copy%2A> para evitar un direccionamiento indirecto adicional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-763">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="cb6b2-764">Si este método produce una excepción durante la copia, el estado de `array` no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-764">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-765">Este método es una O (`n`) operación, donde `n` es <xref:System.Array.Length%2A>. Realiza una copia superficial sólo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-765">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-766">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Array> a otro <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-766">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cb6b2-767">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Array> a otro <xref:System.Array> con un límite inferior distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-767">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="cb6b2-768">Tenga en cuenta que el código fuente <xref:System.Array> se copia, incluidos los elementos vacíos que sobrescriben los elementos existentes en el destino <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-768">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-769"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-769"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-770"><paramref name="index" /> está fuera del intervalo de índices válidos para <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-770"><paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-771"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-771"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-772">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-772">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-773">El número de elementos de la matriz de origen es mayor que el número de elementos disponible desde  <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-773">The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="cb6b2-774">El tipo de la <see cref="T:System.Array" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-774">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-775">La <see cref="T:System.Array" /> de origen es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-775">The source <see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cb6b2-776">Al menos un elemento de la <see cref="T:System.Array" /> de origen no se puede convertir al tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-776">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-777">Inicializa una nueva instancia de la clase <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-777">Initializes a new instance of the <see cref="T:System.Array" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-778"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-778">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-779">Tamaño de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-779">The size of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="cb6b2-780">Crea una matriz <see cref="T:System.Array" /> unidimensional de la longitud y el <see cref="T:System.Type" /> especificados, con una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-780">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-781">Nueva matriz <see cref="T:System.Array" /> unidimensional de la longitud y el <see cref="T:System.Type" /> especificados, usando una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-781">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-782">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-782">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-783">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-783">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-784">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-784">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-785">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-785">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-786">En el ejemplo de código siguiente se muestra cómo crear e inicializar un unidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-786">The following code example shows how to create and initialize a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-787"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-787"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-788"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-788"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-789">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-789"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-790">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-790">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-791">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-791">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-792"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-792"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-793"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-793"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params int[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;int&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-794"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-794">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="cb6b2-795">Matriz de enteros de 32 bits que representa el tamaño de cada una de las dimensiones de <see cref="T:System.Array" /> que se van a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-795">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="cb6b2-796">Crea una <see cref="T:System.Array" /> multidimensional de las longitudes de dimensión y el tipo <see cref="T:System.Type" /> especificados, con una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-796">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span> <span data-ttu-id="cb6b2-797">Las longitudes de dimensión se especifican en una matriz de enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-797">The dimension lengths are specified in an array of 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-798">Nueva matriz <see cref="T:System.Array" /> multidimensional del tipo <see cref="T:System.Type" /> especificado con la longitud especificada para cada dimensión, usando una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-798">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-799">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-799">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-800">El número de elementos de la `lengths` matriz debe ser igual al número de dimensiones en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-800">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-801">Cada elemento de la `lengths` matriz debe especificar la longitud de la dimensión correspondiente en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-801">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-802">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-802">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-803">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-803">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-804">Este método es una O (`n`) operación, donde `n` es el producto de todos los valores de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-804">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-805">En el ejemplo de código siguiente se muestra cómo crear e inicializar un multidimensionales <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-805">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-806"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-806"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-807">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-807">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-808"><paramref name="lengths" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-808"><paramref name="lengths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-809"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-809"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="cb6b2-810">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-810">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-811">La matriz <paramref name="lengths" /> contiene menos de un elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-811">The <paramref name="lengths" /> array contains less than one element.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-812">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-812"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-813">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-813">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-814">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-814">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-815"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-815"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-816">Cualquier valor en <paramref name="lengths" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-816">Any value in <paramref name="lengths" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params long[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int64[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Long()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;long&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-817"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-817">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="cb6b2-818">Matriz de enteros de 64 bits que representa el tamaño de cada una de las dimensiones de <see cref="T:System.Array" /> que se van a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-818">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span> <span data-ttu-id="cb6b2-819">Cada entero de la matriz debe estar entre cero y <see cref="F:System.Int32.MaxValue" />, ambos incluidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-819">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span></span></param>
        <summary><span data-ttu-id="cb6b2-820">Crea una <see cref="T:System.Array" /> multidimensional de las longitudes de dimensión y el tipo <see cref="T:System.Type" /> especificados, con una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-820">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span> <span data-ttu-id="cb6b2-821">Las longitudes de dimensión se especifican en una matriz de enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-821">The dimension lengths are specified in an array of 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-822">Nueva matriz <see cref="T:System.Array" /> multidimensional del tipo <see cref="T:System.Type" /> especificado con la longitud especificada para cada dimensión, usando una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-823">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-823">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-824">El número de elementos de la `lengths` matriz debe ser igual al número de dimensiones en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-824">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-825">Cada elemento de la `lengths` matriz debe especificar la longitud de la dimensión correspondiente en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-825">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-826">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-826">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-827">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-827">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-828">Este método es una O (`n`) operación, donde `n` es el producto de todos los valores de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-828">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-829">En el ejemplo de código siguiente se muestra cómo crear e inicializar un multidimensionales <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-829">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-830"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-830"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-831">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-831">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-832"><paramref name="lengths" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-832"><paramref name="lengths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-833"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-833"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="cb6b2-834">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-834">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-835">La matriz <paramref name="lengths" /> contiene menos de un elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-835">The <paramref name="lengths" /> array contains less than one element.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-836">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-836"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-837">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-837">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-838">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-838">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-839"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-839"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-840">Cualquier valor de <paramref name="lengths" /> es menor que cero o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-840">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-841"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-841">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length1"><span data-ttu-id="cb6b2-842">Tamaño de la primera dimensión de la <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-842">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length2"><span data-ttu-id="cb6b2-843">Tamaño de la segunda dimensión de la <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-843">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="cb6b2-844">Crea una matriz <see cref="T:System.Array" /> bidimensional de las longitudes de dimensión y el  <see cref="T:System.Type" /> especificados, con una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-844">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-845">Nueva matriz <see cref="T:System.Array" /> bidimensional del tipo  <see cref="T:System.Type" /> especificado con la longitud especificada para cada dimensión, usando una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-845">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-846">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-846">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-847">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-847">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-848">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-848">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-849">Este método es una O (`n`) operación, donde `n` es el producto de `length1` y `length2`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-849">This method is an O(`n`) operation, where `n` is the product of `length1` and `length2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-850">En el ejemplo de código siguiente se muestra cómo crear e inicializar un bidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-850">The following code example shows how to create and initialize a two-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-851"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-851"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-852"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-852"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-853">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-853"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-854">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-854">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-855">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-855">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-856"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-856"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-857"><paramref name="length1" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-857"><paramref name="length1" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-858">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-858">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-859"><paramref name="length2" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-859"><paramref name="length2" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths, int32[] lowerBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, lengths As Integer(), lowerBounds As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, cli::array &lt;int&gt; ^ lengths, cli::array &lt;int&gt; ^ lowerBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]" />
        <Parameter Name="lowerBounds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-860"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-860">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lengths"><span data-ttu-id="cb6b2-861">Matriz unidimensional que contiene el tamaño de cada una de las dimensiones de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-861">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="lowerBounds"><span data-ttu-id="cb6b2-862">Matriz unidimensional que contiene el límite inferior (índice inicial) de cada una de las dimensiones de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-862">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="cb6b2-863">Crea una matriz <see cref="T:System.Array" /> multidimensional de las longitudes de dimensión y el tipo <see cref="T:System.Type" /> especificados, con los límites inferiores especificados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-863">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-864">Nueva matriz <see cref="T:System.Array" /> multidimensional del tipo <see cref="T:System.Type" /> especificado con la longitud y los límites inferiores especificados para cada dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-864">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-865">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-865">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-866">El `lengths` y `lowerBounds` matrices deben tener el mismo número de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-866">The `lengths` and `lowerBounds` arrays must have the same number of elements.</span></span> <span data-ttu-id="cb6b2-867">El número de elementos de la `lengths` matriz debe ser igual al número de dimensiones en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-867">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-868">Cada elemento de la `lengths` matriz debe especificar la longitud de la dimensión correspondiente en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-868">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-869">Cada elemento de la `lowerBounds` matriz debe especificar el límite inferior de la dimensión correspondiente en el nuevo <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-869">Each element of the `lowerBounds` array must specify the lower bound of the corresponding dimension in the new <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-870">Por lo general, la biblioteca de clases de .NET Framework y muchos lenguajes de programación no controlan límites inferiores distintos de cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-870">Generally, the .NET Framework class library and many programming languages do not handle nonzero lower bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-871">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-871">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-872">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-872">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-873">Este método es una O (`n`) operación, donde `n` es el producto de todos los valores de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-873">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-874">En el ejemplo de código siguiente se muestra cómo crear e inicializar un multidimensionales <xref:System.Array> con límites inferiores especificados.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-874">The following code example shows how to create and initialize a multidimensional <xref:System.Array> with specified lower bounds.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-875"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-875"><paramref name="elementType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-876">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-876">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-877"><paramref name="lengths" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-877"><paramref name="lengths" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-878">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-878">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-879"><paramref name="lowerBounds" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-879"><paramref name="lowerBounds" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-880"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-880"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span>  
  
 <span data-ttu-id="cb6b2-881">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-881">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-882">La matriz <paramref name="lengths" /> contiene menos de un elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-882">The <paramref name="lengths" /> array contains less than one element.</span></span>  
  
 <span data-ttu-id="cb6b2-883">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-883">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-884">Las matrices <paramref name="lengths" /> y <paramref name="lowerBounds" /> no contienen el mismo número de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-884">The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-885">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-885"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-886">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-886">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-887">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-887">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-888"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-888"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-889">Cualquier valor en <paramref name="lengths" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-889">Any value in <paramref name="lengths" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-890">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-890">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-891">Cualquier valor de <paramref name="lowerBounds" /> es demasiado grande, tanto que la suma del límite inferior y de la longitud de una dimensión es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-891">Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer, length3 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2, int length3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="cb6b2-892"><see cref="T:System.Type" /> de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-892">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length1"><span data-ttu-id="cb6b2-893">Tamaño de la primera dimensión de la <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-893">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length2"><span data-ttu-id="cb6b2-894">Tamaño de la segunda dimensión de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-894">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <param name="length3"><span data-ttu-id="cb6b2-895">Tamaño de la tercera dimensión de la matriz <see cref="T:System.Array" /> que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-895">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span></span></param>
        <summary><span data-ttu-id="cb6b2-896">Crea una <see cref="T:System.Array" /> tridimensional de las longitudes de dimensión y el <see cref="T:System.Type" /> especificados, con una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-896">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-897">Nueva matriz <see cref="T:System.Array" /> tridimensional del tipo <see cref="T:System.Type" /> especificado con la longitud especificada para cada dimensión, usando una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-897">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-898">A diferencia de la mayoría de las clases, <xref:System.Array> proporciona el <xref:System.Array.CreateInstance%2A> método, en lugar de constructores públicos, para permitir el acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-898">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="cb6b2-899">Elementos de tipo de referencia se inicializan en `null`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-899">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="cb6b2-900">Elementos de tipo de valor se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-900">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="cb6b2-901">Este método es una O (`n`) operación, donde `n` es el producto de `length1`, `length2`, y `length3`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-901">This method is an O(`n`) operation, where `n` is the product of `length1`, `length2`, and `length3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-902">En el ejemplo de código siguiente se muestra cómo crear e inicializar un tridimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-902">The following code example shows how to create and initialize a three-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-903"><paramref name="elementType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-903"><paramref name="elementType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-904"><paramref name="elementType" /> no es un <see cref="T:System.Type" /> válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-904"><paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cb6b2-905">No se admite <paramref name="elementType" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-905"><paramref name="elementType" /> is not supported.</span></span> <span data-ttu-id="cb6b2-906">Por ejemplo, no se admite <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-906">For example, <see cref="T:System.Void" /> is not supported.</span></span>  
  
 <span data-ttu-id="cb6b2-907">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-907">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-908"><paramref name="elementType" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-908"><paramref name="elementType" /> is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-909"><paramref name="length1" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-909"><paramref name="length1" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-910">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-910">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-911"><paramref name="length2" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-911"><paramref name="length2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-912">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-912">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-913"><paramref name="length3" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-913"><paramref name="length3" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] Empty&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] Empty&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty(Of T) () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ Empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-914">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-914">The type of the elements of the array.</span></span></typeparam>
        <summary><span data-ttu-id="cb6b2-915">Devuelve una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-915">Returns an empty array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-916">Devuelve una <see cref="T:System.Array" /> vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-916">Returns an empty <see cref="T:System.Array" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exists&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool Exists(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-917">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-917">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-918"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-918">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-919">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones de los elementos que se van a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-919">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-920">Determina si la matriz especificada contiene elementos que coinciden con las condiciones definidas por el predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-920">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns>
          <span data-ttu-id="cb6b2-921"><see langword="true" /> si <paramref name="array" /> contiene uno o varios elementos que coinciden con las condiciones definidas por el predicado especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-921"><see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-922">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-922">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-923">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>, y se detiene el procesamiento cuando encuentra una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-923">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when a match is found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-924">En C# y Visual Basic, no es necesario crear la <xref:System.Predicate%601> delegar explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-924">In C# and Visual Basic, it is not necessary to create the <xref:System.Predicate%601> delegate explicitly.</span></span> <span data-ttu-id="cb6b2-925">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-925">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-926">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-926">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-927">En el ejemplo siguiente se especifica las condiciones de coincidencia de la <xref:System.Array.Exists%2A> expresiones usinglambda de método para comprobar si un planeta comienza por una letra determinada o si se encuentra el planeta en la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-927">The following example specifies the match conditions for the <xref:System.Array.Exists%2A> method usinglambda expressions to check whether a planet starts with a given letter or whether the planet is found on the given array.</span></span>  
  
 [!code-csharp[System.Array.Exists#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists3.cs#3)]
 [!code-vb[System.Array.Exists#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists3.vb#3)]  
  
 <span data-ttu-id="cb6b2-928">En el ejemplo siguiente se usa el <xref:System.Array.Exists%2A> método para indicar si los nombres de una matriz de cadena comienzan por un carácter especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-928">The following example uses the <xref:System.Array.Exists%2A> method to indicate whether any names in a string array begin with a specified character.</span></span> <span data-ttu-id="cb6b2-929">El ejemplo crea un `StringSearcher` objeto pasando la cadena de búsqueda a su constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-929">The example instantiates a `StringSearcher` object by passing the string to search for to its class constructor.</span></span> <span data-ttu-id="cb6b2-930">El `StringSearcher.StartsWith` método tiene la misma firma que el <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-930">The `StringSearcher.StartsWith` method has same signature as the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="cb6b2-931">Cuando el <xref:System.Array.Exists%2A> se llama al método, cada miembro de la matriz se pasa al delegado hasta que devuelve `true` o recorre en iteración todos los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-931">When the <xref:System.Array.Exists%2A> method is called, each member of the array is passed to the delegate until it returns `true` or iterates all the elements in the array.</span></span>  
  
 [!code-csharp[System.Array.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists1.cs#1)]
 [!code-vb[System.Array.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists1.vb#1)]  
  
 <span data-ttu-id="cb6b2-932">Puede usar una expresión lambda en lugar de definir explícitamente un método cuya firma corresponde a del delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-932">You can also use a lambda expression rather than explicitly define a method whose signature corresponds to that of the delegate.</span></span> <span data-ttu-id="cb6b2-933">En el ejemplo siguiente se reemplaza el `StringSearcher` clase y su `StartsWith` método con una expresión lambda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-933">The following example replaces the `StringSearcher` class and its `StartsWith` method with a lambda expression.</span></span>  
  
 [!code-csharp[System.Array.Exists#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists2.cs#2)]
 [!code-vb[System.Array.Exists#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-934"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-934"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-935">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-935">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-936"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-936"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Find&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Find&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Find(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Find(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-937">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-937">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-938">Matriz unidimensional de base cero en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-938">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-939">Predicado que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-939">The predicate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-940">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la primera aparición en toda la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-940">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-941">Primer elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-941">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-942">El <xref:System.Predicate%601> es un delegado a un método o una expresión lambda que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado o expresión lambda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-942">The <xref:System.Predicate%601> is a delegate to a method or a lambda expression that returns `true` if the object passed to it matches the conditions defined in the delegate or lambda expression.</span></span>  <span data-ttu-id="cb6b2-943">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>, empezando por el primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-943">The elements of `array` are individually passed to the <xref:System.Predicate%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="cb6b2-944">Cuando se encuentra una coincidencia, se detiene el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-944">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="cb6b2-945">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-945">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-946">En el ejemplo siguiente se usa un <xref:System.Predicate%601> delegado con el <xref:System.Array.Find%2A> método genérico para buscar en una matriz de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-946">The following example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A> generic method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="cb6b2-947">El método que representa el delegado, `ProductGT10`, devuelve `true` si el producto de los campos X e Y es mayor que 100.000.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-947">The method the delegate represents, `ProductGT10`, returns `true` if the product of the X and Y fields is greater than 100,000.</span></span> <span data-ttu-id="cb6b2-948">El <xref:System.Array.Find%2A> método llama al delegado para cada elemento de la matriz, devolviendo el primer punto que cumpla la condición de prueba.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-948">The <xref:System.Array.Find%2A> method calls the delegate for each element of the array, returning the first point that meets the test condition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-949">Los usuarios de C# y Visual Basic no es necesario que crear al delegado explícitamente o se especifica el argumento de tipo del método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-949">Visual Basic and C# users do not have to create the delegate explicitly or specify the type argument of the generic method.</span></span> <span data-ttu-id="cb6b2-950">Los compiladores determinan los tipos necesarios a partir de los argumentos de método que se proporciona.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-950">The compilers determine the necessary types from the method arguments you supply.</span></span>  
  
 [!code-csharp[System.Array.Find#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/source.cs#1)]
 [!code-vb[System.Array.Find#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/source.vb#1)]  
  
 <span data-ttu-id="cb6b2-951">En lugar de definir explícitamente un método con la firma necesaria, crear instancias de un <xref:System.Predicate%601> delegar y pasa el delegado a la <xref:System.Array.Find%2A> (método), lo habitual es usar una expresión lambda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-951">Rather than explicitly defining a method with the necessary signature, instantiating a <xref:System.Predicate%601> delegate, and passing the delegate to the <xref:System.Array.Find%2A> method, it is customary to use a lambda expression.</span></span> <span data-ttu-id="cb6b2-952">En el siguiente ejemplo es idéntico al anterior, salvo que usa una expresión lambda como el `match` argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-952">The following example is identical to the previous one, except that it uses a lambda expression as the `match` argument.</span></span>  
  
 [!code-csharp[System.Array.Find#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/lambda.cs#2)]
 [!code-vb[System.Array.Find#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/lambda.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-953"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-953"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-954">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-954">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-955"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-955"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] FindAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] FindAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll(Of T) (array As T(), match As Predicate(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ FindAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-956">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-956">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-957"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-957">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-958">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones de los elementos que se van a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-958">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-959">Recupera todos los elementos que coinciden con las condiciones definidas por el predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-959">Retrieves all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-960">Matriz <see cref="T:System.Array" /> que contiene todos los elementos que coinciden con las condiciones definidas por el predicado especificado, si se encuentra alguno; de lo contrario, una matriz <see cref="T:System.Array" /> vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-960">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-961">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-961">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-962">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>, y los elementos que cumplen las condiciones se guardan en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-962">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and the elements that match the conditions are saved in the returned array.</span></span>  
  
 <span data-ttu-id="cb6b2-963">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-963">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-964">En el ejemplo siguiente se crea una matriz de números aleatorios 50 con valores que pueden oscilar entre 0 y 1000.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-964">The following example creates an array of 50 random numbers with values that can range from 0 to 1,000.</span></span> <span data-ttu-id="cb6b2-965">A continuación, llama el <xref:System.Array.FindAll%2A> método con una expresión lambda que devuelve los valores de ese intervalo de 300 a 600.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-965">It then calls the <xref:System.Array.FindAll%2A> method with a lambda expression that returns the values that range from 300 to 600.</span></span> <span data-ttu-id="cb6b2-966">Tenga en cuenta que la expresión lambda se pasa un parámetro denominado `x`;  Esto representa el miembro de la matriz individuales que se pasa a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-966">Note that the lambda expression is passed a parameter named `x`;  this represents the individual array member that is passed to the <xref:System.Predicate%601>.</span></span> <span data-ttu-id="cb6b2-967">Tenga en cuenta también que el equipo local `lBound` y `uBound` las variables son accesibles dentro de la expresión lambda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-967">Also note that the local `lBound` and `uBound` variables are accessible within the lambda expression.</span></span>  
  
 [!code-csharp[System.Array.FindAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.findall/cs/findall.cs#1)]
 [!code-vb[System.Array.FindAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.findall/vb/findall.vb#1)]  
  
 <span data-ttu-id="cb6b2-968">En el ejemplo de código siguiente se muestra la <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, y <xref:System.Array.FindAll%2A> métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-968">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="cb6b2-969">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-969">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-970">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-970">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-971">El <xref:System.Array.Find%2A> método genérico recorre la matriz desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-971">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-972">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento "Amargasaurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-972">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-973">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-973">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-974">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-974">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-975">El <xref:System.Array.FindLast%2A> método genérico se usa para buscar en la matriz hacia atrás desde el final.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-975">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="cb6b2-976">Busca el elemento "Dilophosaurus" en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-976">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="cb6b2-977">El <xref:System.Array.FindAll%2A> método genérico se utiliza para devolver una matriz que contiene todos los elementos que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-977">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="cb6b2-978">Se muestran los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-978">The elements are displayed.</span></span>  
  
 <span data-ttu-id="cb6b2-979">El ejemplo de código también muestra la <xref:System.Array.Exists%2A> y <xref:System.Array.TrueForAll%2A> métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-979">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-980"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-980"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-981">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-981">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-982"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-982"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-983">Busca un elemento que cumpla las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en un objeto <see cref="T:System.Array" /> o en una parte del mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-983">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-984">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-984">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-985"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-985">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-986"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-986">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-987">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en toda la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-987">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-988">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-988">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-989">El <xref:System.Array> se busca hacia delante a partir del primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-989">The <xref:System.Array> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="cb6b2-990">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-990">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-991">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-991">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-992">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-992">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-993">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-993">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-994">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-994">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-995">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-995">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-996">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-996">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-997">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-997">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-998">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-998">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-999">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-999">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1000">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 2 y continuando hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1000">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="cb6b2-1001">Busca el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1001">It finds the element at position 5.</span></span> <span data-ttu-id="cb6b2-1002">Por último, el <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos, empezando en la posición 2.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1002">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="cb6b2-1003">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1003">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1004"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1004"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1005">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1005">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1006"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1006"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1007">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1007">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1008"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1008">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1009">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1009">The zero-based starting index of the search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1010"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1010">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1011">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la matriz <see cref="T:System.Array" /> que va desde el índice especificado hasta el último elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1011">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1012">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1012">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1013">El <xref:System.Array> se busca hacia delante, empezando en `startIndex` y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1013">The <xref:System.Array> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="cb6b2-1014">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1014">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1015">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1015">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1016">Este método es una O (`n`) operación, donde `n` es el número de elementos de `startIndex` al final de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1016">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1017">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1017">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-1018">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1018">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1019">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1019">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1020">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1020">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1021">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1021">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1022">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1022">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1023">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1023">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1024">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 2 y continuando hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1024">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="cb6b2-1025">Busca el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1025">It finds the element at position 5.</span></span> <span data-ttu-id="cb6b2-1026">Por último, el <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos, empezando en la posición 2.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1026">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="cb6b2-1027">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1027">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1028"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1028"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1029">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1029">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1030"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1030"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1031"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1031"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1032">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1032">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1033"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1033">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1034">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1034">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1035">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1035">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1036"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1036">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1037">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la matriz <see cref="T:System.Array" /> que comienza en el índice especificado y contiene el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1037">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1038">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1038">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1039">El <xref:System.Array> se busca hacia delante, empezando en `startIndex` y terminando en `startIndex` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1039">The <xref:System.Array> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="cb6b2-1040">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1040">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1041">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1041">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1042">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1042">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1043">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1043">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-1044">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1044">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1045">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1045">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1046">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1046">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1047">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1047">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1048">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1048">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1049">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1049">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1050">El <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 2 y continuando hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1050">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="cb6b2-1051">Busca el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1051">It finds the element at position 5.</span></span> <span data-ttu-id="cb6b2-1052">Por último, el <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos, empezando en la posición 2.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1052">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="cb6b2-1053">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1053">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1054"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1054"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1055">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1055">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1056"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1056"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1057"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1057"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1058">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1058">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1059"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1059"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1060">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1060">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1061"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1061"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FindLast&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindLast&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLast(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T FindLast(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1062">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1062">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1063"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1063">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1064"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1064">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1065">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la última aparición en toda la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1065">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1066">Último elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1066">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1067">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1067">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1068">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>, moverse hacia atrás en el <xref:System.Array>, empezando por el último elemento y terminando por el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1068">The elements of `array` are individually passed to the <xref:System.Predicate%601>, moving backward in the <xref:System.Array>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="cb6b2-1069">Cuando se encuentra una coincidencia, se detiene el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1069">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="cb6b2-1070">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1070">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1071">En el ejemplo de código siguiente se muestra la <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, y <xref:System.Array.FindAll%2A> métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1071">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="cb6b2-1072">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1072">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1073">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1073">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1074">El <xref:System.Array.Find%2A> método genérico recorre la matriz desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1074">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1075">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento "Amargasaurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1075">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1076">En C# y Visual Basic, no es necesario crear la`Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1076">In C# and Visual Basic, it is not necessary to create the`Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1077">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1077">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1078">El <xref:System.Array.FindLast%2A> método genérico se usa para buscar en la matriz hacia atrás desde el final.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1078">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="cb6b2-1079">Busca el elemento "Dilophosaurus" en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1079">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="cb6b2-1080">El <xref:System.Array.FindAll%2A> método genérico se utiliza para devolver una matriz que contiene todos los elementos que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1080">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="cb6b2-1081">Se muestran los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1081">The elements are displayed.</span></span>  
  
 <span data-ttu-id="cb6b2-1082">El ejemplo de código también muestra la <xref:System.Array.Exists%2A> y <xref:System.Array.TrueForAll%2A> métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1082">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1083"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1083"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1084">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1084">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1085"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1085"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1086">Busca un elemento que cumpla las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en un objeto <see cref="T:System.Array" /> o en una parte del mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1086">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1087">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1087">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1088"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1088">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1089"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1089">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1090">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en toda la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1090">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1091">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1091">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1092">El <xref:System.Array> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1092">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1093">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1093">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1094">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1094">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1095">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1095">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1096">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindLastIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1096">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-1097">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1097">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1098">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1098">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1099">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz hacia atrás desde el final, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1099">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1100">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1100">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1101">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1101">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1102">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1102">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1103">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 4 y continuando hacia atrás hasta el principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1103">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="cb6b2-1104">Busca el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1104">It finds the element at position 1.</span></span> <span data-ttu-id="cb6b2-1105">Por último, el <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos comenzando en la posición 4 y trabajando hacia atrás (es decir, 2, 3 y 4).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1105">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="cb6b2-1106">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1106">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1107"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1107"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1108">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1108">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1109"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1109"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1110">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1110">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1111"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1111">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1112">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1112">The zero-based starting index of the backward search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1113"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1113">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1114">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la matriz <see cref="T:System.Array" /> que va desde el primer elemento hasta el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1114">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1115">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1115">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1116">El <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1116">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1117">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1117">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1118">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1118">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1119">Este método es una O (`n`) operación, donde `n` es el número de elementos desde el principio de `array` a `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1119">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1120">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindLastIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1120">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-1121">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1121">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1122">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1122">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1123">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz hacia atrás desde el final, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1123">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1124">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1124">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1125">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1125">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1126">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1126">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1127">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 4 y continuando hacia atrás hasta el principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1127">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="cb6b2-1128">Busca el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1128">It finds the element at position 1.</span></span> <span data-ttu-id="cb6b2-1129">Por último, el <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos comenzando en la posición 4 y trabajando hacia atrás (es decir, 2, 3 y 4).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1129">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="cb6b2-1130">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1130">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1131"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1131"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1132">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1132">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1133"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1133"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1134"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1134"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1135">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1135">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1136"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1136">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1137">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1137">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1138">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1138">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-1139"><see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1139">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1140">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la matriz <see cref="T:System.Array" /> que contiene el número especificado de elementos y termina en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1140">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1141">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1141">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1142">El <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y terminando en `startIndex` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1142">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="cb6b2-1143">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1143">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-1144">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1144">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1145">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1145">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1146">En el ejemplo de código siguiente se muestra las tres sobrecargas de la <xref:System.Array.FindLastIndex%2A> método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1146">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="cb6b2-1147">Se crea una matriz de cadenas, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1147">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="cb6b2-1148">El ejemplo de código también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1148">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="cb6b2-1149">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método recorre la matriz hacia atrás desde el final, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1149">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="cb6b2-1150">La búsqueda detiene cuando la `EndsWithSaurus` método `true` para el elemento en la posición 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1150">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1151">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1151">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-1152">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1152">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="cb6b2-1153">El <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en la matriz, comenzando en la posición 4 y continuando hacia atrás hasta el principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1153">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="cb6b2-1154">Busca el elemento en la posición 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1154">It finds the element at position 1.</span></span> <span data-ttu-id="cb6b2-1155">Por último, el <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> sobrecarga del método se usa para buscar en el intervalo de tres elementos comenzando en la posición 4 y trabajando hacia atrás (es decir, 2, 3 y 4).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1155">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="cb6b2-1156">Devuelve -1 porque no hay ningún nombre de dinosaurio en dicho intervalo que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1156">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1157"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1157"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1158">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1158">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1159"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1159"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1160"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1160"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1161">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1161">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1162"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1162"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1163">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1163">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1164"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1164"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (T[] array, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(!!T[] array, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ForEach``1(``0[],System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ForEach(Of T) (array As T(), action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void ForEach(cli::array &lt;T&gt; ^ array, Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1165">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1165">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1166">Matriz <see cref="T:System.Array" /> unidimensional de base cero en cuyos elementos se va a llevar a cabo la acción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1166">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span></span></param>
        <param name="action"><span data-ttu-id="cb6b2-1167"><see cref="T:System.Action`1" /> que se va a ejecutar en cada elemento de <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1167">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1168">Realiza la acción especificada en cada elemento de la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1168">Performs the specified action on each element of the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1169">El <xref:System.Action%601> se pasa un delegado a un método que realiza una acción en el objeto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1169">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="cb6b2-1170">Los elementos de `array` se pasan individualmente a la <xref:System.Action%601>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1170">The elements of `array` are individually passed to the <xref:System.Action%601>.</span></span>  
  
 <span data-ttu-id="cb6b2-1171">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1171">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1172">En el ejemplo siguiente se muestra cómo utilizar <xref:System.Array.ForEach%2A> para mostrar los cuadrados de cada elemento en una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1172">The following example shows how to use <xref:System.Array.ForEach%2A> to display the squares of each element in an integer array.</span></span>  
  
 [!code-cpp[System.Array.ForEach#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.foreach/cpp/source.cpp#1)]
 [!code-csharp[System.Array.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.foreach/cs/source.cs#1)]
 [!code-vb[System.Array.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.foreach/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1173"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1173"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1174">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1174">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1175"><paramref name="action" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1175"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6b2-1176">Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> para la interfaz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1176">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1177">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1177">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1178">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1178">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cb6b2-1179">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1179">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="cb6b2-1180">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1180">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="cb6b2-1181">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1181">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cb6b2-1182">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1182">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cb6b2-1183"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1183"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="cb6b2-1184">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1184">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cb6b2-1185">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1185">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="cb6b2-1186"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1186"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="cb6b2-1187"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1187"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="cb6b2-1188">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1188">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cb6b2-1189">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1189">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="cb6b2-1190">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1190">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cb6b2-1191">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1191">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="cb6b2-1192">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1192">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cb6b2-1193">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1193">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1194">La enumeración en una colección no es un procedimiento seguro para subprocesos ya que el enumerador carece de acceso exclusivo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1194">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="cb6b2-1195">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1195">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="cb6b2-1196">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1196">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="cb6b2-1197">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1197">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1198">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Array.GetEnumerator%2A> para enumerar los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1198">The following code example shows how to use <xref:System.Array.GetEnumerator%2A> to list the elements of an array.</span></span>  
  
 [!code-cpp[System.Array_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CPP/array_getenumerator.cpp#1)]
 [!code-csharp[System.Array_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CS/array_getenumerator.cs#1)]
 [!code-vb[System.Array_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetEnumerator/VB/array_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLength (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="cb6b2-1199">Dimensión de base cero de <see cref="T:System.Array" /> cuya longitud debe determinarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1199">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1200">Obtiene un entero de 32 bits que representa el número de elementos de la dimensión especificada de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1200">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1201">Entero de 32 bits que representa el número de elementos de la dimensión especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1201">A 32-bit integer that represents the number of elements in the specified dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1202">Un ejemplo de <xref:System.Array.GetLength%2A> es `GetLength(0)`, que devuelve el número de elementos de la primera dimensión de la <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1202">An example of <xref:System.Array.GetLength%2A> is `GetLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1203">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1203">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1204">En el ejemplo siguiente se muestra cómo utilizar <xref:System.Array.GetLength%2A> para mostrar las dimensiones de dos matrices con rangos diferentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1204">The following example shows how to use <xref:System.Array.GetLength%2A> to display the dimensions of two arrays with different ranks.</span></span>  
  
 [!code-cpp[System.Array.GetLength#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getlength/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetLength#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getlength/cs/source.cs#1)]
 [!code-vb[System.Array.GetLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getlength/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1205"><paramref name="dimension" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1205"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1206">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1206">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1207"><paramref name="dimension" /> es igual o mayor que <see cref="P:System.Array.Rank" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1207"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLongLength">
      <MemberSignature Language="C#" Value="public long GetLongLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLongLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLongLength (dimension As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetLongLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="cb6b2-1208">Dimensión de base cero de <see cref="T:System.Array" /> cuya longitud debe determinarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1208">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1209">Obtiene un entero de 64 bits que representa el número de elementos de la dimensión especificada de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1209">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1210">Entero de 64 bits que representa el número de elementos de la dimensión especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1210">A 64-bit integer that represents the number of elements in the specified dimension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1211">Un ejemplo de <xref:System.Array.GetLongLength%2A> es `GetLongLength(0)`, que devuelve el número de elementos de la primera dimensión de la <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1211">An example of <xref:System.Array.GetLongLength%2A> is `GetLongLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1212">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1212">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1213"><paramref name="dimension" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1213"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1214">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1214">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1215"><paramref name="dimension" /> es igual o mayor que <see cref="P:System.Array.Rank" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1215"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLowerBound">
      <MemberSignature Language="C#" Value="public int GetLowerBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLowerBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLowerBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowerBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLowerBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="cb6b2-1216">Dimensión de base cero de la matriz cuyo índice de inicio debe determinarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1216">A zero-based dimension of the array whose starting index needs to be determined.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1217">Obtiene el índice del primer elemento de la dimensión especificada en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1217">Gets the index of the first element of the specified dimension in the array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1218">Índice del primer elemento de la dimensión especificada en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1218">The index of the first element of the specified dimension in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1219">`GetLowerBound(0)` Devuelve el índice inicial de la primera dimensión de la matriz, y `GetLowerBound(Rank - 1)` devuelve el índice inicial de la última dimensión de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1219">`GetLowerBound(0)` returns the starting index of the first dimension of the array, and `GetLowerBound(Rank - 1)` returns the starting index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="cb6b2-1220">El <xref:System.Array.GetLowerBound%2A> método siempre devuelve un valor que indica el índice del límite inferior de la matriz, incluso si la matriz está vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1220">The <xref:System.Array.GetLowerBound%2A> method always returns a value that indicates the index of the lower bound of the array, even if the array is empty.</span></span>  
  
 <span data-ttu-id="cb6b2-1221">Tenga en cuenta que, aunque la mayoría de las matrices de .NET Framework está basadas en cero (es decir, el <xref:System.Array.GetLowerBound%2A> método devuelva cero para cada dimensión de una matriz), .NET Framework admite matrices que no son de base cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1221">Note that, although most arrays in the .NET Framework are zero-based (that is, the <xref:System.Array.GetLowerBound%2A> method returns zero for each dimension of an array), the .NET Framework does support arrays that are not zero-based.</span></span> <span data-ttu-id="cb6b2-1222">Estas matrices se pueden crear con el <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> método y también se puede devolver desde código no administrado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1222">Such arrays can be created with the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> method, and can also be returned from unmanaged code.</span></span>  
  
 <span data-ttu-id="cb6b2-1223">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1223">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1224">En el ejemplo siguiente se usa el <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos para mostrar los límites de una matriz unidimensional y bidimensional y para mostrar los valores de sus elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1224">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1225"><paramref name="dimension" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1225"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1226">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1226">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1227"><paramref name="dimension" /> es igual o mayor que <see cref="P:System.Array.Rank" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1227"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetUpperBound">
      <MemberSignature Language="C#" Value="public int GetUpperBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetUpperBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetUpperBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpperBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetUpperBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension"><span data-ttu-id="cb6b2-1228">Dimensión de base cero de la matriz cuyo límite superior debe determinarse.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1228">A zero-based dimension of the array whose upper bound needs to be determined.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1229">Obtiene el índice del último elemento de la dimensión especificada en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1229">Gets the index of the last element of the specified dimension in the array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1230">Índice del último elemento de la dimensión especificada en la matriz o -1 si la dimensión especificada está vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1230">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1231">`GetUpperBound(0)` Devuelve el último índice de la primera dimensión de la matriz, y `GetUpperBound(Rank - 1)` devuelve el último índice de la última dimensión de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1231">`GetUpperBound(0)` returns the last index in the first dimension of the array, and `GetUpperBound(Rank - 1)` returns the last index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="cb6b2-1232">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1232">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1233">En el ejemplo siguiente se usa el <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos para mostrar los límites de una matriz unidimensional y bidimensional y para mostrar los valores de sus elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1233">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1234"><paramref name="dimension" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1234"><paramref name="dimension" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1235">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1235">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1236"><paramref name="dimension" /> es igual o mayor que <see cref="P:System.Array.Rank" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1236"><paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1237">Obtiene el valor del elemento especificado de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1237">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb6b2-1238">Entero de 32 bits que representa la posición del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1238">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1239">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1239">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1240">El índice se especifica como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1240">The index is specified as a 32-bit integer.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1241">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1241">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1242">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si el valor de `index` fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1242">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1243">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1243">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1244">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1244">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1245">La matriz <see cref="T:System.Array" /> actual no tiene exactamente una dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1245">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1246"><paramref name="index" /> se encuentra fuera del intervalo de índices válidos para la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1246"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Integer()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices"><span data-ttu-id="cb6b2-1247">Matriz unidimensional de enteros de 32 bits que representan los índices que especifican la posición del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1247">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1248">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1248">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1249">Los índices se especifican en forma de una matriz de enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1249">The indexes are specified as an array of 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1250">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1250">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1251">El número de elementos de `indices` debe ser igual al número de dimensiones en el <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1251">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1252">Todos los elementos de la `indices` matriz debe especificar la posición del elemento deseado en conjunto multidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1252">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1253">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1253">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1254">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1254">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1255">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1255">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1256"><paramref name="indices" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1256"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1257">El número de dimensiones de la matriz <see cref="T:System.Array" /> actual no es igual al número de elementos de <paramref name="indices" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1257">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb6b2-1258">Cualquier elemento de <paramref name="indices" /> se encuentra fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1258">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb6b2-1259">Entero de 64 bits que representa la posición del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1259">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1260">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1260">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1261">El índice se especifica como un entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1261">The index is specified as a 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1262">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1262">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1263">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si el valor de `index` fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1263">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1264">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1264">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1265">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1265">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1266">La matriz <see cref="T:System.Array" /> actual no tiene exactamente una dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1266">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1267"><paramref name="index" /> se encuentra fuera del intervalo de índices válidos para la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1267"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Long()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices"><span data-ttu-id="cb6b2-1268">Matriz unidimensional de enteros de 64 bits que representan los índices que especifican la posición del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1268">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1269">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1269">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1270">Los índices se especifican en forma de una matriz de enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1270">The indexes are specified as an array of 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1271">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1271">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1272">El número de elementos de `indices` debe ser igual al número de dimensiones en el <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1272">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1273">Todos los elementos de la `indices` matriz debe especificar la posición del elemento deseado en conjunto multidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1273">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1274">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1274">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1275">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1275">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1276">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1276">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1277"><paramref name="indices" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1277"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1278">El número de dimensiones de la matriz <see cref="T:System.Array" /> actual no es igual al número de elementos de <paramref name="indices" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1278">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-1279">Cualquier elemento de <paramref name="indices" /> se encuentra fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1279">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="cb6b2-1280">Entero de 32 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1280">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1281">Entero de 32 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1281">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1282">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1282">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1283">Los índices se especifican como enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1283">The indexes are specified as 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1284">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1284">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1285">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1285">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1286">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1287">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1287">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1288">La matriz <see cref="T:System.Array" /> actual no tiene exactamente dos dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1288">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb6b2-1289"><paramref name="index1" /> o <paramref name="index2" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1289">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="cb6b2-1290">Entero de 64 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1290">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1291">Entero de 64 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1291">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1292">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1292">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1293">Los índices se especifican como enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1293">The indexes are specified as 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1294">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1294">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1295">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1295">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1296">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1296">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1297">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1297">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1298">La matriz <see cref="T:System.Array" /> actual no tiene exactamente dos dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1298">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-1299"><paramref name="index1" /> o <paramref name="index2" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1299">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer, index3 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="cb6b2-1300">Entero de 32 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1300">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1301">Entero de 32 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1301">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index3"><span data-ttu-id="cb6b2-1302">Entero de 32 bits que representa el índice de la tercera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1302">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1303">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1303">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1304">Los índices se especifican como enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1304">The indexes are specified as 32-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1305">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1305">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1306">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1306">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1307">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1307">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1308">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1308">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1309">La matriz <see cref="T:System.Array" /> actual no tiene exactamente tres dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1309">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1310"><paramref name="index1" />, <paramref name="index2" /> o <paramref name="index3" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1310"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long, index3 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1"><span data-ttu-id="cb6b2-1311">Entero de 64 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1311">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1312">Entero de 64 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1312">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <param name="index3"><span data-ttu-id="cb6b2-1313">Entero de 64 bits que representa el índice de la tercera dimensión del elemento <see cref="T:System.Array" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1313">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1314">Obtiene el valor de la posición especificada de la matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1314">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1315">Los índices se especifican como enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1315">The indexes are specified as 64-bit integers.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1316">Valor de la posición especificada de la matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1316">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1317">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1317">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1318">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1318">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1319">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1319">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1320">La matriz <see cref="T:System.Array" /> actual no tiene exactamente tres dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1320">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1321"><paramref name="index1" />, <paramref name="index2" /> o <paramref name="index3" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1321"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1322">Busca el objeto especificado y devuelve el índice de la primera aparición en una matriz unidimensional o en un intervalo de elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1322">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1323">Matriz unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1323">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1324">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1324">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1325">Busca el objeto especificado y devuelve el índice de su primera aparición en una matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1325">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1326">Índice de la primera aparición de <paramref name="value" /> en la matriz <paramref name="array" />, si se encuentra; en caso contrario, límite inferior de la matriz menos 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1326">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1327">Este método busca en todos los elementos de un arrayfor unidimensional `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1327">This method searches all the elements of a one-dimensional arrayfor `value`.</span></span> <span data-ttu-id="cb6b2-1328">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a cada elemento `Equals` método hasta que encuentra una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1328">To determine whether `value` exists in `array`, the method performs an equality comparison by calling each element's `Equals` method until it finds a match.</span></span> <span data-ttu-id="cb6b2-1329">Esto significa que si el elemento pasa por alto el <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1329">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1330">Porque la mayoría de las matrices tiene un límite inferior de cero, este método normalmente devuelve – 1 si`value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1330">Because most arrays have a lower bound of zero, this method generally returns –1 if`value` isn’t found.</span></span> <span data-ttu-id="cb6b2-1331">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType>(0 x 80000000) y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1331">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="cb6b2-1332">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1332">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1333">En el ejemplo se llama a las siguientes tres sobrecargas de la <xref:System.Array.IndexOf%2A> método para encontrar el índice de una cadena en una matriz de cadenas:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1333">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="cb6b2-1334"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, para determinar la primera aparición de la cadena "the" en una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1334"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1335"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en la cuarta a los últimos elementos de una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1335"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1336"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en una cadena de la matriz desde el elemento que sigue a la última coincidencia correcta al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1336"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1337"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1337"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1338"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1338"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1339">Matriz unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1339">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1340">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1340">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1341">Índice inicial de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1341">The starting index of the search.</span></span> <span data-ttu-id="cb6b2-1342">0 (cero) es válido en una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1342">0 (zero) is valid in an empty array.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1343">Busca el objeto especificado en un intervalo de elementos de la matriz unidimensional y devuelve el índice de su primera aparición.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1343">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="cb6b2-1344">El intervalo se extiende desde un índice especificado hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1344">The range extends from a specified index to the end of the array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1345">Índice de la primera aparición de <paramref name="value" />, si se encuentra una, en el intervalo de elementos de <paramref name="array" /> que se extiende desde <paramref name="startIndex" /> hasta el último elemento; en caso contrario, límite inferior de la matriz menos 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1345">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1346">Este método busca una matriz unidimensional del elemento en el índice `startIndex` hasta el último elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1346">This method searches a one-dimensional array from the element at index `startIndex` to the last element.</span></span> <span data-ttu-id="cb6b2-1347">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a la `Equals` método de todos los elementos hasta que encuentra una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1347">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="cb6b2-1348">Esto significa que si el elemento pasa por alto el <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1348">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1349">Porque la mayoría de las matrices tiene un límite inferior de cero, este método normalmente devuelve – 1 si `value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1349">Because most arrays have a lower bound of zero, this method generally returns –1 if `value` isn’t found.</span></span> <span data-ttu-id="cb6b2-1350">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType>(0 x 80000000) y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1350">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="cb6b2-1351">Si `startIndex` es igual a <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1351">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>,the method returns -1.</span></span> <span data-ttu-id="cb6b2-1352">Si `startIndex` es mayor que <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método produce una <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1352">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1353">Este método es una O (`n`) operación, donde `n` es el número de elementos de `startIndex` al final de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1353">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1354">En el ejemplo se llama a las siguientes tres sobrecargas de la <xref:System.Array.IndexOf%2A> método para encontrar el índice de una cadena en una matriz de cadenas:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1354">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="cb6b2-1355"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, para determinar la primera aparición de la cadena "the" en una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1355"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1356"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en la cuarta a los últimos elementos de una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1356"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1357"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en una cadena de la matriz desde el elemento que sigue a la última coincidencia correcta al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1357"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1358"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1358"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1359"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1359"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1360"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1360"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1361">Matriz unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1361">The one-dimensional array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1362">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1362">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1363">Índice inicial de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1363">The starting index of the search.</span></span> <span data-ttu-id="cb6b2-1364">0 (cero) es válido en una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1364">0 (zero) is valid in an empty array.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1365">Número de elementos que se van a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1365">The number of elements to search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1366">Busca el objeto especificado en un intervalo de elementos de una matriz unidimensional y devuelve el índice de su primera aparición.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1366">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span></span> <span data-ttu-id="cb6b2-1367">El intervalo se extiende desde un índice especificado durante un número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1367">The range extends from a specified index for a specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1368">Índice de la primera aparición de <paramref name="value" />, si se encuentra una, en la matriz <paramref name="array" /> desde el índice <paramref name="startIndex" /> hasta <paramref name="startIndex" /> + <paramref name="count" /> - 1; en caso contrario, límite inferior de la matriz menos 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1368">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1369">Este método busca en los elementos de un arrayfrom unidimensional `startIndex` a `startIndex` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1369">This method searches the elements of a one-dimensional arrayfrom `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="cb6b2-1370">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a la `Equals` método de todos los elementos hasta que encuentra una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1370">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="cb6b2-1371">Esto significa que si el elemento pasa por alto el <xref:System.Object.Equals%2A?displayProperty=nameWithType> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1371">This means that if the element overrides the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1372">Becausemost matrices tienen un límite inferior de cero, por lo general, este método devuelve-1 cuando `value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1372">Becausemost arrays have a lower bound of zero, this method generally returns –1 when `value` isn’t found.</span></span> <span data-ttu-id="cb6b2-1373">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType> (0 x 80000000) y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1373">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="cb6b2-1374">Si `startindex` es igual a <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1374">If `startindex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span> <span data-ttu-id="cb6b2-1375">Si `startIndex` es mayor que <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método produce una <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1375">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1376">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1376">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1377">En el ejemplo se llama a las siguientes tres sobrecargas de la <xref:System.Array.IndexOf%2A> método para encontrar el índice de una cadena en una matriz de cadenas:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1377">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="cb6b2-1378"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, para determinar la primera aparición de la cadena "the" en una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1378"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1379"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en la cuarta a los últimos elementos de una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1379"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="cb6b2-1380"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, para determinar la primera aparición de la cadena "the" en una cadena de la matriz desde el elemento que sigue a la última coincidencia correcta al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1380"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span> <span data-ttu-id="cb6b2-1381">Para determinar el valor de la `count` argumento, se resta el límite superior de la matriz a partir del índice inicial y agrega uno.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1381">To determine the value of the `count` argument, it subtracts the upper bound of the array from the starting index and adds one.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1382"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1382"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1383"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1383"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1384">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1384">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1385"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1385"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1386">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1386">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1387"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1387"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1388"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1388"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1389">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1389">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1390">Matriz unidimensional de base cero en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1390">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1391">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1391">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1392">Busca el objeto especificado y devuelve el índice de su primera aparición en una matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1392">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1393">Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <paramref name="array" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1393">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1394">Este método busca en todos los elementos de una matriz unidimensional `value`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1394">This method searches all the elements of a one-dimensional array for `value`.</span></span> <span data-ttu-id="cb6b2-1395">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a la `T.Equals` método en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1395">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="cb6b2-1396">Esto significa que si `T` invalida el <xref:System.Object.Equals%2A> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1396">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1397">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1397">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1398">En el ejemplo siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1398">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1399">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1399">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1400">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en la matriz desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1400">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1401">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar en la matriz comenzando en la posición de índice 3 y continuando hasta el final de la matriz y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1401">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1402">Por último, el <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1402">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1403"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1403"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1404">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1404">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1405">Matriz unidimensional de base cero en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1405">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1406">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1406">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1407">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1407">The zero-based starting index of the search.</span></span> <span data-ttu-id="cb6b2-1408">0 (cero) es válido en una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1408">0 (zero) is valid in an empty array.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1409">Busca el objeto especificado en un intervalo de elementos de la matriz unidimensional y devuelve el índice de su primera aparición.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1409">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="cb6b2-1410">El intervalo se extiende desde un índice especificado hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1410">The range extends from a specified index to the end of the array.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1411">Índice de base cero de la primera aparición de <paramref name="value" /> dentro del intervalo de elementos de la matriz <paramref name="array" /> que abarca desde <paramref name="startIndex" /> hasta el último elemento, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1411">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1412">Este método busca una matriz unidimensional del elemento en el `startIndex` hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1412">This method searches a one-dimensional array from the element at `startIndex` to the end of the array.</span></span> <span data-ttu-id="cb6b2-1413">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a la `T.Equals` método en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1413">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="cb6b2-1414">Esto significa que si `T` invalida el <xref:System.Object.Equals%2A> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1414">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1415">Si `startIndex` es igual a <xref:System.Array.Length%2A>, el método devuelve - 1.If `startIndex` es mayor que <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método produce una <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1415">If `startIndex` equals <xref:System.Array.Length%2A>,the method returns -1.If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1416">Este método es una O (`n`) operación, donde `n` es el número de elementos de `startIndex` al final de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1416">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1417">En el ejemplo siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1417">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1418">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1418">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1419">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en la matriz desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1419">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1420">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar en la matriz comenzando en la posición de índice 3 y continuando hasta el final de la matriz y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1420">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1421">Por último, el <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1421">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1422"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1422"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1423"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1423"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1424">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1424">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1425">Matriz unidimensional de base cero en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1425">The one-dimensional, zero-based array to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1426">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1426">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1427">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1427">The zero-based starting index of the search.</span></span> <span data-ttu-id="cb6b2-1428">0 (cero) es válido en una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1428">0 (zero) is valid in an empty array.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1429">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1429">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1430">Busca el objeto especificado en un intervalo de elementos de la matriz unidimensional y devuelve el índice de su primera aparición.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1430">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span></span> <span data-ttu-id="cb6b2-1431">El intervalo se extiende desde un índice especificado durante un número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1431">The range extends from a specified index for a specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1432">Índice de base cero de la primera aparición de <paramref name="value" /> dentro del intervalo de elementos de la matriz <paramref name="array" /> que comienza en <paramref name="startIndex" /> y contiene el número de elementos especificados en <paramref name="count" />, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1432">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1433">Los elementos de búsquedasLos de este método de una matriz unidimensional de `startIndex` a `startIndex` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1433">This method searchesthe elements of a one-dimensional array from `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="cb6b2-1434">Para determinar si `value` existe en `array`, el método realiza una comparación de igualdad mediante una llamada a la `T.Equals` método en cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1434">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="cb6b2-1435">Esto significa que si `T` invalida el <xref:System.Object.Equals%2A> se llama al método, que la invalidación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1435">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="cb6b2-1436">Si `startIndex` es igual a <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1436">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span>  <span data-ttu-id="cb6b2-1437">Si `startIndex` es mayor que <xref:System.Array.Length%2A?displayProperty=nameWithType>, el método produce una <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1437">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1438">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1438">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1439">En el ejemplo siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1439">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1440">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1440">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1441">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en la matriz desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1441">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1442">El <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar en la matriz comenzando en la posición de índice 3 y continuando hasta el final de la matriz y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1442">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1443">Por último, el <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1443">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1444"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1444"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1445"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1445"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1446">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1446">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1447"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1447"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1448">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1448">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1449"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1449"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6b2-1450">Inicializa todos los elementos de la matriz <see cref="T:System.Array" /> de tipo de valor llamando al constructor predeterminado del tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1450">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1451">Este método está diseñado para ayudar a los compiladores compatible con matrices de tipo de valor; la mayoría de los usuarios no necesita este método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1451">This method is designed to help compilers support value-type arrays; most users do not need this method.</span></span> <span data-ttu-id="cb6b2-1452">No debe usarse en las matrices de tipo de referencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1452">It must not be used on reference-type arrays.</span></span>  
  
 <span data-ttu-id="cb6b2-1453">Si el <xref:System.Array> no es un tipo de valor <xref:System.Array> o si el tipo de valor no tiene un constructor predeterminado, la <xref:System.Array> no se modifica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1453">If the <xref:System.Array> is not a value-type <xref:System.Array> or if the value type does not have a default constructor, the <xref:System.Array> is not modified.</span></span>  
  
 <span data-ttu-id="cb6b2-1454">El tipo de valor <xref:System.Array> puede tener cualquier límite inferior y cualquier número de dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1454">The value-type <xref:System.Array> can have any lower bound and any number of dimensions.</span></span>  
  
 <span data-ttu-id="cb6b2-1455">Este método es una O (`n`) operación, donde `n` es <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1455">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cb6b2-1456">Puede usar este método solo en tipos de valor que tengan constructores; Sin embargo, los tipos de valores que son nativos de C# no tiene constructores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1456">You can use this method only on value types that have constructors; however, value types that are native to C# do not have constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1457">Obtiene un valor que indica si la interfaz <see cref="T:System.Array" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1457">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="cb6b2-1458">Esta propiedad es siempre <see langword="true" /> para todas las matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1458">This property is always <see langword="true" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1459"><xref:System.Array> implementa el <xref:System.Array.IsFixedSize%2A> propiedad porque es necesaria para la <xref:System.Collections.IList?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1459"><xref:System.Array> implements the <xref:System.Array.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="cb6b2-1460">Una matriz con un tamaño fijo no permite la adición o eliminación de elementos después de crea la matriz, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1460">An array with a fixed size does not allow the addition or removal of elements after the array is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-1461">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1461">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1462">Obtiene un valor que indica si <see cref="T:System.Array" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1462">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="cb6b2-1463">Esta propiedad es siempre <see langword="false" /> para todas las matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1463">This property is always <see langword="false" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1464"><xref:System.Array> implementa el <xref:System.Array.IsReadOnly%2A> propiedad porque es necesaria para la <xref:System.Collections.IList?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1464"><xref:System.Array> implements the <xref:System.Array.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="cb6b2-1465">Una matriz que es de solo lectura no permite la agreguen, quiten o modifiquen elementos una vez creada la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1465">An array that is read-only does not allow the addition, removal, or modification of elements after the array is created.</span></span>  
  
 <span data-ttu-id="cb6b2-1466">Si necesita una colección de solo lectura, utilice una <xref:System.Collections> clase que implementa el <xref:System.Collections.IList?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1466">If you require a read-only collection, use a <xref:System.Collections> class that implements the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="cb6b2-1467">Si convierte o convertir una matriz a un <xref:System.Collections.IList> el objeto de interfaz, el <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1467">If you cast or convert an array to an <xref:System.Collections.IList> interface object, the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property returns `false`.</span></span> <span data-ttu-id="cb6b2-1468">Sin embargo, si convierte o convertir una matriz a un <xref:System.Collections.Generic.IList%601> interfaz, el `IsReadOnly` propiedad devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1468">However, if you cast or convert an array to a <xref:System.Collections.Generic.IList%601> interface, the `IsReadOnly` property returns `true`.</span></span>  
  
 <span data-ttu-id="cb6b2-1469">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1469">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="N:System.Collections" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="N:System.Collections.Generic" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1470">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Array" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1470">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="cb6b2-1471">Esta propiedad es siempre <see langword="false" /> para todas las matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1471">This property is always <see langword="false" /> for all arrays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1472"><xref:System.Array> implementa el <xref:System.Array.IsSynchronized%2A> propiedad porque es necesaria para la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1472"><xref:System.Array> implements the <xref:System.Array.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="cb6b2-1473">Clases de .NET framework se basan en <xref:System.Array> proporcionar su propia versión sincronizada de la colección mediante el <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1473">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="cb6b2-1474">Las clases que utilizan matrices también pueden implementar su propia sincronización utilizando la <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1474">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="cb6b2-1475">El código de sincronización debe realizar las operaciones en el `SyncRoot` de la colección, no directamente en la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1475">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="cb6b2-1476">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1476">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="cb6b2-1477">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1477">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="cb6b2-1478">Tenga en cuenta que algunas implementaciones de <xref:System.Array.SyncRoot%2A> podría devolver el <xref:System.Array> propio.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1478">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="cb6b2-1479">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1479">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="cb6b2-1480">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1480">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cb6b2-1481">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1481">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="cb6b2-1482">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1482">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1483">En el ejemplo de código siguiente se muestra cómo bloquear una matriz durante toda la enumeración mediante el uso de la <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1483">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1484">Devuelve el índice de la última aparición de un valor en una matriz <see cref="T:System.Array" /> unidimensional o en una parte de la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1484">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1485"><see cref="T:System.Array" /> unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1485">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1486">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1486">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1487">Busca el objeto especificado y devuelve el índice de la última aparición en toda la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1487">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1488">Índice de la última aparición de <paramref name="value" /> en toda la matriz <paramref name="array" />, si se encuentra; en caso contrario, límite inferior de la matriz menos uno.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1488">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1489">Unidimensional <xref:System.Array> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1489">The one-dimensional <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1490">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1490">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1491">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el `Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1491">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1492">Como la mayoría de las matrices tienen un límite inferior de cero, este método normalmente devuelve-1 cuando `value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1492">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="cb6b2-1493">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType> y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType>, que es `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1493">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="cb6b2-1494">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1494">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1495">En la versión 2.0 de .NET Framework, este método usa la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la <xref:System.Array> para determinar si la <xref:System.Object> especificado por el `value` existe un parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1495">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="cb6b2-1496">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `value` <xref:System.Object> propio.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1496">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
 <span data-ttu-id="cb6b2-1497"><xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1497"><xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1498">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1498">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1499"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1499"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1500"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1500"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1501"><see cref="T:System.Array" /> unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1501">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1502">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1502">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1503">Índice inicial de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1503">The starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1504">Busca el objeto especificado y devuelve el índice de la última aparición en el intervalo de elementos de la matriz <see cref="T:System.Array" /> unidimensional que se extiende desde el primer elemento hasta el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1504">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1505">Índice de la última aparición de <paramref name="value" /> en el intervalo de elementos de <paramref name="array" /> que se extiende desde el primer elemento hasta <paramref name="startIndex" />, si se encuentra; en caso contrario, límite inferior de la matriz menos uno.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1505">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1506">Unidimensional <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1506">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1507">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1507">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1508">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el `Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1508">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1509">Como la mayoría de las matrices tienen un límite inferior de cero, este método normalmente devuelve-1 cuando `value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1509">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="cb6b2-1510">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType> y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType>, que es `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1510">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="cb6b2-1511">Este método es una O (`n`) operación, donde `n` es el número de elementos desde el principio de `array` a `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1511">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
 <span data-ttu-id="cb6b2-1512">En la versión 2.0 de .NET Framework, este método usa la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la <xref:System.Array> para determinar si la <xref:System.Object> especificado por el `value` existe un parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1512">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="cb6b2-1513">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `value` <xref:System.Object> propio.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1513">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1514">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1514">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1515"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1515"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1516"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1516"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1517"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1517"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1518"><see cref="T:System.Array" /> unidimensional en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1518">The one-dimensional <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1519">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1519">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1520">Índice inicial de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1520">The starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1521">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1521">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1522">Busca el objeto especificado y devuelve el índice de la última aparición dentro del intervalo de elementos de la <see cref="T:System.Array" /> unidimensional que contiene el número especificado de elementos y termina en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1522">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1523">Índice de la última aparición de <paramref name="value" /> en el intervalo de elementos de <paramref name="array" /> que contiene el número de elementos especificado en <paramref name="count" /> y termina en <paramref name="startIndex" />, si se encuentra; en caso contrario, límite inferior de la matriz menos uno.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1523">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1524">Unidimensional <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y terminando en `startIndex` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1524">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="cb6b2-1525">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1525">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1526">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el`Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1526">If the element type is a nonintrinsic (user-defined) type, the`Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1527">Como la mayoría de las matrices tienen un límite inferior de cero, este método normalmente devuelve-1 cuando `value` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1527">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="cb6b2-1528">En el caso excepcional de que el límite inferior de la matriz es igual a <xref:System.Int32.MinValue?displayProperty=nameWithType> y `value` no se encuentra, este método devuelve <xref:System.Int32.MaxValue?displayProperty=nameWithType>, que es `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1528">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="cb6b2-1529">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1529">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="cb6b2-1530">En la versión 2.0 de .NET Framework, este método usa la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la <xref:System.Array> para determinar si la <xref:System.Object> especificado por el `value` existe un parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1530">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="cb6b2-1531">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `value` <xref:System.Object> propio.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1531">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1532">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1532">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span> <span data-ttu-id="cb6b2-1533">Tenga en cuenta que la <xref:System.Array.LastIndexOf%2A> método es una búsqueda hacia atrás; por lo tanto, `count` debe ser menor o igual que (`startIndex` menos el límite inferior de la matriz, más 1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1533">Note that the <xref:System.Array.LastIndexOf%2A> method is a backward search; therefore, `count` must be less than or equal to (`startIndex` minus the lower bound of the array plus 1).</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1534"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1534"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1535"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1535"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1536">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1536">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1537"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1537"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1538">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1538">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1539"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1539"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1540"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1540"><paramref name="array" /> is multidimensional.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1541">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1541">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1542"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1542">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1543">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1543">The object to locate in <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1544">Busca el objeto especificado y devuelve el índice de la última aparición de toda la <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1544">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1545">Índice de base cero de la última aparición de <paramref name="value" /> en toda la <paramref name="array" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1545">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1546">El <xref:System.Array> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1546">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1547">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1547">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1548">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el `Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1548">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1549">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1549">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1550">En el ejemplo de código siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1550">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1551">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1551">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1552">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en toda la matriz desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1552">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1553">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar el principio con versiones anteriores de matriz en la posición de índice 3 y continuando hasta el principio de la matriz y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1553">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1554">Por último, el <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de cuatro entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1554">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1555"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1555"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1556">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1556">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1557"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1557">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1558">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1558">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1559">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1559">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1560">Busca el objeto especificado y devuelve el índice de la última aparición en el intervalo de elementos de la <see cref="T:System.Array" /> que se extiende desde el primer elemento hasta el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1560">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1561">Índice de base cero de la última aparición de <paramref name="value" /> dentro del intervalo de elementos de la matriz <paramref name="array" /> que abarca desde el primer elemento hasta <paramref name="startIndex" />, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1561">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1562">El <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1562">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="cb6b2-1563">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1563">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1564">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el `Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1564">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1565">Este método es una O (`n`) operación, donde `n` es el número de elementos desde el principio de `array` a `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1565">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1566">En el ejemplo de código siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1566">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1567">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1567">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1568">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en toda la matriz desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1568">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1569">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar el principio con versiones anteriores de matriz en la posición de índice 3 y continuando hasta el principio de la matriz y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1569">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1570">Por último, el <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de cuatro entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1570">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1571"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1571"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1572"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1572"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1573">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1573">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1574"><see cref="T:System.Array" /> unidimensional de base cero en la que se realizará la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1574">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-1575">Objeto que se va a buscar en <c>array</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1575">The object to locate in <c>array</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="cb6b2-1576">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1576">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="cb6b2-1577">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1577">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1578">Busca el objeto especificado y devuelve el índice de la última aparición en el intervalo de elementos de la <see cref="T:System.Array" /> que contiene el número de elementos especificado y termina en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1578">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-1579">índice de base cero de la última aparición de <paramref name="value" /> dentro del intervalo de elementos de la matriz <paramref name="array" /> que contiene el número de elementos especificado en <paramref name="count" /> y termina en <paramref name="startIndex" />, si se encuentra; de lo contrario es -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1579">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1580">El <xref:System.Array> es la búsqueda hacia atrás, empezando en `startIndex` y terminando en `startIndex` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1580">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="cb6b2-1581">Los elementos se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1581">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb6b2-1582">Si el tipo de elemento es un tipo no intrínseco (definido por el usuario), el `Equals` se utiliza la implementación de ese tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1582">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="cb6b2-1583">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1583">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1584">En el ejemplo de código siguiente se muestra las tres sobrecargas genéricas de la <xref:System.Array.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1584">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="cb6b2-1585">Se crea una matriz de cadenas, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1585">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="cb6b2-1586">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método busca en toda la matriz desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1586">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1587">El <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar el principio con versiones anteriores de matriz en la posición de índice 3 y continuando hasta el principio de la matriz y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1587">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="cb6b2-1588">Por último, el <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de cuatro entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1588">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1589"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1589"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1590"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1590"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1591">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1591">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1592"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1592"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-1593">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1593">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1594"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1594"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span></span></exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Array.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1595">Obtiene el número total de elementos de todas las dimensiones de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1595">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="cb6b2-1596">El número total de elementos de todas las dimensiones de la <see cref="T:System.Array" />; es cero si no hay ningún elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1596">The total number of elements in all the dimensions of the <see cref="T:System.Array" />; zero if there are no elements in the array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1597">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1597">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1598">En el ejemplo siguiente se usa el <xref:System.Array.Length%2A> propiedad que se va a obtener el número total de elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1598">The following example uses the                                 <xref:System.Array.Length%2A> property to get the total number of elements in an array.</span></span> <span data-ttu-id="cb6b2-1599">También usa el <xref:System.Array.GetUpperBound%2A> método para determinar el número de elementos de cada dimensión de una matriz multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1599">It also uses the                                 <xref:System.Array.GetUpperBound%2A> method to determine the number of elements in each dimension of a multidimensional array.</span></span>  
  
 [!code-csharp[System.Array.Length#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.length/cs/length1.cs#1)]
 [!code-vb[System.Array.Length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.length/vb/length1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cb6b2-1600">La matriz es multidimensional y contiene más de <see cref="F:System.Int32.MaxValue" /> elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1600">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span></span></exception>
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="LongLength">
      <MemberSignature Language="C#" Value="public long LongLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LongLength" />
      <MemberSignature Language="DocId" Value="P:System.Array.LongLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LongLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LongLength { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1601">Obtiene un entero de 64 bits que representa el número total de elementos de todas las dimensiones de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1601">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="cb6b2-1602">Entero de 64 bits que representa el número total de elementos en todas las dimensiones de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1602">A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1603">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1603">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Array.Length" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Array.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1604">Obtiene el rango (número de dimensiones) de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1604">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1605">Por ejemplo, una matriz unidimensional devuelve 1, una matriz bidimensional devuelve 2, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1605">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span></span></summary>
        <value><span data-ttu-id="cb6b2-1606">Rango (número de dimensiones) de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1606">The rank (number of dimensions) of the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1607">Por ejemplo, el código de Visual Basic</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1607">For example, the Visual Basic code</span></span>  
  
```  
Dim TDArray(0,0,0) As Integer  
```  
  
 <span data-ttu-id="cb6b2-1608">y el código de C#</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1608">and the C# code</span></span>  
  
```  
int[,,] TDArray = new int[1,1,1];  
```  
  
 <span data-ttu-id="cb6b2-1609">crear una matriz de tres dimensiones con un <xref:System.Array.Rank%2A> propiedad cuyo valor es 3.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1609">create an array of three dimensions with a <xref:System.Array.Rank%2A> property whose value is 3.</span></span>  
  
 <span data-ttu-id="cb6b2-1610">Una matriz escalonada (matriz de matrices) es una matriz unidimensional; el valor de su <xref:System.Array.Rank%2A> propiedad es 1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1610">A jagged array (an array of arrays) is a one-dimensional array; the value of its <xref:System.Array.Rank%2A> property is 1.</span></span>  
  
 <span data-ttu-id="cb6b2-1611">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1611">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1612">En el ejemplo siguiente se inicializa una matriz unidimensional, una matriz bidimensional y una matriz escalonada y recupera el <xref:System.Array.Rank%2A> propiedad de cada uno.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1612">The following example initializes a one-dimensional array, a two-dimensional array, and a jagged array, and retrieves the <xref:System.Array.Rank%2A> property of each.</span></span>  
  
 [!code-csharp[System.Array.Rank#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.rank/cs/rank1.cs#1)]
 [!code-vb[System.Array.Rank#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.rank/vb/rank1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Resize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Resize&lt;T&gt; (ref T[] array, int newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Resize&lt;T&gt;(!!T[]&amp; array, int32 newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Resize``1(``0[]@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Resize(Of T) (ByRef array As T(), newSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Resize(cli::array &lt;T&gt; ^ % array, int newSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]&amp;" RefType="ref" />
        <Parameter Name="newSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-1613">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1613">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-1614">Matriz unidimensional de base cero a la que se va a cambiar el tamaño o <see langword="null" /> para crear una nueva matriz con el tamaño especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1614">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span></span></param>
        <param name="newSize"><span data-ttu-id="cb6b2-1615">Tamaño de la nueva matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1615">The size of the new array.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1616">Cambia el número de elementos de una matriz unidimensional al nuevo tamaño especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1616">Changes the number of elements of a one-dimensional array to the specified new size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1617">Este método asigna una nueva matriz con el tamaño especificado, copia los elementos de la matriz anterior al nuevo y, a continuación, reemplaza la matriz antigua con uno nuevo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1617">This method allocates a new array with the specified size, copies elements from the old array to the new one, and then replaces the old array with the new one.</span></span> <span data-ttu-id="cb6b2-1618">`array` debe ser una matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1618">`array` must be a one-dimensional array.</span></span>  
  
 <span data-ttu-id="cb6b2-1619">Si `array` es `null`, este método crea una nueva matriz con el tamaño especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1619">If `array` is `null`, this method creates a new array with the specified size.</span></span>  
  
 <span data-ttu-id="cb6b2-1620">Si `newSize` es mayor que el <xref:System.Array.Length%2A> de la matriz anterior, se asigna una nueva matriz y se copian todos los elementos de la matriz anterior al nuevo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1620">If `newSize` is greater than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and all the elements are copied from the old array to the new one.</span></span>  <span data-ttu-id="cb6b2-1621">Si `newSize` es menor que el <xref:System.Array.Length%2A> de la matriz anterior, se asigna una nueva matriz y elementos se copian de la matriz anterior al nuevo hasta que se rellena una nueva; el resto de los elementos de la matriz anterior se omiten.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1621">If `newSize` is less than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and elements are copied from the old array to the new one until the new one is filled; the rest of the elements in the old array are ignored.</span></span>  <span data-ttu-id="cb6b2-1622">Si `newSize` es igual a la <xref:System.Array.Length%2A> de la matriz anterior, este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1622">If `newSize` is equal to the <xref:System.Array.Length%2A> of the old array, this method does nothing.</span></span>  
  
 <span data-ttu-id="cb6b2-1623">Este método es una O (`n`) operación, donde `n` es `newSize`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1623">This method is an O(`n`) operation, where `n` is `newSize`.</span></span>  
  
 <span data-ttu-id="cb6b2-1624">El <xref:System.Array.Resize%2A> método cambia el tamaño de una matriz unidimensional solo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1624">The <xref:System.Array.Resize%2A> method resizes a one-dimensional array only.</span></span> <span data-ttu-id="cb6b2-1625">La <xref:System.Array> clase no incluye un método para cambiar el tamaño de las matrices multidimensionales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1625">The <xref:System.Array> class does not include a method for resizing multi-dimensional arrays.</span></span> <span data-ttu-id="cb6b2-1626">Para ello, debe proporcionar su propio código o llamar a un método especial en una biblioteca de terceros.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1626">To do this, you must either provide your own code or call a special-purpose method in a third-party library.</span></span> <span data-ttu-id="cb6b2-1627">El código siguiente muestra una posible implementación para un método que cambia el tamaño de una matriz de *n* dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1627">The following code illustrates one possible implementation for a method that resizes an array of *n* dimensions.</span></span>  
  
 [!code-csharp[System.Array.Resize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/resizexd.cs#2)]
 [!code-vb[System.Array.Resize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/resizexd.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1628">En el ejemplo siguiente se muestra cómo afecta el cambio de tamaño a la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1628">The following example shows how resizing affects the array.</span></span>  
  
 [!code-cpp[System.Array.Resize#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Resize/CPP/System.Array.Resize.cpp#1)]
 [!code-csharp[System.Array.Resize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/arrayresize.cs#1)]
 [!code-vb[System.Array.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/arrayresize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1629"><paramref name="newSize" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1629"><paramref name="newSize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1630">Invierte el orden de los elementos de una matriz <see cref="T:System.Array" /> unidimensional o de una parte de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1630">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1631"><see cref="T:System.Array" /> unidimensional que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1631">The one-dimensional <see cref="T:System.Array" /> to reverse.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1632">Invierte la secuencia de los elementos de toda la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1632">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1633">Después de llamar a este método, el elemento situado en `myArray[i]`, donde `i` es cualquier índice de la matriz, se desplaza hasta `myArray[j]`, donde `j` es igual a `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1633">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="cb6b2-1634">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1634">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1635">Como se muestra en el ejemplo siguiente, la <xref:System.Array.Reverse%2A> método se puede utilizar para invertir una matriz escalonada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1635">As the following example shows, the <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span> <span data-ttu-id="cb6b2-1636">Inicializa una matriz escalonada con un elemento para cada mes del año actual en el calendario de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1636">It initializes a jagged array with one element for each month of the current year in the current culture's calendar.</span></span> <span data-ttu-id="cb6b2-1637">Cada elemento contiene una matriz con tantos elementos como ese mes tiene días.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1637">Each element contains an array with as many elements as that month has days.</span></span> <span data-ttu-id="cb6b2-1638">En el ejemplo se muestra el contenido de la matriz, llamadas el <xref:System.Array.Reverse%2A> método y, a continuación, muestra el contenido de la matriz inversa.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1638">The example displays the contents of the array, calls the <xref:System.Array.Reverse%2A> method, and then displays the contents of the reversed array.</span></span>  
  
 [!code-csharp[System.Array.Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.reverse/cs/reversejagged.cs#1)]
 [!code-vb[System.Array.Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.reverse/vb/reversejagged.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1639">En el ejemplo de código siguiente se muestra cómo se invierte el orden de los valores de un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1639">The following code example shows how to reverse the sort of the values in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1640"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1640"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1641"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1641"><paramref name="array" /> is multidimensional.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1642"><see cref="T:System.Array" /> unidimensional que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1642">The one-dimensional <see cref="T:System.Array" /> to reverse.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1643">Índice inicial de la sección que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1643">The starting index of the section to reverse.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-1644">Número de elementos de la sección que se van a invertir.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1644">The number of elements in the section to reverse.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1645">Invierte la secuencia de los elementos de un intervalo de elementos de la matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1645">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1646">Después de llamar a este método, el elemento situado en `myArray[i]`, donde `i` es cualquier índice de la matriz, se desplaza hasta `myArray[j]`, donde `j` es igual a `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1646">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="cb6b2-1647">El <xref:System.Array.Reverse%2A> método se puede utilizar para invertir una matriz escalonada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1647">The <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span>  
  
 <span data-ttu-id="cb6b2-1648">Este método es una O (`n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1648">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1649">En el ejemplo de código siguiente se muestra cómo se invierte el orden de los valores de un intervalo de elementos en una <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1649">The following code example shows how to reverse the sort of the values in a range of elements in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1650"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1650"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1651"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1651"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1652"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1652"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1653">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1653">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1654"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1654"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1655"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1655"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1656">Establece el elemento especificado de la matriz <see cref="T:System.Array" /> actual en el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1656">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1657">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1657">The new value for the specified element.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1658">Entero de 32 bits que representa la posición del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1658">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1659">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1659">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1660">El índice se especifica como un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1660">The index is specified as a 32-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1661">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si el valor de `index` fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1661">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1662">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1662">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1663">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1663">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1664">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1664">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1665">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1665">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1666">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1666">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1667">La matriz <see cref="T:System.Array" /> actual no tiene exactamente una dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1667">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1668"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1668"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1669"><paramref name="index" /> se encuentra fuera del intervalo de índices válidos para la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1669"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1670">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1670">The new value for the specified element.</span></span></param>
        <param name="indices"><span data-ttu-id="cb6b2-1671">Matriz unidimensional de enteros de 32 bits que representan los índices que especifican la posición del elemento que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1671">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1672">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1672">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1673">Los índices se especifican en forma de una matriz de enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1673">The indexes are specified as an array of 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1674">El número de elementos de `indices` debe ser igual al número de dimensiones en el <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1674">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1675">Todos los elementos de la `indices` matriz debe especificar la posición del elemento deseado en conjunto multidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1675">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1676">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los valores de la `indices` matriz está fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1676">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1677">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1677">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1678">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1678">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1679">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1679">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1680">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1680">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1681">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1681">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1682"><paramref name="indices" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1682"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1683">El número de dimensiones de la matriz <see cref="T:System.Array" /> actual no es igual al número de elementos de <paramref name="indices" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1683">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1684"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1684"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb6b2-1685">Cualquier elemento de <paramref name="indices" /> se encuentra fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1685">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1686">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1686">The new value for the specified element.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1687">Entero de 64 bits que representa la posición del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1687">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1688">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1688">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1689">El índice se especifica como un entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1689">The index is specified as a 64-bit integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1690">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si el valor de `index` fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1690">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1691">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1691">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1692">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1692">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1693">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1693">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1694">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1694">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1695">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1695">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1696">La matriz <see cref="T:System.Array" /> actual no tiene exactamente una dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1696">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1697"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1697"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1698"><paramref name="index" /> se encuentra fuera del intervalo de índices válidos para la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1698"><paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1699">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1699">The new value for the specified element.</span></span></param>
        <param name="indices"><span data-ttu-id="cb6b2-1700">Matriz unidimensional de enteros de 64 bits que representan los índices que especifican la posición del elemento que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1700">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1701">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1701">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1702">Los índices se especifican en forma de una matriz de enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1702">The indexes are specified as an array of 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1703">El número de elementos de `indices` debe ser igual al número de dimensiones en el <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1703">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1704">Todos los elementos de la `indices` matriz debe especificar la posición del elemento deseado en conjunto multidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1704">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1705">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los valores de la `indices` matriz está fuera de límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1705">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1706">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1706">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1707">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1707">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1708">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1708">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1709">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1709">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1710">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1710">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1711"><paramref name="indices" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1711"><paramref name="indices" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1712">El número de dimensiones de la matriz <see cref="T:System.Array" /> actual no es igual al número de elementos de <paramref name="indices" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1712">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1713"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1713"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-1714">Cualquier elemento de <paramref name="indices" /> se encuentra fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1714">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1715">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1715">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="cb6b2-1716">Entero de 32 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1716">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1717">Entero de 32 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1717">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1718">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1718">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1719">Los índices se especifican como enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1719">The indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1720">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1720">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1721">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1721">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1722">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1722">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1723">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1723">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1724">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1724">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1725">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1725">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1726">La matriz <see cref="T:System.Array" /> actual no tiene exactamente dos dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1726">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1727"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1727"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb6b2-1728"><paramref name="index1" /> o <paramref name="index2" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1728">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1729">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1729">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="cb6b2-1730">Entero de 64 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1730">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1731">Entero de 64 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1731">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1732">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> bidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1732">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1733">Los índices se especifican como enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1733">The indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1734">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1734">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1735">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1735">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1736">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1736">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1737">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1737">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1738">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1738">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1739">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1739">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1740">La matriz <see cref="T:System.Array" /> actual no tiene exactamente dos dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1740">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1741"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1741"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-1742"><paramref name="index1" /> o <paramref name="index2" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1742">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer, index3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1743">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1743">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="cb6b2-1744">Entero de 32 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1744">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1745">Entero de 32 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1745">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index3"><span data-ttu-id="cb6b2-1746">Entero de 32 bits que representa el índice de la tercera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1746">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1747">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1747">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1748">Los índices se especifican como enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1748">The indexes are specified as 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1749">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1749">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1750">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1750">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1751">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1751">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1752">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1752">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1753">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1753">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1754">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1754">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1755">La matriz <see cref="T:System.Array" /> actual no tiene exactamente tres dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1755">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1756"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1756"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="cb6b2-1757"><paramref name="index1" />, <paramref name="index2" /> o <paramref name="index3" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1757"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long, index3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-1758">Nuevo valor para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1758">The new value for the specified element.</span></span></param>
        <param name="index1"><span data-ttu-id="cb6b2-1759">Entero de 64 bits que representa el índice de la primera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1759">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index2"><span data-ttu-id="cb6b2-1760">Entero de 64 bits que representa el índice de la segunda dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1760">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <param name="index3"><span data-ttu-id="cb6b2-1761">Entero de 64 bits que representa el índice de la tercera dimensión del elemento <see cref="T:System.Array" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1761">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1762">Establece un valor en el elemento situado en la posición especificada de una matriz <see cref="T:System.Array" /> tridimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1762">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span></span> <span data-ttu-id="cb6b2-1763">Los índices se especifican como enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1763">The indexes are specified as 64-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1764">El <xref:System.Array.GetLowerBound%2A> y <xref:System.Array.GetUpperBound%2A> métodos pueden determinar si alguno de los índices queda fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1764">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="cb6b2-1765">Para obtener más información acerca de las conversiones, vea <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1765">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="cb6b2-1766">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1766">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-1767">Si <xref:System.Array.SetValue%2A> se usa para asignar `null` a un elemento de una matriz de tipos de valor, todos los campos del elemento se inicializan en cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1767">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="cb6b2-1768">El valor del elemento no es una referencia nula y no se puede encontrar buscando una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1768">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1769">En el ejemplo de código siguiente se muestra cómo establecer y obtener un valor específico en una matriz unidimensional o multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1769">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1770">La matriz <see cref="T:System.Array" /> actual no tiene exactamente tres dimensiones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1770">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cb6b2-1771"><paramref name="value" /> no se puede convertir en el tipo de elemento de la actual matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1771"><paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1772"><paramref name="index1" />, <paramref name="index2" /> o <paramref name="index3" /> se encuentran fuera del intervalo de índices válidos para la dimensión correspondiente de la matriz <see cref="T:System.Array" /> actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1772"><paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span></span></exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb6b2-1773">Ordena los elementos en una matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1773">Sorts the elements in a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1774"><see cref="T:System.Array" /> unidimensional que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1774">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1775">Ordena los elementos de toda una matriz <see cref="T:System.Array" /> unidimensional utilizando la implementación de <see cref="T:System.IComparable" /> de cada elemento de la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1775">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1776">Cada elemento de `array` debe implementar la <xref:System.IComparable> para realizar comparaciones con los demás elementos de interfaz de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1776">Each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1777">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1777">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1778">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1778">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1779">Si el tamaño de partición es menos de 16 elementos, usa un[ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1779">If the partition size is fewer than 16 elements, it uses an[insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1780">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1780">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1781">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1781">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1782">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1782">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1783">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1783">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1784">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1784">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1785">En el ejemplo de código siguiente se muestra cómo ordenar los valores de un <xref:System.Array> utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1785">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1786">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1786">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1787"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1787"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1788"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1788"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-1789">Uno o varios elementos de <paramref name="array" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1789">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="cb6b2-1790"><see cref="T:System.Array" /> unidimensional que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1790">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-1791"><see cref="T:System.Array" /> unidimensional que contiene los elementos que se corresponden con cada una de las claves del objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1791">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1792">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1792">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1793"><see langword="null" /> para ordenar solo el objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1793"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1794">Ordena un par de objetos <see cref="T:System.Array" /> unidimensionales (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la implementación de <see cref="T:System.IComparable" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1794">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1795">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1795">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1796">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1796">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-1797">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1797">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1798">Cada clave de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable> interfaz para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1798">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-1799">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1799">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-1800">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1800">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1801">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1801">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1802">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1802">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1803">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1803">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1804">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1804">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1805">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1805">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1806">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1806">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1807">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1807">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1808">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `keys`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1808">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1809">En el ejemplo siguiente se muestra cómo ordenar dos matrices asociadas, donde la primera matriz que contiene las claves y la segunda matriz contiene los valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1809">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="cb6b2-1810">Ordenaciones se realizan utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1810">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1811">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1811">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1812"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1812"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-1813">El objeto <see cref="T:System.Array" /> de <paramref name="keys" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1813">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-1814">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1814">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1815">El objeto <see cref="T:System.Array" /> de <paramref name="items" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1815">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1816"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1816"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-1817">Uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1817">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1818">Matriz unidimensional que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1818">The one-dimensional array to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-1819">Implementación que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1819">The implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-1820">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1820">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1821"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1821"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1822">Ordena los elementos de una matriz <see cref="T:System.Array" /> unidimensional utilizando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1822">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1823">Si `comparer` es `null`, cada elemento de `array` debe implementar la <xref:System.IComparable> para realizar comparaciones con los demás elementos de interfaz de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1823">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1824">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1824">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1825">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1825">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1826">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1826">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1827">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1827">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1828">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1828">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1829">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1829">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1830">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1830">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1831">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1831">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1832">.NET Framework incluye predefinidos <xref:System.Collections.IComparer> implementaciones se muestran en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1832">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="cb6b2-1833">Implementación</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1833">Implementation</span></span>|<span data-ttu-id="cb6b2-1834">Descripción</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1834">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1835">Compara los dos objetos, pero se realiza una comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1835">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1836">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1836">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1837">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural invariable.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1837">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1838">Compara dos objetos de tipo `T` utilizando el criterio de ordenación predeterminado del tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1838">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="cb6b2-1839">También puede admitir las comparaciones personalizadas proporcionando una instancia de su propio <xref:System.Collections.IComparer> implementación a la `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1839">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="cb6b2-1840">El ejemplo hace esto mediante la definición de un `ReverseComparer` clase que invierte el criterio de ordenación predeterminado para instancias de un tipo y realiza la comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1840">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1841">En el ejemplo siguiente se ordenan los valores en una arrayby de cadena utilizando al comparador predeterminado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1841">The following example sorts the values in a string arrayby using the default comparer.</span></span> <span data-ttu-id="cb6b2-1842">También define un personalizado <xref:System.Collections.IComparer> implementación denominada `ReverseComparer` que invierte el criterio de ordenación predeterminado de un objeto mientras se realiza una comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1842">It also defines a custom <xref:System.Collections.IComparer> implementation named `ReverseComparer` that reverses an object's default sort order while performing a case-insensitive string comparison.</span></span> <span data-ttu-id="cb6b2-1843">Tenga en cuenta que el resultado puede variar según la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1843">Note that the output might vary depending on the current culture.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1844"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1844"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1845"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1845"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-1846">El valor de <paramref name="comparer" /> es <see langword="null" /> y uno o varios elementos de <paramref name="array" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1846"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-1847">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1847">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-1848">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1848">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-1849">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1849">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-1850">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1850">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-1851">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1851">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-1852">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1852">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="cb6b2-1853"><see cref="T:System.Array" /> unidimensional que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1853">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-1854"><see cref="T:System.Array" /> unidimensional que contiene los elementos que se corresponden con cada una de las claves del objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1854">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1855">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1855">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1856"><see langword="null" /> para ordenar solo el objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1856"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-1857">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1857">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-1858">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1858">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1859"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1859"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1860">Ordena un par de objetos <see cref="T:System.Array" /> unidimensionales (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1860">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1861">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1861">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1862">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1862">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-1863">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1863">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1864">Si `comparer` es `null`, cada clave en el `keys` <xref:System.Array> debe implementar la <xref:System.IComparable> interfaz para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1864">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-1865">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1865">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-1866">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1866">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1867">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1867">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1868">.NET Framework incluye predefinidos <xref:System.Collections.IComparer> implementaciones se muestran en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1868">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="cb6b2-1869">Implementación</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1869">Implementation</span></span>|<span data-ttu-id="cb6b2-1870">Descripción</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1870">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1871">Compara los dos objetos, pero se realiza una comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1871">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1872">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1872">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1873">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural invariable.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1873">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1874">Compara dos objetos de tipo `T` utilizando el criterio de ordenación predeterminado del tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1874">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="cb6b2-1875">También puede admitir las comparaciones personalizadas proporcionando una instancia de su propio <xref:System.Collections.IComparer> implementación a la `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1875">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="cb6b2-1876">El ejemplo hace esto mediante la definición de un <xref:System.Collections.IComparer> implementación que invierte el criterio de ordenación predeterminado y realiza la comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1876">The example does this by defining an <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="cb6b2-1877">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1877">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1878">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1878">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1879">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1879">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1880">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1880">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1881">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1881">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1882">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1882">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1883">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `keys`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1883">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1884">En el ejemplo siguiente se muestra cómo ordenar dos matrices asociadas, donde la primera matriz que contiene las claves y la segunda matriz contiene los valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1884">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="cb6b2-1885">Ordenaciones se realizan utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1885">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1886">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1886">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1887"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1887"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-1888">El objeto <see cref="T:System.Array" /> de <paramref name="keys" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1888">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-1889">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1889">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1890">El objeto <see cref="T:System.Array" /> de <paramref name="items" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1890">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1891"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1891"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1892">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1892">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1893">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1893">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-1894">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1894">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-1895"><paramref name="comparer" /> es <see langword="null" />, y uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1895"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-1896">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1896">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-1897">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1897">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-1898">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previouslythrew <see cref="T:System.ArgumentException" /> no se iniciará una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1898">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previouslythrew <see cref="T:System.ArgumentException" /> will not throw an exception, becausethe insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-1899">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1899">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1900"><see cref="T:System.Array" /> unidimensional que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1900">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1901">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1901">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-1902">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1902">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1903">Ordena los elementos de un intervalo de elementos de una matriz <see cref="T:System.Array" /> unidimensional utilizando la implementación de <see cref="T:System.IComparable" /> de cada elemento de la matriz <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1903">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1904">Cada elemento dentro del intervalo especificado de elementos de `array` debe implementar la <xref:System.IComparable> para realizar comparaciones con los demás elementos de interfaz de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1904">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1905">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1905">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1906">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1906">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1907">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1907">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1908">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1908">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1909">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1909">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1910">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1910">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1911">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1911">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1912">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1912">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1913">En el ejemplo de código siguiente se muestra cómo ordenar los valores de un <xref:System.Array> utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1913">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1914">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1914">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1915"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1915"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1916"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1916"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1917"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1917"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1918">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1918">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1919"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1919"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1920"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1920"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-1921">Uno o varios elementos de <paramref name="array" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1921">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="cb6b2-1922"><see cref="T:System.Array" /> unidimensional que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1922">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-1923"><see cref="T:System.Array" /> unidimensional que contiene los elementos que se corresponden con cada una de las claves del objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1923">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1924">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1924">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1925"><see langword="null" /> para ordenar solo el objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1925"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1926">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1926">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-1927">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1927">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1928">Ordena un intervalo de elementos en un par de objetos <see cref="T:System.Array" /> unidimensionales (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la implementación de <see cref="T:System.IComparable" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1928">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1929">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1929">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-1930">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1930">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-1931">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1931">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-1932">Cada clave dentro del intervalo especificado de elementos de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable> interfaz para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1932">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-1933">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1933">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-1934">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1934">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-1935">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1935">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1936">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1936">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1937">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1937">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1938">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1938">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1939">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1939">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1940">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1940">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1941">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1941">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1942">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1942">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1943">En el ejemplo de código siguiente se muestra cómo ordenar dos matrices asociadas, donde la primera matriz que contiene las claves y la segunda matriz contiene los valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1943">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="cb6b2-1944">Ordenaciones se realizan utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1944">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1945">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1945">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1946"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1946"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-1947">El objeto <see cref="T:System.Array" /> de <paramref name="keys" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1947">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-1948">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1948">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1949">El objeto <see cref="T:System.Array" /> de <paramref name="items" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1949">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1950"><paramref name="index" /> es menor que el límite inferior de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1950"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1951">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1951">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1952"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1952"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1953"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1953"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1954">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1954">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1955"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1955"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1956">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1956">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1957"><paramref name="items" /> no es <see langword="null" />, y <paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1957"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-1958">Uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1958">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cb6b2-1959"><see cref="T:System.Array" /> unidimensional que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1959">The one-dimensional <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-1960">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1960">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-1961">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1961">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-1962">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1962">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-1963">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1963">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1964"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1964"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-1965">Ordena los elementos de un intervalo de elementos de una matriz <see cref="T:System.Array" /> unidimensional utilizando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1965">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-1966">Si `comparer` es `null`, cada elemento dentro del intervalo especificado de elementos de `array` debe implementar la <xref:System.IComparable> para realizar comparaciones con los demás elementos de interfaz de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1966">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-1967">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1967">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-1968">.NET Framework incluye predefinidos <xref:System.Collections.IComparer> implementaciones se muestran en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1968">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="cb6b2-1969">Implementación</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1969">Implementation</span></span>|<span data-ttu-id="cb6b2-1970">Descripción</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1970">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1971">Compara los dos objetos, pero se realiza una comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1971">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1972">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1972">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1973">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural invariable.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1973">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-1974">Compara dos objetos de tipo `T` utilizando el criterio de ordenación predeterminado del tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1974">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="cb6b2-1975">También puede admitir las comparaciones personalizadas proporcionando una instancia de su propio <xref:System.Collections.IComparer> implementación a la `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1975">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="cb6b2-1976">El ejemplo hace esto mediante la definición de un `ReverseComparer` clase que invierte el criterio de ordenación predeterminado para instancias de un tipo y realiza la comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1976">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="cb6b2-1977">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1977">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-1978">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1978">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1979">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1979">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-1980">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1980">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-1981">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1981">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-1982">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1982">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-1983">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1983">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-1984">En el ejemplo de código siguiente se muestra cómo ordenar los valores de un <xref:System.Array> utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1984">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-1985">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1985">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-1986"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1986"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="cb6b2-1987"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1987"><paramref name="array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-1988"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1988"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1989">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1989">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1990"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1990"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-1991"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1991"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-1992">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1992">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-1993">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1993">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-1994">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1994">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-1995">El valor de <paramref name="comparer" /> es <see langword="null" /> y uno o varios elementos de <paramref name="array" /> no implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1995"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-1996">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1996">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-1997">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1997">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-1998">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1998">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-1999">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-1999">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="cb6b2-2000"><see cref="T:System.Array" /> unidimensional que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2000">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-2001"><see cref="T:System.Array" /> unidimensional que contiene los elementos que se corresponden con cada una de las claves del objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2001">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2002">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2002">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2003"><see langword="null" /> para ordenar solo el objeto <see cref="T:System.Array" /> de <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2003"><see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-2004">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2004">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-2005">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2005">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2006">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2006">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="cb6b2-2007">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2007">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2008"><see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2008"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2009">Ordena un intervalo de elementos de un par de objetos <see cref="T:System.Array" /> unidimensionales (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2009">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2010">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2010">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-2011">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2011">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-2012">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2012">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-2013">Si `comparer` es `null`, cada clave dentro del intervalo especificado de elementos de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable> interfaz para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2013">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-2014">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2014">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-2015">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2015">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-2016">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2016">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2017">.NET Framework incluye predefinidos <xref:System.Collections.IComparer> implementaciones se muestran en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2017">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="cb6b2-2018">Implementación</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2018">Implementation</span></span>|<span data-ttu-id="cb6b2-2019">Descripción</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2019">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-2020">Compara los dos objetos, pero se realiza una comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2020">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-2021">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2021">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-2022">Compara los dos objetos usando las convenciones de ordenación de la referencia cultural invariable.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2022">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="cb6b2-2023">Compara dos objetos de tipo `T` utilizando el criterio de ordenación predeterminado del tipo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2023">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="cb6b2-2024">También puede admitir las comparaciones personalizadas proporcionando una instancia de su propio <xref:System.Collections.IComparer> implementación a la `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2024">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="cb6b2-2025">El ejemplo hace esto mediante la definición de un personalizado <xref:System.Collections.IComparer> implementación que invierte el criterio de ordenación predeterminado y realiza la comparación de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2025">The example does this by defining a custom <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="cb6b2-2026">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2026">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2027">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2027">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2028">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2028">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2029">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2029">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2030">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2030">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2031">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2031">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2032">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2032">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2033">En el ejemplo de código siguiente se muestra cómo ordenar dos matrices asociadas, donde la primera matriz que contiene las claves y la segunda matriz contiene los valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2033">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="cb6b2-2034">Ordenaciones se realizan utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2034">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="cb6b2-2035">Tenga en cuenta que el resultado puede variar según la actual <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2035">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2036"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2036"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="cb6b2-2037">El objeto <see cref="T:System.Array" /> de <paramref name="keys" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2037">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="cb6b2-2038">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2038">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2039">El objeto <see cref="T:System.Array" /> de <paramref name="items" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2039">The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2040"><paramref name="index" /> es menor que el límite inferior de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2040"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2041">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2041">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2042"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2042"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2043"><paramref name="items" /> no es <see langword="null" />, y el límite inferior de <paramref name="keys" /> no coincide con el límite inferior de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2043"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2044">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2044">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2045"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2045"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2046">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2046">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2047"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2047"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2048">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2048">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2049"><paramref name="items" /> no es <see langword="null" />, y <paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2049"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2050">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2050">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2051">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2051">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2052">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2052">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-2053"><paramref name="comparer" /> es <see langword="null" />, y uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2053"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2054">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2054">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2055">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2055">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2056">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2056">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2057">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2057">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2058">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2058">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2059">Matriz <see cref="T:System.Array" /> unidimensional de base cero que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2059">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2060">Ordena los elementos de toda una matriz <see cref="T:System.Array" /> utilizando la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2060">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2061">Cada elemento de `array` debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con los demás elementos en `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2061">Each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-2062">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2062">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2063">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2063">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2064">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2064">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2065">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2065">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2066">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2066">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2067">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2067">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2068">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2068">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2069">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2069">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2070">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> sobrecarga del método genérico y el <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2070">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="cb6b2-2071">Se crea una matriz de cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2071">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="cb6b2-2072">La matriz se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2072">The array is displayed, sorted, and displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2073">Las llamadas a la <xref:System.Array.Sort%2A> y <xref:System.Array.BinarySearch%2A> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2073">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-2074">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2074">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="cb6b2-2075">El <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> sobrecarga del método genérico, a continuación, se usa para buscar dos cadenas, una que no está en la matriz y otra que sí está.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2075">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="cb6b2-2076">La matriz y el valor devuelto de la <xref:System.Array.BinarySearch%2A> método se pasan a la `ShowWhere` método genérico, que muestra el valor de índice si se encuentra la cadena y, en caso contrario, los elementos de la cadena de búsqueda que pudieran estar incluidos entre si estuviera en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2076">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="cb6b2-2077">El índice es negativo si la cadena no es n la matriz, por lo que la `ShowWhere` método toma el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) para obtener el índice del primer elemento de la lista que es mayor que el t de búsqueda GN.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2077">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2078"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2078"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-2079">Uno o varios elementos de <paramref name="array" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2079">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2080">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2080">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2081">Matriz <see cref="T:System.Array" /> unidimensional de base cero que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2081">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2082">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar para comparar elementos o <see langword="null" /> si se va a utilizar la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2082">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2083">Ordena los elementos de una matriz <see cref="T:System.Array" /> utilizando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2083">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2084">Si `comparer` es `null`, cada elemento de `array` debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con los demás elementos en `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2084">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-2085">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2085">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2086">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2086">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2087">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2087">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2088">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2088">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2089">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2089">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2090">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2090">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2091">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2091">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2092">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2092">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2093">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico y el <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2093">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="cb6b2-2094">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2094">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2095">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2095">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2096">La matriz se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2096">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="cb6b2-2097">Se deben ordenar matrices para poder usar el <xref:System.Array.BinarySearch%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2097">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2098">Las llamadas a la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> y <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2098">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-2099">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2099">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="cb6b2-2100">El <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico, a continuación, se usa para buscar dos cadenas, una que no está en la matriz y otra que sí está.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2100">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="cb6b2-2101">La matriz y el valor devuelto de la <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> método se pasan a la `ShowWhere` método genérico, que muestra el valor de índice si se encuentra la cadena y, en caso contrario, los elementos de la cadena de búsqueda que pudieran estar incluidos entre si estuviera en la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2101">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="cb6b2-2102">El índice es negativo si la cadena no es n la matriz, por lo que la `ShowWhere` método toma el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) para obtener el índice del primer elemento de la lista que es mayor que el t de búsqueda GN.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2102">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2103"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2103"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-2104">El valor de <paramref name="comparer" /> es <see langword="null" />, y uno o varios elementos de <paramref name="array" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2104"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-2105">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2105">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2106">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2106">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2107">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2107">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2108">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2108">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2109">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2110">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2110">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Comparison`1&lt;!!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2111">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2111">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2112">Matriz <see cref="T:System.Array" /> unidimensional de base cero que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2112">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="comparison"><span data-ttu-id="cb6b2-2113"><see cref="T:System.Comparison`1" /> que se va a utilizar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2113">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2114">Ordena los elementos de una matriz <see cref="T:System.Array" /> utilizando el delegado <see cref="T:System.Comparison`1" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2114">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2115">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2115">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2116">Este método usa el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2116">This method uses introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2117">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2117">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2118">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2118">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2119">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2119">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2120">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2120">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2121">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2121">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2122">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2122">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2123">En el ejemplo de código siguiente se muestra el <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2123">The following code example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="cb6b2-2124">El ejemplo de código define un método de comparación alternativo para las cadenas, denominado `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2124">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="cb6b2-2125">Este método funciona del siguiente modo: en primer lugar, busca el comparandsare`null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2125">This method works as follows: First, the comparandsare tested for`null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="cb6b2-2126">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2126">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="cb6b2-2127">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2127">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="cb6b2-2128">Se crea una matriz de cadenas y se rellena con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2128">A array of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="cb6b2-2129">La lista también incluye una cadena vacía y una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2129">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="cb6b2-2130">La lista se muestra, se ordena usando un <xref:System.Comparison%601> delegado genérico que representa la `CompareDinosByLength` método y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2130">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[Array_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[Array_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortComparison/cs/source.cs#1)]
 [!code-vb[Array_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2131"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2131"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2132">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2132">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2133"><paramref name="comparison" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2133"><paramref name="comparison" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-2134">La implementación de <paramref name="comparison" /> ha producido un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2134">The implementation of <paramref name="comparison" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2135">Por ejemplo, es posible que <paramref name="comparison" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2135">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2136">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2136">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2137">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2137">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2138">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2138">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2139">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2139">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Comparison`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2140">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2140">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2141">Matriz <see cref="T:System.Array" /> unidimensional de base cero que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2141">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-2142">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2142">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-2143">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2143">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2144">Ordena los elementos de un intervalo de elementos de una matriz <see cref="T:System.Array" /> utilizando la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2144">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2145">Cada elemento dentro del intervalo especificado de elementos de `array` debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con los demás elementos en `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2145">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-2146">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2146">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2147">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2147">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2148">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2148">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2149">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2149">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2150">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2150">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2151">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2151">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2152">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2152">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2153">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2153">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2154">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método genérico y el <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico para la ordenación de un intervalo en una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2154">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="cb6b2-2155">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2155">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2156">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2156">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2157">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio, que consta de tres herbívoros seguidos por tres carnívoros (tiranosaurios, para ser precisos).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2157">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="cb6b2-2158">El <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método genérico se utiliza para ordenar los tres últimos elementos de la matriz, que se muestran a continuación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2158">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="cb6b2-2159">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> se utiliza la sobrecarga de método genérico con `ReverseCompare` para ordenar los tres últimos elementos en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2159">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="cb6b2-2160">El dinosaurios exhaustivamente confundirse aparecerán de nuevo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2160">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2161">Las llamadas a la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> y <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2161">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-2162">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2162">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2163"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2163"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2164"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2164"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2165">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2165">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2166"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2166"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2167"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2167"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-2168">Uno o varios elementos de <paramref name="array" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2168">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2169">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2169">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2170">Matriz <see cref="T:System.Array" /> unidimensional de base cero que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2170">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-2171">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2171">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-2172">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2172">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2173">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar para comparar elementos o <see langword="null" /> si se va a utilizar la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2173">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2174">Ordena los elementos de un intervalo de elementos de una matriz <see cref="T:System.Array" /> utilizando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2174">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2175">Si `comparer` es `null`, cada elemento dentro del intervalo especificado de elementos de `array` debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con los demás elementos en `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2175">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="cb6b2-2176">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2176">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2177">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2177">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2178">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2178">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2179">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2179">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2180">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2180">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2181">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2181">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2182">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2182">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2183">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2183">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2184">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método genérico y el <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga del método genérico para la ordenación de un intervalo en una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2184">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="cb6b2-2185">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2185">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2186">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2186">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2187">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio, que consta de tres herbívoros seguidos por tres carnívoros (tiranosaurios, para ser precisos).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2187">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="cb6b2-2188">El <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método genérico se utiliza para ordenar los tres últimos elementos de la matriz, que se muestran a continuación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2188">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="cb6b2-2189">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> se utiliza la sobrecarga de método genérico con `ReverseCompare` para ordenar los tres últimos elementos en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2189">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="cb6b2-2190">El dinosaurios exhaustivamente confundirse aparecerán de nuevo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2190">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2191">Las llamadas a la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> y <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo del primer argumento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2191">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="cb6b2-2192">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2192">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2193"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2193"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2194"><paramref name="index" /> es menor que el límite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2194"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2195">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2195">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2196"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2196"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2197"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2197"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2198">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2198">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2199">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2199">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2200">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2200">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-2201">El valor de <paramref name="comparer" /> es <see langword="null" />, y uno o varios elementos de <paramref name="array" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2201"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2202">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2202">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2203">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2203">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2204">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2204">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2205">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2205">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="cb6b2-2206">Tipo de los elementos de la matriz de claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2206">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="cb6b2-2207">Tipo de los elementos de la matriz de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2207">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="cb6b2-2208">Matriz <see cref="T:System.Array" /> unidimensional de base cero que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2208">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-2209">Objeto <see cref="T:System.Array" /> unidimensional basado en cero que contiene los elementos que se corresponden con las claves de <c>keys</c>, o <see langword="null" /> para ordenar solo <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2209">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2210">Ordena un par de objetos <see cref="T:System.Array" /> (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2210">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2211">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2211">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-2212">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2212">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-2213">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2213">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-2214">Cada clave de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2214">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-2215">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2215">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-2216">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2216">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-2217">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2217">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2218">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2218">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2219">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2219">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2220">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2220">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2221">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2221">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2222">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2222">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2223">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2223">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2224">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2224">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2225">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, y <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecargas de método genérico, para ordenar los pares de matrices que representan las claves y valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2225">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="cb6b2-2226">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2226">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2227">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2227">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2228">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio (las claves) y una matriz de enteros que representa la longitud máxima de cada dinosaurio en metros (los valores).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2228">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="cb6b2-2229">Las matrices, a continuación, se ordena y se muestran varias veces:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2229">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="cb6b2-2230">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> sobrecarga se utiliza para ordenar ambas matrices siguiendo el orden de los nombres de dinosaurio de la primera matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2230">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="cb6b2-2231">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga y una instancia de `ReverseCompare` se usan para invertir el criterio de ordenación de las matrices emparejadas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2231">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2232">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2232">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2233">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2233">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2234">Las llamadas a los métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo de los dos primeros argumentos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2234">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="cb6b2-2235">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2235">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2236"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2236"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2237"><paramref name="items" /> no es <see langword="null" />, y el límite inferior de <paramref name="keys" /> no coincide con el límite inferior de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2237"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2238">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2238">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2239"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2239"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-2240">Uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2240">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="cb6b2-2241">Tipo de los elementos de la matriz de claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2241">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="cb6b2-2242">Tipo de los elementos de la matriz de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2242">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="cb6b2-2243">Matriz <see cref="T:System.Array" /> unidimensional de base cero que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2243">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-2244">Objeto <see cref="T:System.Array" /> unidimensional basado en cero que contiene los elementos que se corresponden con las claves de <c>keys</c>, o <see langword="null" /> para ordenar solo <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2244">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2245">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar para comparar elementos o <see langword="null" /> si se va a utilizar la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2245">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2246">Ordena un par de objetos <see cref="T:System.Array" /> (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2246">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2247">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2247">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-2248">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2248">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-2249">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2249">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-2250">Si `comparer` es `null`, cada clave en el `keys` <xref:System.Array> debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2250">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-2251">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2251">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-2252">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2252">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-2253">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2253">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2254">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2254">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2255">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2255">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2256">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2256">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2257">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2257">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2258">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2258">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2259">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2259">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2260">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2260">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2261">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 >,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, y <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecargas de método genérico, para ordenar los pares de matrices que representan las claves y valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2261">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="cb6b2-2262">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2262">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2263">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2263">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2264">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio (las claves) y una matriz de enteros que representa la longitud máxima de cada dinosaurio en metros (los valores).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2264">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="cb6b2-2265">Las matrices, a continuación, se ordena y se muestran varias veces:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2265">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="cb6b2-2266">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> sobrecarga se utiliza para ordenar ambas matrices siguiendo el orden de los nombres de dinosaurio de la primera matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2266">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="cb6b2-2267">El [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > sobrecarga y una instancia de `ReverseCompare` se usan para invertir el criterio de ordenación de las matrices emparejadas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2267">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2268">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2268">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2269">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2269">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2270">Las llamadas a los métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo de los dos primeros argumentos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2270">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="cb6b2-2271">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2271">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2272"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2272"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2273"><paramref name="items" /> no es <see langword="null" />, y el límite inferior de <paramref name="keys" /> no coincide con el límite inferior de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2273"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2274">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2274">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2275"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2275"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2276">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2276">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2277">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2277">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2278">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2278">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-2279"><paramref name="comparer" /> es <see langword="null" /> y uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2279"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2280">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2280">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2281">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2281">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2282">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2282">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2283">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2283">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="cb6b2-2284">Tipo de los elementos de la matriz de claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2284">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="cb6b2-2285">Tipo de los elementos de la matriz de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2285">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="cb6b2-2286">Matriz <see cref="T:System.Array" /> unidimensional de base cero que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2286">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-2287">Objeto <see cref="T:System.Array" /> unidimensional basado en cero que contiene los elementos que se corresponden con las claves de <c>keys</c>, o <see langword="null" /> para ordenar solo <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2287">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-2288">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2288">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-2289">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2289">The number of elements in the range to sort.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2290">Ordena un intervalo de elementos en un par de objetos <see cref="T:System.Array" /> (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2290">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2291">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2291">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-2292">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2292">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-2293">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2293">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-2294">Cada clave dentro del intervalo especificado de elementos de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2294">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-2295">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2295">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-2296">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2296">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-2297">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2297">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2298">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2298">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2299">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2299">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2300">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2300">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2301">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2301">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2302">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2302">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2303">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2303">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2304">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2304">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2305">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 >, y <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecargas de método genérico, para ordenar los pares de matrices que representan las claves y valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2305">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="cb6b2-2306">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2306">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2307">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2307">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2308">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio (las claves) y una matriz de enteros que representa la longitud máxima de cada dinosaurio en metros (los valores).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2308">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="cb6b2-2309">Las matrices, a continuación, se ordena y se muestran varias veces:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2309">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="cb6b2-2310">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> sobrecarga se utiliza para ordenar ambas matrices siguiendo el orden de los nombres de dinosaurio de la primera matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2310">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="cb6b2-2311">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga y una instancia de `ReverseCompare` se usan para invertir el criterio de ordenación de las matrices emparejadas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2311">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2312">El [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 > sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2312">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2313">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2313">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2314">Las llamadas a los métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo de los dos primeros argumentos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2314">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="cb6b2-2315">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2315">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2316"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2316"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2317"><paramref name="index" /> es menor que el límite inferior de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2317"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2318">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2318">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2319"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2319"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2320"><paramref name="items" /> no es <see langword="null" />, y el límite inferior de <paramref name="keys" /> no coincide con el límite inferior de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2320"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2321">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2321">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2322"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2322"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2323">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2323">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2324"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2324"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2325">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2325">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2326"><paramref name="items" /> no es <see langword="null" />, y <paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2326"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb6b2-2327">Uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2327">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="cb6b2-2328">Tipo de los elementos de la matriz de claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2328">The type of the elements of the key array.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="cb6b2-2329">Tipo de los elementos de la matriz de elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2329">The type of the elements of the items array.</span></span></typeparam>
        <param name="keys"><span data-ttu-id="cb6b2-2330">Matriz <see cref="T:System.Array" /> unidimensional de base cero que contiene las claves que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2330">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span></span></param>
        <param name="items"><span data-ttu-id="cb6b2-2331">Objeto <see cref="T:System.Array" /> unidimensional basado en cero que contiene los elementos que se corresponden con las claves de <c>keys</c>, o <see langword="null" /> para ordenar solo <c>keys</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2331">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span></span></param>
        <param name="index"><span data-ttu-id="cb6b2-2332">Índice inicial del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2332">The starting index of the range to sort.</span></span></param>
        <param name="length"><span data-ttu-id="cb6b2-2333">Número de elementos del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2333">The number of elements in the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2334">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar para comparar elementos o <see langword="null" /> si se va a utilizar la implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2334">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2335">Ordena un intervalo de elementos de un par de objetos <see cref="T:System.Array" /> (uno contiene las claves y el otro contiene los elementos correspondientes) en función de las claves de la primera matriz <see cref="T:System.Array" /> utilizando la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2335">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2336">Cada clave de la `keys` <xref:System.Array> tiene un elemento correspondiente en el `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2336">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="cb6b2-2337">Cuando se cambia la posición de una clave durante la ordenación, el elemento correspondiente de la `items` <xref:System.Array> se vuelve a colocar de forma similar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2337">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="cb6b2-2338">Por lo tanto, la `items` <xref:System.Array> se ordenan en función de la organización de las claves correspondientes en el `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2338">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="cb6b2-2339">Si `comparer` es `null`, cada clave dentro del intervalo especificado de elementos de la `keys` <xref:System.Array> debe implementar la <xref:System.IComparable%601> interfaz genérica para poder realizar comparaciones con todas las demás claves.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2339">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="cb6b2-2340">Puede ordenar si hay más elementos que las claves, pero no se ordenará los elementos que no tengan ninguna de las claves correspondientes.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2340">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="cb6b2-2341">No se puede ordenar si hay más teclas que elementos; al hacerlo se inicia una <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2341">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="cb6b2-2342">Si la ordenación no se ha completado correctamente, los resultados son indefinidos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2342">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="cb6b2-2343">Este método utiliza el algoritmo de ordenación introspectivas (introsort) como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2343">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="cb6b2-2344">Si el tamaño de partición es menos de 16 elementos, usa un [ordenación según inserción](http://en.wikipedia.org/wiki/Insertion_sort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2344">If the partition size is fewer than 16 elements, it uses an [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2345">Si el número de particiones superior a 2 \* registro<sup>N</sup>, donde *N* es el intervalo de la matriz de entrada, utiliza un [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2345">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](http://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="cb6b2-2346">De lo contrario, usa un [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2346">Otherwise, it uses a [Quicksort](http://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="cb6b2-2347">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2347">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="cb6b2-2348">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2348">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2349">Para las matrices que se ordenan mediante el uso de los algoritmos Heapsort y Quicksort, en el peor de los casos, este método es una O (`n` registro `n`) operación, donde `n` es `length`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2349">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2350">En el ejemplo de código siguiente se muestra la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, y [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32% 2CSystem.Collections.Generic.IComparer%7b%60%600%7D%29 > sobrecargas de método genérico, para ordenar los pares de matrices que representan las claves y valores.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2350">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="cb6b2-2351">El ejemplo de código define un comparador alternativo para las cadenas, denominado `ReverseCompare`, que implementa el `IComparer<string>`(`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2351">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>`(`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="cb6b2-2352">Las llamadas de comparador el <xref:System.String.CompareTo%28System.String%29> método, invertir el orden de los términos de la comparación para que las cadenas ordenen alta o baja en lugar de bajo a alto.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2352">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="cb6b2-2353">El ejemplo de código se crea y muestra una matriz de nombres de dinosaurio (las claves) y una matriz de enteros que representa la longitud máxima de cada dinosaurio en metros (los valores).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2353">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="cb6b2-2354">Las matrices, a continuación, se ordena y se muestran varias veces:</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2354">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="cb6b2-2355">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> sobrecarga se utiliza para ordenar ambas matrices siguiendo el orden de los nombres de dinosaurio de la primera matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2355">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="cb6b2-2356">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> sobrecarga y una instancia de `ReverseCompare` se usan para invertir el criterio de ordenación de las matrices emparejadas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2356">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2357">El <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2357">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="cb6b2-2358">El [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > sobrecarga se utiliza para ordenar los tres últimos elementos de ambas matrices en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2358">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2359">Las llamadas a los métodos genéricos no parece diferentes de las llamadas a sus homólogas no genéricas, ya que Visual Basic, C# y C++ deducen el tipo de parámetro de tipo genérico del tipo de los dos primeros argumentos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2359">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="cb6b2-2360">Si usas el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el lenguaje intermedio de Microsoft (MSIL), puede ver que se llama a los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2360">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2361"><paramref name="keys" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2361"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2362"><paramref name="index" /> es menor que el límite inferior de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2362"><paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2363">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2363">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2364"><paramref name="length" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2364"><paramref name="length" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cb6b2-2365"><paramref name="items" /> no es <see langword="null" />, y el límite inferior de <paramref name="keys" /> no coincide con el límite inferior de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2365"><paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2366">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2366">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2367"><paramref name="items" /> no es <see langword="null" />, y la longitud de <paramref name="keys" /> es mayor que la longitud de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2367"><paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2368">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2368">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2369"><paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="keys" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2369"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2370">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2370">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2371"><paramref name="items" /> no es <see langword="null" />, y <paramref name="index" /> y <paramref name="length" /> no especifican un intervalo válido en el objeto <see cref="T:System.Array" /> de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2371"><paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2372">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2372">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2373">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2373">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="cb6b2-2374">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2374">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cb6b2-2375"><paramref name="comparer" /> es <see langword="null" /> y uno o más elementos del objeto <see cref="T:System.Array" /> de <paramref name="keys" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2375"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="cb6b2-2376">El .NET Framework 4 y versiones anteriores utilizan solo el algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2376">The .NET Framework 4 and earlier versions used only the Quicksort algorithm.</span></span> <span data-ttu-id="cb6b2-2377">QuickSort identifica no válido especificado en algunas situaciones en que se inicia la operación de ordenación una <see cref="T:System.IndexOutOfRangeException" /> excepción e inicia un <see cref="T:System.ArgumentException" /> excepción al llamador.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2377">Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller.</span></span> <span data-ttu-id="cb6b2-2378">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], es posible que las operaciones de ordenación que previamente produjo <see cref="T:System.ArgumentException" /> no producirán una excepción, porque los algoritmos de ordenación y heapsort de inserción no detectan un comparador no válido.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2378">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer.</span></span> <span data-ttu-id="cb6b2-2379">En general, esto se aplica a las matrices con menos de 16 elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2379">For the most part, this applies to arrays with fewer than 16 elements.</span></span></para>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-2380">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2380">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="cb6b2-2381">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2381">An object that can be used to synchronize access to the <see cref="T:System.Array" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2382">Esta propiedad implementa la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2382">This property implements the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="cb6b2-2383">Clases de .NET framework se basan en <xref:System.Array> proporcionar su propia versión sincronizada de la colección mediante el <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2383">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="cb6b2-2384">Las clases que utilizan matrices también pueden implementar su propia sincronización utilizando la <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2384">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="cb6b2-2385">El código de sincronización debe realizar las operaciones en el `SyncRoot` de la colección, no directamente en la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2385">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="cb6b2-2386">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2386">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="cb6b2-2387">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2387">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="cb6b2-2388">Tenga en cuenta que algunas implementaciones de <xref:System.Array.SyncRoot%2A> podría devolver el <xref:System.Array> propio.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2388">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="cb6b2-2389">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2389">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="cb6b2-2390">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2390">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cb6b2-2391">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2391">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="cb6b2-2392">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2392">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2393">En el ejemplo de código siguiente se muestra cómo bloquear una matriz durante toda la enumeración mediante el uso de la <xref:System.Array.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2393">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb6b2-2394">Obtiene el número de elementos incluidos en <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2394">Gets the number of elements contained in the <see cref="T:System.Array" />.</span></span></summary>
        <value><span data-ttu-id="cb6b2-2395">Número de elementos contenidos en la colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2395">The number of elements contained in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2396">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2397">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2397">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-2398">Objeto que se va a agregar a <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2398">The object to be added to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2399">Cuando se llama a este método, siempre se produce una excepción <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2399">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-2400">No se admite el agregar un valor a una matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2400">Adding a value to an array is not supported.</span></span> <span data-ttu-id="cb6b2-2401">No se devuelve ningún valor.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2401">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2402">Normalmente, un <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementación agrega un miembro a una colección.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2402">Ordinarily, an <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementation adds a member to a collection.</span></span> <span data-ttu-id="cb6b2-2403">Sin embargo, dado que las matrices tienen un tamaño fijo (la <xref:System.Array.IsFixedSize%2A> propiedad siempre devuelve `true`), este método siempre produce una <xref:System.NotSupportedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2403">However, because arrays have a fixed size (the <xref:System.Array.IsFixedSize%2A> property always returns `true`), this method always throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="cb6b2-2404">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2404">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2405">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2405">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb6b2-2406"><see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2406">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb6b2-2407">Quita todos los elementos de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2407">Removes all items from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2408">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2408">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2409">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2409">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb6b2-2410"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2410">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-2411">Objeto que se va a buscar en la lista actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2411">The object to locate in the current list.</span></span> <span data-ttu-id="cb6b2-2412">El elemento que se va a buscar puede ser <see langword="null" /> para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2412">The element to locate can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2413">Determina si un elemento se encuentra en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2413">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns>
          <span data-ttu-id="cb6b2-2414"><see langword="true" /> si <paramref name="value" /> se encuentra en la matriz <see cref="T:System.Collections.IList" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2414"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2415">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2416">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2416">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-2417">Objeto que se va a buscar en la lista actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2417">The object to locate in the current list.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2418">Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2418">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-2419">Es el índice del valor si se encuentra en la lista; en caso contrario, es -1.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2419">The index of value if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2420">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2420">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2421">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2421">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb6b2-2422">Índice en el que se debe insertar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2422">The index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="cb6b2-2423">Objeto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2423">The object to insert.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2424">Inserta un elemento en la interfaz <see cref="T:System.Collections.IList" />, en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2424">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2425">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2426">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2426">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2427"><paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2427"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb6b2-2428"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2428">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="cb6b2-2429">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2429">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2430"><see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2430">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="cb6b2-2431"><paramref name="value" /> es una referencia null de la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2431"><paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb6b2-2432">Índice del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2432">The index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2433">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2433">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="cb6b2-2434">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2434">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2435">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2436">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2436">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cb6b2-2437"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2437"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="cb6b2-2438">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2438">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2439"><paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2439"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb6b2-2440">La matriz <see cref="T:System.Array" /> actual no tiene exactamente una dimensión.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2440">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb6b2-2441">Objeto que se va a quitar de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2441">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2442">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2442">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2443">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2443">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2444">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2444">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb6b2-2445"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2445">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="cb6b2-2446">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2446">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2447"><see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2447">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb6b2-2448">Índice del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2448">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2449">Quita el elemento de la interfaz <see cref="T:System.Collections.IList" /> que se encuentra en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2449">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2450">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2451">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2451">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb6b2-2452">índice no es un índice válido para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2452">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb6b2-2453"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2453">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="cb6b2-2454">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2454">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2455"><see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2455">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="cb6b2-2456">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2456">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2457">Objeto que compara el objeto actual y <c>other</c>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2457">An object that compares the current object and <c>other</c>.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2458">Determina si el objeto de colección actual precede o sigue a otro objeto en el criterio de ordenación, o aparece en la misma posición que él.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2458">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-2459">Un entero que indica la relación del objeto de la colección actual con otros, tal y como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2459">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span></span>  
  
 <span data-ttu-id="cb6b2-2460"><list type="table"><listheader><term> Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2460"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="cb6b2-2461"></term><description> Descripción</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2461"></term><description> Description</span></span>  
  
 <span data-ttu-id="cb6b2-2462"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2462"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="cb6b2-2463"></term><description> La instancia actual precede a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2463"></term><description> The current instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2464"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2464"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="cb6b2-2465"></term><description> La instancia actual y <paramref name="other" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2465"></term><description> The current instance and <paramref name="other" /> are equal.</span></span>  
  
 <span data-ttu-id="cb6b2-2466"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2466"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="cb6b2-2467"></term><description> La instancia actual es posterior a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2467"></term><description> The current instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2468">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2468">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2469">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2469">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="cb6b2-2470">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2470">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="cb6b2-2471">Objeto que determina si la instancia actual y <c>other</c> son iguales.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2471">An object that determines whether the current instance and <c>other</c> are equal.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2472">Determina si un objeto especificado es igual a la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2472">Determines whether an object is equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="cb6b2-2473">Es <see langword="true" /> si los dos objetos son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2473"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2474">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2474">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2475">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2475">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="cb6b2-2476">Objeto que calcula el código hash del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2476">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2477">Devuelve un código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2477">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="cb6b2-2478">Código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2478">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2479">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2479">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb6b2-2480">Solo se puede utilizar cuando la instancia de <xref:System.Array> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2480">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TrueForAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TrueForAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrueForAll(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TrueForAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb6b2-2481">Tipo de los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2481">The type of the elements of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="cb6b2-2482">Matriz <see cref="T:System.Array" /> unidimensional de base cero en la que se van a comprobar las condiciones.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2482">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span></span></param>
        <param name="match"><span data-ttu-id="cb6b2-2483">El predicado que define las condiciones que se van a comprobar en los elementos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2483">The predicate that defines the conditions to check against the elements.</span></span></param>
        <summary><span data-ttu-id="cb6b2-2484">Determina si cada elemento de la matriz cumple las condiciones definidas por el predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2484">Determines whether every element in the array matches the conditions defined by the specified predicate.</span></span></summary>
        <returns>
          <span data-ttu-id="cb6b2-2485"><see langword="true" /> si cada elemento de <paramref name="array" /> cumple las condiciones definidas por el predicado especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2485"><see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cb6b2-2486">Si no hay ningún elemento en la matriz, el valor devuelto es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2486">If there are no elements in the array, the return value is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb6b2-2487">El <xref:System.Predicate%601> es un delegado a un método que devuelve`true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2487">The <xref:System.Predicate%601> is a delegate to a method that returns`true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="cb6b2-2488">Los elementos de `array` se pasan individualmente a la <xref:System.Predicate%601>, y se detiene el procesamiento cuando el delegado devuelve `false` para cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2488">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when the delegate returns `false` for any element.</span></span>  
  
 <span data-ttu-id="cb6b2-2489">Este método es una O (`n`) operación, donde `n` es el <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2489">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb6b2-2490">En el ejemplo siguiente se determina si el último carácter de cada elemento de una matriz de cadenas es un número.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2490">The following example determines whether the last character of each element in a string array is a number.</span></span> <span data-ttu-id="cb6b2-2491">Crea dos matrices de cadenas.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2491">It creates two string arrays.</span></span> <span data-ttu-id="cb6b2-2492">La primera arrayincludes ambas cadenas que finalicen con cadenas que finalizan con caracteres alfanuméricos y caracteres alfabéticos. La segunda matriz consta solo de cadenas que terminan por caracteres numéricos.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2492">The first arrayincludes both strings that end with alphabetic characters and strings that end with numeric characters.The second array consists only of strings that end with numeric characters.</span></span> <span data-ttu-id="cb6b2-2493">El ejemplo también define un `EndWithANumber` método cuya firma coincida con la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2493">The example also defines an `EndWithANumber` method whose signature matches the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="cb6b2-2494">En el ejemplo se pasa cada matriz a la <xref:System.Array.TrueForAll%2A> método junto con un delegado que representa el `EndsWithANumber` método.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2494">The example passes each array to the <xref:System.Array.TrueForAll%2A> method along with a delegate that represents the `EndsWithANumber` method.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall2.cs#2)]
 [!code-vb[System.Array.TrueForAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall2.vb#2)]  
  
 <span data-ttu-id="cb6b2-2495">El ejemplo siguiente es similar a la primera, salvo que se pasa la matriz de cadenas para el <xref:System.Array.TrueForAll%2A> método junto con una expresión lambda que determina si un elemento concreto de la matriz termina con la representación de cadena de un número.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2495">The following example is similar to the first, except that it passes the string array to the <xref:System.Array.TrueForAll%2A> method along with  a lambda expression that determines whether a particular array element ends with the string representation of a number.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall1.cs#1)]
 [!code-vb[System.Array.TrueForAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall1.vb#1)]  
  
 <span data-ttu-id="cb6b2-2496">En ambos casos, el <xref:System.Array.TrueForAll%2A> método `false` tan pronto como encuentra el primer elemento de matriz no termina en un número.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2496">In both cases, the <xref:System.Array.TrueForAll%2A> method returns `false` as soon as it encounters the first array element that does not end in a number.</span></span> <span data-ttu-id="cb6b2-2497">De lo contrario, devuelve `true` después de recorrer en iteración todos los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2497">Otherwise, it returns `true` after iterating all the elements in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb6b2-2498">Como se muestran en ambos ejemplos, en C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2498">As both examples show, in C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="cb6b2-2499">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2499">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb6b2-2500"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2500"><paramref name="array" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cb6b2-2501">O bien</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2501">-or-</span></span>  
  
 <span data-ttu-id="cb6b2-2502"><paramref name="match" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cb6b2-2502"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>