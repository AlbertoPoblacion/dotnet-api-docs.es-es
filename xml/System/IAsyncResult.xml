<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAsyncResult.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52276b9f380f6f18b31bcbd48397cc4ae980b77ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2276b9f380f6f18b31bcbd48397cc4ae980b77ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IAsyncResult">
          <source>Represents the status of an asynchronous operation.</source>
          <target state="translated">Representa el estado de una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is implemented by classes containing methods that can operate asynchronously.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaz está implementada por clases que contienen métodos que pueden operar de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>It is the return type of methods that initiate an asynchronous operation, such as <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, and it is passed to methods that conclude an asynchronous operation, such as <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Es el tipo de valor devuelto de los métodos que inician una operación asincrónica, como <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph>, y se pasa a los métodos que concluyen una operación asincrónica, como <ph id="ph2">&lt;xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> objects are also passed to methods invoked by <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegates when an asynchronous operation completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> objetos también se pasan a los métodos invocados por <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delega cuando se completa una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>An object that supports the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</source>
          <target state="translated">Objeto que admite el <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaz almacena información de estado para una operación asincrónica y proporciona un objeto de sincronización para permitir que los subprocesos se señaliza cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> class is the implementation of <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is returned by the <ph id="ph3">`BeginInvoke`</ph> method when you use a delegate to call a method asynchronously.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult&gt;</ph> clase es la implementación de <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> devuelto por la <ph id="ph3">`BeginInvoke`</ph> método cuando se usa un delegado para llamar a un método de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For a detailed description of how the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interface is used, see the <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> topic.</source>
          <target state="translated">Para obtener una descripción detallada de cómo el <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> interfaz se utiliza, consulte el <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A&gt;</ph> propiedad que se va a obtener un <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>y cómo esperar una llamada asincrónica en un delegado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> se señaliza cuando finaliza la llamada asincrónica y puede esperar a que termine llamando al método <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">El ejemplo consta de dos clases: la clase que contiene el método que se llama de forma asincrónica y la clase que contiene el <ph id="ph1">`Main`</ph> método que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAsyncResult">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener más información y más ejemplos de llamadas a métodos de forma asincrónica mediante delegados, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Obtiene un objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</source>
          <target state="translated">Esta propiedad devuelve el objeto que es el último parámetro del método que inicia una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The following code example demonstrates how the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> property is used to pass information to a callback method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo el <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A&gt;</ph> propiedad se utiliza para pasar información a un método de devolución de llamada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The last parameter of the <ph id="ph1">`BeginInvoke`</ph> method call is a format string, which the callback method uses to format an output message.</source>
          <target state="translated">El último parámetro de la <ph id="ph1">`BeginInvoke`</ph> llamada al método es una cadena de formato, el método de devolución de llamada se usa para dar formato a un mensaje de salida.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">El ejemplo consta de dos clases: la clase que contiene el método que se llama de forma asincrónica y la clase que contiene el <ph id="ph1">`Main`</ph> método que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca del funcionamiento de este ejemplo de devolución de llamada y más ejemplos de llamadas a métodos de forma asincrónica mediante delegados, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</source>
          <target state="translated">Implemente esta propiedad para permitir que el llamador de una operación asincrónica obtener un objeto definido por la aplicación especificado al principio de la operación.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncState">
          <source>This object can be used to pass state information for the asynchronous operation to an <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that you provide.</source>
          <target state="translated">Este objeto puede utilizarse para pasar información de estado para la operación asincrónica para una <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> proporcionada por usted.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Obtiene <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que se utiliza para esperar a que finalice una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que se utiliza para esperar a que finalice una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value allows the client to wait for an asynchronous operation to complete instead of polling <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> until the operation concludes.</source>
          <target state="translated">El valor devuelto permite que el cliente debe esperar para que una operación asincrónica para completarse en lugar de sondeo <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> hasta que finaliza la operación.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The return value can be used to perform a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> operation.</source>
          <target state="translated">El valor devuelto se puede utilizar para realizar un <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, o <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> operación.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The common language runtime supplies a number of waitable objects, such as <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, all of which mirror Win32 synchronization primitives.</source>
          <target state="translated">Common language runtime proporciona un número de objetos representan, como <ph id="ph1">&lt;xref:System.Threading.ManualResetEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph>, y <ph id="ph3">&lt;xref:System.Threading.Mutex&gt;</ph>, que reflejan las primitivas de sincronización de Win32.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property to get a <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>, and how to wait for an asynchronous call on a delegate.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> propiedad que se va a obtener un <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph>y cómo esperar una llamada asincrónica en un delegado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> is signaled when the asynchronous call completes, and you can wait for it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> se señaliza cuando finaliza la llamada asincrónica y puede esperar a que termine llamando al método <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">El ejemplo consta de dos clases: la clase que contiene el método que se llama de forma asincrónica y la clase que contiene el <ph id="ph1">`Main`</ph> método que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener más información y más ejemplos de llamadas a métodos de forma asincrónica mediante delegados, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>The object that implements <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> does not need to create the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> until the <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> property is read.</source>
          <target state="translated">El objeto que implementa <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> no es necesario crear la <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> hasta que el <ph id="ph3">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> propiedad es de lectura.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>It is the choice of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> implementer.</source>
          <target state="translated">Es la opción de la <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> implementador.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>However, if the implementer creates <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, it is the responsibility of the implementer to signal the <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that will terminate the wait at the appropriate time.</source>
          <target state="translated">Sin embargo, si el implementador crea <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph>, es responsabilidad del implementador para señalar el <ph id="ph2">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que finalizará la espera en el momento adecuado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For example, <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /&gt;</ph> finaliza la espera en nombre del llamador cuando se devuelve un método invocado de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Once created, <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> should be kept alive until the user calls the method that concludes the asynchronous operation.</source>
          <target state="translated">Una vez creada, <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> debe mantenerse activo hasta que el usuario llama al método que finaliza la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>At that time the object behind <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> can be discarded.</source>
          <target state="translated">A partir de ese objeto detrás de tiempo <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncWaitHandle" /&gt;</ph> puede descartarse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</source>
          <target state="translated">Los clientes que esperan para que la operación se complete (en lugar de sondeo) utilizan esta propiedad para obtener un objeto de sincronización que esperar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>When you use the <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, we recommend that you close the wait handle as soon as you are finished using it, by calling the <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> method.</source>
          <target state="translated">Cuando se usa el <ph id="ph1">&lt;see langword="BeginInvoke" /&gt;</ph> método de un delegado para llamar a un método de forma asincrónica y obtener un identificador de espera de resultante <ph id="ph2">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, le recomendamos que cierre el identificador de espera en cuanto termine de usarlo, mediante una llamada a la <ph id="ph3">&lt;see cref="M:System.Threading.WaitHandle.Close" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</source>
          <target state="translated">Si simplemente libera todas las referencias al identificador de espera, se liberan los recursos del sistema cuando la recolección de elementos no utilizados recupera el identificador de espera, pero la recolección de elementos no utilizados funciona más eficazmente cuando los objetos descartables se cierran o se eliminan de forma explícita.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.AsyncWaitHandle">
          <source>For more information, see the <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph> property.</source>
          <target state="translated">Para obtener más información, vea la propiedad <ph id="ph1">&lt;see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">Obtiene un valor que indica si se completó la operación asincrónica de forma sincrónica.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación asincrónica se completó de forma sincrónica; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>If the synchronous completion of the call is detected in the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</source>
          <target state="translated">Si se detecta la finalización de la llamada sincrónica en el <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegado, es probable que el subproceso que inició la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Most implementers of the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface will not use this property and should return <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La mayoría de los implementadores de la <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interfaz no utilizará esta propiedad y debe devolver <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, a task that is created with the <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> method will not complete if this property is not implemented correctly.</source>
          <target state="translated">A partir del <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, una tarea que se crea con el <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /&gt;</ph> método no se completará si esta propiedad no se implementa correctamente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>See <bpt id="p1">[</bpt>Application Compatibility in 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>compatibilidad de aplicaciones en 4.5<ept id="p1">](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>Use this property to determine if the asynchronous operation completed synchronously.</source>
          <target state="translated">Utilice esta propiedad para determinar si la operación asincrónica se ha completado sincrónicamente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.CompletedSynchronously">
          <source>For example, this property can return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an asynchronous I/O operation if the I/O request was small.</source>
          <target state="translated">Por ejemplo, esta propiedad puede devolver <ph id="ph1">&lt;see langword="true" /&gt;</ph> para una operación de E/S asincrónica si la solicitud de E/S es pequeña.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.IAsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">Obtiene un valor que indica si se completó la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación se ha completado; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>When this property is <ph id="ph1">`true`</ph>, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</source>
          <target state="translated">Cuando esta propiedad es <ph id="ph1">`true`</ph>, puede asumir es seguro descartar los recursos asignados para su uso por la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to discover when an asynchronous call completes.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> para detectar cuándo se completa una llamada asincrónica.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>In this case, the asynchronous call is made by using the <ph id="ph1">`BeginInvoke`</ph> method of a delegate.</source>
          <target state="translated">En este caso, la llamada asincrónica se realiza utilizando la <ph id="ph1">`BeginInvoke`</ph> método de un delegado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>You might use the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property to poll for completion when making the asynchronous call from a thread that services the user interface.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> propiedad que se va a sondear para la interfaz de usuario de servicios de finalización cuando realice la llamada asincrónica desde un subproceso que.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated">Sondear la finalización de una llamada asincrónica permite al subproceso de llamada seguirse ejecutando mientras la llamada asincrónica se ejecuta en un subproceso <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the <ph id="ph1">`Main`</ph> method that makes the call.</source>
          <target state="translated">El ejemplo consta de dos clases: la clase que contiene el método que se llama de forma asincrónica y la clase que contiene el <ph id="ph1">`Main`</ph> método que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>For more information and more examples of calling methods asynchronously by using delegates, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener más información y más ejemplos de llamadas a métodos de forma asincrónica mediante delegados, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Implementers will typically return the value of a private field or internal test as the value of this property.</source>
          <target state="translated">Los implementadores normalmente devolverá el valor de un campo privado o interno prueba como el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAsyncResult.IsCompleted">
          <source>Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</source>
          <target state="translated">Los clientes que sondean el estado de la operación (en lugar de esperar en un objeto de sincronización) utilizan esta propiedad para determinar el estado de la operación.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>