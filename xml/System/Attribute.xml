<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d670972821ff30f1662b041c4e0831dff268a546" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <TypeSignature Language="F#" Value="type Attribute = class&#xA;    interface _Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f6319-101">Representa la clase base para los atributos personalizados .</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6319-101">Represents the base class for custom attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-102">La <xref:System.Attribute> clase asocia información predefinida del sistema o definido por el usuario la información personalizada a un elemento de destino.</span><span class="sxs-lookup"><span data-stu-id="f6319-102">The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element.</span></span> <span data-ttu-id="f6319-103">Un elemento de destino puede ser un ensamblado, clase, constructor, delegado, enumeración, evento, campo, interfaz, método, módulo de archivo ejecutable portable, parámetro, propiedad, valor devuelto, struct u otro atributo.</span><span class="sxs-lookup"><span data-stu-id="f6319-103">A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</span></span>  
  
 <span data-ttu-id="f6319-104">Información proporcionada por un atributo es también conocida como metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-104">Information provided by an attribute is also known as metadata.</span></span> <span data-ttu-id="f6319-105">Se pueden examinar los metadatos en tiempo de ejecución por la aplicación para controlar cómo el programa procesa los datos, o antes de tiempo de ejecución mediante herramientas externas para controlar cómo su propia aplicación se procese o mantienen.</span><span class="sxs-lookup"><span data-stu-id="f6319-105">Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</span></span> <span data-ttu-id="f6319-106">Por ejemplo, .NET Framework predefine y utiliza los tipos de atributo para controlar el comportamiento de tiempo de ejecución, y algunos lenguajes de programación usan tipos de atributos para representar características del lenguaje no admitidas directamente el sistema de tipos comunes de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="f6319-106">For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</span></span>  
  
 <span data-ttu-id="f6319-107">Todos los tipos de atributos se derivan directa o indirectamente de la <xref:System.Attribute> clase.</span><span class="sxs-lookup"><span data-stu-id="f6319-107">All attribute types derive directly or indirectly from the <xref:System.Attribute> class.</span></span> <span data-ttu-id="f6319-108">Los atributos pueden aplicarse a cualquier elemento de destino; se pueden aplicar varios atributos al mismo elemento de destino; y los atributos pueden heredar un elemento derivado de un elemento de destino.</span><span class="sxs-lookup"><span data-stu-id="f6319-108">Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</span></span> <span data-ttu-id="f6319-109">Use la <xref:System.AttributeTargets> clase para especificar el elemento de destino al que se aplica el atributo.</span><span class="sxs-lookup"><span data-stu-id="f6319-109">Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.</span></span>  
  
 <span data-ttu-id="f6319-110">La <xref:System.Attribute> clase proporciona métodos útiles para recuperar y probar los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="f6319-110">The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes.</span></span> <span data-ttu-id="f6319-111">Para obtener más información sobre el uso de atributos, vea [aplicar atributos](~/docs/standard/attributes/applying-attributes.md) y [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="f6319-111">For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-112">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="f6319-112">The following code example demonstrates the usage of <xref:System.Attribute>.</span></span>  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f6319-113">Este tipo es seguro para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6319-113">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6319-114">Inicializa una nueva instancia de la clase <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-114">Initializes a new instance of the <see cref="T:System.Attribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-115">Este constructor solo se llama a las clases que derivan de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="f6319-115">This constructor is only called by classes that derive from <xref:System.Attribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-116">En el ejemplo de código siguiente se muestra la definición de un parámetro personalizado <xref:System.Attribute> clase con su constructor.</span><span class="sxs-lookup"><span data-stu-id="f6319-116">The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f6319-117">Objeto <see cref="T:System.Object" /> que se va a comparar con esta instancia o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-117">An <see cref="T:System.Object" /> to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-118">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-119">
            <see langword="true" /> si <paramref name="obj" /> y esta instancia son del mismo tipo y tienen valores de campo idénticos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-119">
              <see langword="true" /> if <paramref name="obj" /> and this instance are of the same type and have identical field values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f6319-120">El <xref:System.Attribute.Equals%2A> método usa la reflexión para recuperar la información de campo de la instancia actual y el `obj` argumento.</span><span class="sxs-lookup"><span data-stu-id="f6319-120">The <xref:System.Attribute.Equals%2A> method uses reflection to retrieve field information for the current instance and the `obj` argument.</span></span> <span data-ttu-id="f6319-121">A continuación, compara los valores de campo.</span><span class="sxs-lookup"><span data-stu-id="f6319-121">It then compares field values.</span></span> 

<span data-ttu-id="f6319-122">Al implementar su propia clase derivada de <xref:System.Attribute>, puede invalidar el <xref:System.Attribute.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6319-122">When implementing your own class derived from <xref:System.Attribute>, you can override the <xref:System.Attribute.Equals%2A> method.</span></span> <span data-ttu-id="f6319-123">Dado que usa la reflexión, se recomienda que lo haga.</span><span class="sxs-lookup"><span data-stu-id="f6319-123">Because it uses reflection, we recommend that you do so.</span></span> <span data-ttu-id="f6319-124">Sin embargo, la invalidación debe realizar una prueba estándar para la igualdad de referencia (los dos argumentos representan la misma instancia de objeto) o de igualdad de valores (los dos argumentos son del mismo tipo y tienen valores de campo idénticos).</span><span class="sxs-lookup"><span data-stu-id="f6319-124">However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</span></span> <span data-ttu-id="f6319-125">Si desea realizar una comparación personalizada para determinar si dos atributos son iguales, se puede reemplazar el <xref:System.Attribute.Match%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6319-125">If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <xref:System.Attribute.Match%2A> method.</span></span>   

## Examples  
 <span data-ttu-id="f6319-126">El siguiente ejemplo define dos parámetros personalizados <xref:System.Attribute> clases, a continuación, crea varios objetos de cada clase y usa el <xref:System.Attribute.Equals%2A> método compararlos.</span><span class="sxs-lookup"><span data-stu-id="f6319-126">The following example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and uses the <xref:System.Attribute.Equals%2A> method to compare them.</span></span>  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6319-127">Recupera un atributo personalizado de un tipo especificado aplicado a un ensamblado, módulo, miembro de tipo o parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-127">Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-128">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-128">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-129">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-129">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-130">Recupera un atributo personalizado aplicado a un ensamblado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-130">Retrieves a custom attribute applied to a specified assembly.</span>
          </span>
          <span data-ttu-id="f6319-131">Los parámetros especifican el ensamblado y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-131">Parameters specify the assembly and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-132">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-132">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-133">Use la <xref:System.Attribute.GetCustomAttributes%2A> método si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="f6319-133">Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-134">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-134">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-135">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-135">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-136">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-136">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-137">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-137">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-138">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-138">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-139">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-139">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-140">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-140">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-141">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-141">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-142">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-142">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-143">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-143">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-144">Recupera un atributo personalizado aplicado a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-144">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-145">Los parámetros especifican el miembro y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-145">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-146">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-146">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-147">Una coincidencia se determina de la misma manera que se describe en la sección de valor devuelto de <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f6319-147">A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-148">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad de tipos, métodos y constructores si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-148">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-149">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-149">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-150">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-150">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-151">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-151">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-152">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-152">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-153">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-153">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-154">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-154">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-155">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-155">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-156">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-156">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-157">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-157">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-158">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-158">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-159">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-159">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-160">Recupera un atributo personalizado aplicado a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-160">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-161">Los parámetros especifican el módulo y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-161">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-162">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-162">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-163">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-163">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-164">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-164">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-165">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-165">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-166">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-166">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-167">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-167">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-168">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-168">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-169">Recupera un atributo personalizado aplicado a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-169">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-170">Los parámetros especifican el parámetro de método y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-170">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-171">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-171">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-172">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-172">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-173">El ejemplo de código siguiente define un parámetro personalizado <xref:System.Attribute> clase y se aplica el atributo personalizado a un método en una clase derivada y la base de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="f6319-173">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="f6319-174">En el ejemplo se muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> método para devolver los atributos.</span><span class="sxs-lookup"><span data-stu-id="f6319-174">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-175">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-175">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-176">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-176">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-177">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-177">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-178">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-178">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-179">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-179">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-180">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-180">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-181">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-181">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-182">Recupera un atributo personalizado aplicado a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-182">Retrieves a custom attribute applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-183">Los parámetros especifican el ensamblado, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-183">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-184">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-184">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-185">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-185">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-186">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-186">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-187">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-187">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-188">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-188">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-189">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-189">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-190">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-190">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-191">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-191">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-192">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-192">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-193">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-193">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-194">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-194">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-195">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-195">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-196">Recupera un atributo personalizado aplicado a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-196">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-197">Los parámetros especifican el miembro, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-197">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-198">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-198">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-199">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad de tipos, métodos y constructores si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-199">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-200">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-200">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-201">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-201">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-202">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-202">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-203">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-203">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-204">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-204">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-205">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-205">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-206">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-206">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-207">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-207">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-208">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-208">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-209">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-209">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-210">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-210">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-211">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-211">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-212">Recupera un atributo personalizado aplicado a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-212">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-213">Los parámetros especifican el módulo, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-213">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-214">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-214">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-215">El ejemplo de código siguiente muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> toma método un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-215">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-216">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-216">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-217">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-217">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-218">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-218">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-219">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-219">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-220">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-220">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-221">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-221">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-222">Recupera un atributo personalizado aplicado a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-222">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-223">Los parámetros especifican el parámetro de método, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-223">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-224">Referencia al atributo personalizado único de tipo <paramref name="attributeType" /> que se aplica a <paramref name="element" />, o <see langword="null" /> si no existe dicho atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-224">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-225">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-225">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-226">El ejemplo de código siguiente define un parámetro personalizado <xref:System.Attribute> clase y se aplica el atributo personalizado a un método en una clase derivada y la base de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="f6319-226">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="f6319-227">En el ejemplo se muestra el uso de la <xref:System.Attribute.GetCustomAttribute%2A> método para devolver los atributos.</span><span class="sxs-lookup"><span data-stu-id="f6319-227">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-228">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-228">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-229">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-229">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="f6319-230">Se ha encontrado más de un atributo de los atributos solicitados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-230">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-231">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-231">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6319-232">Recupera una matriz de los atributos personalizados aplicados a un ensamblado, módulo, miembro de tipo o parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-232">Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-233">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-233">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-234">Recupera una matriz de los atributos personalizados aplicados a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-234">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-235">Un parámetro especifica el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-235">A parameter specifies the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-236">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-236">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-237">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-237">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-238">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-238">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-239">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-239">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-240">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-240">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-241">El ejemplo siguiente recupera los atributos personalizados que se encuentra en el ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="f6319-241">The following example retrieves the custom attributes found in the current assembly.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-242">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-242">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-243">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-243">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-244">Recupera una matriz de los atributos personalizados aplicados a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-244">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-245">Un parámetro especifica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-245">A parameter specifies the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-246">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-246">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-247">El valor devuelto contiene los atributos personalizados para los antecesores de `element`.</span><span class="sxs-lookup"><span data-stu-id="f6319-247">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-248">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad en métodos, constructores y tipos si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-248">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-249">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-249">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-250">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-250">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-251">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-251">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-252">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttribute%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-252">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-253">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-253">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-254">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-254">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-255">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-255">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-256">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-256">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-257">Recupera una matriz de los atributos personalizados aplicados a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-257">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-258">Un parámetro especifica el módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-258">A parameter specifies the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-259">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-259">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-260">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-260">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-261">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-261">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-262">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-262">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-263">Recupera una matriz de los atributos personalizados aplicados a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-263">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-264">Un parámetro especifica el parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-264">A parameter specifies the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-265">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-265">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-266">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-266">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-267">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-267">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-268">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-268">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-269">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-269">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-270">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-270">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-271">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-271">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-272">Recupera una matriz de los atributos personalizados aplicados a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-272">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-273">Los parámetros especifican el ensamblado y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-273">Parameters specify the assembly, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-274">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-274">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-275">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-275">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-276">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-276">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-277">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-277">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-278">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-278">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-279">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-279">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-280">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-280">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-281">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-281">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-282">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-282">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-283">Recupera una matriz de los atributos personalizados aplicados a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-283">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-284">Los parámetros especifican el ensamblado y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-284">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-285">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-285">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-286">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-286">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-287">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-287">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-288">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-288">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-289">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-289">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-290">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-290">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-291">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-291">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-292">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-292">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-293">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-293">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-294">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-294">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-295">Recupera una matriz de los atributos personalizados aplicados a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-295">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-296">Los parámetros especifican el miembro, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-296">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-297">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-297">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-298">El valor devuelto contiene los atributos personalizados para los antecesores de `element` si `inherit` es `true`.</span><span class="sxs-lookup"><span data-stu-id="f6319-298">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-299">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad en métodos, constructores y tipos si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-299">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-300">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-300">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-301">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-301">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-302">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-302">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-303">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-303">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-304">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-304">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-305">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-305">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-306">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-306">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-307">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-307">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="f6319-308">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-308">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-309">Recupera una matriz de los atributos personalizados aplicados a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-309">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-310">Los parámetros especifican el miembro y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-310">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-311">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="type" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-311">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-312">El valor devuelto contiene los atributos personalizados para los antecesores de `element`.</span><span class="sxs-lookup"><span data-stu-id="f6319-312">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-313">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad en métodos, constructores y tipos si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-313">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-314">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-314">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-315">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-315">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-316">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-316">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-317">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttribute%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-317">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-318">El valor de <paramref name="element" /> o <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-318">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-319">
            <paramref name="type" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-319">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-320">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-320">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-321">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-321">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-322">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-322">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-323">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-323">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-324">Recupera una matriz de los atributos personalizados aplicados a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-324">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-325">Los parámetros especifican el módulo y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-325">Parameters specify the module, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-326">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-326">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-327">El valor devuelto contiene los atributos personalizados para los antecesores de `element` si `inherit` es `true`.</span><span class="sxs-lookup"><span data-stu-id="f6319-327">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-328">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-328">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-329">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-329">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-330">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-330">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-331">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-331">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-332">Recupera una matriz de los atributos personalizados aplicados a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-332">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-333">Los parámetros especifican el módulo y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-333">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-334">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-334">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-335">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-335">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-336">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-336">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-337">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-337">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-338">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-338">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-339">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-339">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-340">Recupera una matriz de los atributos personalizados aplicados a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-340">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-341">Los parámetros especifican el parámetro de método y si se deben buscar los antecesores del parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-341">Parameters specify the method parameter, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-342">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-342">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-343">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-343">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-344">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-344">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-345">La propiedad <see cref="P:System.Reflection.ParameterInfo.Member" /> de <paramref name="element" /> es <see langword="null." /><see langword="" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-345">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is <see langword="null." /><see langword="" /></span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-346">
            <paramref name="element" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-346">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-347">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-347">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-348">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-348">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-349">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-349">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-350">Recupera una matriz de los atributos personalizados aplicados a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-350">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-351">Los parámetros especifican el parámetro de método y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-351">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-352">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-352">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-353">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-353">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-354">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-354">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-355">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-355">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-356">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-356">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-357">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-357">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-358">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-358">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-359">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-359">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-360">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-360">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-361">Recupera una matriz de los atributos personalizados aplicados a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-361">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-362">Los parámetros especifican el ensamblado, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-362">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-363">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-363">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-364">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-364">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-365">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-365">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-366">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-366">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-367">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-367">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-368">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-368">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-369">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-369">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-370">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-370">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-371">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-371">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="f6319-372">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-372">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-373">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-373">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-374">Recupera una matriz de los atributos personalizados aplicados a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-374">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-375">Los parámetros especifican el miembro, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-375">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-376">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="type" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-376">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-377">El valor devuelto contiene los atributos personalizados para los antecesores de `element` si `inherit` es `true`.</span><span class="sxs-lookup"><span data-stu-id="f6319-377">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-378">A partir de la versión 2.0 de .NET Framework, este método devuelve los atributos de seguridad en métodos, constructores y tipos si los atributos se almacenan en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-378">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="f6319-379">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-379">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-380">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-380">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-381">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-381">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-382">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-382">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-383">El valor de <paramref name="element" /> o <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-383">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-384">
            <paramref name="type" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-384">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-385">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-385">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-386">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-386">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-387">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-387">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-388">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-388">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-389">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-389">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-390">Recupera una matriz de los atributos personalizados aplicados a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-390">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-391">Los parámetros especifican el módulo, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-391">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-392">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-392">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-393">El valor devuelto contiene los atributos personalizados para los antecesores de `element` si `inherit` es `true`.</span><span class="sxs-lookup"><span data-stu-id="f6319-393">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-394">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-394">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-395">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-395">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-396">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-396">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-397">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-397">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-398">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-398">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-399">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-399">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-400">Recupera una matriz de los atributos personalizados aplicados a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-400">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-401">Los parámetros especifican el parámetro de método, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-401">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-402">Matriz de <see cref="T:System.Attribute" /> que contiene los atributos personalizados de tipo <paramref name="attributeType" /> aplicados a <paramref name="element" /> o una matriz vacía si no existen dichos atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-402">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-403">Si `element` representa un parámetro en un método de un tipo derivado, el valor devuelto incluye los atributos personalizados heredables aplicados en el mismo parámetro en los métodos invalidados bases.</span><span class="sxs-lookup"><span data-stu-id="f6319-403">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-404">En el ejemplo de código siguiente se muestra el uso de <xref:System.Attribute.GetCustomAttributes%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-404">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-405">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-405">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-406">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-406">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f6319-407">No se puede cargar un tipo de atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-407">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6319-408">Devuelve el código hash de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-408">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-409">Código hash de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-409">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-410">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.GetHashCode%2A> en el contexto de <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="f6319-410">The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.</span></span>  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="abstract member IsDefaultAttribute : unit -&gt; bool&#xA;override this.IsDefaultAttribute : unit -&gt; bool" Usage="attribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6319-411">Si se reemplaza en una clase derivada, indica si el valor de esta instancia es el valor predeterminado de la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-411">When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-412">
            <see langword="true" /> si esta instancia es el atributo predeterminado para la clase; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-412">
              <see langword="true" /> if this instance is the default attribute for the class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-413">La implementación predeterminada de esta clase devuelve `false`y deben implementarse en la clase derivada para ser útiles para esa clase.</span><span class="sxs-lookup"><span data-stu-id="f6319-413">The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.</span></span>  
  
 <span data-ttu-id="f6319-414">La implementación de este método en una clase derivada, compara el valor de esta instancia con un valor predeterminado estándar, a continuación, devuelve un valor booleano que indica si el valor de esta instancia es igual al valor estándar.</span><span class="sxs-lookup"><span data-stu-id="f6319-414">The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</span></span> <span data-ttu-id="f6319-415">El valor estándar normalmente se codifica como una constante en la implementación o almacena mediante programación en un campo usado por la implementación.</span><span class="sxs-lookup"><span data-stu-id="f6319-415">The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-416">En el siguiente ejemplo de código, se muestra el uso de <xref:System.Attribute.IsDefaultAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6319-416">The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.</span></span>  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f6319-417">Determina si alguno de los atributos personalizados de un tipo especificado se aplica a un ensamblado, módulo, miembro de tipo o parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-417">Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-418">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-418">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-419">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-419">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-420">Determina si alguno de los atributos personalizados se aplica a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-420">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-421">Los parámetros especifican el ensamblado y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-421">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-422">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-422">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-423">A partir de la versión 2.0 de .NET Framework, este método devuelve `true` si el ensamblado tiene atributos de seguridad almacenados en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-423">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="f6319-424">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-424">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-425">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-425">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-426">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-426">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-427">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-427">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-428">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-428">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-429">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-429">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-430">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método, tipo o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-430">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-431">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-431">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-432">Determina si alguno de los atributos personalizados se aplica a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-432">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-433">Los parámetros especifican el miembro y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-433">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-434">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-434">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-435">Los antecesores de `element` se buscan los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="f6319-435">The ancestors of `element` are searched for custom attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6319-436">A partir de la versión 2.0 de .NET Framework, este método devuelve `true` si un tipo, método o constructor tiene atributos de seguridad almacenados en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-436">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="f6319-437">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-437">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-438">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-438">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-439">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-439">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-440">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-440">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-441">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-441">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-442">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-442">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-443">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-443">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-444">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-444">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-445">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-445">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-446">Determina si se deben aplicar atributos personalizados de un tipo especificado a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-446">Determines whether any custom attributes of a specified type are applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-447">Los parámetros especifican el módulo y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-447">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-448">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-448">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-449">Los antecesores de `element` no se buscan los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="f6319-449">The ancestors of `element` are not searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-450">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-450">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-451">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-451">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-452">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-452">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-453">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-453">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-454">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-454">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-455">Determina si alguno de los atributos personalizados se aplica a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-455">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-456">Los parámetros especifican el parámetro de método y el tipo del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-456">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-457">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-457">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-458">Los antecesores de `element` se buscan los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="f6319-458">The ancestors of `element` are searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-459">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-459">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-460">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-460">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-461">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-461">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-462">Objeto derivado de la clase <see cref="T:System.Reflection.Assembly" /> que describe una colección reutilizable de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-462">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-463">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-463">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-464">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-464">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-465">Determina si alguno de los atributos personalizados se aplica a un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-465">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="f6319-466">Los parámetros especifican el ensamblado, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-466">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-467">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-467">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-468">A partir de la versión 2.0 de .NET Framework, este método devuelve `true` si el ensamblado tiene atributos de seguridad almacenados en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-468">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="f6319-469">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-469">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-470">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-470">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-471">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-471">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-472">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.Assembly> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-472">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-473">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-473">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-474">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-474">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-475">Objeto derivado de la clase <see cref="T:System.Reflection.MemberInfo" /> que describe un constructor, evento, campo, método, tipo o miembro de propiedad de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-475">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-476">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-476">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-477">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-477">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-478">Determina si alguno de los atributos personalizados se aplica a un miembro de un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-478">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="f6319-479">Los parámetros especifican el miembro, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-479">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-480">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-480">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f6319-481">A partir de la versión 2.0 de .NET Framework, este método devuelve `true` si un tipo, método o constructor tiene atributos de seguridad almacenados en el nuevo formato de metadatos.</span><span class="sxs-lookup"><span data-stu-id="f6319-481">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="f6319-482">Los ensamblados compilados con la versión 2.0 o versiones posterior usan el nuevo formato.</span><span class="sxs-lookup"><span data-stu-id="f6319-482">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="f6319-483">Ensamblados dinámicos y los ensamblados compilados con versiones anteriores de .NET Framework usan el formato XML antiguo.</span><span class="sxs-lookup"><span data-stu-id="f6319-483">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="f6319-484">Consulte [emitir atributos de seguridad declarativa](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="f6319-484">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-485">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.MemberInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-485">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-486">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-486">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-487">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-487">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f6319-488">
            <paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-488">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-489">Objeto derivado de la clase <see cref="T:System.Reflection.Module" /> que describe un archivo ejecutable portable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-489">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-490">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-490">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-491">Este parámetro se omite y no afecta al funcionamiento de este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-491">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-492">Determina si alguno de los atributos personalizados se aplica a un módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-492">Determines whether any custom attributes are applied to a module.</span>
          </span>
          <span data-ttu-id="f6319-493">Los parámetros especifican el módulo, el tipo de atributo personalizado que se va a buscar y una opción de búsqueda omitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-493">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-494">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-494">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-495">Este método omite la `inherit` parámetro y no busca los antecesores de `element` para los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="f6319-495">This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-496">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.Module> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-496">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-497">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-497">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-498">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-498">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6319-499">Objeto derivado de la clase <see cref="T:System.Reflection.ParameterInfo" /> que describe un parámetro de un miembro de una clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-499">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="f6319-500">Tipo, o tipo base, del atributo personalizado que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-500">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f6319-501">Si es <see langword="true" />, especifica que se busquen también los atributos personalizados de los antecesores de <c>element</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-501">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-502">Determina si alguno de los atributos personalizados se aplica a un parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-502">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="f6319-503">Los parámetros especifican el parámetro de método, el tipo del atributo personalizado que se va a buscar y si se deben buscar los antecesores del parámetro de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-503">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-504">Es <see langword="true" /> si se aplica a <paramref name="attributeType" /> un atributo personalizado de tipo <paramref name="element" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-504">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f6319-505">El ejemplo de código siguiente muestra el uso de <xref:System.Attribute.IsDefined%2A>, teniendo un <xref:System.Reflection.ParameterInfo> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="f6319-505">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6319-506">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-506">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6319-507">
            <paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-507">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="f6319-508">
            <paramref name="element" /> no es un método, constructor o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-508">
              <paramref name="element" /> is not a method, constructor, or type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Match : obj -&gt; bool&#xA;override this.Match : obj -&gt; bool" Usage="attribute.Match obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f6319-509">
            <see cref="T:System.Object" /> que se va a comparar con esta instancia de <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-509">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-510">Cuando se invalida en una clase derivada, devuelve un valor que indica si esta instancia es igual a un objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-510">When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6319-511">Es <see langword="true" /> si esta instancia es igual a <paramref name="obj" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-511">
              <see langword="true" /> if this instance equals <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-512">Este método determina si una <xref:System.Attribute> es igual a otro.</span><span class="sxs-lookup"><span data-stu-id="f6319-512">This method determines if one <xref:System.Attribute> equals another.</span></span> <span data-ttu-id="f6319-513">La implementación predeterminada es igual a <xref:System.Attribute.Equals%2A>, que determina si dos atributos son del mismo tipo y tienen los mismos valores de campo.</span><span class="sxs-lookup"><span data-stu-id="f6319-513">Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which determines whether two attributes are of the same type and have the same field values.</span></span>

 <span data-ttu-id="f6319-514">En general, el <xref:System.Attribute.Equals%2A> método está pensado para realizar una prueba estándar para la igualdad de referencia o valor.</span><span class="sxs-lookup"><span data-stu-id="f6319-514">In general, the <xref:System.Attribute.Equals%2A> method is intended to perform a standard test for reference or value equality.</span></span> <span data-ttu-id="f6319-515">Puede invalidar el <xref:System.Attribute.Match%2A> método cuando desee realizar una comparación personalizada de igualdad que se basa en algunos criterios distinta que dos instancias de atributos son del mismo tipo y tienen valores de identifical.</span><span class="sxs-lookup"><span data-stu-id="f6319-515">You can override the <xref:System.Attribute.Match%2A> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</span></span> <span data-ttu-id="f6319-516">Por ejemplo, puede invalidar el <xref:System.Attribute.Match%2A> método para comparar los atributos en los escenarios siguientes:</span><span class="sxs-lookup"><span data-stu-id="f6319-516">For example, you can override the <xref:System.Attribute.Match%2A> method to compare attributes in the following scenarios:</span></span>

 - <span data-ttu-id="f6319-517">Un atributo incluye un campo de bits, y considere la posibilidad de dos instancias de atributo igual si se establece un bit en particular.</span><span class="sxs-lookup"><span data-stu-id="f6319-517">An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</span></span> <span data-ttu-id="f6319-518">Por ejemplo, un `NumericDisplay` atributo podría incluir un campo de bits que indica qué formatos numéricos (por ejemplo, binaria, octal, decimal y hexadecimal) un cliente admite.</span><span class="sxs-lookup"><span data-stu-id="f6319-518">For example, a `NumericDisplay` attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</span></span> <span data-ttu-id="f6319-519">Invalidado <xref:System.Attribute.Match%2A> método podría considerar si son compatibles con el mismo formato numérico igual a dos instancias.</span><span class="sxs-lookup"><span data-stu-id="f6319-519">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they support the same numeric format.</span></span>

 - <span data-ttu-id="f6319-520">Un atributo incluye varios campos que contienen el mismo tipo de información o contiene una matriz en la que los valores pueden estar en cualquier orden.</span><span class="sxs-lookup"><span data-stu-id="f6319-520">An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</span></span> <span data-ttu-id="f6319-521">Por ejemplo, un `Author` atributo puede incluir varios campos para los nombres de autor.</span><span class="sxs-lookup"><span data-stu-id="f6319-521">For example, an `Author` attribute might include multiple fields for author names.</span></span> <span data-ttu-id="f6319-522">Invalidado <xref:System.Attribute.Match%2A> método puede considerar la posibilidad de dos instancias iguales si tienen los mismos autores independientemente de si cada campo es igual que el campo correspondiente.</span><span class="sxs-lookup"><span data-stu-id="f6319-522">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</span></span>    
 
 
## <a name="example"></a><span data-ttu-id="f6319-523">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="f6319-523">Example</span></span>  
 <span data-ttu-id="f6319-524">El ejemplo siguiente muestra el uso de <xref:System.Attribute.Match%2A> para crear un método de comparación personalizada para los valores de atributo.</span><span class="sxs-lookup"><span data-stu-id="f6319-524">The following example illustrates the use of <xref:System.Attribute.Match%2A> to create a custom comparison method for attribute values.</span></span> <span data-ttu-id="f6319-525">Si define un `AuthorsAttribute` que contiene internamente un `List<String>` que almacena los nombres de los autores.</span><span class="sxs-lookup"><span data-stu-id="f6319-525">If defines an `AuthorsAttribute` that internally contains a `List<String>` that stores authors' names.</span></span> <span data-ttu-id="f6319-526">Dado que los nombres pueden producirse en cualquier orden en la lista, reemplaza el <xref:System.Attribute.Match%2A> método para comparar los nombres de autor, independientemente de su posición en la lista.</span><span class="sxs-lookup"><span data-stu-id="f6319-526">Because the names can occur in any order in the list, it overrides the <xref:System.Attribute.Match%2A> method to compare author names regardless of their position in the list.</span></span> <span data-ttu-id="f6319-527">Tenga en cuenta la <xref:System.Attribute.Equals%2A> método, que realiza una prueba de igualdad de valor, devuelve resultados diferentes desde el <xref:System.Attribute.Match%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6319-527">Note the <xref:System.Attribute.Equals%2A> method, which performs a test for value equality, returns different results from the <xref:System.Attribute.Match%2A> method.</span></span>   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="f6319-528">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-528">Reserved for future use.</span>
          </span>
          <span data-ttu-id="f6319-529">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-529">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="f6319-530">Matriz que se pasa con los nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-530">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="f6319-531">Número de nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-531">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="f6319-532">Contexto de configuración regional en el que se van a interpretar los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-532">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="f6319-533">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-533">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-534">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-534">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-535">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f6319-535">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f6319-536">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f6319-536">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="f6319-537">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-537">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="f6319-538">Información de tipos que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-538">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="f6319-539">Identificador de la configuración regional de la información de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-539">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="f6319-540">Recibe un puntero al objeto de información de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-540">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-541">Obtiene la información de tipos de un objeto, que puede utilizarse para obtener la información de tipos de una interfaz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-541">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-542">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f6319-542">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f6319-543">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f6319-543">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="f6319-544">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-544">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="f6319-545">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-545">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-546">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-546">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-547">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f6319-547">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f6319-548">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f6319-548">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="f6319-549">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-549">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="f6319-550">Identifica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-550">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="f6319-551">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-551">Reserved for future use.</span>
          </span>
          <span data-ttu-id="f6319-552">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-552">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="f6319-553">Contexto de la configuración regional en que se interpretan los argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-553">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="f6319-554">Marcas que describen el contexto de la llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-554">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="f6319-555">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-555">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="f6319-556">Puntero a la ubicación donde se va a almacenar el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-556">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="f6319-557">Puntero a una estructura que contiene información de excepciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-557">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="f6319-558">Índice del primer argumento que tiene un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-558">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6319-559">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-559">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-560">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f6319-560">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f6319-561">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f6319-561">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="f6319-562">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-562">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f6319-563">Cuando se implementa en una clase derivada, obtiene un identificador único para este <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-563">When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f6319-564">
            <see cref="T:System.Object" /> que es un identificador único para el atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6319-564">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6319-565">Como se implementa, este identificador es simplemente el <xref:System.Type> del atributo.</span><span class="sxs-lookup"><span data-stu-id="f6319-565">As implemented, this identifier is merely the <xref:System.Type> of the attribute.</span></span> <span data-ttu-id="f6319-566">Sin embargo, se pretende que el identificador único se usa para identificar dos atributos del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="f6319-566">However, it is intended that the unique identifier be used to identify two attributes of the same type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6319-567">El siguiente ejemplo de código implementa la <xref:System.Attribute.TypeId%2A> propiedad en un parámetro personalizado <xref:System.Attribute> clase y se muestra su uso.</span><span class="sxs-lookup"><span data-stu-id="f6319-567">The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.</span></span>  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>