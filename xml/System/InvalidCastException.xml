<Type Name="InvalidCastException" FullName="System.InvalidCastException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7906f31b11cbf95ef8c0899681cd7c2ecc491667" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InvalidCastException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidCastException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidCastException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidCastException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidCastException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Excepción que se produce cuando la conversión no es válida o es explícita.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework admite la conversión automática de tipos derivados a sus tipos base y de vuelta al tipo derivado, así como de los tipos que presentan interfaces para objetos de interfaz y realizar. También incluye una variedad de mecanismos que admiten las conversiones personalizadas. Para obtener más información, consulte [conversión de tipos en .NET Framework](~/docs/standard/base-types/type-conversion.md).  
  
 Un <xref:System.InvalidCastException> excepción se produce cuando no se admite la conversión de una instancia de un tipo a otro tipo. Por ejemplo, cualquier intento de convertir un <xref:System.Char> valor a un <xref:System.DateTime> valor produce un <xref:System.InvalidCastException> excepción. Difiere de un <xref:System.OverflowException> excepción, lo que se produce cuando se admite una conversión de un tipo a otro, pero el valor del tipo de origen está fuera del intervalo del tipo de destino.  Un <xref:System.InvalidCastException> excepción se produce por error de desarrollador y no debe controlarse en un `try/catch` bloque; en su lugar, se debe eliminar la causa de la excepción.  
  
 Para obtener información sobre las conversiones compatibles con el sistema, consulte la <xref:System.Convert> clase. Para errores que se producen cuando el tipo de destino puede almacenar valores del tipo de origen, pero no es grande suficiente para almacenar un valor de origen específico, vea el <xref:System.OverflowException> excepción.  
  
> [!NOTE]
>  En muchos casos, el compilador del lenguaje detecta que no existe una conversión existe entre el tipo de origen y el tipo de destino y emite un error del compilador.  
  
 Algunas de las condiciones en las que se produce un intento de conversión un <xref:System.InvalidCastException> excepción se tratan en las secciones siguientes:  
  
 [Los tipos primitivos y IConvertible](#Primitive)   
 [El método Convert.ChangeType](#ChangeType)   
 [Las conversiones de restricción e implementaciones de IConvertible](#Narrowing)   
 [Convertir a tipo heredado](#Downcasting)   
 [Conversión de un objeto de interfaz](#Interface)   
 [Conversiones de cadenas](#String)   
 [Migración de Visual Basic 6.0](#Migration)  
  
 Para que una conversión de referencia explícita sea correcta, el valor de origen debe ser `null`, o el tipo de objeto al que hace referencia el argumento de origen debe poder convertirse al tipo de destino mediante una conversión de referencia implícita.  
  
 Las siguientes instrucciones de lenguaje intermedio (IL) producen un <xref:System.InvalidCastException> excepción:  
  
-   `castclass`  
  
-   `refanyval`  
  
-   `unbox`  
  
 <xref:System.InvalidCastException> utiliza HRESULT COR_E_INVALIDCAST, que tiene el valor 0 x 80004002.  
  
 Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.InvalidCastException>, consulte el <xref:System.InvalidCastException.%23ctor%2A> constructores.  
  
<a name="Primitive"></a>   
## <a name="primitive-types-and-iconvertible"></a>Los tipos primitivos y IConvertible  
 Directa o indirectamente llamar a un tipo primitivo <xref:System.IConvertible> implementación que no admite una conversión determinada. Por ejemplo, se intenta convertir un <xref:System.Boolean> valor a un <xref:System.Char> o un <xref:System.DateTime> valor a un <xref:System.Int32> produce una <xref:System.InvalidCastException> excepción. En el ejemplo siguiente se llama a ambos el <xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType> y <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> métodos para convertir un <xref:System.Boolean> valor a un <xref:System.Char>. En ambos casos, la llamada al método produce una <xref:System.InvalidCastException> excepción.  
  
 [!code-csharp[System.InvalidCastException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/iconvertible1.cs#2)]
 [!code-vb[System.InvalidCastException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/iconvertible1.vb#2)]  
  
 Dado que no se admite la conversión, no hay ninguna solución alternativa.  
  
<a name="ChangeType"></a>   
## <a name="the-convertchangetype-method"></a>El método Convert.ChangeType  
 Se ha llamado a la <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> no implementan el método para convertir un objeto de un tipo a otro, pero uno o ambos tipos de la <xref:System.IConvertible> interfaz.  
  
 En la mayoría de los casos, porque no se admite la conversión, no es ninguna solución alternativa. En algunos casos, una posible solución consiste en asignar manualmente los valores de propiedad del tipo de origen a propiedades similares de un tipo de destino.  
  
<a name="Narrowing"></a>   
## <a name="narrowing-conversions-and-iconvertible-implementations"></a>Las conversiones de restricción e implementaciones de IConvertible  
 Operadores de restricción definen las conversiones explícitas compatibles con un tipo.  Un operador de conversión en C# o la `CType` método de conversión de Visual Basic (si `Option Strict` está en) es necesario para realizar la conversión.  
  
 Sin embargo, si el tipo de origen ni el tipo de destino define un explícita o conversión entre los dos tipos de restricción y la <xref:System.IConvertible> implementación de uno o ambos tipos no es compatible con una conversión del tipo de origen al tipo de destino, un <xref:System.InvalidCastException> se produce la excepción.  
  
 En la mayoría de los casos, porque no se admite la conversión, no es ninguna solución alternativa.  
  
<a name="Downcasting"></a>   
## <a name="downcasting"></a>Convertir a tipo heredado  
 Va a convertir a tipo heredado, es decir, al intentar convertir una instancia de un tipo base en uno de sus tipos derivados. En el ejemplo siguiente, se intenta convertir un `Person` el objeto a un `PersonWithID` se produce un error de objeto.  
  
 [!code-csharp[System.InvalidCastException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/basetoderived1.cs#1)]
 [!code-vb[System.InvalidCastException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/basetoderived1.vb#1)]  
  
 Como se muestra en el ejemplo, la conversión en tipos inferiores se realiza correctamente sólo si la `Person` objeto fue creado por una conversión hacia arriba desde una `PersonWithId` el objeto a un `Person` objeto, o si la `Person` objeto es `null`.  
  
<a name="Interface"></a>   
## <a name="conversion-from-an-interface-object"></a>Conversión de un objeto de interfaz  
 Está intentando convertir un objeto de interfaz a un tipo que implementa esa interfaz, pero el tipo de destino no es del mismo tipo o una clase base del tipo desde el que se derivó originalmente el objeto de interfaz. En el ejemplo siguiente se inicia una <xref:System.InvalidCastException> excepción cuando intenta convertir un <xref:System.IFormatProvider> el objeto a un <xref:System.Globalization.DateTimeFormatInfo> objeto. La conversión se produce un error porque aunque el <xref:System.Globalization.DateTimeFormatInfo> la clase implementa la <xref:System.IFormatProvider> interfaz, el <xref:System.Globalization.DateTimeFormatInfo> objeto no está relacionado con la <xref:System.Globalization.CultureInfo> desde que se deriva el objeto de interfaz de clase.  
  
 [!code-csharp[System.InvalidCastException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/Interface1.cs#3)]
 [!code-vb[System.InvalidCastException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/Interface1.vb#3)]  
  
 Como la excepción indica mensaje, la conversión se realizaría correctamente sólo si el objeto de interfaz se convierte a una instancia del tipo original, en este caso un <xref:System.Globalization.CultureInfo>. La conversión también se realizará correctamente si el objeto de interfaz se convierte en una instancia de un tipo base del tipo original.  
  
<a name="String"></a>   
## <a name="string-conversions"></a>Conversiones de cadenas  
 Está intentando convertir un valor o un objeto en su representación de cadena mediante un operador de conversión en C#. En el ejemplo siguiente, tanto el intento de convertir un <xref:System.Char> valor en una cadena y el intento de convertir un número entero y cadena throw un <xref:System.InvalidCastException> excepción.  
  
 [!code-csharp[System.InvalidCastException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString1.cs#4)]  
  
> [!NOTE]
>  Con Visual Basic `CStr` operador para convertir un valor de un tipo primitivo a una cadena se realiza correctamente. La operación no produce un <xref:System.InvalidCastException> excepción.  
  
 Correctamente convertir una instancia de cualquier tipo en su representación de cadena, llame a su `ToString` método, como en el ejemplo siguiente se realiza.  El `ToString` método siempre está presente, desde el <xref:System.Object.ToString%2A> método se define mediante la <xref:System.Object> clase y, por tanto, se hereda o se reemplaza por todos los tipos administrados.  
  
 [!code-csharp[System.InvalidCastException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString2.cs#5)]  
  
<a name="Migration"></a>   
## <a name="visual-basic-60-migration"></a>Migración de Visual Basic 6.0  
 Va a actualizar una aplicación de Visual Basic 6.0 con una llamada a un evento personalizado en un control de usuario en Visual Basic. NET y un <xref:System.InvalidCastException> se produce una excepción con el mensaje, "la conversión especificada no es válida." Para eliminar esta excepción, cambie la línea de código en el formulario (como `Form1`)  
  
```  
Call UserControl11_MyCustomEvent(UserControl11, New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 y reemplácela con la siguiente línea de código:  
  
```  
Call UserControl11_MyCustomEvent(UserControl11(0), New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Exception.Message%2A> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "No se puede convertir del tipo de origen al tipo de destino". Este mensaje tiene en cuenta la referencia cultural del sistema actual.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.InvalidCastException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|La cadena del mensaje de error localizado.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje que describe el error.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" /> con el mensaje de error especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propiedad de la nueva excepción utilizando el `message` parámetro. Se pretende que el contenido de `message` sea inteligible. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.InvalidCastException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Cadena con el mensaje de error.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidCastException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidCastException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que contiene los datos del objeto serializados.</param>
        <param name="context">Información contextual acerca del origen o del destino.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" /> con datos serializados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia. Para obtener más información, consulte [serialización XML y SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de error que explica el motivo de la excepción.</param>
        <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>. El <xref:System.Exception.InnerException%2A> propiedad devuelve el mismo valor que se pasa al constructor, o bien devuelve `null` si el <xref:System.Exception.InnerException%2A> propiedad no proporciona el valor de la excepción interna al constructor.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.InvalidCastException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia a la excepción interna.|  
|<xref:System.Exception.Message%2A>|Cadena con el mensaje de error.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, int errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">El mensaje que indica la causa de que se haya producido la excepción.</param>
        <param name="errorCode">Valor del código de error (HRESULT) asociado a la excepción.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.InvalidCastException" /> con un mensaje y un código de error especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propiedad de la nueva excepción utilizando el `message` parámetro. Se pretende que el contenido de `message` sea inteligible. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.  
  
 Este constructor proporciona un valor HRESULT que es accesible para los herederos de la <xref:System.InvalidCastException> (clase), a través de la protegido <xref:System.Exception.HResult%2A> propiedad de la <xref:System.Exception> clase.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.InvalidCastException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Cadena con el mensaje de error.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>