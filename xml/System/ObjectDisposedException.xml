<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDisposedException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a71fbb299abe0b22f28b60b101f6c94366f6784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a71fbb299abe0b22f28b60b101f6c94366f6784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>The exception that is thrown when an operation is performed on a disposed object.</source>
          <target state="translated">Excepción que se produce cuando se realiza una operación en un objeto desechado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>An <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> is thrown when you try to access a member of an object that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, and that object has been disposed.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> se produce cuando intenta tener acceso a un miembro de un objeto que implementa el <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interfaz y ese objeto se ha eliminado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this exception is caused by one of the following conditions:</source>
          <target state="translated">Normalmente, esta excepción se debe a una de las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">Se ha llamado a un objeto <ph id="ph1">`Dispose`</ph> método y está intentando obtener acceso a un miembro de instancia que obtiene o establece el estado del objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> that is thrown when you try to reset the frequency of timer notifications after you call the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra la <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> que se produce al intentar restablecer la frecuencia de las notificaciones de temporizador después de llamar a la <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Close`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">Se ha llamado a un objeto <ph id="ph1">`Close`</ph> método y está intentando obtener acceso a un miembro de instancia que obtiene o establece el estado del objeto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Often, the <ph id="ph1">`Close`</ph> method provides a type's public implementation of the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A menudo, el <ph id="ph1">`Close`</ph> método proporciona una implementación pública de un tipo de la <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method multiple times.</source>
          <target state="translated">Se ha llamado a un objeto <ph id="ph1">`Dispose`</ph> método varias veces.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this doesn’t throw an exception.</source>
          <target state="translated">Normalmente, esto no produce una excepción.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>However, depending on how a type implements <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, it may not allow multiple calls to <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">No obstante, dependiendo de cómo se implementa un tipo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, no puede permitir que varias llamadas a <ph id="ph2">`Dispose`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>In most cases, this exception results from developer error.</source>
          <target state="translated">En la mayoría de los casos, esta excepción da como resultado de error de desarrollador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Instead of handling the error in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block, you should correct the error, typically by reinstantiating the object.</source>
          <target state="translated">En lugar de controlar el error en un <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> bloque, debe corregir el error, normalmente por reinstantiating el objeto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example demonstrates an error that causes the <ph id="ph1">`ObjectDisposedException`</ph> exception to be thrown.</source>
          <target state="translated">En el ejemplo siguiente se muestra un error que provoca la <ph id="ph1">`ObjectDisposedException`</ph> excepción.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>This code produces the following output:</source>
          <target state="translated">Este código genera el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">Cadena que contiene el nombre del objeto desechado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a string containing the name of the disposed object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> con una cadena que contiene el nombre del objeto desechado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property is initialized to a system-supplied message that describes the error and includes the <ph id="ph2">`objectName`</ph> parameter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> propiedad se inicializa en un mensaje proporcionado por el sistema que describe el error e incluye el <ph id="ph2">`objectName`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">El <ph id="ph1">`InnerException`</ph> propiedad de la nueva instancia se inicializa en <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">Si <ph id="ph1">`objectName`</ph> es <ph id="ph2">`null`</ph>, el <ph id="ph3">`Message`</ph> propiedad contiene sólo un mensaje de error.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene información contextual sobre el origen o el destino.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> con datos serializados.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica el motivo de la excepción.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Excepción que es la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, la excepción actual se produce en un bloque <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que controla la excepción interna.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> propiedad devuelve el mismo valor que se pasa al constructor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The name of the disposed object.</source>
          <target state="translated">Nombre del objeto desechado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica el motivo de la excepción.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with the specified object name and message.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> con el mensaje y el nombre del objeto especificado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">El <ph id="ph1">`InnerException`</ph> propiedad de la nueva instancia se inicializa en <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">Si <ph id="ph1">`objectName`</ph> es <ph id="ph2">`null`</ph>, el <ph id="ph3">`Message`</ph> propiedad contiene sólo un mensaje de error.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene información contextual sobre el origen o el destino.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the parameter name and additional exception information.</source>
          <target state="translated">Recupera el objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> con el nombre del parámetro y la información adicional de la excepción.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para proporcionar servicios de serialización.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> acción de seguridad: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.Message">
          <source>Gets the message that describes the error.</source>
          <target state="translated">Obtiene el mensaje que describe el error.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>A string that describes the error.</source>
          <target state="translated">Cadena que describe el error.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, the message includes the name of the object.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> propiedad no es <ph id="ph2">`null`</ph>, el mensaje incluye el nombre del objeto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esta propiedad invalida <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.ObjectName">
          <source>Gets the name of the disposed object.</source>
          <target state="translated">Obtiene el nombre del objeto desechado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">Cadena que contiene el nombre del objeto desechado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>If the current property is not <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the value of this property is included in the string returned by the <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property.</source>
          <target state="translated">Si la propiedad actual no es <ph id="ph1">`null`</ph> o <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, el valor de esta propiedad se incluye en la cadena devuelta por la <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>