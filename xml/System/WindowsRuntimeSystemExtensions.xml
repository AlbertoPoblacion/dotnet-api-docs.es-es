<Type Name="WindowsRuntimeSystemExtensions" FullName="System.WindowsRuntimeSystemExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="676d1214ee1c14d9eafe0ab9fda8c7f4fc6b18d5" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58455747" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeSystemExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeSystemExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeSystemExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona métodos de extensión para realizar conversiones entre tareas, y acciones y operaciones asincrónicas de Windows Runtime.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

El <xref:System.WindowsRuntimeSystemExtensions.AsTask%2A> sobrecargas del método de extensión le permiten usar .NET <xref:System.Threading.Tasks.Task> objeto para administrar una operación asincrónica del tiempo de ejecución de Windows.

El <xref:System.WindowsRuntimeSystemExtensions.AsAsyncAction%2A> método y el <xref:System.WindowsRuntimeSystemExtensions.AsAsyncOperation%2A> método le permiten pasar tareas de introducción a los métodos que toman acciones asincrónicas de Windows en tiempo de ejecución y las operaciones. Vea también los métodos de la <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> clase.

El <xref:System.WindowsRuntimeSystemExtensions.GetAwaiter%2A> métodos se usan los compiladores para implementar la <see langword="await" /> operación (<see langword="Await" /> en Visual Basic).

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsAsyncAction">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncAction AsAsyncAction (this System.Threading.Tasks.Task source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncAction AsAsyncAction(class System.Threading.Tasks.Task source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncAction (source As Task) As IAsyncAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncAction ^ AsAsyncAction(System::Threading::Tasks::Task ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncAction : System.Threading.Tasks.Task -&gt; Windows.Foundation.IAsyncAction" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncAction source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">La tarea iniciada.</param>
        <summary>Devuelve una acción asincrónica de Windows Runtime que representa una tarea iniciada.</summary>
        <returns>Instancia de <see cref="T:Windows.Foundation.IAsyncAction" /> que representa la tarea iniciada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.Threading.Tasks.Task>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Utilice este método cuando desee pasar de una tarea a un método en tiempo de ejecución de Windows que realiza una acción asincrónica.

El <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> clase proporciona métodos estáticos (`Shared` métodos en Visual Basic) que cree e inicie las acciones asincrónicas en tiempo de ejecución de Windows que representan tareas que pueden responder a las solicitudes de cancelación y notificar el progreso. 

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> es una tarea sin iniciar.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsAsyncOperation&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncOperation&lt;TResult&gt; AsAsyncOperation&lt;TResult&gt; (this System.Threading.Tasks.Task&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; AsAsyncOperation&lt;TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncOperation(Of TResult) (source As Task(Of TResult)) As IAsyncOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ AsAsyncOperation(System::Threading::Tasks::Task&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncOperation : System.Threading.Tasks.Task&lt;'Result&gt; -&gt; Windows.Foundation.IAsyncOperation&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncOperation source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo que devuelve el resultado.</typeparam>
        <param name="source">La tarea iniciada.</param>
        <summary>Devuelve una operación asincrónica de Windows Runtime que representa la tarea iniciada que devuelve un resultado.</summary>
        <returns>Instancia de <see cref="T:Windows.Foundation.IAsyncOperation`1" /> que representa la tarea iniciada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.Threading.Tasks.Task>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Utilice este método cuando desee pasar de una tarea que devuelve un resultado a un método en tiempo de ejecución de Windows que toma una operación asincrónica.

El <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> clase proporciona métodos estáticos (`Shared` métodos en Visual Basic) que cree e inicie las operaciones asincrónicas en tiempo de ejecución de Windows que representan tareas que devuelven resultados y pueden responder a las solicitudes de cancelación y notificar el progreso.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> es una tarea sin iniciar.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask (source As IAsyncAction) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Acción asincrónica.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncAction>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">Acción asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la acción asincrónica.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime que puede cancelarse.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncAction>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Acción asincrónica.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

Llamar a esta sobrecarga del método es equivalente a llamar a la <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})> sobrecarga del método de extensión y especificando <see langword="null" /> para el <paramref name="progress" /> parámetro. Esto es útil cuando no desea obtener informes de progreso de una acción que informa del progreso.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress), progress As IProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Acción asincrónica.</param>
        <param name="progress">Objeto que recibe las actualizaciones de progreso.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime que notifica el progreso.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Acción asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la acción asincrónica.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime que puede cancelarse.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

Llamar a esta sobrecarga del método es equivalente a llamar a la <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})> sobrecarga del método de extensión y especificando <see langword="null" /> para el <paramref name="progress" /> parámetro. Esto es útil cuando no desea obtener informes de progreso de una acción que informa del progreso.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Acción asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la acción asincrónica.</param>
        <param name="progress">Objeto que recibe las actualizaciones de progreso.</param>
        <summary>Devuelve una tarea que representa una acción asincrónica de Windows Runtime que notifica el progreso y puede cancelarse.</summary>
        <returns>Tarea que representa la acción asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult) (source As IAsyncOperation(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la operación asincrónica.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado y puede cancelarse.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncOperationWithProgress%602>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas. 

Llamar a esta sobrecarga del método es equivalente a llamar a la <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})> sobrecarga del método de extensión y especificando <see langword="null" /> para el <paramref name="progress" /> parámetro. Esto es útil cuando no desea obtener informes de progreso de una acción que informa del progreso.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress), progress As IProgress(Of TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <param name="progress">Objeto que recibe las actualizaciones de progreso.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado y notifica el progreso.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncOperationWithProgress%602>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la operación asincrónica.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado y puede cancelarse.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncOperationWithProgress%602>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas.

Llamar a esta sobrecarga del método es equivalente a llamar a la <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})> sobrecarga del método de extensión y especificando <see langword="null" /> para el <paramref name="progress" /> parámetro. Esto es útil cuando no desea obtener informes de progreso de una acción que informa del progreso.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Operación asincrónica.</param>
        <param name="cancellationToken">Un token que se puede utilizar para solicitar la cancelación de la operación asincrónica.</param>
        <param name="progress">Objeto que recibe las actualizaciones de progreso.</param>
        <summary>Devuelve una tarea que representa una operación asincrónica de Windows Runtime que devuelve un resultado, notifica el progreso y puede cancelarse.</summary>
        <returns>Tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncOperationWithProgress%602>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Use este método para obtener un <xref:System.Threading.Tasks.Task%601> objeto para una operación asincrónica de Windows en tiempo de ejecución. <xref:System.Threading.Tasks.Task%601> objetos simplifican la coordinación de las operaciones asincrónicas.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter (source As IAsyncAction) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncAction -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">La acción asincrónica para esperar.</param>
        <summary>Esta API es compatible con la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.</summary>
        <returns>Un objeto que espera la acción asincrónica especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo IAsyncAction. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">La acción asincrónica para esperar.</param>
        <summary>Devuelve un objeto que espera una acción asincrónica que informa del progreso.</summary>
        <returns>Un objeto que espera la acción asincrónica especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncActionWithProgress%601>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult) (source As IAsyncOperation(Of TResult)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <param name="source">Operación asincrónica que se espera.</param>
        <summary>Devuelve un objeto que espera una operación asincrónica que devuelve un resultado.</summary>
        <returns>Un objeto que espera la operación asincrónica especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo IAsyncOperation<TResult>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Tipo de objeto que devuelve el resultado de la operación asincrónica.</typeparam>
        <typeparam name="TProgress">Tipo de objeto que proporciona datos que indican el progreso.</typeparam>
        <param name="source">Operación asincrónica que se espera.</param>
        <summary>Devuelve un objeto que espera una operación asincrónica que informa del progreso y devuelve un resultado.</summary>
        <returns>Un objeto que espera la operación asincrónica especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:Windows.Foundation.IAsyncOperationWithProgress%602>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>