<Type Name="Action" FullName="System.Action">
  <TypeSignature Language="C#" Value="public delegate void Action();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void Action();" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><span data-ttu-id="8a7c8-101">Encapsula un método que no tiene parámetros y no devuelve un valor.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-101">Encapsulates a method that has no parameters and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a7c8-102">Puede utilizar a este delegado para pasar un método como parámetro sin declarar explícitamente un delegado personalizado.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-102">You can use this delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="8a7c8-103">El método encapsulado debe corresponder a la firma del método que está definida por el delegado.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-103">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="8a7c8-104">Esto significa que el método encapsulado debe tener ningún parámetro y no devuelve ningún valor.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-104">This means that the encapsulated method must have no parameters and no return value.</span></span> <span data-ttu-id="8a7c8-105">(En C#, el método debe devolver `void`.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-105">(In C#, the method must return `void`.</span></span> <span data-ttu-id="8a7c8-106">En Visual Basic, debe definirse mediante el `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="8a7c8-106">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="8a7c8-107">construcción.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-107">construct.</span></span> <span data-ttu-id="8a7c8-108">También puede ser un método que devuelve un valor que se pasa por alto.) Normalmente, este tipo de método se utiliza para realizar una operación.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-108">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a7c8-109">Para hacer referencia a un método que no tiene parámetros y devuelve un valor, use la interfaz genérica <xref:System.Func%601> delegar en su lugar.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-109">To reference a method that has no parameters and returns a value, use the generic <xref:System.Func%601> delegate instead.</span></span>  
  
 <span data-ttu-id="8a7c8-110">Cuando se usa el <xref:System.Action> delegado, no es necesario definir explícitamente un delegado que encapsula un procedimiento sin parámetros.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-110">When you use the <xref:System.Action> delegate, you do not have to explicitly define a delegate that encapsulates a parameterless procedure.</span></span> <span data-ttu-id="8a7c8-111">Por ejemplo, el código siguiente declara explícitamente un delegado denominado `ShowValue` y asigna una referencia a la `Name.DisplayToWindow` método a su instancia de delegado de instancia.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-111">For example, the following code explicitly declares a delegate named `ShowValue` and assigns a reference to the `Name.DisplayToWindow` instance method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action.Delegate#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.action.delegate/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action.Delegate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.action.delegate/cs/delegate.cs#1)]
 [!code-vb[System.Action.Delegate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.action.delegate/vb/delegate.vb#1)]  
  
 <span data-ttu-id="8a7c8-112">En el ejemplo siguiente se simplifica este código creando instancias de la <xref:System.Action> delegado en lugar de definir un nuevo delegado y asignarle un método con nombre explícitamente.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-112">The following example simplifies this code by instantiating the <xref:System.Action> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action/cpp/action.cpp#2)]
 [!code-csharp[System.Action#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Action.cs#2)]
 [!code-vb[System.Action#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/Action.vb#2)]  
  
 <span data-ttu-id="8a7c8-113">También puede usar el <xref:System.Action> delegar con métodos anónimos en C#, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-113">You can also use the <xref:System.Action> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="8a7c8-114">(Para obtener una introducción a los métodos anónimos, vea [métodos anónimos](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="8a7c8-114">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Anon.cs#3)]  
  
 <span data-ttu-id="8a7c8-115">También puede asignar una expresión lambda a una <xref:System.Action> delegar la instancia, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="8a7c8-115">You can also assign a lambda expression to an <xref:System.Action> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="8a7c8-116">(Para obtener una introducción a las expresiones lambda, vea [expresiones Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="8a7c8-116">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Lambda.cs#4)]
 [!code-vb[System.Action#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`1" />
  </Docs>
</Type>