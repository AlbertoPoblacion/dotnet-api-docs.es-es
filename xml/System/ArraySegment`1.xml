<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArraySegment`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5564bfcb761e88fd4cfd398e28d03b06bc68519e8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564bfcb761e88fd4cfd398e28d03b06bc68519e8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The type of the elements in the array segment.</source>
          <target state="translated">Tipo de los elementos del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Delimits a section of a one-dimensional array.</source>
          <target state="translated">Delimita una sección de una matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> is a wrapper around an array that delimits a range of elements in that array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> es un contenedor alrededor de una matriz que delimita un intervalo de elementos de la matriz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">Varios <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instancias pueden hacer referencia a la misma matriz original y se pueden superponer.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">La matriz original debe ser unidimensional y debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interface starting with the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph> structure did not implement this interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> implementa el <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interfaz a partir de la <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; en versiones anteriores de .NET Framework, el <ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph> estructura no implementa esta interfaz.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure is useful whenever the elements of an array will be manipulated in distinct segments.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura es útil cuando los elementos de una matriz se manipulará en segmentos diferentes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>You can pass an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents only a portion of an array as an argument to a method, rather than call a relatively expensive method like <ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph> to pass a copy of a portion of an array.</source>
          <target state="translated">Puede pasar un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objeto que representa una sola parte de una matriz como un argumento a un método, en lugar de llamada como un método relativamente costoso <ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph> para pasar una copia de una parte de una matriz.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>In a multithreaded app, you can use the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to have each thread operate on only a portion of the array.</source>
          <target state="translated">En una aplicación multiproceso, puede usar el <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura para que cada subproceso operan en una sola parte de la matriz.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For task-based asynchronous operations, you can use an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object to ensure that each task operates on a distinct segment of the array.</source>
          <target state="translated">Para operaciones asincrónicas basadas en tareas, puede usar un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objeto para asegurarse de que cada tarea opera sobre un segmento distinto de la matriz.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example divides an array into individual segments with up to ten elements.</source>
          <target state="translated">En el ejemplo siguiente se divide una matriz en segmentos individuales con un máximo de diez elementos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Each element in the segment is multiplied by its segment number.</source>
          <target state="translated">Cada elemento en el segmento se multiplica por el número de segmento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The result shows that using the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> class to manipulate elements in this way changes the values of its underlying array.</source>
          <target state="translated">El resultado muestra que el uso del <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> clase para manipular los elementos de esta manera cambia los valores de la matriz subyacente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Note, however, that although the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure can be used to divide an array into distinct segments, the segments are not completely independent of one another.</source>
          <target state="translated">Sin embargo, tenga en cuenta que aunque la <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura se pueden usar para dividir una matriz en distintos segmentos, los segmentos no son completamente independientes entre sí.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the entire original array, not a copy of the array; therefore, changes made to the array returned by the <ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property are made to the original array.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> propiedad devuelve la matriz original completa, no una copia de la matriz; por lo tanto, los cambios realizados en la matriz devuelta por la <ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> propiedad se realizan en la matriz original.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If this is undesirable, you should perform operations on a copy of the array, rather than an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents a portion of the array.</source>
          <target state="translated">Si no desea esto, debe realizar las operaciones en una copia de la matriz, en lugar de una <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objeto que representa una parte de la matriz.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph> method and the equality and inequality operators test for reference equality when they compare two <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph> método y los operadores de igualdad y desigualdad comprobar la igualdad de referencia cuando se comparan dos <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects to be considered equal, they must meet all of the following conditions:</source>
          <target state="translated">Para dos <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> igual de objetos que se va a tener en cuenta, deben cumplir todas las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Reference the same array.</source>
          <target state="translated">Hacer referencia a la misma matriz.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Begin at the same index in the array.</source>
          <target state="translated">Comienzan en el mismo índice de la matriz.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Have the same number of elements.</source>
          <target state="translated">Tienen el mismo número de elementos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If you want to retrieve an element by its index in the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object, you must cast it to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object and retrieve it or modify it by using the <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Si desea recuperar un elemento por su índice en el <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objeto, debe convertirlo a un <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objeto y recuperar o modificar mediante la <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example retrieves the element in an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that delimits a section of a string array.</source>
          <target state="translated">En el ejemplo siguiente se recupera el elemento en un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objeto que delimita una sección de una matriz de cadenas.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura a un método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure.</source>
          <target state="translated">Inicializa una nueva instancia de la estructura <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The array to wrap.</source>
          <target state="translated">Matriz que se va a ajustar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits all the elements in the specified array.</source>
          <target state="translated">Inicializa una nueva instancia de la estructura <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> que delimita todos los elementos de la matriz especificada.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits all the elements of <ph id="ph2">`array`</ph>.</source>
          <target state="translated">Este constructor crea un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> que delimita todos los elementos de <ph id="ph2">`array`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>That is, the <ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> is 0 and its <ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph> property is the length of <ph id="ph4">`array`</ph>.</source>
          <target state="translated">Es decir, el <ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> es 0 y su <ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph> propiedad es la longitud de <ph id="ph4">`array`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>To create an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits only part of an array, use the <ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">Para crear un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> que delimita solo una parte de una matriz, use el <ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">La matriz original debe ser unidimensional y debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">Varios <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instancias pueden hacer referencia a la misma matriz original y se pueden superponer.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura a un método.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The array containing the range of elements to delimit.</source>
          <target state="translated">Matriz que contiene el intervalo de elementos que se va a delimitar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The zero-based index of the first element in the range.</source>
          <target state="translated">Índice de base cero del primer elemento del intervalo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">Número de elementos del intervalo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits the specified range of the elements in the specified array.</source>
          <target state="translated">Inicializa una nueva instancia de la estructura <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> que delimita el intervalo de elementos establecido en la matriz especificada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">La matriz original debe ser unidimensional y debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">Varios <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instancias pueden hacer referencia a la misma matriz original y se pueden superponer.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura a un método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> y <ph id="ph2">&lt;paramref name="count" /&gt;</ph> no especifican un intervalo válido en <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Array">
          <source>Gets the original array containing the range of elements that the array segment delimits.</source>
          <target state="translated">Obtiene la matriz original que contiene el intervalo de elementos delimitados por el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The original array that was passed to the constructor, and that contains the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated">Matriz original pasada al constructor, que contiene el intervalo delimitado por <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the original array, not a copy of the array; therefore, changes made through the property are made directly to the original array.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> propiedad devuelve la matriz original, no una copia de la matriz; por lo tanto, los cambios realizados a través de la propiedad se realizan directamente a la matriz original.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> a un método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Count">
          <source>Gets the number of elements in the range delimited by the array segment.</source>
          <target state="translated">Obtiene el número de elementos del intervalo delimitado por el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The number of elements in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated">Número de elementos del intervalo delimitado por <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura a un método.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Determines whether two objects are equal.</source>
          <target state="translated">Determina si dos objetos son iguales.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>The structure to compare with the current instance.</source>
          <target state="translated">Estructura que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance.</source>
          <target state="translated">Determina si la estructura <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> especificada es igual a la instancia actual.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la estructura <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> especificada es igual a la instancia actual; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">Dos <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">Hacen referencia a la misma matriz.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They begin at the same index in the array.</source>
          <target state="translated">Comienzan en el mismo índice de la matriz.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">Tienen el mismo número de elementos.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>The object to be compared with the current instance.</source>
          <target state="translated">Objeto que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current instance.</source>
          <target state="translated">Determina si el objeto especificado es igual a la instancia actual.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is a <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure and is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto especificado es una estructura <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> y es igual a la instancia actual; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">Dos <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They reference the same array.</source>
          <target state="translated">Hacen referencia a la misma matriz.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They begin at the same index in the array.</source>
          <target state="translated">Comienzan en el mismo índice de la matriz.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They have the same number of elements.</source>
          <target state="translated">Tienen el mismo número de elementos.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>Returns the hash code for the current instance.</source>
          <target state="translated">Devuelve el código hash de la instancia actual.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Offset">
          <source>Gets the position of the first element in the range delimited by the array segment, relative to the start of the original array.</source>
          <target state="translated">Obtiene la posición del primer elemento del intervalo delimitado por el segmento de la matriz, respecto al inicio de la matriz original.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The position of the first element in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>, relative to the start of the original array.</source>
          <target state="translated">Posición del primer elemento del intervalo delimitado por <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>, respecto al inicio de la matriz original.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">El siguiente código de ejemplo se pasa un <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> estructura a un método.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The  structure on the left side of the equality operator.</source>
          <target state="translated">Estructura situada a la izquierda del operador de igualdad.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the equality operator.</source>
          <target state="translated">Estructura situada a la derecha del operador de igualdad.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are equal.</source>
          <target state="translated">Indica si dos estructuras de <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="a" /&gt;</ph> es igual a <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">Dos <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objetos se consideran iguales si se cumplen todas las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">Hacen referencia a la misma matriz.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They begin at the same index.</source>
          <target state="translated">Comienzan en el mismo índice.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">Tienen el mismo número de elementos.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the left side of the inequality operator.</source>
          <target state="translated">Estructura situada a la izquierda del operador de desigualdad.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the inequality operator.</source>
          <target state="translated">Estructura situada a la derecha del operador de desigualdad.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are unequal.</source>
          <target state="translated">Indica si dos estructuras <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> no son iguales.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is not equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="a" /&gt;</ph> no es igual a <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be unequal if they are of the same closed generic type but any of the following conditions is true:</source>
          <target state="translated">Dos <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objetos se consideran iguales si se han del mismo tipo genérico de cerrado, pero cualquiera de las siguientes condiciones es verdadera:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They do not reference the same array.</source>
          <target state="translated">No hacen referencia a la misma matriz.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have different starting indexes.</source>
          <target state="translated">Tienen distintos índices iniciales.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have a different number of elements.</source>
          <target state="translated">Tienen un número diferente de elementos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the array segment.</source>
          <target state="translated">Objeto que se agrega al segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to the array segment.</source>
          <target state="translated">Agrega un elemento al segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">El segmento de la matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Removes all items from the array segment.</source>
          <target state="translated">Quita todos los elementos del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>The array segment is read-only.</source>
          <target state="translated">El segmento de la matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">Objeto que se va a buscar en el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>Determines whether the array segment contains a specific value.</source>
          <target state="translated">Determina si el segmento de la matriz contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se encuentra en el segmento de la matriz; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the array segment.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Copies the elements of the array segment to an array, starting at the specified array index.</source>
          <target state="translated">Copia los elementos del segmento de la matriz en una matriz, comenzando en el índice especificado de la matriz.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array segment is greater than the available space from <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El número de elementos del segmento de la matriz de origen es mayor que el espacio disponible desde el <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> hasta el final de la <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph> no puede convertirse automáticamente al tipo del parámetro <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether the array segment  is read-only.</source>
          <target state="translated">Obtiene un valor que indica si el segmento de matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array segment is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el segmento de matrices es de solo lectura; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The object to remove from the array segment.</source>
          <target state="translated">Objeto que se va a quitar del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the array segment.</source>
          <target state="translated">Quita del segmento de la matriz la primera aparición de un objeto específico.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was successfully removed from the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se quitó correctamente del segmento de la matriz; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is not found in the array segment.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> no se encuentra en el segmento de matrices.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">El segmento de la matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the array segment.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">Un enumerador que se puede usar para iterar por el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">Objeto que se va a buscar en el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>Determines the index of a specific item in the array segment.</source>
          <target state="translated">Determina el índice de un elemento específico del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Devuelve el índice de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> si se encuentra en la lista; de lo contrario, devuelve -1.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero donde debe insertarse <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The object to insert into the array segment.</source>
          <target state="translated">Objeto que se va a insertar en el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>Inserts an item into the array segment at the specified index.</source>
          <target state="translated">Inserta un elemento en el segmento de la matriz en el índice especificado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">El segmento de la matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Índice de base cero del elemento que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtiene o establece el elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface, as the following example shows.</source>
          <target state="translated">Se puede utilizar solo cuando la <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instancia se convierte en un <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interfaz, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido para <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set and the array segment is read-only.</source>
          <target state="translated">La propiedad está establecida y el segmento de matrices es de solo lectura.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">Índice de base cero del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>Removes the array segment item at the specified index.</source>
          <target state="translated">Quita el elemento del segmento de la matriz situado en el índice especificado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The array segment is read-only.</source>
          <target state="translated">El segmento de la matriz es de solo lectura.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">Índice de base cero del elemento que se va a obtener.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets the element at the specified index of the array segment.</source>
          <target state="translated">Obtiene el elemento en el índice especificado del segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento en el índice especificado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> no es un índice válido para <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set.</source>
          <target state="translated">La propiedad está establecida.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through an array segment.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración un segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">Un enumerador que se puede usar para iterar por el segmento de la matriz.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>