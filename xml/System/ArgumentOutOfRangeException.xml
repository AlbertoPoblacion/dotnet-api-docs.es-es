<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="871ce8e626c522e32533cc316f2276a56cc23569" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="F#" Value="type ArgumentOutOfRangeException = class&#xA;    inherit ArgumentException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Excepción que se produce cuando el valor de un argumento está fuera del intervalo de valores permitido definido por el método invocado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ArgumentOutOfRangeException> excepción se produce cuando se invoca un método y al menos uno de los argumentos pasados al método no es `null` y contiene un valor no válido que no es un miembro del conjunto de valores esperado para el argumento. El <xref:System.ArgumentException.ParamName%2A> propiedad identifica el argumento no válido y el <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propiedad, si un valor está presente, identifica el valor no válido.  
  
 Normalmente, un <xref:System.ArgumentOutOfRangeException> da como resultado de error de desarrollador. En lugar de controlar la excepción en un `try` / `catch` bloque, debe eliminar la causa de la excepción o, si el argumento es devuelto por una llamada al método o introducido por el usuario antes de que se pasa al método que produce la excepción , debe validar argumentos antes de pasarlas al método.  
  
 <xref:System.ArgumentOutOfRangeException> es utilizada por:  
  
-   Las clases en el <xref:System.Collections> y <xref:System.IO> los espacios de nombres.  
  
-   La clase <xref:System.Array>.  
  
-   Métodos de manipulación de cadenas el <xref:System.String> clase.  
  
 Las condiciones en que un <xref:System.ArgumentOutOfRangeException> se produce la excepción son los siguientes:  
  
 Va a recuperar al miembro de una colección por su número de índice y el número de índice no es válido.  
 Esta es la causa más común de un <xref:System.ArgumentOutOfRangeException> excepción.   Normalmente, el número de índice es válido para uno de estos tres motivos:  
  
-   La colección no tiene ningún miembro, y el código se da por supuesto que sí lo haga. En el ejemplo siguiente se intenta recuperar el primer elemento de una colección que no tiene ningún elemento:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
     [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
     Para evitar la excepción, compruebe si la colección `Count` propiedad es mayor que cero antes de intentar recuperar los miembros, igual que el fragmento de código siguiente.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
     [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
     En algunos casos, esto puede ocurrir porque está intentando agregar un miembro a una colección mediante un índice que no existe, en lugar de mediante una llamada al método, como `Add`, que existe para este propósito.  En el ejemplo siguiente se intenta agregar un elemento a una colección mediante un índice no existente en lugar de llamar a la <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> método.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
     [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
     El fragmento de código siguiente corrige este error:  
  
     [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
     [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
-   Está intentando recuperar un elemento cuyo índice es negativo. Esto suele ocurrir porque se ha buscado en una colección para el índice de un elemento determinado y erróneamente se supone que la búsqueda es correcta. En el ejemplo siguiente, la llamada a la <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> método no puede encontrar una cadena igual a "Z" y lo devuelve -1. Sin embargo, se trata de un valor de índice no válido.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
     [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
     Para evitar la excepción, compruebe que la búsqueda es correcta, asegúrese de que el índice devuelto es mayor que o fragmento igual a cero antes de intentar recuperar el elemento de la colección, como el código siguiente realiza.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
     [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
-   Está intentando recuperar un elemento cuyo índice es igual al valor de la colección `Count` propiedad, como en el ejemplo siguiente se muestra.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
     [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
     Dado que las colecciones en .NET Framework usan indización de base cero, el primer elemento de la colección está en el índice 0 y el último elemento está en el índice `Count` - 1. Puede eliminar el error asegurándose de que tener acceso el último elemento en el índice `Count` - 1, como hace el código siguiente.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
     [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
 Está intentando realizar una operación de cadena mediante una llamada a un método de manipulación de cadenas, y el índice inicial no existe en la cadena.  
 Las sobrecargas de métodos, como por ejemplo, <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>, o <xref:System.String.Substring%2A?displayProperty=nameWithType> que le permiten especificar el índice inicial de la operación requiere que el índice sea una posición válida dentro de la cadena. Intervalo de índices válidos de 0 a <xref:System.String.Length%2A?displayProperty=nameWithType> - 1.  
  
 Hay cuatro causas comunes de este <xref:System.ArgumentOutOfRangeException> excepción:  
  
-   Está trabajando con una cadena vacía., o <xref:System.String.Empty?displayProperty=nameWithType>. Dado que su <xref:System.String.Length%2A?displayProperty=nameWithType> propiedad devuelve 0, cualquier intento de manipular por índice produce una <xref:System.ArgumentOutOfRangeException> excepción. El ejemplo siguiente, se define un `GetFirstCharacter` método que devuelve el primer carácter de una cadena. Si la cadena está vacía, como la cadena final que se pasa al método es, el método inicia una <xref:System.ArgumentOutOfRangeException> excepción.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
     [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
     Puede eliminar la excepción mediante la comprobación de si la cadena <xref:System.String.Length%2A?displayProperty=nameWithType> es mayor que cero o mediante una llamada a la <xref:System.String.IsNullOrEmpty%2A> método para asegurarse de que la cadena no es `null` ni estar vacío. El fragmento de código siguiente realiza la segunda opción. En este caso, si la cadena es `null` o está vacía, el `GetFirstCharacter` método devuelve u+0000.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
     [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
-   Manipula una cadena basándose en la posición de una subcadena dentro de esa cadena y no se pudo determinar si realmente se ha encontrado la subcadena.  
  
     En el ejemplo siguiente se extrae la segunda palabra de una frase de contraseña de dos palabras. Produce un <xref:System.ArgumentOutOfRangeException> excepción si la frase formada únicamente una palabra y, por tanto, no contiene un carácter de espacio incrustado.  Esto ocurre porque la llamada a la <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> método devuelve -1 para indicar que la búsqueda no se pudo y, a continuación, se pasa este valor no válido para el <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> método.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
     [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
     Para eliminar la excepción, validar el valor devuelto por el método de búsqueda de cadenas antes de llamar al método de manipulación de cadenas.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
     [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
-  
  
 Ha intentado extraer una subcadena que está fuera del intervalo de la cadena actual.  
 Los métodos que extraer subcadenas que todos requieren que se especifique la posición inicial de la subcadena y, de subcadenas que no continúan hasta el final de la cadena, el número de caracteres de la subcadena. Tenga en cuenta que esto no es el *índice* del último carácter de la subcadena.  
  
 Un <xref:System.ArgumentOutOfRangeException> excepción se produce normalmente en este caso porque ha calculado incorrectamente el número de caracteres de la subcadena.  Si usa un método de búsqueda como <xref:System.String.IndexOf%2A?displayProperty=nameWithType> para identificar iniciales y finales de posiciones de una subcadena:  
  
-   Si el carácter en la posición final no devuelve <xref:System.String.IndexOf%2A?displayProperty=nameWithType> debe incluirse en la subcadena, la posición final de la subcadena viene dada por la fórmula  
  
    ```  
    endIndex - startIndex + 1  
    ```  
  
-   Si el carácter en la posición final no devuelve <xref:System.String.IndexOf%2A?displayProperty=nameWithType> es que se excluirán de la subcadena, la posición final de la subcadena viene dada por la fórmula  
  
    ```  
    endIndex - startIndex   
    ```  
  
 En el ejemplo siguiente se define un `FindWords` método que utiliza el <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> método para identificar los caracteres de espacio y signos de puntuación marca en una cadena y devuelve una matriz que contiene las palabras que se encuentra en la cadena.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
 [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
 Se pasó un número negativo a un método con un argumento que requiera solo números positivos y cero o ha pasado un número negativo o cero para un método con un argumento que requiera solo números positivos.  
 Por ejemplo, el <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> método requiere que especifique el número de elementos en cada dimensión de una matriz bidimensional; los valores válidos para cada dimensión pueden oscilar entre 0 y <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Pero dado que el argumento de dimensión en el siguiente ejemplo tiene un valor negativo, el método produce una <xref:System.ArgumentOutOfRangeException> excepción.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
 [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
 Para corregir el error, asegúrese de que el valor del argumento no válido es positivo. Puede hacer esto proporcionando un valor válido, como el siguiente fragmento de código.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
 [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
 También puede validar la entrada y, si no es válido, realizar alguna acción. El fragmento de código siguiente muestra un mensaje de error en lugar de llamar al método.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)]
 [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
 Existe una condición de carrera en una aplicación multiproceso o tiene que ejecutar de forma asincrónica y que actualiza una matriz o colección de tareas.  
 En el ejemplo siguiente se usa un <xref:System.Collections.Generic.List%601> objeto para rellenar una colección de `Continent` objetos. Produce un <xref:System.ArgumentOutOfRangeException> excepción si el ejemplo se intenta mostrar los siete elementos de la colección antes de que la colección esté completa.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
 [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
 En este caso, se tiene acceso a dos recursos desde varios subprocesos:  
  
-   Colección de `continents`. Su <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> método se llama desde varios subprocesos. Además, el subproceso principal o primario se supone que la colección está totalmente rellena con siete elementos cuando se recorre en sus miembros.  
  
-   El `msg` cadena, que se concatena desde varios subprocesos.  
  
 Para corregir el error, asegúrese de que un estado compartido se tiene acceso de forma segura para subprocesos, como se indica a continuación.  
  
-   Si su aplicación usa un objeto de colección o matriz, considere el uso de una clase de colección segura para subprocesos, como los tipos en el <xref:System.Collections.Concurrent> espacio de nombres o la <xref:System.Collections.Immutable> versión fuera de banda.  
  
-   Asegúrese de que se acceda al estado compartido (es decir, los recursos que se puede tener acceso varios subprocesos) de una manera segura para subprocesos, por lo que solo un subproceso cada vez tenga acceso exclusivo a los recursos. Un gran número de clases, como <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, y <xref:System.Threading.Mutex>, están disponibles para sincronizar el acceso a los recursos. Para obtener más información, consulte [subprocesos](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87). Además, la compatibilidad de idioma está disponible a través del [bloqueo](~/docs/csharp/language-reference/keywords/lock-statement.md) instrucción en C# y la [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) construir en Visual Basic.  
  
 Las siguientes direcciones de ejemplo del <xref:System.ArgumentOutOfRangeException> excepción y los otros problemas del ejemplo anterior. Reemplaza el <xref:System.Collections.Generic.List%601> objeto con un <xref:System.Collections.Concurrent.ConcurrentBag%601> objeto para asegurarse de que el acceso a la colección es segura para subprocesos, utiliza un <xref:System.Threading.CountdownEvent> objeto para asegurarse de que el subproceso de la aplicación continúa después de otros subprocesos que se han ejecutado y utiliza un bloqueo para garantizar que solo un subproceso puede tener acceso a la `msg` variable a la vez.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
 [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
 <xref:System.ArgumentOutOfRangeException> utiliza HRESULT COR_E_ARGUMENTOUTOFRANGE, que tiene el valor 0 x 80131502.  
  
 Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.ArgumentOutOfRangeException>, consulte el <xref:System.ArgumentOutOfRangeException> constructores.  
  
   
  
## Examples  
 En el ejemplo siguiente se define una clase para contener información sobre un invitado. Si el invitado es menor de 21, años un <xref:System.ArgumentOutOfRangeException> se produce la excepción.  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.ArgumentException.Message%2A> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "Se necesita un número no negativo". Este mensaje tiene en cuenta la referencia cultural del sistema actual.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.ArgumentOutOfRangeException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|La cadena del mensaje de error localizado.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException paramName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nombre del parámetro que provoca esta excepción.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" /> con el nombre del parámetro que causa esta excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.ArgumentException.Message%2A> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "Se necesita un número no negativo". Este mensaje tiene en cuenta la referencia cultural del sistema actual.  
  
 Este constructor inicializa la propiedad <xref:System.ArgumentException.ParamName%2A> de la nueva instancia utilizando el parámetro `paramName`. Se pretende que el contenido de `paramName` sea inteligible.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.ArgumentOutOfRangeException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|La cadena vacía ("").|  
|<xref:System.ArgumentException.ParamName%2A>|La cadena de nombre de parámetro.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que contiene los datos del objeto serializados.</param>
        <param name="context">Objeto que describe el origen o destino de los datos serializados.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" /> con datos serializados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia. Para obtener más información, consulte [serialización XML y SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * Exception -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de error que explica la razón de esta excepción.</param>
        <param name="innerException">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" /> con el mensaje de error especificado y la excepción que causó esta excepción.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nombre del parámetro que provocó la excepción.</param>
        <param name="message">Mensaje que describe el error.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" /> con el nombre del parámetro que provoca esta excepción y un mensaje de error especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.ArgumentOutOfRangeException.Message%2A> propiedad de la nueva instancia utilizando el valor de la `message` parámetro. Se pretende que el contenido del parámetro `message` sea inteligible. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.  
  
 Este constructor inicializa la propiedad <xref:System.ArgumentException.ParamName%2A> de la nueva instancia utilizando el parámetro `paramName`. Se pretende que el contenido de `paramName` sea inteligible.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.ArgumentOutOfRangeException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Cadena con el mensaje de error.|  
|<xref:System.ArgumentException.ParamName%2A>|La cadena de nombre de parámetro.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * obj * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, actualValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nombre del parámetro que provocó la excepción.</param>
        <param name="actualValue">Valor del argumento que causa esta excepción.</param>
        <param name="message">Mensaje que describe el error.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ArgumentOutOfRangeException" /> con el nombre del parámetro, el valor del argumento y el mensaje de error especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.ArgumentException.ParamName%2A> propiedad de la nueva instancia utilizando el `paramName` parámetro, el <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propiedad mediante la `actualValue` parámetro y el <xref:System.ArgumentException.Message%2A> propiedad mediante el `message` parámetro. El contenido de la `paramName` y `message` parámetros pretende inteligible. El llamador de este constructor es necesario para asegurarse de que estas cadenas se han localizado para la referencia cultural del sistema actual.  
  
 El `actualValue` parámetro no se utiliza dentro de la biblioteca de clases de .NET Framework. Sin embargo, la <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propiedad se proporciona para que las aplicaciones pueden usar el valor del argumento disponible.  
  
 El `actualValue` parámetro contiene un valor no válido que se pasa al método y hace que se produzca esta excepción. Este valor se almacena en la <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propiedad y su representación de cadena se anexa a la cadena de mensaje incluida en el <xref:System.ArgumentOutOfRangeException.Message%2A> propiedad.  
  
 En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.ArgumentOutOfRangeException>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|Valor del argumento.|  
|<xref:System.Exception.InnerException%2A>|La referencia nula (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Cadena con el mensaje de error.|  
|<xref:System.ArgumentException.ParamName%2A>|La cadena de nombre de parámetro.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualValue : obj" Usage="System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del argumento que causa esta excepción.</summary>
        <value>
          <see langword="Object" /> que contiene el valor del parámetro que causó la <see cref="T:System.Exception" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para recuperar el argumento no válido.  
  
 El `ActualValue` propiedad devuelve el mismo valor que se pasó al constructor, o `null` si se ha proporcionado ningún valor.  
  
 El <xref:System.ArgumentOutOfRangeException.ActualValue%2A> se asigna un valor de propiedad en el momento de construcción de objetos. Si el <xref:System.ArgumentOutOfRangeException.ActualValue%2A> no es el valor de la propiedad `null`, una representación de cadena del valor se anexa a la cadena de mensaje almacenada por la <xref:System.ArgumentOutOfRangeException.Message%2A> propiedad.  
  
 El <xref:System.ArgumentOutOfRangeException.ActualValue%2A> no se utiliza la propiedad en la biblioteca de clases de .NET Framework. Incluye un valor null en todos los <xref:System.ArgumentOutOfRangeException> objetos iniciados por la biblioteca de clases de .NET Framework. El <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propiedad se proporciona para que las aplicaciones pueden usar el valor del argumento disponible.  
  
 Esta propiedad es de solo lectura y se debe invalidar solo para personalizar el contenido o el formato del valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="argumentOutOfRangeException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que contiene los datos del objeto serializados.</param>
        <param name="context">Objeto que describe el origen o destino de los datos serializados.</param>
        <summary>Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el valor del argumento no válido e información adicional de la excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> establece un <xref:System.Runtime.Serialization.SerializationInfo> objeto con todos los datos del objeto de excepción destinados a la serialización. Durante la deserialización, el objeto de excepción se reconstituye a partir del <xref:System.Runtime.Serialization.SerializationInfo> transmitida en la secuencia.  
  
 Para obtener más información, vea <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El objeto <paramref name="info" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para proporcionar servicios de serialización. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mensaje de error y la representación de cadena del valor del argumento no válido. Si el valor del argumento es nulo, obtiene sólo el mensaje de error.</summary>
        <value>Mensaje de texto para esta excepción. El valor de la propiedad adopta una de estas dos formas:  
  
 <list type="table"><listheader><term> Condición </term><description> valor </description></listheader><item><term> el <paramref name="actualValue" /> es <see langword="null" />.  </term><description> El <paramref name="message" /> cadena pasada al constructor.  </description></item><item><term> El <paramref name="actualValue" /> no es <see langword="null" />.  </term><description> El <paramref name="message" /> cadena anexada con la representación de cadena del valor del argumento no válido.  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad invalida <xref:System.ArgumentException.Message%2A>.  
  
 El mensaje de error debe describir los valores esperados del parámetro que causa esta excepción. Se debe traducir el mensaje de error.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>