<Type Name="TimeZoneInfo+TransitionTime" FullName="System.TimeZoneInfo+TransitionTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81dddef25ee4dee2eddd1f1de95cb86508ff77bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeZoneInfo.TransitionTime : IEquatable&lt;TimeZoneInfo.TransitionTime&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit TimeZoneInfo/TransitionTime extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.TimeZoneInfo/TransitionTime&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.TransitionTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeZoneInfo.TransitionTime&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.TransitionTime), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class TimeZoneInfo::TransitionTime : IEquatable&lt;TimeZoneInfo::TransitionTime&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+TransitionTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ofrece información sobre un cambio horario concreto, como el cambio del horario de verano al horario estándar o viceversa, en una zona horaria determinada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.TimeZoneInfo.TransitionTime> estructura para indicar cuándo se produce una transición desde el horario estándar al horario de verano o del horario de verano a la hora estándar. Esta estructura admite reglas de fecha fija y reglas de fecha flotante. Usar reglas de fecha fija para transiciones de tiempo que se producen en un día concreto de un mes concreto (por ejemplo, 2:00 A.M. 3 de noviembre). Usar reglas de fecha flotante para las transiciones de tiempo que se producen en un día concreto de una semana específica de un mes concreto (por ejemplo, 2:00 A.M. en el primer domingo de noviembre).  
  
 La tabla siguiente comparan las propiedades utilizadas en las transiciones de fecha fija y de fecha flotante:  
  
||Mes|Semana|Day|Tiempo|  
|-|-----------|----------|---------|----------|  
|Regla de fecha fija|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|N/D|<xref:System.TimeZoneInfo.TransitionTime.Day%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
|Regla de fecha flotante|<xref:System.TimeZoneInfo.TransitionTime.Month%2A>|<xref:System.TimeZoneInfo.TransitionTime.Week%2A>|<xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A>|<xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A>|  
  
 Para las transiciones de fecha fija y de fecha flotante, el <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> propiedad obtiene la hora en que se produce el cambio horario. Para las transiciones del estándar al horario de verano, trata el valor de hora estándar de la zona horaria. Para las transiciones del horario de verano al horario estándar, trata el valor de horario de verano de la zona horaria. Se trata de un <xref:System.DateTime> valor cuyo componente de fecha se omite; su año, mes y el valor de día siempre deben igual a 1.  
  
> [!NOTE]
>  Una instancia de la <xref:System.TimeZoneInfo.TransitionTime> estructura es inmutable. Una vez que se ha creado un objeto, no se puede modificar sus valores.  
  
 A <xref:System.TimeZoneInfo.TransitionTime> se puede crear el objeto mediante una llamada a la `static` (`Shared` en Visual Basic) <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> y <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> métodos para crear una regla de fecha flotante o fija, respectivamente. Las iniciales y finales <xref:System.TimeZoneInfo.TransitionTime> objetos, a continuación, se proporcionan como parámetros a la <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> método para crear una nueva regla de ajuste que incluye esta información en tiempo de transición.  
  
 El <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> y <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> propiedades de un <xref:System.TimeZoneInfo.AdjustmentRule> objeto devuelto una <xref:System.TimeZoneInfo.TransitionTime> objeto.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFixedDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFixedDateRule (DateTime timeOfDay, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFixedDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFixedDateRule (timeOfDay As DateTime, month As Integer, day As Integer) As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFixedDateRule(DateTime timeOfDay, int month, int day);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">Hora en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />.</param>
        <param name="month">Mes en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.Month" />.</param>
        <param name="day">Día del mes en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.Day" />.</param>
        <summary>Define un cambio horario que usa una regla de fecha fija (es decir, un cambio de hora que se produce en un día concreto de un mes concreto).</summary>
        <returns>Datos sobre el cambio horario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método crea una regla de fecha fija (es decir, un cambio horario que se produce en un día concreto de un mes concreto). Por ejemplo, un cambio horario que siempre se produce el 28 de octubre sigue una regla de fecha fija.  
  
 Para las transiciones del horario estándar al horario de verano, el `timeOfDay` argumento representa la hora de la transición de la hora de la zona horaria estándar. Para las transiciones del horario de verano al horario estándar, que representa la hora de la transición de la zona horaria horario de verano. Tenga en cuenta que se trata de un <xref:System.DateTime> valor cuyo year, month y los valores de fecha debe ser iguales 1.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea transiciones de zona horaria para una zona horaria imaginaria mediante una regla de fecha fija y una regla de fecha flotante. La regla de fecha fija define un ajuste de zona horaria que se inicia a las 2:00 A.M. 15 de marzo y finaliza a las 3:00 A.M. 15 de noviembre para los años 1900 a 1955.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="timeOfDay" /> tiene un componente de fecha que no es el predeterminado.  
  
 O bien  
  
 La propiedad <see cref="P:System.DateTime.Kind" /> del parámetro <paramref name="timeOfDay" /> no es <see cref="F:System.DateTimeKind.Unspecified" />.  
  
 O bien  
  
 El parámetro <paramref name="timeOfDay" /> no representa un número entero de milisegundos.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> es menor que 1 o mayor que 12.  
  
 O bien  
  
 <paramref name="day" /> es menor que 1 o mayor que 31.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFloatingDateRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.TransitionTime CreateFloatingDateRule (DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeZoneInfo/TransitionTime CreateFloatingDateRule(valuetype System.DateTime timeOfDay, int32 month, int32 week, valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::TransitionTime CreateFloatingDateRule(DateTime timeOfDay, int month, int week, DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeOfDay" Type="System.DateTime" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="week" Type="System.Int32" />
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="timeOfDay">Hora en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />.</param>
        <param name="month">Mes en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.Month" />.</param>
        <param name="week">Semana en que se produce el cambio horario. Su valor puede oscilar entre 1 y 5 (5 representa la última semana del mes). Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.Week" />.</param>
        <param name="dayOfWeek">Día de la semana en que se produce el cambio horario. Este parámetro corresponde a la propiedad <see cref="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />.</param>
        <summary>Define un cambio de hora que usa una regla de fecha flotante (es decir, un cambio de hora que se produce en un día concreto de una semana especificada de un mes concreto).</summary>
        <returns>Datos sobre el cambio horario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método crea una regla de fecha flotante (es decir, un cambio horario que se produce en un día concreto de una semana específica de un mes concreto). Por ejemplo, un cambio horario que se produce en el último domingo de octubre sigue una regla de fecha flotante.  
  
 Para las transiciones del horario estándar al horario de verano, el `timeOfDay` argumento representa la hora de la transición de la hora de la zona horaria estándar. Para las transiciones del horario de verano al horario estándar, que representa la hora de la transición de la zona horaria horario de verano. Tenga en cuenta que se trata de un <xref:System.DateTime> valor cuyo year, month y los valores de fecha debe ser iguales 1.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea transiciones de zona horaria para una zona horaria imaginaria mediante una regla de fecha fija y una regla de fecha flotante. La regla de fecha flotante define un ajuste de zona horaria que se inicia a las 2:00 A.M. en el último domingo de marzo y finaliza a las 3:00 A.M. en el cuarto domingo de octubre desde el 1956 en adelante.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#2)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="timeOfDay" /> tiene un componente de fecha que no es el predeterminado.  
  
 O bien  
  
 El parámetro <paramref name="timeOfDay" /> no representa un número entero de milisegundos.  
  
 O bien  
  
 La propiedad <see cref="P:System.DateTime.Kind" /> del parámetro <paramref name="timeOfDay" /> no es <see cref="F:System.DateTimeKind.Unspecified" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> es menor que 1 o mayor que 12.  
  
 O bien  
  
 <paramref name="week" /> es menor que 1 o mayor que 5.  
  
 O bien  
  
 El parámetro <paramref name="dayOfWeek" /> no es un miembro de la enumeración <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el día en que se produce el cambio horario.</summary>
        <value>Día en que se produce el cambio horario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.TimeZoneInfo.TransitionTime.Day%2A> propiedad devuelve un valor válido sólo si la <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> propiedad es `true`.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.Day%2A> valor de propiedad se corresponde con el valor de la `day` parámetro de la <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> método. Si su valor es mayor que el número de días del mes de la transición, se produce la transición en el último día del mes.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.Day%2A> propiedad indica el día del mes en el que se aplica una regla de fecha fija (por ejemplo, 15 de abril). En cambio, la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> propiedad indica el día de la semana en el que se aplica una regla de fecha flotante (por ejemplo, el segundo domingo de noviembre).  
  
   
  
## Examples  
 En el ejemplo siguiente se enumera las zonas horarias que se encuentran en el equipo local y muestra la información de tiempo de transición para todas las transiciones de fecha fija. La información horaria incluye el día en que se produce el cambio horario.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#3)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el día de la semana en que se produce el cambio horario.</summary>
        <value>Día de la semana en que se produce el cambio horario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> propiedad devuelve un valor válido sólo si la <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> propiedad es `false`.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> propiedad indica el día de la semana en el que se aplica una regla de fecha flotante (por ejemplo, el segundo domingo de noviembre). En cambio, la <xref:System.TimeZoneInfo.TransitionTime.Day%2A> propiedad indica el día del mes en el que se aplica una regla de fecha fija (por ejemplo, 15 de abril).  
  
   
  
## Examples  
 En el ejemplo siguiente se enumera las zonas horarias que se encuentran en el equipo local y muestra la información de tiempo de transición para todas las transiciones de fecha flotante. La información horaria incluye el día de la semana en que se produce el cambio horario.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si dos objetos <see cref="T:System.TimeZoneInfo.TransitionTime" /> tienen valores idénticos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se comparará con el objeto <see cref="T:System.TimeZoneInfo.TransitionTime" /> actual.</param>
        <summary>Determina si un objeto tiene valores idénticos al objeto <see cref="T:System.TimeZoneInfo.TransitionTime" /> actual.</summary>
        <returns>
          Es <see langword="true" /> si los dos objetos son iguales; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Igualdad se define como sigue: el `obj` parámetro debe ser un <xref:System.TimeZoneInfo.TransitionTime> objeto y deben tener valores de propiedad idénticos al actual <xref:System.TimeZoneInfo.TransitionTime> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra las llamadas a la <xref:System.TimeZoneInfo.TransitionTime.Equals%2A> método.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#1)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.TransitionTime other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeZoneInfo/TransitionTime other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::TransitionTime other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="other">Objeto que se va a comparar con la instancia actual.</param>
        <summary>Determina si el objeto <see cref="T:System.TimeZoneInfo.TransitionTime" /> actual tiene valores idénticos a un segundo objeto <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
        <returns>
          Es <see langword="true" /> si los dos objetos tienen valores de propiedad idénticos; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar si los dos <xref:System.TimeZoneInfo.TransitionTime> objetos son iguales, este método realiza una comparación de propiedad por propiedad. El método devuelve `true` solo si actual <xref:System.TimeZoneInfo.TransitionTime> objeto y el `other` objeto tienen valores idénticos para cada uno de los <xref:System.TimeZoneInfo.TransitionTime> seis valores de propiedad del objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra las llamadas a la <xref:System.TimeZoneInfo.TransitionTime.Equals%2A> método.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#7)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actúa como una función hash para los algoritmos hash y estructuras de datos como las tablas hash.</summary>
        <returns>Entero con signo de 32 bits que actúa como código hash para este objeto <see cref="T:System.TimeZoneInfo.TransitionTime" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedDateRule">
      <MemberSignature Language="C#" Value="public bool IsFixedDateRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedDateRule" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedDateRule As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedDateRule { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se produce el cambio de hora en una fecha y hora fija (por ejemplo, el 1 de noviembre) o en una fecha y hora flotante (como el último domingo de octubre).</summary>
        <value>
          Es <see langword="true" /> si la regla de cambio horario es de fecha fija; es <see langword="false" /> si la regla de cambio horario es de fecha variable.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una regla de fecha fija indica que la transición se produce en la misma fecha y hora de cada año en el que se aplica la regla de ajuste. Por ejemplo, un cambio horario que tiene lugar cada 3 de noviembre sigue una regla de fecha fija. Una regla de fecha flotante indica que la transición se produce en un día concreto de una semana específica de un mes concreto para cada año al que se aplica la regla de ajuste. Por ejemplo, un cambio horario que se produce el primer domingo de noviembre sigue una regla de fecha flotante.  
  
 El valor de la <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> propiedad determina qué propiedades de un <xref:System.TimeZoneInfo.TransitionTime> objeto tiene valores válidos. En la tabla siguiente indica las propiedades que se ven afectadas por el valor de la <xref:System.TimeZoneInfo.TransitionTime.IsFixedDateRule%2A> propiedad.  
  
|Propiedad TransitionTime|IsFixedDateRule = true|IsFixedDateRule = false|  
|-----------------------------|-----------------------------|------------------------------|  
|`Day`|Válido|No utilizado|  
|`DayOfWeek`|No utilizado|Válido|  
|`Week`|No utilizado|Válido|  
|`Month`|Válido|Válido|  
|`TimeOfDay`|Válido|Válido|  
  
   
  
## Examples  
 En el ejemplo siguiente se enumeran los tiempos de transición hacia y desde el horario de verano para todas las zonas horarias que están disponibles en el sistema local. Para las zonas horarias con reglas de fecha fija, muestra la información de tiempo de transición de las propiedades de la <xref:System.TimeZoneInfo.TransitionTime> objeto. Para las zonas horarias sin reglas de fecha fija, utiliza un <xref:System.Globalization.Calendar> objeto que representa el calendario actual del sistema para determinar las fechas de inicio y finalización reales de la transición. El ejemplo muestra los resultados en la consola.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/example1.cs#5)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/example1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mes en que se produce el cambio horario.</summary>
        <value>Mes en que se produce el cambio horario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores válidos para el <xref:System.TimeZoneInfo.TransitionTime.Month%2A> propiedad comprendidos entre 1 y 12.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.Month%2A> propiedad se utiliza para las reglas de fecha fija y de fecha flotante.  
  
   
  
## Examples  
 En el ejemplo siguiente se enumera las zonas horarias que se encuentran en el equipo local y muestra la información de tiempo de transición para todas las transiciones de fecha flotante. La información horaria incluye el mes en que se produce el cambio horario.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">Primer objeto que se va a comparar.</param>
        <param name="t2">Segundo objeto que se va a comparar.</param>
        <summary>Determina si dos objetos <see cref="T:System.TimeZoneInfo.TransitionTime" /> especificados son iguales.</summary>
        <returns>
          Es <see langword="true" /> si <paramref name="t1" /> y <paramref name="t2" /> tienen valores idénticos; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos <xref:System.TimeZoneInfo.TransitionTime> objetos son iguales si tienen valores idénticos para cada uno de sus seis propiedades. Si no se cumplen estas condiciones, significa que son distintas.  
  
 El método equivalente para este operador es <xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeZoneInfo.TransitionTime t1, TimeZoneInfo.TransitionTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeZoneInfo/TransitionTime t1, valuetype System.TimeZoneInfo/TransitionTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeZoneInfo.TransitionTime, t2 As TimeZoneInfo.TransitionTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeZoneInfo::TransitionTime t1, TimeZoneInfo::TransitionTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="t2" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="t1">Primer objeto que se va a comparar.</param>
        <param name="t2">Segundo objeto que se va a comparar.</param>
        <summary>Determina si dos objetos <see cref="T:System.TimeZoneInfo.TransitionTime" /> especificados no son iguales.</summary>
        <returns>
          Es <see langword="true" /> si <paramref name="t1" /> y <paramref name="t2" /> tienen algún valor de miembro distinto; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos <xref:System.TimeZoneInfo.TransitionTime> objetos no son iguales si tienen valores diferentes para cualquiera de sus seis propiedades. De lo contrario, son iguales.  
  
 El método equivalente para este operador es <xref:System.TimeZoneInfo.TransitionTime.Equals%28System.TimeZoneInfo.TransitionTime%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Objeto que inició la devolución de llamada. La funcionalidad de este parámetro aún no está implementada.</param>
        <summary>Se ejecuta cuando se completa la deserialización de un objeto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que se va a rellenar con datos.</param>
        <param name="context">Destino de esta serialización (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializarlo.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public DateTime TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfDay { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la hora, el minuto y el segundo en que se produce el cambio horario.</summary>
        <value>Hora del día en que se produce el cambio horario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para las transiciones del horario estándar al horario de verano, el <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> valor representa la hora de la transición de la hora de la zona horaria estándar. Para las transiciones del horario de verano al horario estándar, que representa la hora de la transición de la zona horaria horario de verano.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> propiedad define sólo el tiempo de un cambio de hora, pero no su fecha. La fecha se determina por la <xref:System.TimeZoneInfo.TransitionTime.Month%2A> y <xref:System.TimeZoneInfo.TransitionTime.Day%2A> propiedades para cambios de regla fija y por la <xref:System.TimeZoneInfo.TransitionTime.Month%2A>, <xref:System.TimeZoneInfo.TransitionTime.Week%2A>, y <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> propiedades para los cambios de regla flotante. El componente de fecha de este <xref:System.DateTime> valor se omite; el valor del año, mes y día siempre es 1.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.TimeOfDay%2A> propiedad se utiliza para las transiciones de fecha fija y de fecha flotante.  
  
   
  
## Examples  
 En el ejemplo siguiente se enumera las zonas horarias que se encuentran en el equipo local y muestra la información de tiempo de transición para esas zonas horarias con reglas de ajuste. La información horaria incluye la hora del día en que se produce el cambio horario.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#6)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Week">
      <MemberSignature Language="C#" Value="public int Week { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Week" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.TransitionTime.Week" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Week As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Week { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la semana del mes en que se produce el cambio horario.</summary>
        <value>Semana en que se produce el cambio horario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad solo se utiliza para cambios de tiempo con reglas de fecha flotante. Los valores válidos pueden oscilar entre 1 y 5.  
  
 El <xref:System.TimeZoneInfo.TransitionTime.Month%2A> propiedad define el mes en que se produce el cambio horario. El <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad determina la semana en que se produce la transición. El <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> propiedad define el día de la semana en que se produce la transición. El valor de la <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad se determina como se muestra en la tabla siguiente.  
  
|Si el valor de propiedad de la semana|Se produce la transición en|  
|-----------------------------------|------------------------------|  
|1|La primera aparición de la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> valor en <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|2|La segunda aparición de la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> valor en <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|3|La tercera repetición de la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> valor en <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|4|La cuarta repetición de la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> valor en <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
|5|La última aparición de la <xref:System.TimeZoneInfo.TransitionTime.DayOfWeek%2A> valor en <xref:System.TimeZoneInfo.TransitionTime.Month%2A>.|  
  
 Por ejemplo, si se produce una transición en el primer domingo de marzo, el valor de la <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad es 1. Si se produce en el último domingo de marzo, el valor de la <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad es 5.  
  
   
  
## Examples  
 En el ejemplo siguiente se enumera las zonas horarias que se encuentran en el equipo local y muestra la información de tiempo de transición para todas las transiciones de fecha flotante. La información horaria incluye la semana del mes en que se produce el cambio horario. El ejemplo también define un `WeekOfMonth` enumeración para mostrar una cadena que representa el valor ordinal de la <xref:System.TimeZoneInfo.TransitionTime.Week%2A> propiedad en lugar de un entero.  
  
 [!code-csharp[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/cs/System.TimeZone2.TransitionTime.Class.cs#4)]
 [!code-vb[System.TimeZone2.TransitionTime.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.TransitionTime.Class/vb/System.TimeZone2.TransitionTime.Class.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Day" />
        <altmember cref="P:System.TimeZoneInfo.TransitionTime.Month" />
      </Docs>
    </Member>
  </Members>
</Type>