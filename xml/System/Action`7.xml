<Type Name="Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28132e5f2f93e8914d07dce89906c83a8079cb8c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`7&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`7" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Tipo del primer parámetro del método que este delegado encapsula.</typeparam>
    <typeparam name="T2">Tipo del segundo parámetro del método que este delegado encapsula.</typeparam>
    <typeparam name="T3">Tipo del tercer parámetro del método que este delegado encapsula.</typeparam>
    <typeparam name="T4">Tipo del cuarto parámetro del método que este delegado encapsula.</typeparam>
    <typeparam name="T5">Tipo del quinto parámetro del método encapsulado por el delegado.</typeparam>
    <typeparam name="T6">Tipo del sexto parámetro del método encapsulado por el delegado.</typeparam>
    <typeparam name="T7">Tipo del séptimo parámetro del método encapsulado por el delegado.</typeparam>
    <param name="arg1">Primer parámetro del método que este delegado encapsula.</param>
    <param name="arg2">Segundo parámetro del método que este delegado encapsula.</param>
    <param name="arg3">Tercer parámetro del método que este delegado encapsula.</param>
    <param name="arg4">Cuarto parámetro del método que este delegado encapsula.</param>
    <param name="arg5">Quinto parámetro del método encapsulado por el delegado.</param>
    <param name="arg6">Sexto parámetro del método encapsulado por el delegado.</param>
    <param name="arg7">Séptimo parámetro del método encapsulado por el delegado.</param>
    <summary>Encapsula un método que tiene siete parámetros y no devuelve un valor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Action%607> delegado que se va a pasar un método como parámetro sin declarar explícitamente un delegado personalizado. El método encapsulado debe corresponder a la firma del método que está definida por el delegado. Esto significa que el método encapsulado debe tener siete parámetros que se le pasan por valor, y no debe devolver un valor. (En C#, el método debe devolver `void`. En Visual Basic, debe definirse mediante el `Sub`...`End Sub` construcción. También puede ser un método que devuelve un valor que se pasa por alto.) Normalmente, este tipo de método se utiliza para realizar una operación.  
  
> [!NOTE]
>  Para hacer referencia a un método que tiene siete parámetros y devuelve un valor, use la interfaz genérica <xref:System.Func%608> delegar en su lugar.  
  
 También puede usar el <xref:System.Action%607> delegar con métodos anónimos y expresiones lambda.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`8" />
  </Docs>
</Type>