<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTuple`4.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab885ea2eec2b81c809d01cea85fb697fcf1de80.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab885ea2eec2b81c809d01cea85fb697fcf1de80</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netframework-4.7,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The type of the value tuple's first element.</source>
          <target state="translated">El tipo del primer elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The type of the value tuple's second element.</source>
          <target state="translated">El tipo del segundo elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The type of the value tuple's third element.</source>
          <target state="translated">El tipo del tercer elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The type of the value tuple's fourth element.</source>
          <target state="translated">El tipo del cuarto elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`4">
          <source>Represents a value tuple with 4 components.</source>
          <target state="translated">Representa una tupla de valor con cuatro componentes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>A value tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Una valor de tupla es una estructura de datos que tiene un número específico y la secuencia de valores.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> structure represents a value tuple that has four elements.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> estructura representa una tupla de valor que contiene cuatro elementos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The value tuple types differ from the tuple types (such as <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>) as follows:</source>
          <target state="translated">Los tipos de tupla de valor difieren de los tipos de tupla (como <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>) como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>They are structures (value types) rather than classes (reference types).</source>
          <target state="translated">Únicamente son estructuras (tipos de valor) en lugar de clases (tipos de referencia).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>Members such as <ph id="ph1">&lt;xref:System.ValueTuple%604.Item1&gt;</ph> and   <ph id="ph2">&lt;xref:System.ValueTuple%604.Item2&gt;</ph> are fields rather than properties.</source>
          <target state="translated">Los miembros como <ph id="ph1">&lt;xref:System.ValueTuple%604.Item1&gt;</ph> y <ph id="ph2">&lt;xref:System.ValueTuple%604.Item2&gt;</ph> son campos en lugar de propiedades.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>Their fields are mutable rather than read-only.</source>
          <target state="translated">Los campos son mutables en lugar de solo lectura.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The value tuple types provide the runtime implementation that supports <bpt id="p1">[</bpt>tuples in C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.</source>
          <target state="translated">Los tipos de valor tupla proporcionan la implementación en tiempo de ejecución que admite <bpt id="p1">[</bpt>tuplas en C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> y struct tuplas en F #.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>In addition to creating a <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> instance by using language syntax, you can call the <ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph> factory method.</source>
          <target state="translated">Además de crear un <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> instancia mediante el uso de sintaxis del lenguaje, puede llamar a la <ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph> método de fábrica.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>Serialization and value tuples</source>
          <target state="translated">Tuplas de serialización y el valor</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> tipo no es serializable en .NET Core 1.x o 4.7 de .NET Framework y versiones anteriores.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> instances; whether or not a <ph id="ph2">&lt;xref:System.ValueTuple%604&gt;</ph> instance is serializable depends on the individual .NET Standard implementation.</source>
          <target state="translated">Además, el estándar. NET, incluido .NET 2.0 estándar, no impone la serialización de <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> instancias; si o no un <ph id="ph2">&lt;xref:System.ValueTuple%604&gt;</ph> instancia es serializable depende de la implementación de .NET estándar individual.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>To determine whether a <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> type is serializable on a particular .NET implementation, get a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.ValueTuple%604&gt;</ph> type and retrieve the value of its <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> property.</source>
          <target state="translated">Para determinar si un <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> tipo es serializable en una implementación concreta. NET, obtenga una <ph id="ph2">&lt;xref:System.Type&gt;</ph> objeto que representa el <ph id="ph3">&lt;xref:System.ValueTuple%604&gt;</ph> escriba y recuperar el valor de su <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`4">
          <source>For a list of serializable types in .NET Core and the .NET Framework, see <bpt id="p1">[</bpt>Binary Serialization<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</source>
          <target state="translated">Para obtener una lista de tipos serializables en .NET Core y .NET Framework, vea <bpt id="p1">[</bpt>serialización binaria<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value tuple's first element.</source>
          <target state="translated">El primer elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value tuple's second element.</source>
          <target state="translated">El segundo elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value tuple's third element.</source>
          <target state="translated">El tercer elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value tuple's fourth element.</source>
          <target state="translated">El cuarto elemento de la tupla de valor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.#ctor(`0,`1,`2,`3)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source>The tuple to compare with this instance.</source>
          <target state="translated">La tupla que se comparará con esta instancia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Compara la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual con una instancia de <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source>A signed integer that indicates the relative position of this instance and                      <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entero con signo que indica la posición relativa de esta instancia y <ph id="ph1">&lt;paramref name="other" /&gt;</ph> en el criterio de ordenación, tal como se muestra en la siguiente tabla.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Vaue</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descripción</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero negativo</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia precede a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> En el criterio de ordenación, esta instancia y <ph id="ph3">&lt;paramref name="other" /&gt;</ph> tienen la misma posición.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero positivo</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es posterior a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`4">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual es igual que un objeto especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual es igual que un objeto especificado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la instancia actual es igual que el objeto especificado; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>The                          <ph id="ph1">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">El <ph id="ph1">`obj`</ph> se considera que el argumento es igual a la instancia actual en las siguientes condiciones:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>It is a                                  <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> value type.</source>
          <target state="translated">Es un <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> un tipo de valor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Sus componentes son de los mismos tipos que las de la instancia actual.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Sus componentes son iguales que los de la instancia actual.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.Object)">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">La igualdad viene determinada por el comparador de igualdad predeterminado para cada componente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>The value tuple to compare with this instance.</source>
          <target state="translated">La tupla de valor que se comparará con esta instancia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance is equal to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Devuelve un valor que indica si la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual es igual que una instancia de <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified tuple; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la instancia actual es igual que la tupla especificada; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>The                          <ph id="ph1">`other`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">El <ph id="ph1">`other`</ph> se considera que el argumento es igual a la instancia actual en las siguientes condiciones:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Sus componentes son de los mismos tipos que las de la instancia actual.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Sus componentes son iguales que los de la instancia actual.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">La igualdad viene determinada por el comparador de igualdad predeterminado para cada componente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.GetHashCode">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Calcula el código hash de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.GetHashCode">
          <source>The hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">El código hash de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`4.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance's first element.</source>
          <target state="translated">Obtiene el valor del primer elemento de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`4.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance's second element.</source>
          <target state="translated">Obtiene el valor del segundo elemento de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`4.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance's third element.</source>
          <target state="translated">Obtiene el valor del tercer elemento de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`4.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance's fourth element.</source>
          <target state="translated">Obtiene el valor del cuarto elemento de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">Objeto que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Un objeto que proporciona reglas personalizadas para la comparación.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compara la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual con un objeto especificado mediante un comparador especificado y devuelve un entero que indica si el objeto actual es anterior, posterior o está en la misma posición que el objeto especificado en el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entero con signo que indica la posición relativa de esta instancia y <ph id="ph1">&lt;paramref name="other" /&gt;</ph> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Vaue</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descripción</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero negativo</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia precede a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> En el criterio de ordenación, esta instancia y <ph id="ph3">&lt;paramref name="other" /&gt;</ph> tienen la misma posición.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero positivo</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es posterior a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Un objeto que define el método que se usará para evaluar si los dos objetos son iguales.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Devuelve un valor que indica si la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual es igual que un objeto especificado basado en un método de comparación especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified objects; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la instancia actual es igual que los objetos especificados; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Un objeto cuyo método <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> calcula el código hash de la instancia de <ph id="ph2">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance by using a specified computation method.</source>
          <target state="translated">Calcula el código hash de la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual con un método de cálculo especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">Objeto que se va a comparar con la instancia actual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compara la instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> actual con un objeto especificado mediante un comparador especificado y devuelve un entero que indica si el objeto actual es anterior, posterior o está en la misma posición que el objeto especificado en el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entero con signo que indica la posición relativa de esta instancia y <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descripción</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero negativo</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia precede a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> En el criterio de ordenación, esta instancia y <ph id="ph3">&lt;paramref name="other" /&gt;</ph> tienen la misma posición.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entero positivo</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instancia es posterior a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Índice del elemento <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 3.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> puede oscilar entre 0 y 3.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Obtiene el valor del elemento <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Valor del elemento <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> que se encuentra en la posición especificada.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ValueTuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> propiedad es una implementación de interfaz explícita.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Para invocarlo, debe cast o convert el <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> el objeto a un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objeto de interfaz.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 3.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0 o mayor que 3.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de elementos de <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>4, the number of elements in a <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> object.</source>
          <target state="translated">4, el número de elementos de un objeto <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ValueTuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> propiedad es una implementación de interfaz explícita.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Para invocarlo, debe cast o convert el <ph id="ph1">&lt;xref:System.ValueTuple%604&gt;</ph> el objeto a un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objeto de interfaz.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Devuelve una cadena que representa el valor de esta instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`4.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph> instance.</source>
          <target state="translated">Representación de cadena de esta instancia de <ph id="ph1">&lt;see cref="T:System.ValueTuple`4" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, and <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.ValueTuple%604.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%604.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%604.Item3&gt;</ph>, and <ph id="ph4">&lt;xref:System.ValueTuple%604.Item4&gt;</ph> fields.</source>
          <target state="translated">La cadena devuelta por este método toma la forma (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, donde <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, y <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept> representan los valores de la <ph id="ph1">&lt;xref:System.ValueTuple%604.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%604.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%604.Item3&gt;</ph>, y <ph id="ph4">&lt;xref:System.ValueTuple%604.Item4&gt;</ph> campos.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`4.ToString">
          <source>If any of the field values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si alguno de los valores de campo es <ph id="ph1">`null`</ph>, se representa como <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>