<Type Name="Nullable" FullName="System.Nullable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd4d829ca703c4217352c4d59f34fd2c73afe2e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Nullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Nullable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Nullable" />
  <TypeSignature Language="VB.NET" Value="Public Class Nullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Nullable abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Admite un tipo de valor que se puede asignar como <see langword="null" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo se dice que aceptan valores NULL si se le puede asignar un valor o se puede asignar `null`, lo que significa que el tipo tiene ningún valor en absoluto. De forma predeterminada, todos los tipos de referencia, como <xref:System.String>, están que aceptan valores NULL, pero el valor de todos los tipos, como <xref:System.Int32>, no son.  
  
 En C# y Visual Basic, marcar un tipo de valor que acepta valores NULL mediante el `?` notación después el tipo de valor. Por ejemplo, `int?` en C# o `Integer?` en Visual Basic, declara un tipo de valor entero que se puede asignar `null`.  
  
 El <xref:System.Nullable> clase proporciona compatibilidad complementaria para el <xref:System.Nullable%601> estructura. La <xref:System.Nullable> clase admite la obtención del tipo subyacente de un tipo que acepta valores NULL y las operaciones de comparación e igualdad en pares de tipos que aceptan valores NULL cuyo subyacente de un tipo de valor no admite operaciones de comparación e igualdad genéricas.  
  
## <a name="boxing-and-unboxing"></a>Conversión boxing y conversión unboxing  
 Cuando se encuadra un tipo que acepta valores NULL, common language runtime la conversión boxing automáticamente el valor subyacente de la <xref:System.Nullable%601> el objeto, no el <xref:System.Nullable%601> propio objeto. Es decir, si la <xref:System.Nullable%601.HasValue%2A> propiedad es `true`, el contenido de la <xref:System.Nullable%601.Value%2A> propiedad es una conversión boxing. Si el `HasValue` propiedad es `false`, `null` es una conversión boxing. Cuando el valor subyacente de un tipo que acepta valores NULL es aplicar la conversión unboxing, common language runtime crea un nuevo <xref:System.Nullable%601> estructura inicializada en el valor subyacente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable`1" />
  </Docs>
  <Members>
    <Member MemberName="Compare&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Compare&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static int Compare(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo de valor subyacente de la <c>n1</c> y <c>n2</c> parámetros.</typeparam>
        <param name="n1">Un objeto <see cref="T:System.Nullable`1" />.</param>
        <param name="n2">Un objeto <see cref="T:System.Nullable`1" />.</param>
        <summary>Compara los valores relativos de dos objetos <see cref="T:System.Nullable`1" />.</summary>
        <returns>Entero que indica los valores relativos de los parámetros <paramref name="n1" /> y <paramref name="n2" />.  
  
 <list type="table"><listheader><term> Valor devuelto  
  
 </term><description> Descripción  
  
 </description></listheader><item><term> Menor que cero  
  
 </term><description> La propiedad <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> es <see langword="false" />, mientras que la propiedad <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n2" /> es <see langword="true" />.  
  
 O bien  
  
 Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="true" />, y el valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n1" /> es menor que el valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n2" />.  
  
 </description></item><item><term> Cero  
  
 </term><description> Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="false" />.  
  
 O bien  
  
 Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="true" /> y el valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n1" /> es igual al valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n2" />.  
  
 </description></item><item><term> Mayor que cero  
  
 </term><description> La propiedad <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> es <see langword="true" />, mientras que la propiedad <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n2" /> es <see langword="false" />.  
  
 O bien  
  
 Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="true" />, y el valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n1" /> es mayor que el valor de la propiedad <see cref="P:System.Nullable`1.Value" /> de <paramref name="n2" />.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Equals&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool Equals(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo de valor subyacente de la <c>n1</c> y <c>n2</c> parámetros.</typeparam>
        <param name="n1">Un objeto <see cref="T:System.Nullable`1" />.</param>
        <param name="n2">Un objeto <see cref="T:System.Nullable`1" />.</param>
        <summary>Indica si dos objetos <see cref="T:System.Nullable`1" /> especificados son iguales.</summary>
        <returns>
          Es <see langword="true" /> si el parámetro <paramref name="n1" /> es igual al parámetro <paramref name="n2" />; en caso contrario, es <see langword="false" />.  
  
 El valor devuelto depende de las propiedades <see cref="P:System.Nullable`1.HasValue" /> y <see cref="P:System.Nullable`1.Value" /> de los dos parámetros que se comparan.  
  
 <list type="table"><listheader><term> Valor devuelto  
  
 </term><description> Descripción  
  
 </description></listheader><item><term><see langword="true" /></term><description> Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="false" />.  
  
 O bien  
  
 Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="true" />, y las propiedades <see cref="P:System.Nullable`1.Value" /> de los parámetros son iguales.  
  
 </description></item><item><term><see langword="false" /></term><description> La propiedad <see cref="P:System.Nullable`1.HasValue" /> es <see langword="true" /> para un parámetro y <see langword="false" /> para el otro.  
  
 O bien  
  
 Las propiedades <see cref="P:System.Nullable`1.HasValue" /> de <paramref name="n1" /> y <paramref name="n2" /> son <see langword="true" />, y las propiedades <see cref="P:System.Nullable`1.Value" /> de los parámetros no son iguales.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type nullableType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type nullableType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (nullableType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ nullableType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullableType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="nullableType">Objeto <see cref="T:System.Type" /> que describe un tipo genérico cerrado que acepta valores NULL.</param>
        <summary>Devuelve el argumento de tipo subyacente del tipo que acepta valores NULL especificado.</summary>
        <returns>Argumento de tipo del parámetro <paramref name="nullableType" />, si el parámetro <paramref name="nullableType" /> es un tipo genérico cerrado que acepta valores NULL; de lo contrario, es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una definición de tipo genérico es una declaración de tipo, como <xref:System.Nullable%601>, que contiene una lista de parámetros de tipo y la lista de parámetros de tipo declara uno o más parámetros de tipo. Un tipo genérico cerrado es una declaración de tipo donde se especifica un tipo determinado para un parámetro de tipo.  
  
 Por ejemplo, si la `nullableType` parámetro es el tipo de `Nullable<Int32>` en C# (`Nullable(Of Int32)` en Visual Basic), el valor devuelto es el tipo de <xref:System.Int32> (es decir, el argumento de tipo del tipo genérico cerrado).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se define un método cuyo valor devuelto es de tipo <xref:System.Nullable%601> de <xref:System.Int32>. El ejemplo de código se utiliza el <xref:System.Nullable.GetUnderlyingType%2A> método para mostrar el argumento de tipo del valor devuelto.  
  
 [!code-csharp[system.nullable_GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/cs/gut.cs#1)]
 [!code-vb[system.nullable_GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/vb/gut.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nullableType" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>