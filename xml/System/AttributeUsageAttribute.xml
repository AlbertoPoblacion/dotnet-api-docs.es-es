<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c82c87b356ecafd83697520f6eee06e0ff81fae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e7efe-101">Especifica el uso de otra clase de atributo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7efe-101">Specifies the usage of another attribute class.</span>
      </span>
      <span data-ttu-id="e7efe-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7efe-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7efe-103">Cuando se define su propia clase de atributo, puede controlar la manera en que se utilizará colocando un <xref:System.AttributeUsageAttribute> en la clase de atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="e7efe-104">La clase de atributo indicado debe derivarse de <xref:System.Attribute>, directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="e7efe-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="e7efe-105">Clases de atributos tienen parámetros posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="e7efe-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="e7efe-106">Cada constructor público de una clase de atributo define una secuencia válida de parámetros posicionales para esa clase.</span><span class="sxs-lookup"><span data-stu-id="e7efe-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="e7efe-107">Parámetros con nombre se definen mediante campos no estáticos, públicos y de lectura y escritura, o propiedades de la clase de atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="e7efe-108">Las tres propiedades de <xref:System.AttributeUsageAttribute> se establecen mediante la definición de los parámetros siguientes:</span><span class="sxs-lookup"><span data-stu-id="e7efe-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="e7efe-109">Este parámetro posicional especifica los elementos del programa que se puede colocar en el atributo indicado.</span><span class="sxs-lookup"><span data-stu-id="e7efe-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="e7efe-110">El conjunto de todos los elementos posibles que se puede colocar un atributo se muestra en el <xref:System.AttributeTargets> enumeración.</span><span class="sxs-lookup"><span data-stu-id="e7efe-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="e7efe-111">Puede combinar varios <xref:System.AttributeTargets> valores mediante una operación OR bit a bit para obtener la combinación deseada de elementos de programa válido.</span><span class="sxs-lookup"><span data-stu-id="e7efe-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="e7efe-112">Este parámetro con nombre especifica si el atributo indicado se puede especificar más de una vez para un determinado elemento de programa.</span><span class="sxs-lookup"><span data-stu-id="e7efe-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="e7efe-113">Este parámetro con nombre especifica si el atributo indicado lo puede heredar clases derivadas y miembros de invalidación.</span><span class="sxs-lookup"><span data-stu-id="e7efe-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="e7efe-114">Para obtener más información sobre el uso de atributos, vea <xref:System.Attribute> y [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="e7efe-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">
          <span data-ttu-id="e7efe-115">Conjunto de valores combinados utilizando una operación OR bit a bit para indicar qué elementos de programa son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-115">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7efe-116">Inicializa una nueva instancia de la clase <see cref="T:System.AttributeUsageAttribute" /> con la lista especificada de <see cref="T:System.AttributeTargets" />, el valor de la propiedad <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> y el valor de la propiedad <see cref="P:System.AttributeUsageAttribute.Inherited" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-116">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7efe-117">Puede combinar varios <xref:System.AttributeTargets> valores mediante una operación OR bit a bit para obtener la combinación deseada de elementos de programa válido.</span><span class="sxs-lookup"><span data-stu-id="e7efe-117">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="e7efe-118">Para los valores de propiedad predeterminados, consulte la <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, y <xref:System.AttributeUsageAttribute.Inherited%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="e7efe-118">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7efe-119">La definición del atributo DispId ilustra el uso de una operación OR bit a bit para combinar varios <xref:System.AttributeTargets> valores.</span><span class="sxs-lookup"><span data-stu-id="e7efe-119">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7efe-120">Obtiene o establece un valor Boolean que indica si es posible especificar más de una instancia del atributo indicado para un único elemento del programa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-120">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7efe-121">
            <see langword="true" /> si es posible especificar más de una instancia; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-121">
              <see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7efe-122">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-122">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7efe-123">Un atributo que se pueden especificar más de una vez para un elemento de programa se denomina un atributo multiuso.</span><span class="sxs-lookup"><span data-stu-id="e7efe-123">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="e7efe-124">Un atributo que se puede especificar sólo una vez que se llama a un atributo de uso único.</span><span class="sxs-lookup"><span data-stu-id="e7efe-124">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7efe-125">Obtiene o establece un valor <see cref="T:System.Boolean" /> que determina si el atributo indicado se hereda por las clases derivadas y por los miembros de invalidación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-125">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7efe-126">Es <see langword="true" /> si el atributo lo pueden heredar clases derivadas y miembros de invalidación; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-126">
              <see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7efe-127">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-127">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7efe-128">El <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad determina:</span><span class="sxs-lookup"><span data-stu-id="e7efe-128">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="e7efe-129">Si las clases derivan de una clase base etiquetan con el atributo al que el <xref:System.AttributeUsageAttribute> se aplica el atributo heredan ese atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-129">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="e7efe-130">Si los métodos de las clases derivadas que reemplaza un método de clase base etiquetan con el atributo al que el <xref:System.AttributeUsageAttribute> se aplica el atributo heredan ese atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-130">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="e7efe-131">(Si una clase hereda a un miembro de clase base, también hereda los atributos aplicados a ese miembro.)</span><span class="sxs-lookup"><span data-stu-id="e7efe-131">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7efe-132">En el ejemplo siguiente se muestra la diferencia entre un atributo a la que un <xref:System.AttributeUsageAttribute> atribuir a un <xref:System.AttributeUsageAttribute.Inherited%2A> valor de propiedad de `true` se aplica y otra a la que <xref:System.AttributeUsageAttribute> atribuir a un <xref:System.AttributeUsageAttribute.Inherited%2A> el valor de propiedad `false` se aplica.</span><span class="sxs-lookup"><span data-stu-id="e7efe-132">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="e7efe-133">El ejemplo define dos atributos, `InheritedAttribute` y `NotInheritedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="e7efe-133">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="e7efe-134">Ambos atributos se pueden aplicar a las clases y métodos.</span><span class="sxs-lookup"><span data-stu-id="e7efe-134">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="e7efe-135">Dado que la <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad de la <xref:System.AttributeUsageAttribute> atributo aplicado a `InheritedAttribute` es `true`, se ha heredado por las clases derivadas y los miembros de las clases derivadas que invalidación el método de clase base.</span><span class="sxs-lookup"><span data-stu-id="e7efe-135">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="e7efe-136">Por otro lado, dado que la <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad de la <xref:System.AttributeUsageAttribute> atributo aplicado a `NotInheritedAttribute` es `false`, no lo heredan las clases derivadas y los miembros de las clases derivadas que invalidación el método de clase base.</span><span class="sxs-lookup"><span data-stu-id="e7efe-136">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="e7efe-137">En el ejemplo, a continuación, define dos clases base.</span><span class="sxs-lookup"><span data-stu-id="e7efe-137">The example then defines two  base classes.</span></span> <span data-ttu-id="e7efe-138">La primera, `BaseA`, tiene un único método, `MethodA`.</span><span class="sxs-lookup"><span data-stu-id="e7efe-138">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="e7efe-139">El segundo, `BaseB`, tiene un único método, `MethodB`.</span><span class="sxs-lookup"><span data-stu-id="e7efe-139">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="e7efe-140">`BaseA` y `MethodA` se etiquetan con la `InheritedAttribute` atributo, y `BaseB` y `MethodB` se etiquetan con la `NotInheritedAttribute` atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-140">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="e7efe-141">`DerivedA` hereda de `BaseA` e invalida su `MethodA` método.</span><span class="sxs-lookup"><span data-stu-id="e7efe-141">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="e7efe-142">`DerivedB` hereda de `BaseB` e invalida su `MethodB` método.</span><span class="sxs-lookup"><span data-stu-id="e7efe-142">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="e7efe-143">Como se muestra en el ejemplo, el salida `DerivedA` y `DerivedA.MethodA` heredan la `InheritedAttribute` atributo, pero `DerivedB` y `DerivedB.MethodB` no heredan la `NotInheritedAttribute` atributo.</span><span class="sxs-lookup"><span data-stu-id="e7efe-143">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7efe-144">Obtiene un conjunto de valores que identifican los elementos del programa a los que se puede aplicar el atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-144">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7efe-145">Uno o varios valores de <see cref="T:System.AttributeTargets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-145">One or several <see cref="T:System.AttributeTargets" /> values.</span>
          </span>
          <span data-ttu-id="e7efe-146">El valor predeterminado es <see langword="All" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7efe-146">The default is <see langword="All" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>