<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5aa8a678ded4e630cc838a54492c69dd7bbb5739" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433326" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica el uso de otra clase de atributo. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se define su propia clase de atributo, puede controlar la manera en que se utilizará colocando un <xref:System.AttributeUsageAttribute> en la clase de atributo. La clase de atributo indicado debe derivarse de <xref:System.Attribute>, directa o indirectamente.  
  
 Clases de atributos tienen parámetros posicionales y con nombre. Cada constructor público de una clase de atributo define una secuencia válida de parámetros posicionales para esa clase. Parámetros con nombre se definen mediante campos no estáticos, públicos y de lectura y escritura, o propiedades de la clase de atributo.  
  
 Las tres propiedades de <xref:System.AttributeUsageAttribute> se establecen mediante la definición de los parámetros siguientes:  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 Este parámetro posicional especifica los elementos del programa que se puede colocar en el atributo indicado. El conjunto de todos los elementos posibles que se puede colocar un atributo se muestra en el <xref:System.AttributeTargets> enumeración. Puede combinar varios <xref:System.AttributeTargets> valores mediante una operación OR bit a bit para obtener la combinación deseada de elementos de programa válido.  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 Este parámetro con nombre especifica si el atributo indicado se puede especificar más de una vez para un determinado elemento de programa.  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 Este parámetro con nombre especifica si el atributo indicado lo puede heredar clases derivadas y miembros de invalidación.  
  
 Para obtener más información sobre el uso de atributos, vea <xref:System.Attribute> y [atributos](~/docs/standard/attributes/index.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">Conjunto de valores combinados utilizando una operación OR bit a bit para indicar qué elementos de programa son válidos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.AttributeUsageAttribute" /> con la lista especificada de <see cref="T:System.AttributeTargets" />, el valor de la propiedad <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> y el valor de la propiedad <see cref="P:System.AttributeUsageAttribute.Inherited" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede combinar varios <xref:System.AttributeTargets> valores mediante una operación OR bit a bit para obtener la combinación deseada de elementos de programa válido.  
  
 Para los valores de propiedad predeterminados, consulte la <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, y <xref:System.AttributeUsageAttribute.Inherited%2A> propiedades.  
  
   
  
## Examples  
 La definición del atributo DispId ilustra el uso de una operación OR bit a bit para combinar varios <xref:System.AttributeTargets> valores.  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor Boolean que indica si es posible especificar más de una instancia del atributo indicado para un único elemento del programa.</summary>
        <value>
          <see langword="true" /> si es posible especificar más de una instancia; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un atributo que se pueden especificar más de una vez para un elemento de programa se denomina un atributo multiuso. Un atributo que se puede especificar sólo una vez que se llama a un atributo de uso único.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que determina si el atributo indicado se hereda por las clases derivadas y por los miembros de invalidación.</summary>
        <value>Es <see langword="true" /> si el atributo lo pueden heredar clases derivadas y miembros de invalidación; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad determina:  
  
-   Si las clases derivan de una clase base etiquetan con el atributo al que el <xref:System.AttributeUsageAttribute> se aplica el atributo heredan ese atributo.  
  
-   Si los métodos de las clases derivadas que reemplaza un método de clase base etiquetan con el atributo al que el <xref:System.AttributeUsageAttribute> se aplica el atributo heredan ese atributo.  (Si una clase hereda a un miembro de clase base, también hereda los atributos aplicados a ese miembro.)  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la diferencia entre un atributo a la que un <xref:System.AttributeUsageAttribute> atribuir a un <xref:System.AttributeUsageAttribute.Inherited%2A> valor de propiedad de `true` se aplica y otra a la que <xref:System.AttributeUsageAttribute> atribuir a un <xref:System.AttributeUsageAttribute.Inherited%2A> el valor de propiedad `false` se aplica. El ejemplo define dos atributos, `InheritedAttribute` y `NotInheritedAttribute`. Ambos atributos se pueden aplicar a las clases y métodos. Dado que la <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad de la <xref:System.AttributeUsageAttribute> atributo aplicado a `InheritedAttribute` es `true`, se ha heredado por las clases derivadas y los miembros de las clases derivadas que invalidación el método de clase base.  Por otro lado, dado que la <xref:System.AttributeUsageAttribute.Inherited%2A> propiedad de la <xref:System.AttributeUsageAttribute> atributo aplicado a `NotInheritedAttribute` es `false`, no lo heredan las clases derivadas y los miembros de las clases derivadas que invalidación el método de clase base.  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 En el ejemplo, a continuación, define dos clases base. La primera, `BaseA`, tiene un único método, `MethodA`.  El segundo, `BaseB`, tiene un único método, `MethodB`. `BaseA` y `MethodA` se etiquetan con la `InheritedAttribute` atributo, y `BaseB` y `MethodB` se etiquetan con la `NotInheritedAttribute` atributo. `DerivedA` hereda de `BaseA` e invalida su `MethodA` método. `DerivedB` hereda de `BaseB` e invalida su `MethodB` método.  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 Como se muestra en el ejemplo, el salida `DerivedA` y `DerivedA.MethodA` heredan la `InheritedAttribute` atributo, pero `DerivedB` y `DerivedB.MethodB` no heredan la `NotInheritedAttribute` atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un conjunto de valores que identifican los elementos del programa a los que se puede aplicar el atributo especificado.</summary>
        <value>Uno o varios valores de <see cref="T:System.AttributeTargets" />. El valor predeterminado es <see langword="All" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>