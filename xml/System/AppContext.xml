<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AppContext.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de2b5eddaaa2bb43dcc7b608c490b41f3a8c1713</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AppContext">
          <source>Provides members for setting and retrieving data about an application's context.</source>
          <target state="translated">Proporciona miembros para configurar y recuperar datos sobre el contexto de una aplicación.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> clase permite a los autores de bibliotecas proporcionar un mecanismo uniforme para cancelar la participación con nueva funcionalidad para sus usuarios.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Establece un contrato flexible entre los componentes para poder comunicar una solicitud de cancelación de la participación.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Esta capacidad normalmente es importante cuando se realiza un cambio en la funcionalidad existente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Por el contrario, la nueva funcionalidad participa de forma implícita.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library developers</source>
          <target state="translated">AppContext para los desarrolladores de bibliotecas</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Libraries use  the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to define and expose compatibility switches, while library users can set those switches to affect the library behavior.</source>
          <target state="translated">Bibliotecas usan el <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> conmutadores de clase para definir y exponer la compatibilidad, mientras que los usuarios de la biblioteca pueden configurar dichos modificadores para que afecten al comportamiento de la biblioteca.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, libraries provide the new functionality, and they only alter it (that is, they provide the previous functionality) if the switch is set.</source>
          <target state="translated">De forma predeterminada, las bibliotecas proporcionan la nueva funcionalidad y solo la modifican (es decir, ofrecen la funcionalidad anterior) si el modificador está establecido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This allows libraries to provide new behavior for an existing API while continuing to support callers who depend on the previous behavior.</source>
          <target state="translated">Esto permite que las bibliotecas dar nuevo comportamiento de una API existente sigue siendo compatible con los llamadores que dependen del comportamiento anterior.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Defining the switch name</source>
          <target state="translated">Definir el nombre del conmutador</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The most common way to allow consumers of your library to opt out of a change of behavior is to define a named switch.</source>
          <target state="translated">La manera más común para permitir que los consumidores de la biblioteca rechazar un cambio de comportamiento es definir un modificador con nombre.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its <ph id="ph1">`value`</ph> element is a name/value pair that consists of the name of a switch and its <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value.</source>
          <target state="translated">Su <ph id="ph1">`value`</ph> elemento es un par de nombre/valor que se compone del nombre de un conmutador y su <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By default, the switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior (and makes the new behavior opt-in by default).</source>
          <target state="translated">De forma predeterminada, el modificador siempre es implícitamente <ph id="ph1">`false`</ph>, que proporciona el nuevo comportamiento (y hace que el nuevo comportamiento participar de forma predeterminada).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Cuando el modificador se establece <ph id="ph1">`true`</ph> lo habilita, que proporciona el comportamiento heredado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">El modificador se establece explícitamente en <ph id="ph1">`false`</ph> también proporciona el nuevo comportamiento.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">Es conveniente usar un formato coherente para los nombres de conmutador, ya que son un contrato formal que expone una biblioteca.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following are two obvious formats.</source>
          <target state="translated">Las siguientes son dos formatos obvios.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Modificador<ept id="p1">*</ept>.<bpt id="p2">*</bpt>espacio de nombres<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nombre del modificador<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Modificador<ept id="p1">*</ept>.<bpt id="p2">*</bpt>biblioteca<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nombre del modificador<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Once you define and document the switch, callers can use it by using the registry, by adding an  <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element to their application configuration file, or by calling the  <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method programmatically.</source>
          <target state="translated">Una vez que se define y documentar el conmutador, los autores de llamada pueden usar con el registro, mediante la adición de un <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> elemento a su archivo de configuración de aplicación, o mediante una llamada a la <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> método mediante programación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See the <bpt id="p1">[</bpt>AppContext for library consumers<ept id="p1">](#ForConsumers)</ept> section for more information about how callers use and set the value of <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> configuration switches.</source>
          <target state="translated">Consulte la <bpt id="p1">[</bpt>AppContext para los consumidores de la biblioteca<ept id="p1">](#ForConsumers)</ept> sección para obtener más información sobre cómo los autores de llamadas y establezca el valor de <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> modificadores de configuración.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the common language runtime runs an application, it automatically reads the registry's compatibility settings and loads the application configuration file in order to populate the application's <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Cuando common language runtime ejecuta una aplicación, automáticamente lee la configuración de compatibilidad del registro y carga el archivo de configuración de aplicación con el fin de rellenar la aplicación <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance is populated either programmatically by the caller or by the runtime, you do not have to take any action, such as calling the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method,  to configure the <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> instance.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instancia se rellena mediante programación por el llamador o en tiempo de ejecución, no es necesario realizar ninguna acción, como la llamada a la <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> método, para configurar el <ph id="ph3">&lt;xref:System.AppContext&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Checking the setting</source>
          <target state="translated">Comprobación de la configuración</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can then check if a consumer has declared the value of the switch and act appropriately by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">A continuación, puede comprobar si un consumidor declaró el valor del conmutador y act adecuadamente mediante una llamada a la <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`switchName`</ph> argument is found, and when the method returns, its <ph id="ph3">`isEnabled`</ph> argument indicates the value of the switch.</source>
          <target state="translated">El método devuelve <ph id="ph1">`true`</ph> si la <ph id="ph2">`switchName`</ph> argumento se encuentra y, cuando el método devuelve, sus <ph id="ph3">`isEnabled`</ph> argumento indica el valor del modificador.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Otherwise, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">De lo contrario, el método devuelve <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>An example</source>
          <target state="translated">Un ejemplo</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to allow the customer to choose the original behavior of a library method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> clase para permitir que el cliente elija el comportamiento de un método de biblioteca original.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is version 1.0 of a library named <ph id="ph1">`StringLibrary`</ph>.</source>
          <target state="translated">La siguiente es la versión 1.0 de una biblioteca denominada <ph id="ph1">`StringLibrary`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>It defines a <ph id="ph1">`SubstringStartsAt`</ph> method that performs an ordinal comparison to determine the starting index of a substring within a larger string.</source>
          <target state="translated">Define un <ph id="ph1">`SubstringStartsAt`</ph> método que realiza una comparación de ordinales para determinar el índice inicial de una subcadena en una cadena mayor.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following example then uses the library to find the starting index of the substring "archæ" in "The archaeologist".</source>
          <target state="translated">A continuación, en el ejemplo siguiente se utiliza la biblioteca para buscar el índice inicial de la subcadena "archæ" en "El archaeologist".</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because the method performs an ordinal comparison, the substring cannot be found.</source>
          <target state="translated">Dado que el método realiza una comparación ordinal, no se encuentra la subcadena.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Version 2 of the library, however, changes the <ph id="ph1">`SubstringStartsAt`</ph> method to use culture-sensitive comparison.</source>
          <target state="translated">Sin embargo, cambie la versión 2 de la biblioteca, el <ph id="ph1">`SubstringStartsAt`</ph> método usar comparación dependiente de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the app is recompiled to run against the new version of the library, it now reports that the substring "archæ" is found at index 4 in "The archaeologist".</source>
          <target state="translated">Cuando se vuelve a compilar la aplicación para ejecutarla en la nueva versión de la biblioteca, ahora informa que la subcadena "archæ" se encuentra en el índice 4 en "El archaeologist".</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>This change can be prevented from breaking the applications that depend on the original behavior by defining an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> switch.</source>
          <target state="translated">Este cambio se puede evitar interrumpir las aplicaciones que dependen del comportamiento original mediante la definición de un <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> cambiar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In this case, the switch is named <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</source>
          <target state="translated">En este caso, el modificador se denomina <ph id="ph1">`StringLibrary.DoNotUseCultureSensitiveComparison`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its default value, <ph id="ph1">`false`</ph>, indicates that the library should perform its version 2.0 culture-sensitive comparison.</source>
          <target state="translated">Su valor predeterminado, <ph id="ph1">`false`</ph>, indica que la biblioteca debe realizar su comparación de cuenta de la referencia cultural de la versión 2.0.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><ph id="ph1">`true`</ph> indicates that the library should perform its version 1.0 ordinal comparison.</source>
          <target state="translated"><ph id="ph1">`true`</ph> indica que la biblioteca debe realizar la comparación ordinal de la versión 1.0.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>A slight modification of the previous code allows the library consumer to set the switch to determine the kind of comparison the method performs.</source>
          <target state="translated">Una pequeña modificación del código anterior, el consumidor de biblioteca puede configurar el conmutador para determinar el tipo de comparación que se realiza el método.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If application can then use the following configuration file to restore the version 1.0 behavior.</source>
          <target state="translated">Si la aplicación, a continuación, puede utilizar el siguiente archivo de configuración para restaurar el comportamiento de la versión 1.0.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When the application is run with the configuration file present, it produces the following output:</source>
          <target state="translated">Cuando la aplicación se ejecuta con el archivo de configuración está presente, produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>AppContext for library consumers</source>
          <target state="translated">AppContext para los consumidores de la biblioteca</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you are the consumer of a library, the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class  allows you to take advantage of a library or library method's opt-out mechanism for new functionality.</source>
          <target state="translated">Si es que el consumidor de una biblioteca, el <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> clase le permite aprovechar las ventajas de una biblioteca o mecanismo de desactivación del método de la biblioteca para la nueva funcionalidad.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Individual methods of the class library that you are calling define particular switches that enable or disable a new behavior.</source>
          <target state="translated">Los métodos individuales de la biblioteca de clases que se está llamando a definen determinados modificadores que habilitan o deshabilitan un nuevo comportamiento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The value of the switch  is a Boolean.</source>
          <target state="translated">El valor del modificador es un valor booleano.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If it is <ph id="ph1">`false`</ph>, which is typically the default value, the new behavior is enabled; if it is <ph id="ph2">`true`</ph>, the new behavior is disabled, and the member behaves as it did previously.</source>
          <target state="translated">Si es <ph id="ph1">`false`</ph>, que normalmente es el valor predeterminado, el nuevo comportamiento está habilitado; si es <ph id="ph2">`true`</ph>, el nuevo comportamiento está deshabilitado y el miembro se comporta tal y como lo hacía anteriormente.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>You can set the value of a switch in one of three ways:</source>
          <target state="translated">Puede establecer el valor de un conmutador en uno de tres maneras:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method in your code.</source>
          <target state="translated">Mediante una llamada a la <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> método en el código.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The <ph id="ph1">`switchName`</ph> argument defines the switch name, and the <ph id="ph2">`isEnabled`</ph> property defines the value of the switch.</source>
          <target state="translated">El <ph id="ph1">`switchName`</ph> argumento define el nombre del conmutador y el <ph id="ph2">`isEnabled`</ph> propiedad define el valor del modificador.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Because <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> is a static class, it is available on a per-application domain basis.</source>
          <target state="translated">Dado que <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> es una clase estática, está disponible en forma de dominio por aplicación.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> has application scope; that is, it affects only the application.</source>
          <target state="translated">Llamar a la <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> tiene ámbito de aplicación; es decir, afecta a solo la aplicación.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding an <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of your app.config file.</source>
          <target state="translated">Mediante la adición de un <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento a la <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>en tiempo de ejecución &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> sección del archivo app.config.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The switch has a single attribute, <ph id="ph1">`value`</ph>, whose value is a string that represents a key/value pair containing both the switch name and its value.</source>
          <target state="translated">El conmutador tiene un único atributo, <ph id="ph1">`value`</ph>, cuyo valor es una cadena que representa un par de clave/valor que contiene el nombre del conmutador y su valor.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To define multiple switches, separate each switch's key/value pair in the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element's <ph id="ph2">`value`</ph> attribute with a semicolon.</source>
          <target state="translated">Para definir varios conmutadores, separe el par de clave/valor de cada conmutador en la <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> del elemento <ph id="ph2">`value`</ph> atributo con un punto y coma.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>In that case, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element has the following format:</source>
          <target state="translated">En ese caso, el <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento tiene el formato siguiente:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element to define a configuration setting has application scope; that is, it affects only the application.</source>
          <target state="translated">Mediante el <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> elemento para definir un valor de configuración tiene ámbito de aplicación; es decir, afecta a solo la aplicación.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>For information on the switches defined by the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</source>
          <target state="translated">Para obtener información sobre los modificadores definidos por .NET Framework, vea la <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt; elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">mediante la adición de un valor de cadena cuyo nombre es el nombre del conmutador para la <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> clave en el registro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Su valor debe ser la representación de cadena de un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> que pueda analizar la <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> método; es decir, debe ser "True", "true", "False" o "false".</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If the runtime encounters any other value, it ignores the switch.</source>
          <target state="translated">Si el tiempo de ejecución encuentra cualquier otro valor, omite el conmutador.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>Using the registry to define an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> switch has machine scope; that is, it affects every application running on the machine.</source>
          <target state="translated">Utilizar el registro para definir un <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> conmutador tiene ámbito de máquina; es decir, afecta a cada aplicación que se ejecuta en el equipo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>If you set the same switch in more than one way, the order of precedence for determining which setting overrides the others is:</source>
          <target state="translated">Si establece el mismo conmutador en más de una forma, el orden de prioridad para determinar qué configuración invalida los demás es:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The programmatic setting.</source>
          <target state="translated">La configuración mediante programación.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The setting in the app config file.</source>
          <target state="translated">La configuración en el archivo de configuración de aplicación.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The registry setting.</source>
          <target state="translated">La configuración del registro.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>The following is a simple application that passes a file URI to the <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La siguiente es una aplicación simple que pasa un URI de archivo para el <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>When run under the .NET Framework 4.6, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> because <ph id="ph2">`file://`</ph> is no longer a valid part of a file path.</source>
          <target state="translated">Cuando se ejecutan en .NET Framework 4.6, se produce un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> porque <ph id="ph2">`file://`</ph> ya no es una parte de una ruta de acceso de archivo válida.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>To restore the method's previous behavior and prevent the exception, you can add the <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> switch to the application configuration file for the example:</source>
          <target state="translated">Para restaurar el comportamiento anterior del método y evitar la excepción, puede agregar el <ph id="ph1">`Switch.System.IO.UseLegacyPathHandling`</ph> cambiar en el archivo de configuración de aplicación para el ejemplo:</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source>See also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AppContext">
          <source><bpt id="p1">[</bpt>AppContext switch<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Conmutador AppContext<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.AppContext.BaseDirectory">
          <source>Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Obtiene el nombre de ruta de acceso del directorio base que la resolución de ensamblado usa para sondear ensamblados.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">Nombre de ruta de acceso del directorio base que la resolución de ensamblado usa para sondear ensamblados.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>This is a per application domain property.</source>
          <target state="translated">Se trata de una por cada propiedad de dominio de aplicación.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.BaseDirectory">
          <source>Its value corresponds to the <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> property of the current application domain.</source>
          <target state="translated">Su valor corresponde a la <ph id="ph1">&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=nameWithType&gt;</ph> propiedad del dominio de aplicación actual.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The name of the data element.</source>
          <target state="translated">Nombre del elemento de datos.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>Returns the value of the named data element assigned to the current application domain.</source>
          <target state="translated">Devuelve el valor del elemento de datos con nombre asignado al dominio de aplicación actual.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AppContext.GetData(System.String)">
          <source>The value of <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> identifies a named value; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="name" /&gt;</ph>, si <ph id="ph2">&lt;paramref name="name" /&gt;</ph> identifica un valor con nombre; en caso contrario, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The name of the switch.</source>
          <target state="translated">Nombre del conmutador.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The value of the switch.</source>
          <target state="translated">Valor del conmutador.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Sets the value of a switch.</source>
          <target state="translated">Establece el valor de un conmutador.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> clase permite a los autores de bibliotecas proporcionar un mecanismo uniforme para cancelar la participación con nueva funcionalidad para sus usuarios.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Establece un contrato flexible entre los componentes para poder comunicar una solicitud de cancelación de la participación.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Esta capacidad normalmente es importante cuando se realiza un cambio en la funcionalidad existente.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Por el contrario, la nueva funcionalidad participa de forma implícita.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method is called by an application (or a library) to declare the value of a switch (which is always a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value) that a dependent library defines.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> método llama a una aplicación (o una biblioteca) para declarar el valor de un modificador (que es siempre un <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valor) que define una biblioteca dependiente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The switch is always implicitly <ph id="ph1">`false`</ph>, which provides the new behavior.</source>
          <target state="translated">El modificador siempre es implícitamente <ph id="ph1">`false`</ph>, que proporciona el nuevo comportamiento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Setting the switch to <ph id="ph1">`true`</ph> enables it, which provides the legacy behavior.</source>
          <target state="translated">Cuando el modificador se establece <ph id="ph1">`true`</ph> lo habilita, que proporciona el comportamiento heredado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Explicitly setting the switch to <ph id="ph1">`false`</ph> also provides the new behavior.</source>
          <target state="translated">El modificador se establece explícitamente en <ph id="ph1">`false`</ph> también proporciona el nuevo comportamiento.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The dependent library can then check the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">La biblioteca dependiente, a continuación, puede comprobar el valor del conmutador mediante una llamada a la <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>It's beneficial to use a consistent format for switch names, since they are a formal contract exposed by a library.</source>
          <target state="translated">Es conveniente usar un formato coherente para los nombres de conmutador, ya que son un contrato formal que expone una biblioteca.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following are two obvious formats.</source>
          <target state="translated">Las siguientes son dos formatos obvios.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>namespace<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Modificador<ept id="p1">*</ept>.<bpt id="p2">*</bpt>espacio de nombres<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nombre del modificador<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><bpt id="p1">*</bpt>Switch<ept id="p1">*</ept>.<bpt id="p2">*</bpt>library<ept id="p2">*</ept>.<bpt id="p3">*</bpt>switchname<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Modificador<ept id="p1">*</ept>.<bpt id="p2">*</bpt>biblioteca<ept id="p2">*</ept>.<bpt id="p3">*</bpt>nombre del modificador<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>In addition to setting the value of a switch programmatically, it can also be set:</source>
          <target state="translated">Además de establecer mediante programación el valor de un modificador, también puede establecer:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding the switch name and value to the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>runtime&gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> section of an application configuration file.</source>
          <target state="translated">Agregando el nombre del conmutador y el valor para el <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>AppContextSwitchOverrides &gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> elemento en el <bpt id="p2">[</bpt> <ph id="ph2">\&lt;</ph>en tiempo de ejecución &gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)</ept> sección de un archivo de configuración de aplicación.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>For example, the following defines a switch named <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> whose value is <ph id="ph2">`False`</ph>.</source>
          <target state="translated">Por ejemplo, la siguiente define un conmutador denominado <ph id="ph1">`Libraries.FPLibrary.UseExactFloatingPointComparison`</ph> cuyo valor es <ph id="ph2">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>By adding a string value whose name is the name of the switch to the <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> key in the registry.</source>
          <target state="translated">mediante la adición de un valor de cadena cuyo nombre es el nombre del conmutador para la <ph id="ph1">`HKLM\SOFTWARE\Microsoft\.NETFramework\AppContext`</ph> clave en el registro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>Its value must be the string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> that can be parsed by the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> method; that is, it must be "True", "true", "False", or "false".</source>
          <target state="translated">Su valor debe ser la representación de cadena de un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> que pueda analizar la <ph id="ph2">&lt;xref:System.Boolean.Parse%2A?displayProperty=nameWithType&gt;</ph> método; es decir, debe ser "True", "true", "False" o "false".</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>If <ph id="ph1">`switchName`</ph> already exists, its value is overwritten by the <ph id="ph2">`isEnabled`</ph> argument.</source>
          <target state="translated">Si <ph id="ph1">`switchName`</ph> ya existe, su valor lo sobrescribe el <ph id="ph2">`isEnabled`</ph> argumento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>That is, the most recent call to the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method overrides the value defined in the registry, in an app configuration file, or by previous calls to the <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">Es decir, la llamada más reciente a la <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> método invalida el valor definido en el registro, en un archivo de configuración de la aplicación o por las llamadas anteriores a la <ph id="ph2">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The following line of code sets a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> to <ph id="ph2">`true`</ph>, which enables a legacy behavior.</source>
          <target state="translated">La siguiente línea de código establece un conmutador denominado <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph> a <ph id="ph2">`true`</ph>, lo que permite un comportamiento heredado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source>The library can then check whether a library consumer has set the value of the switch by calling the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">La biblioteca, a continuación, puede comprobar si un consumidor de la biblioteca estableció el valor del conmutador mediante una llamada a la <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.AppContext.SetSwitch(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.AppContext.TargetFrameworkName">
          <source>Gets the name of the framework version targeted by the current application.</source>
          <target state="translated">Obtiene el nombre de la versión de Framework de destino de la aplicación actual.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the framework version targeted by the current application.</source>
          <target state="translated">El nombre de la versión de Framework de destino de la aplicación actual.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>The name of the target framework version corresponds to the value of the <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">El nombre de la versión de framework de destino se corresponde con el valor de la <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AppContext.TargetFrameworkName">
          <source>For a list of target framework names for the .NET Framework, see the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>supportedRuntime<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> element.</source>
          <target state="translated">Para obtener una lista de nombres de framework de destino para .NET Framework, vea la <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>supportedRuntime<ph id="ph2">&amp;gt;</ph> elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The name of the switch.</source>
          <target state="translated">Nombre del conmutador.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>When this method returns, contains the value of <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept> if <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept> was found, or <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept> was not found.</source>
          <target state="translated">Cuando este método devuelve un resultado, contiene el valor de <bpt id="p1">&lt;c&gt;</bpt>switchName<ept id="p1">&lt;/c&gt;</ept> si se ha encontrado <bpt id="p2">&lt;c&gt;</bpt>switchName<ept id="p2">&lt;/c&gt;</ept>, o <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se ha encontrado <bpt id="p3">&lt;c&gt;</bpt>switchName<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parámetro se pasa sin inicializar.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Tries to get the value of a switch.</source>
          <target state="translated">Intenta obtener el valor de un conmutador.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> was set and the <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph> argument contains the value of the switch; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se estableció <ph id="ph2">&lt;paramref name="switchName" /&gt;</ph> y el argumento <ph id="ph3">&lt;paramref name="isEnabled" /&gt;</ph> contiene el valor del conmutador; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> clase permite a los autores de bibliotecas proporcionar un mecanismo uniforme para cancelar la participación con nueva funcionalidad para sus usuarios.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">Establece un contrato flexible entre los componentes para poder comunicar una solicitud de cancelación de la participación.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">Esta capacidad normalmente es importante cuando se realiza un cambio en la funcionalidad existente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">Por el contrario, la nueva funcionalidad participa de forma implícita.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The common language runtime automatically populates the switches assigned to an <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instance by reading the registry and the application's configuration file.</source>
          <target state="translated">Common language runtime rellena automáticamente los modificadores que se asigna a un <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> instancia al leer el registro y archivo de configuración de la aplicación.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The value of these switches can then be overridden, and new switches added, by calling the <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> method.</source>
          <target state="translated">A continuación, se puede reemplazar el valor de estos modificadores y agregan nuevos modificadores, mediante una llamada a la <ph id="ph1">&lt;xref:System.AppContext.SetSwitch%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>A library calls the <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> method to check whether its consumers have declared the value of the switch and then act appropriately on it.</source>
          <target state="translated">Llama a una biblioteca de la <ph id="ph1">&lt;xref:System.AppContext.TryGetSwitch%2A&gt;</ph> método para comprobar si sus consumidores han declarado el valor del conmutador y, a continuación, actúen debidamente en él.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>By default, if the switch is not defined, the new functionality is enabled..</source>
          <target state="translated">De forma predeterminada, si el conmutador no está definido, la nueva funcionalidad está habilitada...</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If the switch is defined and its value is <ph id="ph1">`false`</ph>, the new functionality is also enabled.</source>
          <target state="translated">Si el modificador está definido y su valor es <ph id="ph1">`false`</ph>, también se habilita la funcionalidad nueva.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>If its value is <ph id="ph1">`true`</ph>, the legacy behavior is enabled.</source>
          <target state="translated">Si su valor es <ph id="ph1">`true`</ph>, el comportamiento heredado está habilitado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source>The following example determines whether a library consumer has set a switch named <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se determina si un consumidor de la biblioteca estableció un conmutador denominado <ph id="ph1">`Switch.AmazingLib.ThrowOnException`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.AppContext.TryGetSwitch(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="switchName" /&gt;</ph> es <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>