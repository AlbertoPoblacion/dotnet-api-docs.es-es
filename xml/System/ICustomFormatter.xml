<Type Name="ICustomFormatter" FullName="System.ICustomFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6002c7bffa27e626bfd04916c139d411974b86fc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICustomFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ICustomFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="48dec-101">Define un método que admite formatos personalizados del valor de un objeto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48dec-101">Defines a method that supports custom formatting of the value of an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dec-102">El <xref:System.ICustomFormatter> interfaz incluye un único método, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48dec-102">The <xref:System.ICustomFormatter> interface includes a single method, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48dec-103">Cuando se implementa esta interfaz mediante un tipo de valor o referencia, la <xref:System.ICustomFormatter.Format%2A> método devuelve una representación de cadena de formato personalizado del valor de un objeto.</span><span class="sxs-lookup"><span data-stu-id="48dec-103">When this interface is implemented by a reference or value type, the <xref:System.ICustomFormatter.Format%2A> method returns a custom-formatted string representation of an object's value.</span></span>  
  
 <span data-ttu-id="48dec-104">Normalmente, el <xref:System.ICustomFormatter> interfaz se implementa con la <xref:System.IFormatProvider> interfaz para personalizar el comportamiento de los dos métodos de formato de cadena compuesta .NET Framework que incluyen un <xref:System.IFormatProvider> parámetro.</span><span class="sxs-lookup"><span data-stu-id="48dec-104">Typically, the <xref:System.ICustomFormatter> interface is implemented with the <xref:System.IFormatProvider> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="48dec-105">En concreto, el <xref:System.ICustomFormatter> interfaz puede proporcionar formatos personalizados del valor de un objeto que se pasa a la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> y <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="48dec-105">Specifically, the <xref:System.ICustomFormatter> interface can provide custom formatting of the value of an object passed to the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="48dec-106">Proporciona una representación personalizada del valor de un objeto, se necesita que haga lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="48dec-106">Providing a custom representation of an object's value requires that you do the following:</span></span>  
  
1.  <span data-ttu-id="48dec-107">Defina una clase que implementa el <xref:System.ICustomFormatter> interfaz y su miembro único, la <xref:System.ICustomFormatter.Format%2A> método.</span><span class="sxs-lookup"><span data-stu-id="48dec-107">Define a class that implements the <xref:System.ICustomFormatter> interface and its single member, the <xref:System.ICustomFormatter.Format%2A> method.</span></span>  
  
2.  <span data-ttu-id="48dec-108">Defina una clase que implementa el <xref:System.IFormatProvider> interfaz y su miembro único, la <xref:System.IFormatProvider.GetFormat%2A> método.</span><span class="sxs-lookup"><span data-stu-id="48dec-108">Define a class that implements the <xref:System.IFormatProvider> interface and its single member, the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="48dec-109">El <xref:System.IFormatProvider.GetFormat%2A> método devuelve una instancia de su <xref:System.ICustomFormatter> implementación.</span><span class="sxs-lookup"><span data-stu-id="48dec-109">The <xref:System.IFormatProvider.GetFormat%2A> method returns an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="48dec-110">A menudo, una sola clase implementa tanto <xref:System.ICustomFormatter> y <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="48dec-110">Often, a single class implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="48dec-111">En del ese caso, la clase `GetFormat` implementación simplemente devuelve una instancia de sí mismo.</span><span class="sxs-lookup"><span data-stu-id="48dec-111">In that case, the class's `GetFormat` implementation just returns an instance of itself.</span></span>  
  
3.  <span data-ttu-id="48dec-112">Pasar el <xref:System.IFormatProvider> implementación como el `provider` argumento de la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> método o un método comparable.</span><span class="sxs-lookup"><span data-stu-id="48dec-112">Pass the <xref:System.IFormatProvider> implementation as the `provider` argument of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method or a comparable method.</span></span>  
  
 <span data-ttu-id="48dec-113">El método de .NET Framework utilizará el formato personalizado en lugar del suyo propio.</span><span class="sxs-lookup"><span data-stu-id="48dec-113">The .NET Framework method will then use your custom formatting instead of its own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48dec-114">En el ejemplo siguiente se implementa <xref:System.ICustomFormatter> para permitir el formato binario, octales y hexadecimales de valores enteros.</span><span class="sxs-lookup"><span data-stu-id="48dec-114">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="48dec-115">En este ejemplo, una clase única, `IBinaryFormatter`, implementa tanto <xref:System.ICustomFormatter> y <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="48dec-115">In this example, a single class, `IBinaryFormatter`, implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="48dec-116">Su <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> método determina si el `formatType` parámetro representa un <xref:System.ICustomFormatter> tipo.</span><span class="sxs-lookup"><span data-stu-id="48dec-116">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method determines whether the `formatType` parameter represents an <xref:System.ICustomFormatter> type.</span></span> <span data-ttu-id="48dec-117">Si es así, `BinaryFormatter` devuelve una instancia de sí misma; en caso contrario, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="48dec-117">If it does, `BinaryFormatter` returns an instance of itself; otherwise, it returns `null`.</span></span> <span data-ttu-id="48dec-118">Su <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementación determina si el parámetro de formato es una de las tres cadenas de formato compatibles ("B" para el binario, "O" para octal y "H" para hexadecimal) y da formato a la `arg` parámetro adecuadamente.</span><span class="sxs-lookup"><span data-stu-id="48dec-118">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="48dec-119">De lo contrario, si `arg` no es `null`, llama a la `arg` del parámetro <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementación, si existe alguno, o su sin parámetros `ToString` método, si no lo hace.</span><span class="sxs-lookup"><span data-stu-id="48dec-119">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="48dec-120">Si el valor de `arg` es `null`, el método devuelve <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48dec-120">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="48dec-121">`BinaryFormatter` a continuación, puede usarse para proporcionar el formato personalizado pasando un `BinaryFormatter` objeto como el `provider` parámetro de la <xref:System.String.Format%2A> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="48dec-121">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="48dec-122">Common language runtime intenta utilizar su <see cref="T:System.ICustomFormatter" /> implementación para cada elemento de formato de cadena de formato compuesto.</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-122">The common language runtime attempts to use your <see cref="T:System.ICustomFormatter" /> implementation for every format item in a composite format string.</span>
        </span>
        <span data-ttu-id="48dec-123">Como resultado, debe esperar que la <see cref="T:System.ICustomFormatter" /> implementación se llamará para proporcionar servicios de formato a los objetos o valores que es no diseñaron para procesarlas.</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-123">As a result, you should expect that your <see cref="T:System.ICustomFormatter" /> implementation will be called to provide formatting services to objects or values that it is not designed to handle.</span>
        </span>
        <span data-ttu-id="48dec-124">En estos casos, su <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> método debe llamar al método de formato adecuado para ese objeto o valor.</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-124">In these cases, your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method must call the appropriate formatting method for that object or value.</span>
        </span>
        <span data-ttu-id="48dec-125">Hay dos tipos de <see cref="T:System.ICustomFormatter" /> las implementaciones: intrínseca y extensión.</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-125">There are two kinds of <see cref="T:System.ICustomFormatter" /> implementations: intrinsic and extension.</span>
        </span>
        <span data-ttu-id="48dec-126">Las implementaciones intrínsecas son implementaciones que proporcionan el formato personalizado para un objeto definido por la aplicación.</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-126">Intrinsic implementations are implementations that provide custom formatting for an application-defined object.</span>
        </span>
        <span data-ttu-id="48dec-127">En este caso, la implementación debe incluir lo siguiente:</span>
        <span class="sxs-lookup">
          <span data-stu-id="48dec-127">In this case, your implementation should include the following:</span>
        </span>  
  
-   <span data-ttu-id="48dec-128">Una definición de cadenas de formato que define el formato del objeto.</span><span class="sxs-lookup"><span data-stu-id="48dec-128">A definition of format strings that define the formatting of the object.</span></span><span data-ttu-id="48dec-129">Cadenas de formato son opcionales.</span><span class="sxs-lookup"><span data-stu-id="48dec-129">Format strings are optional.</span></span><span data-ttu-id="48dec-130">Normalmente, una cadena de formato "G" o "g" define el formato general (o el uso más frecuente).</span><span class="sxs-lookup"><span data-stu-id="48dec-130">Typically, a "G" or "g" format string defines the general (or most commonly used) format.</span></span><span data-ttu-id="48dec-131">Sin embargo, tiene libertad para definir las cadenas de formato que elija.</span><span class="sxs-lookup"><span data-stu-id="48dec-131">However, you are free to define any format strings that you choose.</span></span><span data-ttu-id="48dec-132">También tiene libertad para decidir si distinguen entre mayúsculas y minúsculas o mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="48dec-132">You are also free to decide whether they are case-sensitive or case-insensitive.</span></span>  
  
-   <span data-ttu-id="48dec-133">Una prueba para asegurarse de que el tipo del objeto pasa a su <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> método es el tipo definido por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="48dec-133">A test to ensure that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is your application-defined type.</span></span><span data-ttu-id="48dec-134">Si no es así, se debe llamar el objeto <see cref="T:System.IFormattable" /> implementación, si existe alguno, o su <see cref="M:System.Object.ToString" /> método, si no es así.</span><span class="sxs-lookup"><span data-stu-id="48dec-134">If it is not, you should call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or its <see cref="M:System.Object.ToString" /> method, if it does not.</span></span><span data-ttu-id="48dec-135">Debe estar preparado para controlar las excepciones que se podrían producir estas llamadas al método.</span><span class="sxs-lookup"><span data-stu-id="48dec-135">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
-   <span data-ttu-id="48dec-136">Código para controlar una cadena de formato nula, si su implementación admite las cadenas de formato.</span><span class="sxs-lookup"><span data-stu-id="48dec-136">Code to handle a null format string, if your implementation supports format strings.</span></span><span data-ttu-id="48dec-137">El enfoque más común es reemplazar una cadena de formato nula con el especificador de formato general.</span><span class="sxs-lookup"><span data-stu-id="48dec-137">The most common approach is to replace a null format string with the general format specifier.</span></span>  
  
-   <span data-ttu-id="48dec-138">Código para controlar las cadenas de formato que admite la implementación.</span><span class="sxs-lookup"><span data-stu-id="48dec-138">Code to handle any format strings that your implementation supports.</span></span>  
  
-   <span data-ttu-id="48dec-139">Código para controlar las cadenas de formato que no se admiten.</span><span class="sxs-lookup"><span data-stu-id="48dec-139">Code to handle format strings that you do not support.</span></span><span data-ttu-id="48dec-140">El enfoque más común consiste en producir una <see cref="T:System.FormatException" />, aunque puede proporcionar el formato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="48dec-140">The most common approach is to throw a <see cref="T:System.FormatException" />, although you can provide default formatting.</span></span><span data-ttu-id="48dec-141">Las implementaciones de extensión son implementaciones que proporcionan el formato personalizado para un tipo que ya tiene compatibilidad con el formato.</span><span class="sxs-lookup"><span data-stu-id="48dec-141">Extension implementations are implementations that provide custom formatting for a type that already has formatting support.</span></span><span data-ttu-id="48dec-142">Por ejemplo, puede definir un <c>CustomerNumberFormatter</c> que aplica formato a un tipo integral con guiones entre los dígitos concretos.</span><span class="sxs-lookup"><span data-stu-id="48dec-142">For example, you could define a <c>CustomerNumberFormatter</c> that formats an integral type with hyphens between specific digits.</span></span><span data-ttu-id="48dec-143">En este caso, la implementación debe incluir lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="48dec-143">In this case, your implementation should include the following:</span></span>  
  
-   <span data-ttu-id="48dec-144">Una definición de cadenas de formato que extienden el formato del objeto.</span><span class="sxs-lookup"><span data-stu-id="48dec-144">A definition of format strings that extend the formatting of the object.</span></span><span data-ttu-id="48dec-145">Estas cadenas de formato son necesarias, pero no deben estar en conflicto con cadenas de formato existente del tipo.</span><span class="sxs-lookup"><span data-stu-id="48dec-145">These format strings are required, but they must not conflict with the type's existing format strings.</span></span><span data-ttu-id="48dec-146">Por ejemplo, si está ampliando formato para el <see cref="T:System.Int32" /> tipo, no debería implementar los especificadores de formato "C", "D", "E", "F" y "G", entre otros.</span><span class="sxs-lookup"><span data-stu-id="48dec-146">For example, if you are extending formatting for the <see cref="T:System.Int32" /> type, you should not implement the "C", "D", "E", "F", and "G" format specifiers, among others.</span></span>  
  
-   <span data-ttu-id="48dec-147">Una prueba de que el tipo del objeto pasa a su <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> método es un tipo cuyo formato admite su extensión.</span><span class="sxs-lookup"><span data-stu-id="48dec-147">A test that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is a type whose formatting your extension supports.</span></span><span data-ttu-id="48dec-148">Si no es así, llaman al objeto de la <see cref="T:System.IFormattable" /> implementación, si existe alguno, o el objeto de la sin parámetros <see cref="M:System.Object.ToString" /> método, si no es así.</span><span class="sxs-lookup"><span data-stu-id="48dec-148">If it is not, call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or the object's parameterless <see cref="M:System.Object.ToString" /> method, if it does not.</span></span><span data-ttu-id="48dec-149">Debe estar preparado para controlar las excepciones que se podrían producir estas llamadas al método.</span><span class="sxs-lookup"><span data-stu-id="48dec-149">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
-   <span data-ttu-id="48dec-150">Código para controlar las cadenas de formato que admite la extensión.</span><span class="sxs-lookup"><span data-stu-id="48dec-150">Code to handle any format strings that your extension supports.</span></span>  
  
-   <span data-ttu-id="48dec-151">Código para controlar las cadenas de formato que no es compatible con la extensión.</span><span class="sxs-lookup"><span data-stu-id="48dec-151">Code to handle any format strings that your extension does not support.</span></span><span data-ttu-id="48dec-152">Estos se deberían pasar al tipo <see cref="T:System.IFormattable" /> implementación.</span><span class="sxs-lookup"><span data-stu-id="48dec-152">These should be passed on to the type's <see cref="T:System.IFormattable" /> implementation.</span></span><span data-ttu-id="48dec-153">Debe estar preparado para controlar las excepciones que se podrían producir estas llamadas al método.</span><span class="sxs-lookup"><span data-stu-id="48dec-153">You should be prepared to handle any exceptions these method calls might throw.</span></span></para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (string format, object arg, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Format(string format, object arg, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (format As String, arg As Object, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Format(System::String ^ format, System::Object ^ arg, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="48dec-154">Cadena de formato que contiene las especificaciones de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dec-154">A format string containing formatting specifications.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="48dec-155">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dec-155">An object to format.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="48dec-156">Objeto que proporciona información de formato sobre la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dec-156">An object that supplies format information about the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48dec-157">Convierte el valor del objeto especificado en la representación de cadena equivalente usando el formato y la información de formato específica de la referencia cultural especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dec-157">Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dec-158">Representación en forma de cadena del valor de <paramref name="arg" />, con el formato especificado por <paramref name="format" /> y <paramref name="formatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dec-158">The string representation of the value of <paramref name="arg" />, formatted as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dec-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> es un método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="48dec-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> is a callback method.</span></span> <span data-ttu-id="48dec-160">Se llama a un método que admite formatos personalizados, como <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> o <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48dec-160">It is called by a method that supports custom formatting, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48dec-161">La implementación se llama una vez para cada elemento de formato de un [cadena de formato compuesto](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="48dec-161">The implementation is called once for each format item in a [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span> <span data-ttu-id="48dec-162">Por ejemplo, en la siguiente instrucción, la <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> método se llama tres veces.</span><span class="sxs-lookup"><span data-stu-id="48dec-162">For example, in the following statement, the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method is called three times.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#4)]
 [!code-vb[System.ICustomFormatter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#4)]  
  
 <span data-ttu-id="48dec-163">El `arg` parámetro es el objeto en la lista de objetos cuya posición basada en cero se corresponde con el índice de un elemento de formato determinado.</span><span class="sxs-lookup"><span data-stu-id="48dec-163">The `arg` parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.</span></span>  
  
 <span data-ttu-id="48dec-164">El `format` parámetro contiene una cadena de formato, que es el `formatString` componente de un elemento de formato.</span><span class="sxs-lookup"><span data-stu-id="48dec-164">The `format` parameter contains a format string, which is the `formatString` component of a format item.</span></span> <span data-ttu-id="48dec-165">Si el elemento de formato no tiene ningún `formatString` componente, el valor de `format` es `null`.</span><span class="sxs-lookup"><span data-stu-id="48dec-165">If the format item has no `formatString` component, the value of `format` is `null`.</span></span> <span data-ttu-id="48dec-166">Si `format` es `null`, según el tipo de `arg`, es posible que pueda utilizar la especificación de formato predeterminado de su elección.</span><span class="sxs-lookup"><span data-stu-id="48dec-166">If `format` is `null`, depending on the type of `arg`, you may be able to use the default format specification of your choice.</span></span>  
  
 <span data-ttu-id="48dec-167">El `formatProvider` parámetro es el <xref:System.IFormatProvider> implementación que proporciona un formato para `arg`.</span><span class="sxs-lookup"><span data-stu-id="48dec-167">The `formatProvider` parameter is the <xref:System.IFormatProvider> implementation that provides formatting for `arg`.</span></span> <span data-ttu-id="48dec-168">Por lo general, es una instancia de su <xref:System.ICustomFormatter> implementación.</span><span class="sxs-lookup"><span data-stu-id="48dec-168">Typically, it is an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="48dec-169">Si `formatProvider` es `null`, omita este parámetro.</span><span class="sxs-lookup"><span data-stu-id="48dec-169">If `formatProvider` is `null`, ignore that parameter.</span></span>  
  
 <span data-ttu-id="48dec-170">La implementación de la <xref:System.ICustomFormatter.Format%2A> método debe incluir la siguiente funcionalidad para que proporcionen formato no son compatibles con .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="48dec-170">Your implementation of the <xref:System.ICustomFormatter.Format%2A> method must include the following functionality so the .NET Framework can provide formatting you do not support.</span></span> <span data-ttu-id="48dec-171">Si el método de formato no es compatible con un formato, determine si el objeto que se va a aplicar el formato implementa la <xref:System.IFormattable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="48dec-171">If your format method does not support a format, determine whether the object being formatted implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="48dec-172">Si lo hace, invoca el <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> método de dicha interfaz.</span><span class="sxs-lookup"><span data-stu-id="48dec-172">If it does, invoke the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> method of that interface.</span></span> <span data-ttu-id="48dec-173">En caso contrario, invoque el valor predeterminado <xref:System.Object.ToString%2A?displayProperty=nameWithType> método del objeto subyacente.</span><span class="sxs-lookup"><span data-stu-id="48dec-173">Otherwise, invoke the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method of the underlying object.</span></span> <span data-ttu-id="48dec-174">El código siguiente muestra este patrón.</span><span class="sxs-lookup"><span data-stu-id="48dec-174">The following code illustrates this pattern.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#3)]
 [!code-vb[System.ICustomFormatter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="48dec-175">En el ejemplo siguiente se implementa <xref:System.ICustomFormatter> para permitir el formato binario, octales y hexadecimales de valores enteros.</span><span class="sxs-lookup"><span data-stu-id="48dec-175">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="48dec-176">Su <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementación determina si el parámetro de formato es una de las tres cadenas de formato compatibles ("B" para el binario, "O" para octal y "H" para hexadecimal) y da formato a la `arg` parámetro adecuadamente.</span><span class="sxs-lookup"><span data-stu-id="48dec-176">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="48dec-177">De lo contrario, si `arg` no es `null`, llama a la `arg` del parámetro <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementación, si existe alguno, o su sin parámetros `ToString` método, si no lo hace.</span><span class="sxs-lookup"><span data-stu-id="48dec-177">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="48dec-178">Si el valor de `arg` es `null`, el método devuelve <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48dec-178">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="48dec-179">`BinaryFormatter` a continuación, puede usarse para proporcionar el formato personalizado pasando un `BinaryFormatter` objeto como el `provider` parámetro de la <xref:System.String.Format%2A> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="48dec-179">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
  </Members>
</Type>