<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Version.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5afbc0a84c3670b056497a1ca61c566cc37c2b7f6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afbc0a84c3670b056497a1ca61c566cc37c2b7f6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Represents the version number of an assembly, operating system, or the common language runtime.</source>
          <target state="translated">Representa el número de versión de un ensamblado, sistema operativo o Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Version numbers consist of two to four components: major, minor, build, and revision.</source>
          <target state="translated">Números de versión constan de dos a cuatro componentes: principal, secundaria, compilación y revisión.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</source>
          <target state="translated">Los componentes principales y secundarios son necesarios; los componentes de compilación y revisión son opcionales, pero el componente de compilación es necesario si se ha definido el componente de revisión.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Todos los componentes definidos deben ser enteros mayores o iguales que 0.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</source>
          <target state="translated">El formato del número de versión es como sigue (componentes opcionales se muestran entre corchetes ([y]):</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</source>
          <target state="translated"><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The components are used by convention as follows:</source>
          <target state="translated">Los componentes se usan por convención como sigue:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Major<ept id="p1">*</ept>: Assemblies with the same name but different major versions are not interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Principales<ept id="p1">*</ept>: ensamblados con el mismo nombre pero diferentes versiones principales no son intercambiables.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</source>
          <target state="translated">Un número de versión más alto puede indicar la reescritura principal de un producto que no se puede asumir la compatibilidad con versiones anteriores.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Minor<ept id="p1">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</source>
          <target state="translated"><bpt id="p1">*</bpt>Secundaria<ept id="p1">*</ept>: si el nombre y número de versión principal de dos ensamblados son iguales, pero el número de versión secundaria es diferente, esto indica una mejora importante con la intención de compatibilidad con versiones anteriores.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</source>
          <target state="translated">Este número de versión secundaria más alto podría indicar una versión de punto de un producto o una nueva versión de totalmente compatible con versiones anteriores de un producto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: A difference in build number represents a recompilation of the same source.</source>
          <target state="translated"><bpt id="p1">*</bpt>Compilación<ept id="p1">*</ept>: una diferencia en el número de compilación representa una recompilación del mismo origen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Different build numbers might be used when the processor, platform, or compiler changes.</source>
          <target state="translated">Números de compilación diferente podrían utilizarse cuando el procesador, plataforma o compilador cambia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Revision<ept id="p1">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Revisión<ept id="p1">*</ept>: ensamblados con los mismos números de versión de nombre, principal y secundaria pero con revisiones diferentes están pensados para ser completamente intercambiables.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</source>
          <target state="translated">Un mayor número de revisión podría utilizarse en una compilación que corrige una vulnerabilidad de seguridad en un ensamblado publicada anteriormente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</source>
          <target state="translated">Las versiones posteriores de un ensamblado que difieran solo por números de compilación y revisión se consideran como actualizaciones de revisión de la versión anterior.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The value of <ph id="ph1">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).</source>
          <target state="translated">El valor de <ph id="ph1">&lt;xref:System.Version&gt;</ph> propiedades que no asignados explícitamente un valor es indefinido (-1).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Starting with .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</source>
          <target state="translated">A partir de .NET Framework 2.0, el <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades le permiten identificar una versión provisional de la aplicación que, por ejemplo, corrige un problema hasta que pueda lanzar una solución permanente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Furthermore, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">Además, el sistema operativo Windows NT utiliza el <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propiedad que se va a codificar el número de service pack.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Assigning Version Information to Assemblies</source>
          <target state="translated">Asignar información de versión a ensamblados</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.</source>
          <target state="translated">Normalmente, la <ph id="ph1">&lt;xref:System.Version&gt;</ph> clase no se usa para asignar un número de versión a un ensamblado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.</source>
          <target state="translated">En su lugar, la <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> clase se utiliza para definir la versión de un ensamblado, como se muestra en el ejemplo de este tema.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving Version Information</source>
          <target state="translated">Al recuperar la información de versión</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><ph id="ph1">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version&gt;</ph> objetos suelen usarse para almacenar información de versión sobre algún componente de aplicación o del sistema (por ejemplo, el sistema operativo), common language runtime, el ejecutable de la aplicación actual o un ensamblado concreto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following examples illustrate some of the most common scenarios:</source>
          <target state="translated">Los ejemplos siguientes muestran algunos de los escenarios más comunes:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the operating system version.</source>
          <target state="translated">Recuperar la versión del sistema operativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the version number of the operating system.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> propiedad para recuperar el número de versión del sistema operativo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of the common language runtime.</source>
          <target state="translated">Recuperar la versión de common language runtime.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve version information about the common language runtime.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> propiedad que se va a recuperar la información de versión de common language runtime.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current application's assembly version.</source>
          <target state="translated">Al recuperar la versión de ensamblado de la aplicación actual.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> método para obtener una referencia a un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objeto que representa el archivo ejecutable de la aplicación y, a continuación, recupera su número de versión de ensamblado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current assembly's assembly version.</source>
          <target state="translated">Al recuperar la versión de ensamblado del ensamblado actual.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> propiedad para obtener una referencia a un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objeto que representa el ensamblado que contiene el punto de entrada de la aplicación y, a continuación, recupera su información de versión.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of a specific assembly.</source>
          <target state="translated">Recuperar la versión de un ensamblado concreto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> método para obtener una referencia a un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objeto que tiene un nombre de archivo en particular y, a continuación, recupera su información de versión.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that several other methods also exist to instantiate an <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.</source>
          <target state="translated">Tenga en cuenta que también existen otros métodos para crear instancias de un <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> objeto por nombre de archivo o por nombre seguro.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the Publish Version of a ClickOnce application.</source>
          <target state="translated">Recuperar la versión de publicación de una aplicación ClickOnce.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> property to display an application's Publish Version.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> propiedad para mostrar la versión de publicación de una aplicación.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that its successful execution requires the example's application identity to be set.</source>
          <target state="translated">Tenga en cuenta que su ejecución correcta requiere la identidad de aplicación del ejemplo a establecerse.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This is handled automatically by the Visual Studio Publish Wizard.</source>
          <target state="translated">Esto se controla automáticamente por el Asistente de publicación de Visual Studio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</source>
          <target state="translated">La versión de publicación de una aplicación para la implementación de ClickOnce es completamente independiente de la versión de ensamblado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Comparing Version Objects</source>
          <target state="translated">Comparar objetos de versión</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>You can use the <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id="ph3">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> método para determinar si un <ph id="ph2">&lt;xref:System.Version&gt;</ph> objeto es anterior, igual o posterior a un segundo <ph id="ph3">&lt;xref:System.Version&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example indicates that Version 2.1 is later than Version 2.0.</source>
          <target state="translated">En el ejemplo siguiente se indica que la versión 2.1 es posterior a la versión 2.0.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id="ph1">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Para que dos versiones son iguales, el principal, secundaria, compilación y números de revisión de la primera <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto debe ser idéntico a las del segundo <ph id="ph2">&lt;xref:System.Version&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>If the build or revision number of a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id="ph3">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.</source>
          <target state="translated">Si el número de compilación y revisión de un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto no está definido, que <ph id="ph2">&lt;xref:System.Version&gt;</ph> objeto se considera que es anterior a un <ph id="ph3">&lt;xref:System.Version&gt;</ph> cuya compilación de un objeto o el número de revisión es igual a cero.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example illustrates this by comparing three <ph id="ph1">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.</source>
          <target state="translated">El siguiente ejemplo ilustra esto mediante la comparación de tres <ph id="ph1">&lt;xref:System.Version&gt;</ph> objetos que tienen sin definir componentes de versión.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute to assign a version number to an assembly.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> atributo para asignar un número de versión a un ensamblado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At compile time, this version information is stored with the assembly's metadata.</source>
          <target state="translated">En tiempo de compilación, esta información de versión se almacena con los metadatos del ensamblado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At run time, the example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En tiempo de ejecución, el ejemplo recupera el valor de la <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> propiedad en un tipo que se encuentra en el ensamblado para obtener una referencia al ensamblado que se ejecuta y recupera información de versión del ensamblado desde el <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objeto devuelto por la <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> con los números principal, secundario, de compilación y revisión especificados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Este constructor crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto con los siguientes valores de propiedad.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">indefinido (-1)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">indefinido (-1)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</source>
          <target state="translated">Cadena que contiene los números principal, secundario, de compilación y de revisión en los que cada número está delimitado por un punto ('.').</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified string.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> con la cadena especificada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The <ph id="ph1">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</source>
          <target state="translated">El <ph id="ph1">`version`</ph> parámetro puede contener sólo la componentes principales, secundarios, de compilación y de revisión, en ese orden y todos separados por puntos.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>There must be at least two components, and at most four.</source>
          <target state="translated">Debe haber al menos dos componentes y como máximo cuatro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The first two components are assumed to be major and minor.</source>
          <target state="translated">Los primeros dos componentes se supone que el principal y secundaria.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The value of unspecified components is undefined.</source>
          <target state="translated">El valor de componentes no especificados no está definido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The format of the version number is as follows.</source>
          <target state="translated">El formato del número de versión es como sigue.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>Optional components are shown in square brackets ('[' and ']'):</source>
          <target state="translated">Componentes opcionales se muestran entre corchetes ('[' y ']'):</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">principal.secundario[.de compilación[.de revisión]]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Todos los componentes definidos deben ser enteros mayores o iguales que 0.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id="ph1">`version`</ph> should be "6.2.1.3".</source>
          <target state="translated">Por ejemplo, si el número principal es 6, el número secundario es 2, el número de compilación es 1 y el número de revisión es 3, entonces <ph id="ph1">`version`</ph> debería ser "6.2.1.3".</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> has fewer than two components or more than four components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> tiene menos de dos componentes o más de cuatro.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A major, minor, build, or revision component is less than zero.</source>
          <target state="translated">Un componente principal, secundario, de compilación o de revisión es menor que cero.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> does not parse to an integer.</source>
          <target state="translated">Al menos un componente de <ph id="ph1">&lt;paramref name="version" /&gt;</ph> no se analiza como un entero.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> represents a number greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Al menos un componente de <ph id="ph1">&lt;paramref name="version" /&gt;</ph> representa un número mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Número de versión principal.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Número de versión secundaria.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major and minor values.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizando los valores principal y secundario especificados.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Este constructor crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto con los siguientes valores de propiedad.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">indefinido (-1)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">indefinido (-1)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph> or <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph> o <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Número de versión principal.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Número de versión secundaria.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Número de compilación.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major, minor, and build values.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> utilizando los valores principal, secundario y de compilación especificados.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Este constructor crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto con los siguientes valores de propiedad.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">indefinido (-1)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="build" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> o <ph id="ph3">&lt;paramref name="build" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Número de versión principal.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Número de versión secundaria.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Número de compilación.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The revision number.</source>
          <target state="translated">Número de revisión.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> con los números principal, secundario, de compilación y revisión especificados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Este constructor crea un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objeto con los siguientes valores de propiedad.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, y <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph> o <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Version.Build">
          <source>Gets the value of the build component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el valor del componente de compilación del número de versión del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The build number, or -1 if the build number is undefined.</source>
          <target state="translated">Número de compilación, o -1 si el número de compilación no está definido.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>For example, if the version number is 6.2.1.3, the build number is 1.</source>
          <target state="translated">Por ejemplo, si el número de versión es 6.2.1.3, el número de compilación es 1.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>If the version number is 6.2, the build number is undefined.</source>
          <target state="translated">Si el número de versión es 6.2, el número de compilación es indefinido.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, y <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object whose value is the same as the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> cuyo valor es igual al del objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose values are a copy of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Nuevo <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyos valores son una copia del objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Clone">
          <source>If the type of the return value is important, cast the <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Si el tipo del valor devuelto es importante, convierta el <ph id="ph1">&lt;xref:System.Object&gt;</ph> instancia devuelto por este método para un <ph id="ph2">&lt;xref:System.Version&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object or <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Compara el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual con un objeto especificado o <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> y devuelve una indicación de los valores relativos.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar o <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object and returns an indication of their relative values.</source>
          <target state="translated">Compara el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual con un objeto especificado y devuelve una indicación de los valores relativos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Un entero con signo que indica los valores relativos de los dos objetos, como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es una versión anterior a <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es la misma versión que <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es una versión posterior a <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">Los componentes de <ph id="ph1">`Version`</ph> en orden decreciente de importancia son: principal, secundaria, compilación y revisión.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Se supone que un componente desconocido sea más antigua que cualquier componente conocido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.0</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.1</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.1</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.2.3</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.2.3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1.2 is older than version 1.1.2.4</source>
          <target state="translated">Versión 1.1.2 es anterior a la versión 1.1.2.4</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.2.5 is newer than version 1.2.3.4</source>
          <target state="translated">La versión 1.2.5 es más reciente que la versión 1.2.3.4</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> no es del tipo <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> que se va a comparar con el objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual, o <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and returns an indication of their relative values.</source>
          <target state="translated">Compara el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual con un objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> especificado y devuelve una indicación de los valores relativos.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Un entero con signo que indica los valores relativos de los dos objetos, como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es una versión anterior a <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es la misma versión que <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> El objeto <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actual es una versión posterior a <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">Este método implementa el <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> de interfaz y realiza ligeramente mejor que la <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> método porque no tiene que aplicar la conversión unboxing el <ph id="ph3">`value`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">Los componentes de <ph id="ph1">`Version`</ph> en orden decreciente de importancia son: principal, secundaria, compilación y revisión.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Se supone que un componente desconocido sea más antigua que cualquier componente conocido.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.0.</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.0.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.1.</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.1.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.2.3.</source>
          <target state="translated">Versión 1.1 es anterior a la versión 1.1.2.3.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1.2 is older than version 1.1.2.4.</source>
          <target state="translated">Versión 1.1.2 es anterior a la versión 1.1.2.4.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.2.5 is newer than version 1.2.3.4.</source>
          <target state="translated">La versión 1.2.5 es más reciente que la versión 1.2.3.4.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra versiones genéricas y de la <ph id="ph1">`CompareTo`</ph> método para varios tipos de valor y de referencia.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Devuelve un valor que indica si dos objetos <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> representan el mismo valor.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>An object to compare with the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual, o <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual es igual a un objeto especificado.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are both <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> objects, and every component of the current <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual y <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> son objetos <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> y cada componente del objeto <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> actual coincide con el componente correspondiente de <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; de lo contrario, es <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> que se va a comparar con el objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual, o <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object and a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Devuelve un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual y un objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> especificado representan el mismo valor.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every component of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of the <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si cada componente del objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual coincide con el componente correspondiente del parámetro <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Equals(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
          <target state="translated">Este método implementa el <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> de interfaz y realiza ligeramente mejor que la <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> método porque no tiene que aplicar la conversión unboxing el <ph id="ph3">`obj`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>Returns a hash code for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Devuelve un código hash para el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.GetHashCode">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, y <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Version.Major">
          <source>Gets the value of the major component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el valor del componente principal del número de versión del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>The major version number.</source>
          <target state="translated">Número de versión principal.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>For example, if the version number is 6.2, the major version is 6.</source>
          <target state="translated">Por ejemplo, si el número de versión es 6.2, la versión principal es 6.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Version.MajorRevision">
          <source>Gets the high 16 bits of the revision number.</source>
          <target state="translated">Obtiene los 16 bits superiores del número de revisión.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Entero de 16 bits con signo.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Suponga que lanza una versión intermedia de la aplicación para solucionar temporalmente un problema hasta que pueda lanzar una solución permanente.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La versión temporal no garantiza un nuevo número de revisión, pero debe identificarse como una versión diferente.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">En este caso, codificar la información de identificación de las partes alta y baja de 16 bits del número de revisión de 32 bits.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Usar el <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> propiedad que se va a obtener el uso de números, revisión toda la <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propiedad para obtener los 16 bits superiores y usar el <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedad para obtener los 16 bits inferiores.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">A partir de .NET Framework versión 2.0, el funcionamiento de usos del sistema de Windows NT la <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propiedad que se va a codificar el número de service pack.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor y el <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Version.Minor">
          <source>Gets the value of the minor component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el valor del componente secundario del número de versión del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The minor version number.</source>
          <target state="translated">Número de versión secundaria.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>For example, if the version number is 6.2, the minor version is 2.</source>
          <target state="translated">Por ejemplo, si el número de versión es 6.2, la versión secundaria es 2.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, y <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Version.MinorRevision">
          <source>Gets the low 16 bits of the revision number.</source>
          <target state="translated">Obtiene los 16 bits inferiores del número de revisión.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Entero de 16 bits con signo.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Suponga que lanza una versión intermedia de la aplicación para solucionar temporalmente un problema hasta que pueda lanzar una solución permanente.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La versión temporal no garantiza un nuevo número de revisión, pero debe identificarse como una versión diferente.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">En este caso, codificar la información de identificación de las partes alta y baja de 16 bits del número de revisión de 32 bits.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Usar el <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> propiedad que se va a obtener el uso de números, revisión toda la <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propiedad para obtener los 16 bits superiores y usar el <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedad para obtener los 16 bits inferiores.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor y el <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are equal.</source>
          <target state="translated">Determina si dos objetos <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificados son iguales.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> es igual a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina si el primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificado es mayor que el segundo objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> es mayor que <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than or equal to the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina si el primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificado es mayor o igual que el segundo objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> es mayor o igual que <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are not equal.</source>
          <target state="translated">Determina si dos objetos <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificados no son iguales.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> no es igual a <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina si el primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificado es menor que el segundo objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> es menor que <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">El primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than or equal to the second <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Determina si el primer objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> especificado es menor o igual que el segundo objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> es menor o igual que <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Cadena que contiene un número de versión que se va a convertir.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>Converts the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Convierte la representación de cadena de un número de versión en un objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>An object that is equivalent to the version number specified in the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter.</source>
          <target state="translated">Objeto equivalente al número de versión especificado en el parámetro <ph id="ph1">&lt;paramref name="input" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">`input`</ph> parameter must have the following format:</source>
          <target state="translated">El <ph id="ph1">`input`</ph> parámetro debe tener el formato siguiente:</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">donde <bpt id="p1">*</bpt>principal<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secundaria<ept id="p2">*</ept>, <bpt id="p3">*</bpt>generar<ept id="p3">*</ept>, y <bpt id="p4">*</bpt>revisión<ept id="p4">*</ept> son las representaciones de cadena de la versión de cuatro componentes del número: mayor número de versión, el número de versión secundaria, el número de compilación y el número de revisión.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Componentes opcionales se muestran entre corchetes ([y]).</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The components must appear in the specified order, and must be separated by periods.</source>
          <target state="translated">Los componentes deben aparecer en el orden especificado y deben estar separados por puntos.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.</source>
          <target state="translated">Dado que la representación de cadena de un número de versión debe cumplir un modelo reconocido, las aplicaciones siempre deben usar control de excepciones al llamar a la <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> método para analizar la entrada del usuario.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Alternatively, you can call the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</source>
          <target state="translated">Como alternativa, puede llamar a la <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> método para analizar la representación de cadena de un número de versión y devolver un valor que indica si la operación de análisis se realizó correctamente.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> método es un método útil; es equivalente a llamar a la <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> método para analizar un número de cadenas que contienen información de versión.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> has fewer than two or more than four version components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> tiene menos de dos componentes de versión o más de cuatro.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is less than zero.</source>
          <target state="translated">Al menos un componente de <ph id="ph1">&lt;paramref name="input" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not an integer.</source>
          <target state="translated">Al menos un componente de <ph id="ph1">&lt;paramref name="input" /&gt;</ph> no es un entero.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> represents a number that is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Al menos un componente de <ph id="ph1">&lt;paramref name="input" /&gt;</ph> representa un número mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Version.Revision">
          <source>Gets the value of the revision component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el valor del componente de revisión del número de versión del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The revision number, or -1 if the revision number is undefined.</source>
          <target state="translated">Número de revisión, o -1 si el número de revisión no está definido.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>For example, if the version number is 6.2.1.3, the revision number is 3.</source>
          <target state="translated">Por ejemplo, si el número de versión es 6.2.1.3, el número de revisión es 3.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>If the version number is 6.2, the revision number is undefined.</source>
          <target state="translated">Si el número de versión es 6.2, el número de revisión es indefinido.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, y <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convierte el valor del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual en su representación <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convierte el valor del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual en su representación <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, as depicted in the following format.</source>
          <target state="translated">Representación <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de los valores de los componentes principal, secundario, de compilación y de revisión del objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual, con el siguiente formato.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Each component is separated by a period character ('.').</source>
          <target state="translated">Cada componente está separado por un punto ('.').</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</source>
          <target state="translated">Los corchetes ('[' y ']') hacen referencia a un componente que no aparecerá en el valor devuelto si el componente no está definido:</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">principal.secundario[.de compilación[.de revisión]]</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>For example, if you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.1".</source>
          <target state="translated">Por ejemplo, si se crea un objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando el constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, la cadena devuelta será "1,1".</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>If you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.3.4.2".</source>
          <target state="translated">Si se crea un objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando el constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, la cadena devuelta será "1.3.4.2".</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The number of components to return.</source>
          <target state="translated">Número de componentes que se van a devolver.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> ranges from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> varía entre 0 y 4.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convierte el valor del objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> actual en su representación <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>A specified count indicates the number of components to return.</source>
          <target state="translated">Un recuento especificado indica el número de componente que se va a devolver.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, each separated by a period character ('.').</source>
          <target state="translated">Representación <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de los valores de los componentes principal, secundario, de compilación y de revisión del objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual, cada uno separado por un punto ('.').</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> parameter determines how many components are returned.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> determina cuántos componentes se devuelven.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Valor devuelto</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> An empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>For example, if you create <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> returns "1.3" and <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> throws an exception.</source>
          <target state="translated">Por ejemplo, si se crea el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> usando el constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> devuelve "1.3" y <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> genera una excepción.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is less than 0, or more than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> es menor que 0 o mayor que 4.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is more than the number of components defined in the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> es superior al número de componentes definidos en el objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Cadena que contiene un número de versión que se va a convertir.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalent of the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or a <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object whose major and minor version numbers are 0 if the conversion failed.</source>
          <target state="translated">Cuando este método vuelve, contiene el objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente del número contenido en <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, si la conversión se ha realizado correctamente, o un objeto <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> cuyos números de versión principal y secundaria son 0 si se ha producido un error en la conversión.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> when the method returns.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph1">&lt;see langword="null" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> es <ph id="ph3">&lt;see langword="null" /&gt;</ph> cuando se devuelve el método.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Tries to convert the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Intenta convertir la representación de cadena de un número de versión en un objeto <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalente y devuelve un valor que indica si la conversión se realizó correctamente o no.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="input" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="input" /&gt;</ph> se convierte correctamente; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> método es similar a la <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> método, salvo que TI no produce una excepción si se produce un error en la conversión.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Instead, it returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">En su lugar, devuelve <ph id="ph1">`false`</ph> si <ph id="ph2">`input`</ph> es null, tiene menos de dos o más de cuatro componentes, tiene al menos un componente que no es un entero, tiene al menos un componente que es menor que cero o tiene al menos un componente que es mayor que <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>For the parse operation to succeed, the <ph id="ph1">`input`</ph> parameter must be in the following format:</source>
          <target state="translated">Para la operación de análisis se realice correctamente, el <ph id="ph1">`input`</ph> parámetro debe estar en el formato siguiente:</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">donde <bpt id="p1">*</bpt>principal<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secundaria<ept id="p2">*</ept>, <bpt id="p3">*</bpt>generar<ept id="p3">*</ept>, y <bpt id="p4">*</bpt>revisión<ept id="p4">*</ept> son las representaciones de cadena de la versión de cuatro componentes del número: mayor número de versión, el número de versión secundaria, el número de compilación y el número de revisión.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Componentes opcionales se muestran entre corchetes ([y]).</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The components must appear in order, and must be separated by periods.</source>
          <target state="translated">Los componentes deben aparecer en orden y deben estar separados por puntos.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> método para analizar un número de cadenas que contienen información de versión.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>