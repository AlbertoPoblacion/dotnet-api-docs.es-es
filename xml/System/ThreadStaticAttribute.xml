<Type Name="ThreadStaticAttribute" FullName="System.ThreadStaticAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66bb19d680cff4f786183f9253e5b4970a5ea7ab" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadStaticAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ThreadStaticAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadStaticAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ThreadStaticAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica que el valor de un campo estático es único para cada subproceso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un `static` campo marcado con <xref:System.ThreadStaticAttribute> no se comparte entre los subprocesos. Cada subproceso en ejecución tiene una instancia independiente del campo y por separado establece y obtiene los valores para ese campo. Si se obtiene acceso al campo en un subproceso diferente, contendrá un valor diferente.  
  
 Tenga en cuenta que, además de aplicar el <xref:System.ThreadStaticAttribute> atributo a un campo, debe definir también como un `static` campo (en C#) o un `Shared` campo (en Visual Basic).  
  
> [!NOTE]
>  No especifique los valores iniciales para los campos marcados con `ThreadStaticAttribute`, porque esa inicialización se produce solo una vez, cuando se ejecuta el constructor de clase y, por tanto, afecta a un solo subproceso. Si no especifica un valor inicial, puede confiar en el campo que se inicializa en su valor predeterminado si es un tipo de valor, o a `null` si es un tipo de referencia.  
  
 Utilice este atributo, ya que es y no se derivan de él.  
  
 Para obtener más información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 El ejemplo siguiente se crea una instancia de un generador de números aleatorios, crea diez subprocesos además el subproceso principal y, a continuación, genera dos millones de números aleatorios en cada subproceso. Usa el <xref:System.ThreadStaticAttribute> atributo para calcular la suma y el recuento de números aleatorios por subproceso. También define dos campos adicionales por subproceso, `previous` y `abnormal`, que le permite detectar daños en el generador de números aleatorios.  
  
 [!code-csharp[System.ThreadStaticAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threadstaticattribute/cs/threadsafe2a.cs#1)]
 [!code-vb[System.ThreadStaticAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threadstaticattribute/vb/threadsafe2a.vb#1)]  
  
 El ejemplo se usa el `lock` instrucción en C# y el `SyncLock` construir en Visual Basic para sincronizar el acceso al generador de números aleatorios. Esto evita que los daños en el generador de números aleatorios, lo que normalmente produce su devuelve un valor de cero para todas las llamadas subsiguientes.  
  
 El ejemplo también usa el <xref:System.Threading.CountdownEvent> clase para asegurarse de que cada subproceso ha terminado de generar números aleatorios antes de mostrar el número total de llamadas. En caso contrario, si el subproceso principal finaliza su ejecución antes de los subprocesos adicionales que genera, muestra un valor inexacto, el número total de llamadas al método.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadStaticAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ThreadStaticAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadStaticAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ThreadStaticAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>