<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab6846ef1683cfb44bd8a9eabf8b678f944bdece" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956503" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona información sobre el ajuste de una zona horaria, como la transición al horario de verano y de éste.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.TimeZoneInfo.AdjustmentRule> clase define el eficaz fechas inicial y final de un cambio horario concreto a y desde el horario de verano, respectivamente, así como su delta (la cantidad exacta por la que el ajuste hace que la hora de la zona horaria estándar cambiar). Además, dos propiedades devuelven <xref:System.TimeZoneInfo.TransitionTime> objetos que definen cuándo se produce cada transición a y desde el horario estándar.  
  
> [!NOTE]
>  Una instancia de la <xref:System.TimeZoneInfo.AdjustmentRule> clase es inmutable. Una vez creado un objeto, no se puede modificar sus valores.  
  
 Para crear un <xref:System.TimeZoneInfo.AdjustmentRule> de objeto, llame a la `static` (`Shared` en Visual Basic) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> método. A continuación, puede proporcionar una matriz de <xref:System.TimeZoneInfo.AdjustmentRule> objetos a dos de las sobrecargas de los <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> método. Para recuperar las reglas de ajuste de una zona horaria determinada, llame a su <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> método, que devuelve una matriz de <xref:System.TimeZoneInfo.AdjustmentRule> objetos.  
  
   
  
## Examples  
 El ejemplo siguiente recupera todas las zonas horarias definidas en el sistema local y muestra información completa sobre sus reglas de ajuste.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 La siguiente es una pequeña parte de la salida generada por el ejemplo. El resultado exacto variará según el sistema operativo y la fecha en que se ejecuta el ejemplo.  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="dateEnd" Type="System.DateTime" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" Index="4" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateStart">Fecha de vigencia de la regla de ajuste. Si el valor del parámetro <paramref name="dateStart" /> es <see langword="DateTime.MinValue.Date" />, esta es la primera regla de ajuste en vigor para una zona horaria.</param>
        <param name="dateEnd">Última fecha en que la regla de ajuste está en vigor. Si el valor del parámetro <paramref name="dateEnd" /> es <see langword="DateTime.MaxValue.Date" />, la regla de ajuste no tiene fecha final.</param>
        <param name="daylightDelta">Cambio horario que se deriva del ajuste. Este valor se agrega a la propiedad <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> de la zona horaria para obtener la diferencia del horario de verano correcta de la hora universal coordinada (UTC). Este valor puede estar entre -14 y 14.</param>
        <param name="daylightTransitionStart">Objeto que define el inicio del horario de verano.</param>
        <param name="daylightTransitionEnd">Objeto que define el final del horario de verano.</param>
        <summary>Crea una nueva regla de ajuste para una zona horaria determinada.</summary>
        <returns>Objeto que representa la nueva regla de ajuste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método para crear una o varias reglas de ajuste para una zona horaria personalizada. Una matriz de la <xref:System.TimeZoneInfo.AdjustmentRule> , a continuación, se pueden pasar los objetos devueltos por llamadas a este método como el `adjustmentRules` parámetro a dos sobrecargas de la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> método. El ejemplo ilustra este procedimiento.  
  
> [!NOTE]
>  El <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> método puede utilizarse solo para definir una regla de ajuste para una nueva zona horaria; no se puede usar para modificar una regla de ajuste para una zona horaria existente.  
  
 El `dateStart` y `dateEnd` parámetros deben ser valores de fecha sin un componente de tiempo o un <xref:System.ArgumentException> se produce. Se puede quitar el componente de tiempo mediante la recuperación de un <xref:System.DateTime> valor desde la fecha y del hora <xref:System.DateTime.Date%2A> propiedad tal como se muestra en las siguientes instrucciones:  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 El <xref:System.DateTime.Kind%2A> propiedad de la `dateStart` y `dateEnd` parámetros también deben ser <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
 El valor de la `daylightDelta` parámetro puede oscilar entre -14 y 14. La suma de los `daylightDelta` parámetro y el `baseUtcOffset` parámetro usado en la llamada a la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> método también debe oscilar entre -14 y 14 o una <xref:System.InvalidTimeZoneException> se produce.  
  
> [!NOTE]
>  El `daylightDelta` parámetro define la diferencia entre la hora estándar de una zona horaria y el horario de verano. No está pensado para definir el desplazamiento de hora estándar de la zona horaria de hora Universal coordinada (UTC). La <xref:System.TimeZoneInfo> clase, se supone que este desplazamiento de UTC es constante a lo largo de la vida de la zona horaria. Para reflejar un cambio en el desplazamiento de una zona horaria a la hora UTC que no está causado por la aplicación de una regla de ajuste, debe usar el <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> método para crear una nueva zona horaria personalizada.  
  
   
  
## Examples  
 El ejemplo siguiente crea una zona horaria estándar Central diferente y define tres reglas de ajuste para los períodos de 1976 a 1986, 1987-2006 y 2007 y versiones posteriores. Estas reglas se agregan a un tipo genérico <xref:System.Collections.Generic.List%601> objeto cuyos elementos se copian a un <xref:System.TimeZoneInfo.AdjustmentRule> matriz. Esta matriz, a continuación, se usa en la llamada a la <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> método.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.DateTime.Kind" /> el parámetro <paramref name="dateStart" /> o <paramref name="dateEnd" /> no es igual a <see cref="F:System.DateTimeKind.Unspecified" />.  
  
O bien 
El parámetro <paramref name="daylightTransitionStart" /> es igual al parámetro <paramref name="daylightTransitionEnd" />.  
  
O bien 
El parámetro <paramref name="dateStart" /> o <paramref name="dateEnd" /> incluye un valor de hora del día.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dateEnd" /> es anterior a <paramref name="dateStart" />.  
  
O bien 
 <paramref name="daylightDelta" /> es menor que -14 o mayor que 14.  
  
O bien 
La propiedad <see cref="P:System.TimeSpan.Milliseconds" /> del parámetro <paramref name="daylightDelta" /> no es igual a 0.  
  
O bien 
La propiedad <see cref="P:System.TimeSpan.Ticks" /> del parámetro <paramref name="daylightDelta" /> no es igual a un número entero de segundos.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha en la que la regla de ajuste deja de estar en vigor.</summary>
        <value>Valor <see cref="T:System.DateTime" /> que indica la fecha de finalización de la regla de ajuste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propiedad es un valor de fecha sin un componente de tiempo.  
  
 Dado que normalmente no se conoce la fecha de finalización de la regla de ajuste actual, puede asignar `DateTime.MaxValue.Date` a la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propiedad cuando se crea una regla de ajuste personalizado.  
  
> [!IMPORTANT]
>  A menos que haya una razón de peso para no hacerlo, debe definir la fecha de finalización de la regla de ajuste que se produzca en el intervalo de tiempo durante el cual la zona horaria cumple el horario estándar. A menos que haya un motivo convincente para hacerlo, no debe definir la fecha de finalización de la regla de ajuste que se produzca en el intervalo de tiempo durante el cual la zona horaria cumple el horario de verano. Por ejemplo, si la transición de una zona horaria de horario de verano se produce el tercer domingo de marzo y su transición al horario de verano se produce el primer domingo de octubre, la fecha efectiva de finalización de la regla de ajuste no debe 31 de diciembre de un determinado año, puesto que esa fecha se produce dentro del período de horario de verano.  
  
 De forma predeterminada, el registro de Windows XP define una regla de ajuste única cuya fecha de finalización es el viernes, 31 de diciembre, 9999 (el valor de `DateTime.MaxValue.Date`), para cada zona horaria. Para las zonas horarias en Estados Unidos, el registro de Windows Vista define dos reglas de ajuste:  
  
-   Lunes, 01 de enero, 0001 al domingo, 31 de diciembre de 2006.  
  
-   Lunes, 01 de enero de 2007, el viernes, 31 de diciembre, 9999.  
  
 Esto significa que, aunque las reglas de ajuste de zona horaria almacenadas en el registro son útiles para realizar operaciones relacionadas con la zona horaria actuales, no pueden ser usar de forma confiable para recuperar información histórica de zonas horarias. Para obtener información sobre cómo definir una zona horaria personalizada con varias reglas de ajuste que se puede usar en una aplicación compatible con zona horaria histórica, vea [Cómo: Creación de zonas horarias con reglas de ajuste](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra información acerca de todas las zonas horarias definidas en el registro de sistema del equipo local, incluidos el inicio y final de las fechas de sus reglas de ajuste.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha de entrada en vigor de la regla de ajuste.</summary>
        <value>Valor <see cref="T:System.DateTime" /> que indica si la regla de ajuste surte efecto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> propiedad es un valor de fecha sin un componente de tiempo. Define la fecha en que una regla de ajuste particular entra en vigor.  Esta es la fecha en que un conjunto de transiciones (que normalmente se definen mediante una transición al horario de verano y una transición hacia el horario estándar) entran en vigor. Por ejemplo, podría ir una regla de ajuste en vigor el 1 de enero de 2017, que proporciona una transición al horario de verano en el segundo domingo de marzo y para una transición a la hora estándar del primer domingo de noviembre. Tenga en cuenta que la fecha de inicio de la regla de ajuste no está asociada a la fecha de la primera transición.  
  
 Puede asignar `DateTime.MinValue.Date` a la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propiedad cuando se crea una regla de ajuste personalizado para su uso en una aplicación compatible con la zona horaria que no tiene que trabajar con información históricos de zona horaria.  
  
> [!IMPORTANT]
>  A menos que haya una razón de peso para no hacerlo, debe definir la fecha de inicio de la regla de ajuste que se produzca en el intervalo de tiempo durante el cual la zona horaria cumple el horario estándar. A menos que haya un motivo convincente para hacerlo, no debe definir la fecha de inicio de la regla de ajuste que se produzca en el intervalo de tiempo durante el cual la zona horaria cumple el horario de verano. Por ejemplo, si la transición de una zona horaria de horario de verano se produce el tercer domingo de marzo y su transición al horario de verano se produce el primer domingo de octubre, la fecha de inicio efectiva de la regla de ajuste no debe el 1 de enero de una determinada año, puesto que esa fecha se produce dentro del período de horario de verano.  
  
 De forma predeterminada, el registro de Windows XP define una regla de ajuste única cuya fecha de inicio es el lunes, 01 de enero, 0001 (el valor de `DateTime.MinValue.Date`), para cada zona horaria. Para las zonas horarias en Estados Unidos, el registro de Windows Vista define dos reglas de ajuste:  
  
-   Lunes, 01 de enero, 0001 al domingo, 31 de diciembre de 2006.  
  
-   Lunes, 01 de enero de 2007, el viernes, 31 de diciembre, 9999.  
  
 Esto significa que, aunque las reglas de ajuste de zona horaria almacenadas en el registro son útiles para realizar operaciones relacionadas con la zona horaria actuales, no pueden ser usar de forma confiable para recuperar información histórica de zonas horarias. Para obtener información sobre cómo definir una zona horaria personalizada con varias reglas de ajuste que se puede usar en una aplicación compatible con zona horaria histórica, vea [Cómo: Creación de zonas horarias con reglas de ajuste](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra información acerca de todas las zonas horarias definidas en el registro de sistema del equipo local, incluidos el inicio y final de las fechas de sus reglas de ajuste.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cantidad de tiempo necesario para formar el horario de verano de la zona horaria. Esta cantidad de tiempo se agrega al desplazamiento respecto de la hora universal coordinada (UTC) de la zona horaria.</summary>
        <value>Objeto <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que se va a agregar a los cambios de hora estándar como resultado de la regla de ajuste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fórmula siguiente define el horario de verano de la zona horaria:  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 El valor de la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propiedad puede oscilar entre 14 horas a-14 horas.  
  
> [!NOTE]
>  El <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propiedad mide la diferencia entre la hora estándar de la zona horaria y el horario de verano. No es aplicable a los cambios en el desplazamiento de una zona horaria estándar de hora Universal coordinada (UTC). Para representar una zona horaria que ha cambiado su desplazamiento de hora estándar a la hora UTC, se debe llamar a la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> método para crear una nueva zona horaria.  
  
 El valor más común de la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propiedad es 1,0 horas. La aplicación de la regla de ajuste al horario de verano aumenta el desplazamiento de la zona horaria de hora Universal coordinada (UTC) en una hora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recibe información sobre la transición anual del horario de verano a la hora estándar.</summary>
        <value>Objeto <see cref="T:System.TimeZoneInfo.TransitionTime" /> que define la transición anual del horario de verano de nuevo a la hora estándar de la zona horaria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.TimeZoneInfo.TransitionTime> objeto devuelto por la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> propiedad define una regla de fecha fija o una regla de fecha flotante para la vuelta a la hora estándar. Una regla de fecha fija proporciona el mes, día y hora del día en que se produce la transición. Una regla de fecha flotante proporciona el mes, semana, día de la semana y hora del día en que se produce la transición.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene información sobre la transición anual del horario estándar al horario de verano.</summary>
        <value>Objeto <see cref="T:System.TimeZoneInfo.TransitionTime" /> que define la transición anual de una hora estándar de la zona horaria al horario de verano.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.TimeZoneInfo.TransitionTime> objeto devuelto por la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> propiedad define una regla de fecha fija o una regla de fecha flotante para la transición al horario de verano. Una regla de fecha fija proporciona el mes, día y hora del día en que se produce la transición. Una regla de fecha flotante proporciona el mes, semana, el día de la semana y la hora del día en que se produce la transición.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other">Objeto que se va a comparar con el objeto actual.</param>
        <summary>Determina si el objeto <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> actual es igual a un segundo objeto <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.</summary>
        <returns>Es <see langword="true" /> si ambos objetos <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> tienen valores iguales; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para determinar si dos <xref:System.TimeZoneInfo.AdjustmentRule> objetos son iguales, la <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> método compara los valores de miembro de cada objeto. Dos reglas de ajuste son iguales si tienen las mismas fechas de vigencia, el mismo delta y valores idénticos para el <xref:System.TimeZoneInfo.TransitionTime> los objetos devueltos por su <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> y <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> propiedades.  
  
   
  
## Examples  
 El ejemplo siguiente se llama el <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> método para comparar las reglas de ajuste para hora estándar Central con los de hora estándar de Canadá Central y hora estándar de México.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 Este código muestra la siguiente salida en la consola:  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actúa como una función hash para los algoritmos hash y estructuras de datos como las tablas hash.</summary>
        <returns>Entero con signo de 32 bits que actúa como el código hash para el objeto <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender">Objeto que inició la devolución de llamada. La funcionalidad de este parámetro aún no está implementada.</param>
        <summary>Se ejecuta cuando se completa la deserialización de un objeto <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">Objeto que se va a rellenar con datos.</param>
        <param name="context">Destino de esta serialización (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar este objeto.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no se puede usar código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
  </Members>
</Type>