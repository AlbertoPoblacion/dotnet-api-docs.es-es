<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackOverflowException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac581a268653c2ab7d911f3033653886c2ce706ba72.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81a268653c2ab7d911f3033653886c2ce706ba72</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.StackOverflowException">
          <source>The exception that is thrown when the execution stack overflows because it contains too many nested method calls.</source>
          <target state="translated">Excepción que se produce cuando la pila de ejecución se desborda debido a que contiene demasiadas llamadas a métodos anidadas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.StackOverflowException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source><ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> is thrown for execution stack overflow errors, typically in case of a very deep or unbounded recursion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> se produce para los errores de desbordamiento de pila de ejecución, normalmente en el caso de una recursividad muy profunda o ilimitada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source><ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> uses the HRESULT COR_E_STACKOVERFLOW, which has the value 0x800703E9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> utiliza HRESULT COR_E_STACKOVERFLOW, que tiene el valor 0x800703E9.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Localloc&gt;</ph> intermediate language (IL) instruction throws <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Localloc&gt;</ph> produce la instrucción del lenguaje intermedio (IL) <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>For a list of initial property values for a <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> object, see the <ph id="ph2">&lt;xref:System.StackOverflowException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Para obtener una lista de valores de propiedad iniciales para una <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> de objetos, consulte el <ph id="ph2">&lt;xref:System.StackOverflowException.%23ctor%2A&gt;</ph> constructores.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>Version Considerations</source>
          <target state="translated">Consideraciones de versión</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>In the .NET Framework 1.0 and 1.1, you could catch a <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> object (for example, to recover from unbounded recursion).</source>
          <target state="translated">En .NET Framework 1.0 y 1.1, podría interceptar un <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> objeto (por ejemplo, para recuperarse de recursividad ilimitada).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>Starting with the .NET Framework 2.0, you can’t catch a <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> object with a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block, and the corresponding process is terminated by default.</source>
          <target state="translated">A partir de .NET Framework 2.0, no se pueden detectar un <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> objeto con un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloque y el proceso correspondiente se finaliza de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>Consequently, you should write your code to detect and prevent a stack overflow.</source>
          <target state="translated">Por lo tanto, debe escribir el código para detectar y evitar un desbordamiento de pila.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>For example, if your app depends on recursion, use a counter or a state condition to terminate the recursive loop.</source>
          <target state="translated">Por ejemplo, si la aplicación depende de la recursividad, utilice un contador o una condición de estado para terminar el bucle recursivo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>The following example uses a counter to ensure that the number of recursive calls to the <ph id="ph1">`Execute`</ph> method do not exceed a maximum defined by the MAX_RECURSIVE_CALLS constant.</source>
          <target state="translated">En el ejemplo siguiente se usa un contador para asegurarse de que el número de recursiva llamadas a la <ph id="ph1">`Execute`</ph> método no puede superar un máximo definido por la constante MAX_RECURSIVE_CALLS.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>Applying the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> attribute to a method that throws a <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph> has no effect.</source>
          <target state="translated">Aplicar el <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> atribuir a un método que produce una <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph> no tiene ningún efecto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>You still cannot handle the exception from user code.</source>
          <target state="translated">Todavía no se puede controlar la excepción del código de usuario.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>If your app hosts the common language runtime (CLR), it can specify that the CLR should unload the application domain where the stack overflow exception occurs and let the corresponding process continue.</source>
          <target state="translated">Si la aplicación hospeda common language runtime (CLR), puede especificar que el CLR debe descargar el dominio de aplicación donde se produzca una excepción de desbordamiento de pila y el proceso correspondiente pueda continuar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.StackOverflowException">
          <source>For more information, see <bpt id="p1">[</bpt>ICLRPolicyManager Interface<ept id="p1">](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ICLRPolicyManager (interfaz)<ept id="p1">](~/docs/framework/unmanaged-api/hosting/iclrpolicymanager-interface.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.StackOverflowException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> class, setting the <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The requested operation caused a stack overflow."</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph>, estableciendo la propiedad <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> de una nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "La operación solicitada provocó un desbordamiento de la pila".</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">La cadena del mensaje de error localizado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que describe el error.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>The content of message is intended to be understood by humans.</source>
          <target state="translated">Se pretende que el contenido de message sea inteligible.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> con el mensaje de error especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Referencia nula (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Cadena con el mensaje de error.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica el motivo de la excepción.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Excepción que es la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si el parámetro <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> no es una referencia nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic), la excepción actual se inicia en un bloque <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que controla la excepción interna.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.StackOverflowException" /&gt;</ph> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Una excepción que se produce como resultado directo de una excepción anterior puede incluir una referencia a la excepción anterior de la propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> devuelve el mismo valor pasado al constructor, o una referencia nula (<ph id="ph2">`Nothing`</ph> en Visual Basic) si la propiedad <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> no proporciona el valor de la excepción interna al constructor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Referencia a la excepción interna.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.StackOverflowException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Cadena con el mensaje de error.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>