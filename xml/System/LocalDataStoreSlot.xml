<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="392b84cbf1314c72e9ffdc5527e6f137f48b35aa" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48589782" /></Metadata><TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsula una ranura de memoria para almacenar datos locales. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework proporciona dos mecanismos para el uso de almacenamiento local de subprocesos (TLS): campos estáticos relacionados con subprocesos y ranuras de datos.  
  
-   Los campos estáticos relacionados con subprocesos son `static` campos (`Shared` campos en Visual Basic) que se marcan con el <xref:System.ThreadStaticAttribute> atributo. Proporcionan un mejor rendimiento que las ranuras de datos y habilitar la comprobación de tipos en tiempo de compilación.  
  
-   Las ranuras de datos son más lentas y más difícil de usar que los campos estáticos relacionados con subprocesos. Además, los datos se almacenan como tipo <xref:System.Object>, por lo que debe convertir al tipo correcto antes de usarlo. Sin embargo, puede usar las ranuras de datos cuando haya suficiente información en tiempo de compilación para asignar los campos estáticos.  
  
 Para obtener más información sobre el uso de TLS, consulte [almacenamiento Local de subprocesos: campos estáticos relacionados con subprocesos y ranuras de datos](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).  
  
 De forma similar, .NET Framework proporciona dos mecanismos para el uso de almacenamiento local en el contexto: relativas al contexto estáticas campos y ranuras de datos. Campos estáticos relacionados con el contexto son campos estáticos que están marcados con el <xref:System.ContextStaticAttribute> atributo. Las ventajas y desventajas entre el uso de estos dos mecanismos son similares a los inconvenientes de usar ranuras estáticas de campos y los datos relacionados con subprocesos.  
  
 El <xref:System.LocalDataStoreSlot> estructura actúa como una variable local almacena el mecanismo de memoria que los subprocesos y contextos pueden usar para almacenar datos específicas del contexto y subproceso, respectivamente. Common language runtime asigna una matriz de almacenamiento de datos de varias ranuras para cada proceso cuando se crea. El subproceso o contexto llama a varias funciones para asignar una ranura de datos del almacén de datos, para almacenar y recuperar un valor de la ranura de datos y para liberar una ranura de datos para reutilización después de que expire el objeto de subproceso o contexto.  
  
 Las ranuras de datos son únicas para cada subproceso o contexto; sus valores no se comparten entre los objetos de subproceso o contexto. Las ranuras de datos se pueden asignar un nombre o un número de índice.  
  
 Para obtener más información sobre el almacenamiento de datos locales, consulte <xref:System.Threading.Thread> o <xref:System.Runtime.Remoting.Contexts.Context>. El <xref:System.LocalDataStoreSlot> clase se utiliza con métodos como <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, y <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; no tiene ningún métodos de su propio que deberá usar.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se asegura de que los recursos se liberan y que se llevan a cabo otras operaciones de limpieza cuando el recolector de elementos no utilizados recupere el objeto <see cref="T:System.LocalDataStoreSlot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El recolector de elementos no utilizados llame al <xref:System.LocalDataStoreSlot.Finalize%2A> cuando el objeto actual está preparado para finalizarse.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>