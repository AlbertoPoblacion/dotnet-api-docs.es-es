<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07986ea157c411c7d8d2b8f8cc8045b040e5c96a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="04eb9-101">Origen del evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04eb9-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="04eb9-102">Objeto que no contiene datos de evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04eb9-102">An object that contains no event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="04eb9-103">Representa el método que controlará eventos que no tienen datos de evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04eb9-103">Represents the method that will handle an event that has no event data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04eb9-104">El modelo de evento de .NET Framework se basa en tener un delegado del evento que se conecta un evento con su controlador.</span><span class="sxs-lookup"><span data-stu-id="04eb9-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="04eb9-105">Para generar un evento, se necesitan dos elementos:</span><span class="sxs-lookup"><span data-stu-id="04eb9-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="04eb9-106">Un delegado que identifica el método que proporciona la respuesta al evento.</span><span class="sxs-lookup"><span data-stu-id="04eb9-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="04eb9-107">Si lo desea, una clase que contiene los datos del evento, si el evento proporciona datos.</span><span class="sxs-lookup"><span data-stu-id="04eb9-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="04eb9-108">El delegado es un tipo que define una firma, es decir, el tipo de valor devuelto y los tipos de lista de parámetros para un método.</span><span class="sxs-lookup"><span data-stu-id="04eb9-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="04eb9-109">Puede usar el tipo de delegado para declarar una variable que pueda hacer referencia a cualquier método con la misma firma que el delegado.</span><span class="sxs-lookup"><span data-stu-id="04eb9-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="04eb9-110">La firma de un delegado de controlador de eventos estándar define un método que no devuelve un valor.</span><span class="sxs-lookup"><span data-stu-id="04eb9-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="04eb9-111">Primer parámetro de este método es de tipo <xref:System.Object> y hace referencia a la instancia que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="04eb9-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="04eb9-112">Se deriva su segundo parámetro de tipo <xref:System.EventArgs> y contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="04eb9-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="04eb9-113">Si el evento no genera datos de eventos, el segundo parámetro es simplemente el valor de la <xref:System.EventArgs.Empty?displayProperty=nameWithType> campo.</span><span class="sxs-lookup"><span data-stu-id="04eb9-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="04eb9-114">En caso contrario, el segundo parámetro es un tipo derivado de <xref:System.EventArgs> y proporciona los campos o propiedades que se necesitan para contener los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="04eb9-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="04eb9-115">El <xref:System.EventHandler> delegado es un delegado predefinido que representa específicamente un método de controlador de eventos para un evento que no genera datos.</span><span class="sxs-lookup"><span data-stu-id="04eb9-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="04eb9-116">Si el evento genera datos, debe utilizar la interfaz genérica <xref:System.EventHandler%601> clase delegada.</span><span class="sxs-lookup"><span data-stu-id="04eb9-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="04eb9-117">Para asociar el evento con el método que controlará el evento, agregue una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="04eb9-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="04eb9-118">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="04eb9-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="04eb9-119">Para obtener más información sobre los delegados de controladores de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="04eb9-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04eb9-120">En el ejemplo siguiente se muestra un evento denominado `ThresholdReached` que está asociada con un <xref:System.EventHandler> delegar.</span><span class="sxs-lookup"><span data-stu-id="04eb9-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="04eb9-121">El método asignado a la <xref:System.EventHandler> delegado se llama el `OnThresholdReached` método.</span><span class="sxs-lookup"><span data-stu-id="04eb9-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>