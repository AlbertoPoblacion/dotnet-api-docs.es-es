<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParamArrayAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bbdd51cde6603fd337db607533c7be2ebff268a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbdd51cde6603fd337db607533c7be2ebff268a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ParamArrayAttribute">
          <source>Indicates that a method will allow a variable number of arguments in its invocation.</source>
          <target state="translated">Indica que un método permitirá a un número variable de argumentos en la invocación.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ParamArrayAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> indicates that a method parameter is a parameter array.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> indica que un parámetro de método es una matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>A parameter array allows the specification of an unknown number of arguments.</source>
          <target state="translated">Una matriz de parámetros permite la especificación de un número desconocido de argumentos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</source>
          <target state="translated">Una matriz de parámetros debe ser el último parámetro en una lista de parámetros formales y debe ser una matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</source>
          <target state="translated">Cuando se llama al método, una matriz de parámetros permite argumentos a un método para especificar de dos maneras:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As a single expression of a type that is implicitly convertible to the parameter array type.</source>
          <target state="translated">Como una única expresión de un tipo que sea implícitamente convertible al tipo de matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The parameter array functions as a value parameter.</source>
          <target state="translated">La matriz de parámetros funciona como un parámetro de valor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As zero or more arguments, where each argument is an expression of a type that is implictly convertible to the type of the parameter array element.</source>
          <target state="translated">Como cero o más argumentos, donde cada argumento es una expresión de un tipo que se puede convertir implícitamente al tipo de elemento de la matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The example in the next section illustrates both calling conventions.</source>
          <target state="translated">El ejemplo en la sección siguiente muestra ambas convenciones de llamada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Typically, the <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> is not used directly in code.</source>
          <target state="translated">Normalmente, el <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> no se utiliza directamente en el código.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Instead, individual language keywords, such as <ph id="ph1">`ParamArray`</ph> in Visual Basic and <ph id="ph2">`params`</ph> in C#, are used as wrappers for the <ph id="ph3">&lt;xref:System.ParamArrayAttribute&gt;</ph> class.</source>
          <target state="translated">En su lugar, palabras clave del lenguaje individuales, como <ph id="ph1">`ParamArray`</ph> en Visual Basic y <ph id="ph2">`params`</ph> en C#, se usan como contenedores para los <ph id="ph3">&lt;xref:System.ParamArrayAttribute&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>.</source>
          <target state="translated">Algunos lenguajes, como C#, incluso pueden requerir el uso de la palabra clave language y prohibir el uso de <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</source>
          <target state="translated">Durante la resolución de sobrecarga, cuando los compiladores que admiten las matrices de parámetros encuentran una sobrecarga del método que no existe, pero tiene un parámetro menos que una sobrecarga que incluye una matriz de parámetros, reemplazará el método con la sobrecarga que contiene la matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>For example, a call to the <ph id="ph1">`String.Split()`</ph> instance method (which does not exist in the <ph id="ph2">&lt;xref:System.String&gt;</ph> class) is resolved as a call to the <ph id="ph3">&lt;xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Por ejemplo, una llamada a la <ph id="ph1">`String.Split()`</ph> método de instancia (que no existe en el <ph id="ph2">&lt;xref:System.String&gt;</ph> clase) se resuelve como una llamada a la <ph id="ph3">&lt;xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The compiler will also pass an empty array of the required type to the method.</source>
          <target state="translated">El compilador también pasará una matriz vacía del tipo requerido para el método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</source>
          <target state="translated">Esto significa que el método siempre debe estar preparado para administrar una matriz cuya longitud es cero cuando procesa los elementos de la matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The example provides an illustration.</source>
          <target state="translated">En este ejemplo se ilustra.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el uso de atributos, vea <bpt id="p1">[</bpt>atributos<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that includes a <ph id="ph2">`Display`</ph> method, which is intended to display one or more formatted temperature values.</source>
          <target state="translated">En el ejemplo siguiente se define un <ph id="ph1">`Temperature`</ph> clase que incluya un <ph id="ph2">`Display`</ph> método, que está pensada para mostrar uno o más valores de temperatura con formato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The method has a single parameter, <ph id="ph1">`formats`</ph>, which is defined as a parameter array.</source>
          <target state="translated">El método tiene un único parámetro, <ph id="ph1">`formats`</ph>, que se define como una matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The following example illustrates three different calls to the <ph id="ph1">`Temperature.Display`</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra tres llamadas diferentes a los <ph id="ph1">`Temperature.Display`</ph> método.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the first, the method is passed an array of format strings.</source>
          <target state="translated">En la primera, el método se pasa una matriz de cadenas de formato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the second, the method is passed four individual format strings as arguments.</source>
          <target state="translated">En el segundo, se pasa al método cuatro cadenas de formato individuales como argumentos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the third, the method is called with no arguments.</source>
          <target state="translated">En la tercera, se llama al método sin argumentos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the <ph id="ph1">`Display`</ph> method with an empty string array.</source>
          <target state="translated">Como se muestra en el resultado del ejemplo, los compiladores de C# y Visual Basic lo traducen como una llamada a la <ph id="ph1">`Display`</ph> método con una matriz de cadena vacía.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ParamArrayAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ParamArrayAttribute" /&gt;</ph> class with default properties.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ParamArrayAttribute" /&gt;</ph> con propiedades predeterminadas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>