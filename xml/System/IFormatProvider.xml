<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c52ac56e9742cc73f06b705bf076675bb074c7a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona un mecanismo para recuperar un objeto que controle el formato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IFormatProvider> interfaz proporciona un objeto que proporciona información de formato para dar formato y las operaciones de análisis. Operaciones de formato convierten el valor de un tipo en la representación de cadena de ese valor. Métodos de formato típicos son los `ToString` métodos de un tipo, así como <xref:System.String.Format%2A>. Operaciones de análisis convierten la representación de cadena de un valor a un tipo con ese valor. Métodos de análisis típicos son `Parse` y `TryParse`.  
  
 El <xref:System.IFormatProvider> interfaz consta de un único método, <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>. <xref:System.IFormatProvider.GetFormat%2A> es un método de devolución de llamada: el análisis ni el método de formato lo llama y le pasa un <xref:System.Type> objeto que representa el tipo de objeto que espera el formato o analizar método proporcionará información de formato. El <xref:System.IFormatProvider.GetFormat%2A> método es responsable de devolver un objeto de ese tipo.  
  
 <xref:System.IFormatProvider> las implementaciones a menudo se utilizan de forma implícita mediante métodos de análisis y formato. Por ejemplo, el <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> método utiliza de forma implícita un <xref:System.IFormatProvider> implementación que representa la referencia cultural actual del sistema. <xref:System.IFormatProvider> las implementaciones también pueden especificarse explícitamente mediante métodos que tienen un parámetro de tipo <xref:System.IFormatProvider>, como <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> y <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 .NET Framework incluye las siguientes predefinidas <xref:System.IFormatProvider> implementaciones para proporcionar información específica de la referencia cultural que se usa en formato o analizar valores numéricos y de fecha y hora:  
  
-   El <xref:System.Globalization.NumberFormatInfo> (clase), que proporciona información que se usa para dar formato a números, por ejemplo, la moneda, miles separador y los símbolos de separador decimal para una referencia cultural determinada. Para obtener información acerca de las cadenas de formato predefinidos que reconoce un <xref:System.Globalization.NumberFormatInfo> objeto y se utiliza en operaciones de formato numérico, vea [cadenas de formato numérico estándar](~/docs/standard/base-types/standard-numeric-format-strings.md) y [cadenas de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   El <xref:System.Globalization.DateTimeFormatInfo> (clase), que proporciona información que se usa para dar formato a fechas y horas, como los símbolos de separador de fecha y hora para una referencia cultural determinada o el orden y el formato de año, mes y componentes de día de una fecha. Para obtener información acerca de las cadenas de formato predefinidos que reconoce un <xref:System.Globalization.DateTimeFormatInfo> objeto y se utiliza en operaciones de formato numérico, vea [cadenas de formato de hora y fecha estándar](~/docs/standard/base-types/standard-date-and-time-format-strings.md) y [cadenas de formato de hora y fecha personalizada](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   El <xref:System.Globalization.CultureInfo> (clase), que representa una referencia cultural determinada. Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve una referencia cultural específica <xref:System.Globalization.NumberFormatInfo> o <xref:System.Globalization.DateTimeFormatInfo> objeto, dependiendo de si la <xref:System.Globalization.CultureInfo> objeto se usa en un formato o análisis operación que implica números o fechas y horas.  
  
 .NET Framework también admite formatos personalizados. Normalmente esto implica la creación de una clase de formato que implementa tanto <xref:System.IFormatProvider> y <xref:System.ICustomFormatter>. Una instancia de esta clase, a continuación, se pasa como un parámetro a un método que realiza una operación de formato personalizada, como <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> en el ejemplo se ilustra este tipo una implementación personalizada que da formato a un número como un número de cuenta de 12 dígitos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo un <xref:System.IFormatProvider> implementación puede cambiar la representación de un valor de fecha y hora. En este caso, se muestra una sola fecha utilizando <xref:System.Globalization.CultureInfo> objetos que representan cuatro referencias culturales diferentes.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 En el ejemplo siguiente se muestra el uso de una clase que implementa el <xref:System.IFormatProvider> interfaz y la <xref:System.IFormatProvider.GetFormat%2A> método. El `AcctNumberFormat` clase convierte un <xref:System.Int64> valor que representa el número de cuenta en un número de cuenta de 12 dígitos con formato. Su `GetFormat` método devuelve una referencia al actual `AcctNumberFormat` instancia si el `formatType` parámetro hace referencia a una clase que implementa <xref:System.ICustomFormatter>; en caso contrario, `GetFormat` devuelve `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 La clase que implementa <xref:System.IFormatProvider> , a continuación, puede usarse en una llamada a la operación de análisis y un formato. Por ejemplo, el código siguiente llama el <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> método para generar una cadena que contiene un número de cuenta de 12 dígitos con formato.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Objeto que especifica el tipo de objeto de formato que se va a devolver.</param>
        <summary>Devuelve un objeto que proporciona servicios de formato para el tipo especificado.</summary>
        <returns>Instancia del objeto especificado por <paramref name="formatType" /> si la implementación de <see cref="T:System.IFormatProvider" /> puede proporcionar ese tipo de objeto; de lo contrario, devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> es un método de devolución de llamada que la invocación de métodos de análisis y formato para recuperar información sobre el formato de la cadena de entrada en el formato de la cadena de salida en operaciones de formato o de las operaciones de análisis. En el `formatType` parámetro, el formato o análisis método pasa el tipo de objeto que se necesitan para realizar su operación. Si el <xref:System.IFormatProvider> implementación puede proporcionar este formato o analizar el objeto, devuelve ese objeto. Si no, devuelve `null`.  
  
 Por ejemplo, en la llamada a la <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> método, el argumento del método es un <xref:System.IFormatProvider> objeto que proporciona información acerca de cómo se podría dar el formato de la representación de cadena de la instancia actual de entero. Cuando el tiempo de ejecución ejecuta el método, se llama a la <xref:System.IFormatProvider> del objeto <xref:System.IFormatProvider.GetFormat%2A> método y le pasa un <xref:System.Type> objeto que representa el <xref:System.Globalization.NumberFormatInfo> tipo. Si el <xref:System.IFormatProvider> objeto puede proporcionar un <xref:System.Globalization.NumberFormatInfo> de objeto, devuelve ese objeto. Si no puede proporcionar un objeto de ese tipo, devuelve `null`.  
  
 Puede implementar la <xref:System.IFormatProvider> interfaz y la <xref:System.IFormatProvider.GetFormat%2A> método en las clases que proporcionan el formato o análisis servicios personalizados. El <xref:System.IFormatProvider> implementación, a continuación, se pasa como argumento a cualquier sobrecarga de un análisis o método que tiene un parámetro de tipo de formato <xref:System.IFormatProvider>, como <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, o <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el uso de una clase que implementa el <xref:System.IFormatProvider> interfaz y la <xref:System.IFormatProvider.GetFormat%2A> método. El `AcctNumberFormat` clase convierte un <xref:System.Int64> valor que representa el número de cuenta en un número de cuenta de 12 dígitos con formato. Su `GetFormat` método devuelve una referencia a sí mismo si la `formatType` parámetro hace referencia a una clase que implementa <xref:System.ICustomFormatter>; en caso contrario, `GetFormat` devuelve `null`.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 Una instancia de la `AcctNumberFormat` clase puede pasarse como argumento a un método que proporciona el formato o análisis services. Por ejemplo, el código siguiente pasa un `AcctNumberFormat` clase a la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> método para generar un número de cuenta de 12 dígitos con formato.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>