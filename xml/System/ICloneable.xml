<Type Name="ICloneable" FullName="System.ICloneable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d441bf69059013e9540987ceb4c0a3f14b6cd5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <TypeSignature Language="F#" Value="type ICloneable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Admite la clonación, que crea una nueva instancia de una clase con el mismo valor que una instancia existente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ICloneable> interfaz le permite proporcionar una implementación personalizada que crea una copia de un objeto existente. El <xref:System.ICloneable> interfaz contiene un miembro, el <xref:System.ICloneable.Clone%2A> método, que está diseñado para proporcionar compatibilidad con clonación más allá del proporcionado por <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.  Para obtener más información acerca de la clonación, profundas frente a la copia superficial y ejemplos, vea el <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>El <see cref="T:System.ICloneable" /> interfaz solo es necesario que la implementación de la <see cref="M:System.ICloneable.Clone" /> método devuelve una copia de la instancia del objeto actual. No se especifica si la operación de clonación realiza una copia en profundidad, una copia superficial o algo en el intervalo. Ni requiere que todos los valores de propiedad de la instancia original que se copiará en la nueva instancia. Por ejemplo, el <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> método realiza una copia superficial de todas las propiedades excepto la <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> propiedad; siempre se establece este valor de propiedad en <see langword="false" /> en el objeto clonado. Dado que los llamadores de <see cref="M:System.ICloneable.Clone" /> no se puede esperar en el método realiza una predicción operación de clonación, se recomienda que <see cref="T:System.ICloneable" /> no se implementa en las API públicas.</para>
    </block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj" Usage="iCloneable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
        <returns>Nuevo objeto que es copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El clon resultante debe ser del mismo tipo, o ser compatible con la instancia original.  
  
 Una implementación de <xref:System.ICloneable.Clone%2A> puede realizar una copia en profundidad o una copia superficial. En una copia en profundidad, todos los objetos se repiten; en una copia superficial, se duplican únicamente los objetos de nivel superior y los niveles inferiores contienen referencias. Dado que los llamadores de <xref:System.ICloneable.Clone%2A> no se puede esperar en el método realiza una predicción operación de clonación, se recomienda que <xref:System.ICloneable> no se implementa en las API públicas.  
  
 Consulte <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> para obtener más información sobre la clonación, profundas frente a la copia superficial y ejemplos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>