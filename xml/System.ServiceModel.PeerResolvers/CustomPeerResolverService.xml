<Type Name="CustomPeerResolverService" FullName="System.ServiceModel.PeerResolvers.CustomPeerResolverService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a646743bbea150f8258221d6742e767d257d933" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37454876" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomPeerResolverService : System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomPeerResolverService extends System.Object implements class System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomPeerResolverService&#xA;Implements IPeerResolverContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomPeerResolverService : System::ServiceModel::PeerResolvers::IPeerResolverContract" />
  <TypeSignature Language="F#" Value="type CustomPeerResolverService = class&#xA;    interface IPeerResolverContract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.PeerResolvers.IPeerResolverContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, UseSynchronizationContext=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona una implementación básica de un servicio de resolución del mismo nivel personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService> define la implementación base de un servicio de la resolución del mismo nivel personalizado y proporciona la búsqueda para que la resolución de id. del registro muestre las direcciones del extremo dentro de la malla mantenida por esta resolución.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Los implementadores de resoluciones del mismo nivel personalizada deben derivar de esta clase e invalidar esas funciones concretas para las que están proporcionando las implementaciones personalizadas. Cualquier resolución del mismo nivel personalizada debe implementar al menos la interfaz <see cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />.  Además, los clientes utilizan a una resolución personalizada deben tener algún enlace superior en latencia cliente-servidor para actualizar correctamente su registro con el servicio de resolución del mismo nivel.</para>
    </block>
    <altmember cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPeerResolverService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomPeerResolverService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupInterval">
      <MemberSignature Language="C#" Value="public TimeSpan CleanupInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CleanupInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CleanupInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CleanupInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la duración del tiempo periódica después de la cual las entradas obsoletas se eliminan de la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo después del que las entradas obsoletas se eliminan de la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se debe establecer antes de que lo haga el servicio de la resolución del mismo nivel y no debe ser cero. El intervalo predeterminado es 1 minuto.  
  
 Este valor debe ser menor que el valor de <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A> para evitar la aparición de entradas obsoletas en la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El intervalo es cero o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha intentado establecer la propiedad después de una llamada a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="customPeerResolverService.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra el servicio de la resolución del mismo nivel.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Una llamada anterior a este método ha cerrado el servicio.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlShape">
      <MemberSignature Language="C#" Value="public bool ControlShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlShape" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlShape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlShape { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlShape : bool with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si el servicio de la resolución del mismo nivel comparte las referencias.</summary>
        <value>Verdadero si el servicio de la resolución del mismo nivel comparte las referencias; falso si no se comparten.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettings">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceSettings () As ServiceSettingsResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ServiceSettingsResponseInfo ^ GetServiceSettings();" />
      <MemberSignature Language="F#" Value="abstract member GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo&#xA;override this.GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" Usage="customPeerResolverService.GetServiceSettings " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los valores de respuesta concretos para el servicio de la resolución del mismo nivel.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> que contiene los valores de respuesta concretos para el servicio de la resolución del mismo nivel personalizado, incluso la limpieza y configuración del intervalo de actualización.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="customPeerResolverService.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre el servicio de la resolución del mismo nivel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llama a este método, programa la primera limpieza de tabla de búsqueda de registro basada en el valor establecido para la propiedad <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> o <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> están establecidos en un intervalo de duración de 0.</exception>
        <exception cref="T:System.InvalidOperationException">Una llamada anterior ha iniciado el servicio para este método.</exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh (System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh(class System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RefreshResponseInfo ^ Refresh(System::ServiceModel::PeerResolvers::RefreshInfo ^ refreshInfo);" />
      <MemberSignature Language="F#" Value="abstract member Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo&#xA;override this.Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo" Usage="customPeerResolverService.Refresh refreshInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RefreshResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshInfo" Type="System.ServiceModel.PeerResolvers.RefreshInfo" />
      </Parameters>
      <Docs>
        <param name="refreshInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> objeto que contiene el id. de la malla y el id. del registro de la entrada para actualizar la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</param>
        <summary>Actualiza el vencimiento de una entrada en la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> que contiene la entrada de registro recientemente actualizada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una actualización de una entrada extiende el período de tiempo durante el que sigue siendo válida. Toda la información utilizada para identificar singularmente la entrada se debe proporcionar en el objeto <xref:System.ServiceModel.PeerResolvers.RefreshInfo> proporcionado para este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="refreshInfo" /> se establece como NULL.</exception>
        <exception cref="T:System.InvalidOperationException">El servicio de la resolución del mismo nivel personalizado no se ha iniciado con una llamada anterior a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RefreshInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RefreshInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RefreshInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el período de tiempo durante el cual las entradas siguen siendo válidas en la tabla de búsqueda del registro de un servicio de la resolución del mismo nivel.</summary>
        <value>
          <see cref="T:System.TimeSpan" />que especifica el período de tiempo durante el cual las entradas siguen siendo válidas en la tabla de búsqueda del registro de un servicio de la resolución del mismo nivel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se debe establecer antes de que lo haga el servicio de la resolución del mismo nivel y no debe ser cero. El intervalo predeterminado es 2 minutos.  
  
 Cuando ha transcurrido el tiempo proporcionado a esta propiedad para una entrada determinada en la tabla de búsqueda del registro de un servicio de la resolución del mismo nivel, esa entrada se marca para eliminarla. Se elimina cuando se produce el intervalo especificado en la propiedad <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  Por ejemplo, si esta propiedad está establecida en un timespan de 10 minutos, las entradas en la tabla de búsqueda del registro se volverán obsoletas y se marcarán para su eliminación después de que el intervalo haya transcurrido. Como resultado, el cliente de la resolución del mismo nivel debe actualizarse cada diez minutos para evitar que su entrada se elimine.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El intervalo es cero o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha intentado establecer la propiedad después de una llamada a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra a un par con el servicio de la resolución del mismo nivel personalizado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para registrar un nodo entre pares en una malla concreta, se debe proporcionar un objeto <xref:System.ServiceModel.PeerResolvers.RegisterInfo> con el formato correcto para una de las sobrecargas de este método. Este objeto contiene los detalles concretos necesarios para registrar la entrada de registro que solicita el registro, incluso un GUID que identifica de forma única la entrada de registro, el id. de la malla y una dirección de punto de conexión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (System.ServiceModel.PeerResolvers.RegisterInfo registerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(class System.ServiceModel.PeerResolvers.RegisterInfo registerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(System::ServiceModel::PeerResolvers::RegisterInfo ^ registerInfo);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register registerInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registerInfo" Type="System.ServiceModel.PeerResolvers.RegisterInfo" />
      </Parameters>
      <Docs>
        <param name="registerInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> que contiene información sobre la entrada de registro para registrarla con el servicio de la resolución del mismo nivel.</param>
        <summary>Agrega una nueva entrada a la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> que contiene una copia de la entrada agregada a la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega una nueva entrada a la tabla de búsqueda del registro del servicio de la resolución del mismo nivel. Observe que los registros realizados una vez cerrado el servicio no tengan ningún efecto. Las solicitudes de la resolución no devuelven estas entradas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ya existe una entrada de registro con el mismo GUID en la tabla de búsqueda o no se ha iniciado el servicio de resolución del par personalizado a través de una llamada previa a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> proporcionado para este método fue NULL o no tiene el formato correcto.</exception>
        <exception cref="T:System.NullReferenceException">La propiedad AddressInfo del objeto proporcionada al parámetro <paramref name="registerInfo" /> fue NULL.</exception>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="meshId" /> proporcionado para este método está establecido como NULL.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (Guid clientId, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(valuetype System.Guid clientId, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Register (clientId As Guid, meshId As String, address As PeerNodeAddress) As RegisterResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(Guid clientId, System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ address);" />
      <MemberSignature Language="F#" Value="abstract member Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register (clientId, meshId, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <param name="clientId">
          <see cref="T:System.Guid" /> que especifica un identificador único para que la entrada de registro se registre con el servicio de la resolución.</param>
        <param name="meshId">
          <see cref="T:System.String" /> que especifica el id. de la malla del mismo nivel en la que participa la entrada de registro.</param>
        <param name="address">
          <see cref="T:System.ServiceModel.PeerNodeAddress" /> que contiene la dirección de extremo de la entrada de registro.</param>
        <summary>Agrega una nueva entrada a la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> que contiene una copia de la entrada agregada a la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Ya existe una entrada de registro con el mismo GUID en la tabla de búsqueda o no se ha iniciado el servicio de resolución del par personalizado a través de una llamada previa a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> proporcionado para este método fue NULL o no tiene el formato correcto.</exception>
        <exception cref="T:System.ArgumentNullException">Las propiedades MeshId o RegistrationId de objeto proporcionadas al parámetro <paramref name="refreshInfo" /> fueron NULL.</exception>
        <exception cref="T:System.NullReferenceException">La propiedad MeshId del objeto proporcionado al parámetro <paramref name="refreshInfo" /> es desconocida.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve (System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve(class System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ResolveResponseInfo ^ Resolve(System::ServiceModel::PeerResolvers::ResolveInfo ^ resolveInfo);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo&#xA;override this.Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo" Usage="customPeerResolverService.Resolve resolveInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ResolveResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolveInfo" Type="System.ServiceModel.PeerResolvers.ResolveInfo" />
      </Parameters>
      <Docs>
        <param name="resolveInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> que contiene información sobre la entrada de registro para la que el servicio de la resolución del mismo nivel buscará los extremos, si se conocen.</param>
        <summary>Devuelve una lista de puntos de conexión conocidos para una entrada de registro.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> que contiene los extremos para la entrada de registro en la tabla de búsqueda que coincide con la información proporcionada en el parámetro <paramref name="resolveInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca una entrada de registro basada en los datos proporcionados en un objeto <xref:System.ServiceModel.PeerResolvers.ResolveInfo> y devuelve cualquier dirección de extremo correspondiente situada en la tabla de búsqueda del registro del servicio de la resolución del mismo nivel. El número de direcciones de extremo devuelto es igual a o menor que el valor de la propiedad <xref:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses%2A> establecida en el objeto <xref:System.ServiceModel.PeerResolvers.ResolveInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> es NULL o no tiene el formato correcto.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe una entrada de registro con el mismo GUID en la tabla de búsqueda o no se ha iniciado el servicio de resolución del par personalizado a través de una llamada previa a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unregister(System::ServiceModel::PeerResolvers::UnregisterInfo ^ unregisterInfo);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit&#xA;override this.Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit" Usage="customPeerResolverService.Unregister unregisterInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unregisterInfo" Type="System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </Parameters>
      <Docs>
        <param name="unregisterInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> que contiene la información utilizada para identificar de forma exclusiva la entrada de registro para quitarla de la tabla de búsqueda del registro.</param>
        <summary>Quita una entrada concreta de la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">No se pudo encontrar una entrada para la entrada de registro especificada o el objeto <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> proporcionado es NULL o no tiene el formato correcto.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe una entrada de registro con el mismo GUID en la tabla de búsqueda o no se ha iniciado el servicio de resolución del par personalizado a través de una llamada previa a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Update (System.ServiceModel.PeerResolvers.UpdateInfo updateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Update(class System.ServiceModel.PeerResolvers.UpdateInfo updateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Update(System::ServiceModel::PeerResolvers::UpdateInfo ^ updateInfo);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Update updateInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateInfo" Type="System.ServiceModel.PeerResolvers.UpdateInfo" />
      </Parameters>
      <Docs>
        <param name="updateInfo">
          <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> que identifica de manera exclusiva una entrada de registro concreta y proporciona información actualizada para él.</param>
        <summary>Actualiza una entrada de la entrada de registro existente en la tabla de búsqueda del registro del servicio de la resolución del mismo nivel.</summary>
        <returns>
          <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> que contiene una copia de la entrada de entrada de registro actualizada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">No se encontró una entrada para la entrada de registro especificada o el objeto <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> proporcionado no tenía el formato correcto.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe una entrada de registro con el mismo GUID en la tabla de búsqueda o no se ha iniciado el servicio de resolución del par personalizado a través de una llamada previa a <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>