<Type Name="Point4DConverter" FullName="System.Windows.Media.Media3D.Point4DConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebd5b46dc1c33f860c2232ff29545922bb56d1fa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30666379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Point4DConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Point4DConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.Point4DConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Point4DConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point4DConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Convierte instancias de otros tipos en una estructura de <see cref="T:System.Windows.Media.Media3D.Point4D" /> y viceversa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
  
 El siguiente ejemplo se utiliza un <xref:System.Windows.Media.Media3D.Point4DConverter> estructura para convertir una cadena en un <xref:System.Windows.Media.Media3D.Point4D> estructura.  
  
```csharp  
...  
  
// Converts a String to a Point4D using a Point4DConverter  
// Returns a Point4D.  
  
Point4DConverter p4DConverter = new Point4DConverter();  
Point4D point4DResult = new Point4D();  
string string4 = "10,20,30,40";  
  
point4DResult = (Point4D)p4DConverter.ConvertFromString(string4);  
// point4DResult is equal to (10, 20, 30)  
  
...  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Media3D.Point4D" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point4DConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Point4DConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point4DConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Media3D.Point4DConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Point4DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Describe la información de contexto de un tipo.</param>
        <param name="sourceType">Tipo del origen que se va a evaluar para la conversión.</param>
        <summary>Determina si una clase puede convertirse de un tipo dado en una instancia de una estructura <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
        <returns>Indica si el tipo se puede convertir en una estructura <see cref="T:System.Windows.Media.Media3D.Point4D" />.  
  
 <list type="table"><listheader><term> Valor  
  
 </term><description> Significado  
  
 </description></listheader><item><term> false  
  
 </term><description> El convertidor no puede convertir desde el tipo proporcionado.  
  
 </description></item><item><term> true  
  
 </term><description> El convertidor puede convertir el tipo proporcionado en un objeto <see cref="T:System.Windows.Media.Media3D.Point4D" />.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Point4DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Describe la información de contexto de un tipo.</param>
        <param name="destinationType">Tipo deseado que esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> está evaluando para la conversión.</param>
        <summary>Determina si una instancia de una estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> puede convertirse en un tipo diferente.</summary>
        <returns>Indica si esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> se puede convertir en <paramref name="destinationType" />.  
  
 <list type="table"><listheader><term> Valor  
  
 </term><description> Significado  
  
 </description></listheader><item><term> false  
  
 </term><description> El convertidor no puede convertir esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> en el tipo especificado.  
  
 </description></item><item><term> true  
  
 </term><description> El convertidor puede convertir esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> en el tipo especificado.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Point4DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Describe la información de contexto de un tipo.</param>
        <param name="culture">Describe el objeto <see cref="T:System.Globalization.CultureInfo" /> del tipo que se va a convertir.</param>
        <param name="value">Objeto que se convertirá.</param>
        <summary>Intenta convertir un objeto especificado en una estructura <see cref="T:System.Windows.Media.Media3D.Point4D" />.</summary>
        <returns>La estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> creada a partir del parámetro <paramref name="value" /> convertido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Point4DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Describe la información de contexto de un tipo.</param>
        <param name="culture">CultureInfo que se respeta al convertir.</param>
        <param name="value">Estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> que se va a convertir.</param>
        <param name="destinationType">Tipo en el que se convierte esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" />.</param>
        <summary>Intenta convertir una estructura <see cref="T:System.Windows.Media.Media3D.Point4D" /> en un tipo especificado.</summary>
        <returns>Objeto que se crea de la conversión de esta estructura <see cref="T:System.Windows.Media.Media3D.Point4D" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>