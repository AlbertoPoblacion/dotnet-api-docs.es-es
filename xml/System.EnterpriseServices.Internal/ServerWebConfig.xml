<Type Name="ServerWebConfig" FullName="System.EnterpriseServices.Internal.ServerWebConfig">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb5943152eeb314504bfd1907f4480b6088ba7a8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerWebConfig extends System.Object implements class System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ServerWebConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerWebConfig&#xA;Implements IServerWebConfig" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerWebConfig : System::EnterpriseServices::Internal::IServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IServerWebConfig</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Crea un archivo Web.config para una aplicación COM+ con SOAP habilitado. También puede agregar entradas de componente al archivo para las interfaces COM que se publican en la aplicación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.EnterpriseServices.Internal.ServerWebConfig> clase se utiliza para crear un archivo Web.config durante la creación de una raíz virtual de Internet Information Services (IIS) 6.0 para una aplicación COM + con SOAP habilitado. También puede agregar elementos XML al archivo Web.config para las interfaces de componente que se agrega a la aplicación.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig> se utiliza internamente por .NET Framework. No es necesario utilizar directamente en el código.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerWebConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerWebConfig();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElement (FilePath As String, AssemblyName As String, TypeName As String, ProgId As String, WkoMode As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddElement(System::String ^ FilePath, System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ ProgId, System::String ^ WkoMode, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="WkoMode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Ruta de acceso al archivo Web.config existente.</param>
        <param name="AssemblyName">Nombre del ensamblado que contiene el tipo que se agrega.</param>
        <param name="TypeName">Nombre del tipo que se agrega.</param>
        <param name="ProgId">Identificador de programación del tipo que se agrega.</param>
        <param name="WkoMode">Constante de cadena que corresponde al nombre de un miembro de la enumeración <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />, que indica cómo se activa un objeto conocido.</param>
        <param name="Error">Cadena en la que puede escribirse un mensaje de error.</param>
        <summary>Agrega elementos XML a un archivo Web.config para una interfaz COM que se publica en una aplicación COM+ con SOAP habilitado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para el tipo especificado, el <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> método agrega al archivo Web.config el `<wellknown>` y `<activated>` elementos como elementos secundarios de la `<service>` elemento con la expresión XPath siguiente:  
  
 `/configuration/system.runtime.remoting/application/service`  
  
 El `AssemblyName`, `TypeName`, `ProgId`, y `WkoMode` parámetros se han incorporado a los valores de atributo de los dos elementos agregados.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> no debe llamarse directamente. En su lugar, llame a la <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> método.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FilePrefix, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FilePrefix, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (FilePath As String, FilePrefix As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Create(System::String ^ FilePath, System::String ^ FilePrefix, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FilePrefix" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Carpeta en la que debe crearse el archivo de configuración.</param>
        <param name="FilePrefix">Valor de cadena "Web", al que se agrega la extensión config.</param>
        <param name="Error">Cadena en la que puede escribirse un mensaje de error.</param>
        <summary>Crea un archivo Web.config para una aplicación COM+ con SOAP habilitado de modo que el archivo esté listo para que se le agreguen elementos XML para las interfaces COM que se publican.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> método crea un archivo Web.config que contiene la jerarquía de un elemento vacío con la expresión XPath siguiente:  
  
```  
/configuration/system.runtime.remoting/application/service  
```  
  
 En lugar de crear instancias de un <xref:System.EnterpriseServices.Internal.ServerWebConfig> objeto de clase y llamar al método <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> directamente, llame a la <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A> método.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>