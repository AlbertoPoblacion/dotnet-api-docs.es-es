<Type Name="IComManagedImportUtil" FullName="System.EnterpriseServices.Internal.IComManagedImportUtil">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dac09e277ac1c47204bb9edc3acdea87ea39f1d8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComManagedImportUtil" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c3f8f66b-91be-4c99-a94f-ce3b0a951039")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Identifica e instala componentes en el catálogo de COM+.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea <xref:System.EnterpriseServices.Internal.ComManagedImportUtil> para la implementación predeterminada de <xref:System.EnterpriseServices.Internal.IComManagedImportUtil>.  
  
 <xref:System.EnterpriseServices.Internal.IComManagedImportUtil> se utiliza internamente por .NET Framework. No es necesario utilizar directamente en el código.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetComponentInfo (assemblyPath As String, ByRef numComponents As String, ByRef componentInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetComponentInfo(System::String ^ assemblyPath, [Runtime::InteropServices::Out] System::String ^ % numComponents, [Runtime::InteropServices::Out] System::String ^ % componentInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath">Ruta de acceso al ensamblado.</param>
        <param name="numComponents">Cuando este método finaliza, este parámetro contiene el número de componentes del ensamblado.</param>
        <param name="componentInfo">Cuando este método finaliza, este parámetro contiene la información sobre los componentes.</param>
        <summary>Obtiene la información de componente del ensamblado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por el catálogo COM + para identificar los identificadores de clase (CLSID) y ProgID de los componentes en un archivo DLL antes de que está registrado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyPath" /> es una cadena vacía (""), contiene sólo espacios en blanco o contiene uno o más caracteres no válidos, tal y como se definen en <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
 O bien  
  
 El sistema no pudo recuperar la ruta de acceso absoluta.</exception>
        <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyPath" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="assemblyPath" /> contiene un carácter de dos puntos (":").</exception>
        <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema. Por ejemplo, en plataformas basadas en Windows, las rutas de acceso deben tener menos de 248 caracteres y los nombres de archivo deben tener menos de 260 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string filename, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string filename, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (filename As String, parname As String, appname As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ filename, System::String ^ parname, System::String ^ appname);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Ruta de acceso del ensamblado.</param>
        <param name="parname">Nombre de la partición de COM+.</param>
        <param name="appname">Nombre de la aplicación COM+.</param>
        <summary>Instala un ensamblado en una aplicación de COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> para obtener más información sobre la implementación de este método.  
  
 Este método requiere que el llamador tenga privilegios administrativos en el equipo local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Un llamador de la cadena de llamadas no tiene permiso para obtener acceso al código no administrado.</exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException">El ensamblado de entrada no dispone de un nombre seguro.</exception>
      </Docs>
    </Member>
  </Members>
</Type>