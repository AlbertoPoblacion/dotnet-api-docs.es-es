<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntimeService.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b30eb5a5e6360b690bed8bd6e4576d3411e00e47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b30eb5a5e6360b690bed8bd6e4576d3411e00e47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">Representa la clase base abstracta de la cual derivan los servicios centrales del motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated">Los servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> se pueden iniciar y detener por motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">El orden en el que se inician los servicios o se detienen, sin embargo, es indeterminado y los servicios pueden requerir la compatibilidad de otros servicios para inicializarse correctamente, y, por el contrario, puede requerir la compatibilidad de otros servicios para cerrarse correctamente cuando se detienen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">Para resolver este problema, el motor en tiempo de ejecución de flujo de trabajo proporciona dos mecanismos bifásicos para iniciar y detener los servicios.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>When <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called, the workflow runtime engine invokes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for each of its services that derive from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Cuando se llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, el motor en tiempo de ejecución de flujo de trabajo invoca el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> para cada uno de sus servicios que derivan de la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>After all of these services have been started, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event, which causes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">Una vez iniciados todos estos servicios, el motor en tiempo de ejecución de flujo de trabajo provoca el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>, que produce el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> que se va a invocar para cada servicio de  motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Your service can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to participate in this two phase process.</source>
          <target state="translated">Su servicio puede invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> para participar en este proceso de dos fases.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Similarly, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method provide this two-phase mechanism.</source>
          <target state="translated">De igual forma, cuando se llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>, el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, el evento <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> y el método <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> proporcionan este mecanismo bifásico.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The State property contains a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">La propiedad Estado contiene un valor <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> que indica si el servicio está en el proceso de iniciarse o detenerse o ya se ha iniciado o detenido por completo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when they encounter a condition that causes an unhandled exception by calling <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</source>
          <target state="translated">Servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> pueden provocar el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> cuando encuentran una condición que produce una excepción no controlada llamando <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class ultimately derives from the <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Los servicios derivados finalmente de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> derivan de la clase <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class.</source>
          <target state="translated">Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is initialized to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> se inicializa en <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph> event.</source>
          <target state="translated">Cuando se invalida en una clase derivada, representa el método al que se llamará cuando el motor en tiempo de ejecución de flujo de trabajo genere el evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for all of its workflow runtime engine services.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa un mecanismo de inicio de dos fases para que los servicios del motor en tiempo de ejecución de flujo de trabajo puedan realizar cualquier inicialización que dependa de otros servicios después de que el motor en tiempo de ejecución de flujo de trabajo haya invocado el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> para todos sus servicios de motor en tiempo de ejecución del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Después de que el motor en tiempo de ejecución de flujo de trabajo haya llamado el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> de todos sus servicios del motor en tiempo de ejecución de flujo de trabajo, genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to provide any final startup functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">Puede invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> para proporcionar cualquier funcionalidad de inicio final requerida por su servicio cuando se genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated">Se administran internamente la mecánica de suscribir y anular la suscripción al evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">Si se agrega su servicio al motor en tiempo de ejecución de flujo de trabajo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> después de que el motor en tiempo de ejecución de flujo de trabajo ya haya iniciado, el motor en tiempo de ejecución de ejecución de flujo de trabajo llamará  <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en su servicio</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">Sin embargo, en esta situación, el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> ya se ha producido, por consiguiente, su servicio puede tener que realizar cualquier inicialización que realizaría ordinariamente en <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> de dentro del método <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">Puede probar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> para determinar si se ha iniciado el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> se establece en <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> antes de invocar <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> performs no action.</source>
          <target state="translated">La implementación predeterminada de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> no realiza ninguna acción.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph> event.</source>
          <target state="translated">Cuando se invalida en una clase derivada, representa el método al que se llamará cuando el motor en tiempo de ejecución de flujo de trabajo genere el evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa un mecanismo de detención de dos fases para que los servicios del motor en tiempo de ejecución de flujo de trabajo puedan conservar alguna funcionalidad después de que el motor en tiempo de ejecución de flujo de trabajo invoque el método de sus <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> para que puedan, si es necesario, admitir el cierre de otros servicios.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Después de que el motor en tiempo de ejecución de flujo de trabajo haya llamado el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> de todos sus servicios del motor en tiempo de ejecución de flujo de trabajo, genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to provide any final shutdown functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">Puede invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> para proporcionar cualquier funcionalidad de cierre final requerida por su servicio cuando se genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated">Se administran internamente la mecánica de suscribir y anular la suscripción al evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> se elimina del motor en tiempo de ejecución de flujo de trabajo  mediante una llamada a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> mientras el motor en tiempo de ejecución de flujo de trabajo se está ejecutando, el motor en tiempo de ejecución de flujo de trabajo llamará <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> en su servicio.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">Sin embargo, no se llamará al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> para su servicio en esta situación.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Por consiguiente, su servicio puede tener que realizar cualquier cierre final que realizaría ordinariamente en <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> desde dentro del método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated">Puede probar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> para determinar si el motor en tiempo de ejecución de flujo de trabajo se está ejecutando.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> se establece en <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> antes de invocar <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> performs no action.</source>
          <target state="translated">La implementación predeterminada de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> no realiza ninguna acción.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The exception that could not be handled.</source>
          <target state="translated">La excepción que no se pudo administrar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de la instancia de flujo de trabajo asociado a la excepción no controlada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Your service can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">Su servicio puede llamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> para generar el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> cuando este se encuentra con una excepción que no puede administrar durante su ejecución.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>You should pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">Debe pasar <ph id="ph1">&lt;xref:System.Guid&gt;</ph> de la instancia de flujo de trabajo asoció a la excepción no controlada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>For example, a timer service might pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> associated with the timer for which the exception occurred.</source>
          <target state="translated">Por ejemplo, un servicio del temporizador podría pasar <ph id="ph1">&lt;xref:System.Guid&gt;</ph> asociado al temporizador para el cual se produjo la excepción.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this service.</source>
          <target state="translated">Obtiene <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> para este servicio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The workflow runtime engine sets this property before it calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on the service.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo establece esta propiedad antes de llamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en el servicio.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>When overridden in a derived class, starts the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inicia el servicio y cambia <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> a <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo invoca <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en todos sus servicios que derivan de la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> cuando se llama <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already started.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo invoca también <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> cuando un servicio de motor en tiempo de ejecución de flujo de trabajo se agrega al motor en tiempo de ejecución de flujo de trabajo mediante una llamada a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> después de que motor en tiempo de ejecución  de flujo de trabajo ya se ha iniciado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated">La implementación predeterminada de pistas <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> si el servicio se ha iniciado y ha utilizado esta información para producir la excepción adecuada si se inicia el servicio mientras ya está ejecutando.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">Puede proporcionar la funcionalidad adicional necesaria para que se inicie su servicio iniciado por el motor en tiempo de ejecución de flujo de trabajo invalidando este método.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">No hay ninguna garantía sobre qué servicios, si los hay, se detendrán o se ejecutarán cuando se llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en su servicio.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>Therefore, in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">Por consiguiente, en el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, debe realizar solo la inicialización que no dependa de la funcionalidad proporcionada por otros servicios.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">Esto incluye funcionalidad proporcionada por servicios centrales como el servicio programador.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> después de haber llamado al método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> de todos sus servicios del motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method in order to perform this initialization when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> event is raised.</source>
          <target state="translated">Si su servicio requiere inicialización adicional después de que todos los servicios del motor en tiempo de ejecución de flujo de trabajo se hayan iniciado, puede invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> para realizar esta inicialización cuando se provoca el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">Si se agrega su servicio al motor en tiempo de ejecución de flujo de trabajo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> después de que el motor en tiempo de ejecución de flujo de trabajo ya haya iniciado, el motor en tiempo de ejecución de ejecución de flujo de trabajo llamará  <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en su servicio</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">Sin embargo, en esta situación, el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> ya se ha producido, por consiguiente, su servicio puede tener que realizar cualquier inicialización que realizaría ordinariamente en <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> de dentro del método <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">Puede probar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> para determinar si se ha iniciado el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> debe ser llamado solamente por el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The following example demonstrates calling the Start method on an object derived from <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, TerminationTrackingService.</source>
          <target state="translated">El ejemplo siguiente muestra cómo llamar al método Start en un objeto derivado de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, TerminationTrackingService.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This example is from the Termination Tracking Service SDK sample.</source>
          <target state="translated">Este ejemplo pertenece al ejemplo SDK del servicio de seguimiento de finalización.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Termination Tracking Service Sample<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de seguimiento de finalización<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The service has already been started.</source>
          <target state="translated">Ya se inició el servicio.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>Gets the state of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</source>
          <target state="translated">Obtiene el estado del objeto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> implementa los mecanismos bifásicos para el inicio y detención de un servicio de motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for the service.</source>
          <target state="translated">La primera fase del mecanismo de inicio comienza cuando el motor en tiempo de ejecución de flujo de trabajo llama a la implementación del método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> para el servicio.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph>.</source>
          <target state="translated">Este método debe llamar a la implementación base de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, que establece <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> en <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">La segunda fase se produce después de que el motor en tiempo de ejecución de flujo de trabajo inicia todos sus servicios de motor en tiempo de ejecución de flujo de trabajo cuando genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> administra internamente una suscripción a este evento y su controlador establecerá <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> en <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method for the service.</source>
          <target state="translated">El mecanismo de dos fases para detener el servicio de motor en tiempo de ejecución de flujo de trabajo comienza cuando el motor en tiempo de ejecución de flujo de trabajo llama a la implementación del método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> para el servicio.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph>.</source>
          <target state="translated">Este método debe llamar a la implementación base de <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, que establece <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> en <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">Después de haber detenido todos sus servicios de motor en tiempo de ejecución de flujo de trabajo, el motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> administra internamente una suscripción a este evento y su controlador establecerá <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> en <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>When overridden in a derived class, stops the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, detiene el servicio y cambia <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> a <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo invoca <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> en todos sus servicios que derivan de la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> cuando se llama <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo invoca también <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> cuando un servicio de motor en tiempo de ejecución de flujo de trabajo es eliminado del motor en tiempo de ejecución de flujo de trabajo mediante una llamada a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated">La implementación predeterminada de pistas <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> si el servicio se ha iniciado y utiliza esta información para iniciar la excepción adecuada si se detiene el servicio antes de ser iniciado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">Puede proporcionar la funcionalidad adicional necesaria para que el motor en tiempo de ejecución de flujo de trabajo detenga su servicio invalidando este método.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>There is no guarantee about which, if any, services will be stopped or running when <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is called on your service.</source>
          <target state="translated">No hay ninguna garantía sobre qué servicios, si los hay, se detendrán o se ejecutarán cuando se llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> en su servicio.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> después de haber llamado al método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> de todos sus servicios del motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">Su servicio puede necesitar retener alguna funcionalidad residual para admitir otros servicios hasta que los métodos de detención de todos los servicios de motor en tiempo de ejecución de flujo de trabajo hayan sido invocados por el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your service must retain such functionality, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to perform any additional action required to finish stopping your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">Si su servicio debe retener esta funcionalidad, puede invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> para realizar cualquier acción adicional exigida para terminar de detener su servicio cuando se genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> se elimina del motor en tiempo de ejecución de flujo de trabajo  mediante una llamada a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> mientras el motor en tiempo de ejecución de flujo de trabajo se está ejecutando, el motor en tiempo de ejecución de flujo de trabajo llamará <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> en su servicio.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">Sin embargo, no se llamará al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> para su servicio en esta situación.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Por consiguiente, su servicio puede tener que realizar una funcionalidad de apagado adicional que realizaría ordinariamente en <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> desde dentro del método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated">Puede probar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> para determinar si el motor en tiempo de ejecución de flujo de trabajo se está ejecutando.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> debe ser llamado solamente por el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The service has not yet been started.</source>
          <target state="translated">No se inició el servicio todavía.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>