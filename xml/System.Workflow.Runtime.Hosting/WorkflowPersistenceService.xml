<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowPersistenceService.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ec1eb1e036001431540c10b6cc57bb283cfb6ce8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec1eb1e036001431540c10b6cc57bb283cfb6ce8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">La clase base abstracta de la que se derivan todos los servicios de persistencia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated">Cuando se producen ciertas condiciones mientras el flujo de trabajo está en ejecución, el motor en tiempo de ejecución de flujo de trabajo conserva información de estado sobre la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">Por ejemplo, la persistencia se puede producir cuando una transacción atómica finaliza, cuando la instancia de flujo de trabajo se vuelve inactiva, cuando el host llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> en la instancia de flujo de trabajo, o cuando una instancia de flujo de trabajo se finaliza o termina.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">Cuando la semántica del motor en tiempo de ejecución de flujo de trabajo dicta que se debe producir la persistencia, el motor en tiempo de ejecución de flujo de trabajo llama a los métodos proporcionados por un servicio de persistencia para guardar información de estado sobre la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">Igualmente, cuando el motor en tiempo de ejecución de flujo de trabajo necesita restaurar una instancia de flujo de trabajo previamente conservada, llama a los métodos proporcionados por el servicio de persistencia para cargar esta información de estado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo administra toda la semántica relacionada con el momento de realizar la persistencia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">El servicio de persistencia administra el guardado y carga de la información de estado del flujo de trabajo a o de un almacén de datos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can create a persistence service by deriving a class from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Puede crear un servicio de persistencia derivando una clase de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add your persistence service to the workflow runtime engine by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">Puede agregar su servicio de persistencia al motor de tiempo de ejecución de flujo de trabajo llamando a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> o realizando una entrada adecuada en el archivo de configuración de la aplicación.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> should only contain one persistence service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> debe contener solo uno servicio de persistencia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Windows Workflow Foundation provides the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow Foundation proporciona la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, un servicio de persistencia original que puede utilizar como es o ampliarlo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo tiene la semántica para bloquear información de estado del flujo de trabajo para el uso en entornos donde los servicios de persistencia que funcionan en diferentes podrían tener acceso a un almacén de datos único.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> to unlock previously locked workflow state information.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> proporciona la capacidad para admitir esta funcionalidad del motor en tiempo de ejecución de flujo de trabajo proporcionando un parámetro a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> que especifica si la información de estado de una instancia de flujo de trabajo se debe desbloquear en el almacén de datos, y proporcionando un método <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> para desbloquear la información de estado del flujo de trabajo previamente bloqueada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>In a persistence service that implements locking, a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> should lock the state information for a workflow instance.</source>
          <target state="translated">En un servicio de persistencia que implementa el bloqueo, una llamada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> debe bloquear la información de estado para una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Your persistence service should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">Su servicio de persistencia debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> si no guarda información de estado en su almacén de datos o si carga información de estado de su almacén de datos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">El motor de tiempo de ejecución de flujo de trabajo espera este comportamiento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">Se proporciona un mecanismo por lotes a los servicios que utilizan un almacén duradero para guardar información de estado de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">Es importante en estos casos mantener la coherencia entre el almacén duradero que usa el servicio de persistencia y el estado interno del motor de tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add functionality defined by the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface to your service, and then participate in workflow transaction batching provided by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> by adding changes to your data store as work items to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">Puede agregar funcionalidad definida por la interfaz <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> a su servicio y, a continuación, participar en procesamiento por lotes de transacción de flujo de trabajo proporcionado por <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> agregando los cambios a su almacén de datos como elementos de trabajo a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The durable store itself should implement the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">El propio almacén duradero debe implementar la interfaz <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph>, para que la información del flujo de trabajo no se conserve incorrectamente en caso de una recuperación de la transacción.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph> class.</source>
          <target state="translated">Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>The following example demonstrates creating an instance of the <ph id="ph1">`SqlWorkflowPersistenceService`</ph> class (derived from <ph id="ph2">`WorkflowPersistenceService`</ph>).</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de la clase <ph id="ph1">`SqlWorkflowPersistenceService`</ph> (derivada de <ph id="ph2">`WorkflowPersistenceService`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</source>
          <target state="translated">Este ejemplo forma parte de la muestra de SDK de Controladores de excepciones anidados, de la clase Program.cs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>For more information, see the <bpt id="p1">[</bpt>Nested Exception Handlers Sample<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</source>
          <target state="translated">Para obtener más información, consulte el <bpt id="p1">[</bpt>ejemplo de controladores de excepción anidados<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> whose serialized form is requested.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> cuyo formulario serializado se solicita.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Recupera el formulario predeterminado serializado de <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">El formulario predeterminado serializado de <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">La actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">Indica si se bloquea la actividad determinada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the given activity is blocked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se bloquea la actividad determinada; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">La actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">Recupera la finalización o suspende la información de la actividad determinada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the termination or suspend information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene la finalización o suspende información.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">La actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">Recupera el estado del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph> valor de enumeración que denota el estado del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> del ámbito completado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the activity that encloses the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> que representa la actividad que incluye el ámbito completado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">Cuando se implementa en una clase derivada, se vuelve a cargar en la memoria el ámbito completado especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> que representa el ámbito completado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine uses <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> to implement compensation.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo utiliza <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> para implementar la compensación.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">Debe restaurar una copia idéntica del ámbito completado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the completed scope in the data store.</source>
          <target state="translated">Para ello, debe restaurar un <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> válido a partir de su representación del ámbito completado en el almacén de datos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>Then you must pass this <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded methods of <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> to perform deserialization of the scope.</source>
          <target state="translated">A continuación, debe pasar <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> a uno de los métodos sobrecargados de <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> para realizar la deserialización del ámbito.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Si su servicio de persistencia no puede cargar el ámbito completado de su almacén de datos, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> con un mensaje adecuado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadCompletedContextActivity`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`LoadCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the root activity of the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de la actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">Cuando se implementa en una clase derivada, carga de nuevo en la memoria el estado especificado de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the root activity of the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> que representa la actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">Debe restaurar una copia idéntica de la actividad.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the workflow instance in the data store; then you must pass this <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> methods to deserialize the workflow instance state.</source>
          <target state="translated">Para ello, debe restaurar un <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> válido a partir de su representación de la instancia de flujo de trabajo en el almacén de datos; a continuación, debe pasar <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> a uno de los métodos <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> sobrecargados para deserializar el estado de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Si su servicio de persistencia no puede cargar el estado de la instancia de flujo de trabajo de su almacén de datos, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> con un mensaje adecuado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo implementa la semántica del bloqueo para restringir el acceso a un estado de la instancia de flujo de trabajo guardado en un almacén de datos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">Los servicios de persistencia que se ejecutan en varios procesos pueden tener acceso a esto.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">Las semántica del bloqueo está diseñadas para evitar que los servicios de persistencia que se ejecutan en dos procesos diferentes se carguen a la misma instancia de flujo de trabajo al mismo tiempo en la memoria.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">Dependiendo del tipo de entorno que pueda admitir su servicio de persistencia, puede decidir si admitir esta funcionalidad.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">Si decide admitir las semántica del bloqueo en tiempo de ejecución, y si otro proceso ha bloqueado previamente este estado de la instancia de flujo de trabajo, a continuación, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">De lo contrario, debe bloquear el acceso al estado de instancia de flujo de trabajo en su almacén de datos.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow instance state can be unlocked by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> or a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> with the unlock parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Se puede desbloquear el estado de la instancia de flujo de trabajo mediante una llamada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> o una llamada a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> con el parámetro desbloqueado establecido en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadWorkflowInstanceState`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`LoadWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The serialized form of <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">El formulario predeterminado serializado de <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The outer <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, containing the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> to restore.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>exterior, que contiene <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> para restaurar.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>Restores the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> from its serialized form.</source>
          <target state="translated">Restaura <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> a partir de su formulario serializado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The restored <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> restaurada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> que representa el ámbito completado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">Cuando se implementa en una clase derivada, guarda en la memoria el ámbito completado especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo guarda el estado de las actividades del ámbito completadas para implementar la compensación.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`activity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>; you may then choose to additionally process the <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">Debe llamar a uno de los métodos <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> sobrecargados para serializar <ph id="ph2">`activity`</ph> en <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>; a continuación, puede decidir procesar también <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> antes de escribirlo en su almacén de datos.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph>, you must restore an identical copy of the activity.</source>
          <target state="translated">Sin embargo, cuando el motor en tiempo de ejecución de flujo de trabajo llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph>, debe restaurar una copia idéntica de la actividad.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">Debe poder asociar el ámbito completado a su instancia de flujo de trabajo envolvente para marcar el ámbito como innecesario en su almacén de datos cuando la instancia de flujo de trabajo termina o se finaliza.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you should also save the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance that is associated with the completed scope; this can be obtained from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with <ph id="ph4">`activity`</ph>.</source>
          <target state="translated">Por consiguiente, también debe guardar <ph id="ph1">&lt;xref:System.Guid&gt;</ph> de la instancia de flujo de trabajo que está asociada al ámbito completado; esto se puede obtener de la propiedad <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> de <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociada a <ph id="ph4">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the completed scope as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> toma <ph id="ph2">&lt;xref:System.Guid&gt;</ph> del ámbito completado como un parámetro.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you must also save the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph> property associated with <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">Por consiguiente, también debe guardar la propiedad <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph> asociada a <ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This property can be referenced through the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph> field of <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">Se puede hacer referencia a esta propiedad a través del campo <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph> de <ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">Si implementa un servicio de persistencia que utiliza un almacén duradero, para mantener la coherencia con el estado interno del motor en runtime del flujo de trabajo, debería participar en el procesamiento por lotes de las transacciones del flujo de trabajo para aplazar la escritura real a su almacén duradero hasta un punto de confirmación del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>To participate in batching, add a work item to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property that represents the pending changes to the database, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Para participar en procesamiento por lotes, agregue un elemento de trabajo a la propiedad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> que representa los cambios pendientes en la base de datos e implemente la interfaz <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> en su servicio de persistencia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you cannot save the completed scope to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Si no puede guardar el ámbito completado en su almacén de datos, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> con un mensaje de error adecuado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveCompletedContextActivity`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`SaveCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">La actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance should not be locked; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the workflow instance should be locked.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si no se debe bloquear la instancia de flujo de trabajo; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si se debe bloquear la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">Cuando se implementa en una clase derivada, guarda el estado de la instancia de flujo de trabajo en un almacén de datos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`rootActivity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Debe llamar a uno de los métodos <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> sobrecargados para serializar <ph id="ph2">`rootActivity`</ph> en <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can then choose to additionally process the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">A continuación, puede decidir procesar también <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> antes de escribirlo en su almacén de datos.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph>, you must restore an identical copy of the root activity.</source>
          <target state="translated">Sin embargo, cuando el motor en tiempo de ejecución de flujo de trabajo llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph>, debe restaurar una copia idéntica de la actividad raíz.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you cannot save the workflow instance state to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Si no puede guardar el estado de la instancia de flujo de trabajo en su almacén de datos, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> con un mensaje de error adecuado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo proporciona la semántica del bloqueo para restringir el acceso a un estado de la instancia de flujo de trabajo guardado en el almacén de datos.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">Los servicios de persistencia pueden tener acceso a esto ejecutándose en varios hosts y señalando al mismo almacén de datos.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">La semántica del bloqueo está diseñada para evitar que los servicios de persistencia que se ejecutan en dos tiempos de ejecución de flujo de trabajo diferentes se carguen a la misma instancia de flujo de trabajo al mismo tiempo en la memoria.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">Dependiendo del tipo de entorno que pueda admitir su servicio de persistencia, puede decidir si admitir o no esta funcionalidad.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">Si decide admitir las semántica del bloqueo en tiempo de ejecución, a continuación, si un servicio de persistencia intenta guardar un estado de la instancia de flujo de trabajo bloqueado previamente por otro servicio de persistencia, debe iniciar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">Si <ph id="ph1">`unlock`</ph> es <ph id="ph2">`true`</ph>, debe desbloquear el acceso al estado de la instancia de flujo de trabajo después de guardarlo.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the workflow instance as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> toma <ph id="ph2">&lt;xref:System.Guid&gt;</ph> de la instancia de flujo de trabajo como un parámetro.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, you should save this <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Por consiguiente, debe guardar este <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can also use this <ph id="ph1">&lt;xref:System.Guid&gt;</ph> to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">También puede utilizar <ph id="ph1">&lt;xref:System.Guid&gt;</ph> para asociar la instancia de flujo de trabajo a los estados guardados de sus ámbitos completados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">Debe hacer esto porque debe poder marcar estos ámbitos completados como innecesarios cuando se complete la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> una hora final cuando la instancia de flujo de trabajo se completa o finaliza.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, if <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> or <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">Por consiguiente, si <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> es igual a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> o <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, puede eliminar sin ningún riesgo la instancia de flujo de trabajo y todos sus ámbitos completados asociados a su almacén de datos.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Alternatively, you can subscribe to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">Alternativamente, puede suscribir a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> o los eventos <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> para determinar cuando está seguro para eliminar registros asociados a la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">Si realmente elimina los registros de su almacén de datos depende de su implementación.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">Si implementa un servicio de persistencia que utiliza un almacén duradero, a continuación, para mantener la coherencia con el estado interno del motor en tiempo de ejecución de flujo de trabajo, debe participar en procesamiento por lotes de transacción de flujo de trabajo para diferir la escritura real a su almacén duradero hasta un punto de confirmación de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Para participar en procesamiento por lotes, agregue un elemento de trabajo que represente los elementos pendientes en su almacén duradero a la propiedad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>, e implemente la interfaz <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> en su servicio de persistencia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveWorkflowInstanceState`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`SaveWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> que representa el ámbito completado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">Determina si un flujo de trabajo se debe descargar cuando está inactivo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el motor en tiempo de ejecución del flujo de trabajo descarga el flujo de trabajo especificado cuando esté inactivo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnloadOnIdle`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`UnloadOnIdle`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">La actividad raíz de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">Cuando se invalida en una clase derivada, desbloquea el estado de la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">Este método es abstracto, por lo que no contiene una implementación predeterminada bloqueo y desbloqueo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> method based on the value of the unlock parameter.</source>
          <target state="translated">Cuando se implementa un servicio de persistencia personalizado, si desea implementar un esquema de bloqueo necesitará invalidar este método y proporcionar un mecanismo de bloqueo-desbloqueo en el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> basado en el valor del parámetro desbloqueado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnlockWorkflowInstanceState`</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra una implementación del método <ph id="ph1">`UnlockWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>