<Type Name="SqlWorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7258e2f9ce6c02daad9e16a4ffd45e4f7174ab18" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlWorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowPersistenceService implements class System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlWorkflowPersistenceService&#xA;Inherits WorkflowPersistenceService&#xA;Implements IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlWorkflowPersistenceService : System::Workflow::Runtime::Hosting::WorkflowPersistenceService, System::Workflow::Runtime::IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowPersistenceService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Runtime.IPendingWork</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un servicio de persistencia que utiliza una base de datos de SQL para almacenar información de estado del flujo de trabajo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 La clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> representa un servicio de persistencia completamente funcional. Puede utilizar este servicio predefinido para conservar y recuperar información de estado del flujo de trabajo acerca de una instancia de flujo de trabajo, cuando la solicita el motor en tiempo de ejecución del flujo de trabajo  
  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> participa en la funcionalidad de procesamiento por lotes de transacciones de flujo de trabajo proporcionada por <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>. Es decir, agrega a <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> los objetos que representan las escrituras pendientes en la base de datos SQL, e implementa la interfaz <xref:System.Workflow.Runtime.IPendingWork>.  
  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> admite el bloqueo de las instancias de flujo de trabajo. Esta característica se utiliza cuando varios tiempos de ejecución de flujo de trabajo comparten la misma base de datos. Se utiliza una columna de la tabla de la base de datos SQL para marcar una instancia de flujo de trabajo como bloqueada siempre que la utilice un motor en tiempo de ejecución de flujo de trabajo. <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> no carga una instancia de flujo de trabajo que está marcada como "en uso" por otro tiempo de ejecución. Normalmente, estos bloqueos se liberan cuando se conserva la instancia de flujo de trabajo, por ejemplo, en inactivo, realización o finalización. Los bloqueos también se pueden liberar automáticamente después de un período de inactividad. Este período de inactividad puede establecerse mediante el constructor de la clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.  También puede establecerse a través del archivo de configuración.  
  
 Para obtener más información acerca de la persistencia en general, vea Servicios la <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> clase.  
  
 Las instancias de flujo de trabajo pueden contener temporizadores si, por ejemplo, tienen una <xref:System.Workflow.Activities.DelayActivity>. Para los flujos de trabajo que contienen temporizadores, <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> graba la hora a la que expirará el próximo temporizador del flujo de trabajo. <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> sondea periódicamente la base de datos en busca de los flujos de trabajo cuyos temporizadores han expirado. La frecuencia del intervalo de sondeo puede establecerse mediante el constructor <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> o a través de un archivo de configuración.  
  
> [!NOTE]
>  Al utilizar <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> y <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> en una aplicación de flujo de trabajo, se recomienda utilizar una base de datos única para la persistencia y el seguimiento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene todos los parámetros de inicio.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> con los parámetros especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se invoca este constructor cuando el motor en tiempo de ejecución de flujo de trabajo carga los servicios desde un archivo de configuración de la aplicación. También se puede invocar mediante programación con el parámetro `NameValueCollection`. Los parámetros válidos son `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, y `EnableRetries`. Si los parámetros contienen alguna otra clave, se inicia una <xref:System.ArgumentException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parameters" /> contiene una cadena de conexión de la base de datos no válida.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Cadena de conexión a la base de datos válida.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> utilizando la cadena de conexión a la base de datos.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool unloadOnIdle, valuetype System.TimeSpan instanceOwnershipDuration, valuetype System.TimeSpan loadingInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, unloadOnIdle As Boolean, instanceOwnershipDuration As TimeSpan, loadingInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="unloadOnIdle" Type="System.Boolean" />
        <Parameter Name="instanceOwnershipDuration" Type="System.TimeSpan" />
        <Parameter Name="loadingInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString">Cadena de conexión a la base de datos válida.</param>
        <param name="unloadOnIdle">
          <see langword="true" /> para descargar el flujo de trabajo cuando está en estado inactivo.</param>
        <param name="instanceOwnershipDuration">Duración de tiempo que se mantienen los bloqueos de los flujos de trabajo inactivos.</param>
        <param name="loadingInterval">Frecuencia con la que el servicio de persistencia sondea la base de datos en busca de flujos de trabajo con temporizadores que han expirado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> mediante una cadena de conexión a la base de datos y otros parámetros.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que la utilización de este constructor (qué proporciona un valor para `instanceOwnershipDuration`) habilita el bloqueo. Para crear un servicio de persistencia que no habilite el bloqueo, utilice un constructor distinto que no especifique `instanceOwnershipDuration`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableRetries">
      <MemberSignature Language="C#" Value="public bool EnableRetries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRetries" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRetries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRetries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece un valor que especifica si <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> vuelve a intentar confirmar un lote de trabajo.</summary>
        <value>
          <see langword="true" /> si el servicio debe reintentar confirmar el lote de trabajo; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los siguientes elementos de trabajo no pueden procesarse por lotes y cualquier reintento de transacción debe controlarse a través de la propiedad `EnableRetries`.  
  
-   Sondeo en busca de temporizadores de base de datos que han expirado  
  
-   Carga de estados de instancia de flujo de trabajo  
  
-   Recarga de instancias de flujo de trabajo cuando se inicia el motor en tiempo de ejecución del flujo de trabajo  
  
-   Llamada a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.  
  
 Además de establecerse mediante programación, esta funcionalidad puede habilitarse mediante un archivo de configuración. Para obtener más información acerca de cómo establecer esta propiedad mediante un archivo de configuración, consulte [archivos de configuración de flujo de trabajo](http://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).  
  
 Para obtener información general acerca de cómo reintentar transacciones de lotes de trabajo, consulte [información de estado de procesamiento por lotes en flujos de trabajo](http://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllWorkflows () As IEnumerable(Of SqlPersistenceWorkflowInstanceDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Workflow::Runtime::Hosting::SqlPersistenceWorkflowInstanceDescription ^&gt; ^ GetAllWorkflows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera descripciones de instancias de todos los flujos de trabajo conservados.</summary>
        <returns>Lista de todos los flujos de trabajo conservados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid id, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadCompletedContextActivity (id As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid id, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="id">
          <see cref="T:System.Guid" /> de la actividad del ámbito.</param>
        <param name="outerActivity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que incluye la actividad del ámbito.</param>
        <summary>Recupera el ámbito completado especificado desde la base de datos.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa el ámbito completado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor en tiempo de ejecución de flujo de trabajo utiliza <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> durante la compensación. El motor en tiempo de ejecución del flujo de trabajo debería ser el único que llamara <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se pudo encontrar un ámbito que coincida con <paramref name="id" /> en la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadExpiredTimerWorkflowIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Guid&gt; LoadExpiredTimerWorkflowIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; LoadExpiredTimerWorkflowIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadExpiredTimerWorkflowIds () As IList(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Guid&gt; ^ LoadExpiredTimerWorkflowIds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una lista de identificadores de flujos de trabajo con temporizadores que han expirado.</summary>
        <returns>Lista de identificadores de flujos de trabajo con temporizadores que han expirado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan LoadingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LoadingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LoadingInterval { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la longitud del intervalo de carga.</summary>
        <value>Frecuencia con la que el servicio de persistencia sondea la base de datos en busca de flujos de trabajo con temporizadores que han expirado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado es 2 minutos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadWorkflowInstanceState (id As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <see cref="T:System.Guid" /> del estado de la instancia de flujo de trabajo.</param>
        <summary>Recupera el estado de la instancia de flujo de trabajo especificado desde la base de datos.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa la actividad raíz de la instancia de flujo de trabajo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor en tiempo de ejecución del flujo de trabajo debería ser el único que llamara <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se pudo encontrar un estado de la instancia de flujo de trabajo que coincida con <paramref name="id" /> en la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia un nuevo temporizador y recupera las instancias de flujo de trabajo que se están ejecutando.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity completedScopeActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveCompletedContextActivity (completedScopeActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ completedScopeActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedScopeActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="completedScopeActivity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa el ámbito completado.</param>
        <summary>Guarda el estado del ámbito completado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `completedScopeActivity` se serializa y agrega a <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">La actividad raíz de la instancia de flujo de trabajo.</param>
        <param name="unlock">
          <see langword="true" /> si no se debe bloquear la instancia de flujo de trabajo; <see langword="false" /> si se debe bloquear la instancia de flujo de trabajo.</param>
        <summary>Guarda el estado de una instancia de flujo de trabajo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `rootActivity` se serializa y escribe en <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. El <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> predefinido implementa el bloqueo del estado de la instancia de flujo de trabajo. El usuario debe configurar el parámetro `instanceOwnershipDuration` en el constructor. Este valor decide el intervalo de tiempo durante el cual un host puede bloquear la instancia. Si varios hosts comparten la misma base de datos y servicio de persistencia, y otro host intenta cargar la instancia durante este intervalo, se produce una clase <xref:System.Workflow.Runtime.WorkflowOwnershipException>. Para obtener más información, vea la clase <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInstanceId">
      <MemberSignature Language="C#" Value="public Guid ServiceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ServiceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ServiceInstanceId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de la instancia de servicio.</summary>
        <value>Identificador de la instancia de servicio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado es `Guid.Empty`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal override void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor en tiempo de ejecución del flujo de trabajo es el único que debería llamar a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene el servicio y el temporizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Commit">
      <MemberSignature Language="C#" Value="void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Commit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">Objeto <see cref="T:System.Transactions.Transaction" />.</param>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> de elementos de trabajo que se van a escribir en la base de datos.</param>
        <summary>Escribe una <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados en la base de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los objetos de estado serializados incluidos en `items` se escriben en la base de datos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Workflow.Runtime.Hosting.PersistenceException">Se produjo un error al intentar escribir en la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Complete">
      <MemberSignature Language="C#" Value="void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Complete (succeeded As Boolean, items As ICollection) Implements IPendingWork.Complete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Complete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">
          <see langword="true" /> si la confirmación se realizó correctamente; de lo contrario, <see langword="false" />.</param>
        <param name="items">Una <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados.</param>
        <summary>Completa el lote de trabajo y libera cualquier recurso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la implementación predefinida del <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>   
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> es una operación inefectiva. Si hereda desde la clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> y la extiende, puede utilizar <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> para realizar cualquier acción requerida en `items` dictados por su implementación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.MustCommit">
      <MemberSignature Language="C#" Value="bool IPendingWork.MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.Runtime.IPendingWork.MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function MustCommit (items As ICollection) As Boolean Implements IPendingWork.MustCommit" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.Runtime.IPendingWork.MustCommit(System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::MustCommit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados que van a escribirse en la base de datos.</param>
        <summary>Devuelve un valor que indica si la colección de objetos de estado serializados debería escribirse en la base de datos.</summary>
        <returns>
          <see langword="true" /> indica que debería confirmarse el lote.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> siempre devuelve `true`, que indica al motor en tiempo de ejecución del flujo de trabajo que invoque <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> en el lote.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa la actividad raíz de la instancia de flujo de trabajo.</param>
        <summary>Devuelve un valor que indica si se descarga el flujo de trabajo cuando se encuentra en estado inactivo.</summary>
        <returns>
          <see langword="true" /> si se descarga el flujo de trabajo cuando está en un estado inactivo; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa la actividad raíz de la instancia de flujo de trabajo.</param>
        <summary>Desbloquea el acceso al estado de la instancia de flujo de trabajo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método lo utiliza el tiempo de ejecución del flujo de trabajo para desbloquear un estado de instancia de flujo de trabajo en el almacén de datos sin persistencia, y es llamado por el tiempo de ejecución del flujo de trabajo si éste necesita desbloquear el estado sin persistencia, por ejemplo, en el caso de <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>