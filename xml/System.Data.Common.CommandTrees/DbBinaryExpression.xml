<Type Name="DbBinaryExpression" FullName="System.Data.Common.CommandTrees.DbBinaryExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e69676de308cc3dc0b1c7048f28343cc68a73f7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBinaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbBinaryExpression abstract : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ea47a-101">Implementa la funcionalidad básica que requieren las expresiones que aceptan dos operandos de expresión.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea47a-101">Implements the basic functionality required by expressions that accept two expression operands.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Left { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea47a-102">Obtiene o establece la <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define el argumento izquierdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-102">Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea47a-103">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define el argumento izquierdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-103">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea47a-104">Los tipos de expresión derivados pueden realizar comprobaciones de tipo más estrictas cuando se establece la propiedad <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea47a-104">Derived expression types might perform stricter type checks when the <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> property is set.</span></span> <span data-ttu-id="ea47a-105">Por ejemplo, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requiere que la expresión izquierda tenga un tipo de resultado de colección, mientras que <xref:System.Data.Common.CommandTrees.DbAndExpression> requiere un tipo de resultado Boolean.</span><span class="sxs-lookup"><span data-stu-id="ea47a-105">For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type.</span></span> <span data-ttu-id="ea47a-106">Normalmente, los tipos de expresión derivados no permitirán que <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> se establezca en una expresión con un tipo de resultado que no sea igual o no se pueda promover al tipo de resultado del valor actual.</span><span class="sxs-lookup"><span data-stu-id="ea47a-106">Typically, derived expression types will not allow <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea47a-107">La expresión es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-107">The expression is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ea47a-108">La expresión no está asociada al árbol de comandos de la <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-108">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span>
          </span>
          <span data-ttu-id="ea47a-109">o su tipo de resultado no es igual o no se puede promover al tipo requerido para el argumento izquierdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-109">or its result type is not equal or promotable to the required type for the left argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Right { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea47a-110">Obtiene o establece la <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define el argumento derecho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-110">Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea47a-111">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define el argumento derecho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-111">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea47a-112">Los tipos de expresión derivados pueden realizar comprobaciones de tipo más estrictas cuando se establece la propiedad <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea47a-112">Derived expression types might perform stricter type checks when the <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> property is set.</span></span> <span data-ttu-id="ea47a-113">Por ejemplo, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requiere que la expresión derecha tenga un tipo de resultado de colección, mientras que <xref:System.Data.Common.CommandTrees.DbAndExpression> requiere un tipo de resultado Boolean.</span><span class="sxs-lookup"><span data-stu-id="ea47a-113">For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type.</span></span> <span data-ttu-id="ea47a-114">Normalmente, los tipos de expresión derivados no permitirán que <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> se establezca en una expresión con un tipo de resultado que no sea igual o no se pueda promover al tipo de resultado del valor actual.</span><span class="sxs-lookup"><span data-stu-id="ea47a-114">Typically, derived expression types will not allow <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea47a-115">La expresión es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-115">The expression is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ea47a-116">La expresión no está asociada al árbol de comandos de la <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-116">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span>
          </span>
          <span data-ttu-id="ea47a-117">o su tipo de resultado no es igual o no se puede promover al tipo requerido para el argumento derecho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea47a-117">or its result type is not equal or promotable to the required type for the right argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>