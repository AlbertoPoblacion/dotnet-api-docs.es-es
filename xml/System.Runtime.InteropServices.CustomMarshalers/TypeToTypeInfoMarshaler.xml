<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5d17e-101">Calcula las referencias de la interfaz <see langword="ITypeInfo" /> no administrada a la clase <see cref="T:System.Type" /> administrada y de la clase <see cref="T:System.Type" /> administrada a la interfaz <see langword="ITypeInfo" /> no administrada.</span><span class="sxs-lookup"><span data-stu-id="5d17e-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-102">El `ITypeInfo` interfaz expuesta para un tipo de .NET se basa en los metadatos que aparecerían en una biblioteca de tipos exportada.</span><span class="sxs-lookup"><span data-stu-id="5d17e-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="5d17e-103">Del mismo modo, el <xref:System.Type> exponer la instancia para una `ITypeInfo` interfaz se basa en los metadatos que pudiera aparecer en un ensamblado importado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="5d17e-104">Las marcas de importador de la biblioteca de tipos (Tlbimp.exe) `ITypeInfo` parámetros con el adecuado <xref:System.Runtime.InteropServices.MarshalAsAttribute> con el <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> miembro de enumeración cuando convierte las firmas que utilizan `ITypeInfo` parámetros para las firmas que utilizan <xref:System.Type> parámetros.</span><span class="sxs-lookup"><span data-stu-id="5d17e-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="5d17e-105">La misma funcionalidad de conversión puede realizarse sin el contador de referencias personalizado, mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> y <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d17e-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="5d17e-106">Objeto administrado que se va a destruir.</span><span class="sxs-lookup"><span data-stu-id="5d17e-106">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="5d17e-107">Realiza la limpieza necesaria en los datos administrados cuando ya no es necesario.</span><span class="sxs-lookup"><span data-stu-id="5d17e-107">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-108">CLR llama a este método para limpiar los datos administrados asignados en el <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5d17e-108">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="5d17e-109">Puntero a los datos no administrados que se van a destruir.</span><span class="sxs-lookup"><span data-stu-id="5d17e-109">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="5d17e-110">Realiza la limpieza necesaria en los datos no administrados cuando ya no es necesario.</span><span class="sxs-lookup"><span data-stu-id="5d17e-110">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-111">CLR llama a este método para limpiar los datos no administrados asignados en el <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5d17e-111">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="5d17e-112">Parámetro "cookie" de cadena que puede usar el contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-112">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="5d17e-113">Devuelve una instancia del contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-113">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="5d17e-114">Una instancia del contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-114">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-115">Todos los contadores de referencias personalizados deben implementar este método, aunque no es parte de la <xref:System.Runtime.InteropServices.ICustomMarshaler> definición de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="5d17e-115">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d17e-116">Devuelve el tamaño en bytes de los datos no administrados de los que se van a calcular las referencias.</span><span class="sxs-lookup"><span data-stu-id="5d17e-116">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="5d17e-117">-1 para indicar que el tipo que controla este contador de referencias no es un tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="5d17e-117">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-118">Dado que el cálculo de referencias personalizado de tipos de valor no se admite en .NET Framework, este método siempre devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="5d17e-118">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="5d17e-119">Objeto administrado que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="5d17e-119">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="5d17e-120">Calcula las referencias de un objeto de código administrado respecto al no administrado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-120">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="5d17e-121">Un puntero al objeto no administrado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-121">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-122">CLR llama a este método con la instancia especificada de un objeto administrado para convertir ese objeto de código administrado a código no administrado y devuelve un puntero al objeto no administrado adecuado, que representa la vista COM de ese objeto.</span><span class="sxs-lookup"><span data-stu-id="5d17e-122">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d17e-123"><paramref name="pManagedObj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d17e-123"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="5d17e-124">Un puntero al objeto no administrado que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="5d17e-124">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="5d17e-125">Calcula las referencias de un objeto de código no administrado respecto al administrado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-125">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="5d17e-126">Un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="5d17e-126">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d17e-127">CLR llama a este método con el puntero especificado a un objeto no administrado para convertir ese objeto de código no administrado a código administrado y devuelve un objeto administrado que representa la vista administrada de los datos no administrados.</span><span class="sxs-lookup"><span data-stu-id="5d17e-127">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d17e-128"><paramref name="pNativeData" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d17e-128"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>