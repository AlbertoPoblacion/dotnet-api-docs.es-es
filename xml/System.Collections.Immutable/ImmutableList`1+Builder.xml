<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableList`1+Builder.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5306457b56ab4b2273eb07eecea5c4f9fbc8b4028.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">306457b56ab4b2273eb07eecea5c4f9fbc8b4028</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.</source>
          <target state="translated">Representa una lista que se transforma con poca o ninguna asignación de memoria y que puede generar o compilar instancias de lista inmutables muy eficazmente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>Paquete NuGet<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>sobre las colecciones inmutables y la instalación<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Although <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> and other methods already provide fast bulk change operations on the list, the <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> class allows multiple combinations of changes to be made to a list with equal efficiency.</source>
          <target state="translated">Aunque <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> y otros métodos ya proporcionan las operaciones de cambio rápido de forma masiva en la lista, la <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> clase permite varias combinaciones de los cambios que se realizan en una lista con eficacia igual.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>The item to add to the list.</source>
          <target state="translated">Elemento que va a agregarse a la lista.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>Adds an item to the immutable list.</source>
          <target state="translated">Agrega un elemento a la lista inmutable.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to add to the end of the list.</source>
          <target state="translated">Elementos que se agregan al final de la lista.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Adds a series of elements to the end of this list.</source>
          <target state="translated">Agrega una serie de elementos al final de esta lista.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The object to locate.</source>
          <target state="translated">Objeto que se va a buscar.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">El valor puede ser null para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Busca en toda la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> un elemento usando el comparador predeterminado y devuelve el índice de base cero del elemento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Índice de base cero del elemento de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si se encuentra el elemento; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> no contiene el valor especificado, el método devuelve un entero negativo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Cuando se inserta el valor en el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Objeto que se va a buscar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Este valor puede ser null para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">Implementación que se va a utilizar al comparar elementos, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> para el comparador predeterminado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Busca la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> completa para un elemento usando el comparador especificado y devuelve el índice de base cero del elemento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Índice de base cero del elemento de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si se encuentra el elemento; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> no contiene el valor especificado, el método devuelve un entero negativo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Cuando se inserta el valor en el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">Índice inicial de base cero del intervalo que se va a buscar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to search.</source>
          <target state="translated">Longitud del intervalo en el que se va a buscar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Objeto que se va a buscar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Este valor puede ser null para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">Implementación que se va a utilizar al comparar elementos, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> para el comparador predeterminado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the specified range of the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Busca en el rango especificado de <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> un elemento usando el comparador especificado y devuelve el índice de base cero del elemento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Índice de base cero del elemento de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si se encuentra el elemento; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> no contiene el valor especificado, el método devuelve un entero negativo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Cuando se inserta el valor en el <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Clear">
          <source>Removes all items from the immutable list.</source>
          <target state="translated">Elimina todos los elementos de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objeto que se va a buscar en la lista.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>Determines whether the immutable list contains a specific value.</source>
          <target state="translated">Determina si la lista inmutable contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is found in the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se encuentra en la lista; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The type of the output of the delegate converter function.</source>
          <target state="translated">Tipo del resultado de la función de conversión de delegado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The converter function.</source>
          <target state="translated">Función de conversión.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>Creates a new immutable list from the list represented by this builder by using the converter function.</source>
          <target state="translated">Crea una nueva lista inmutable de la lista representada por este generador con la función de conversión.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>A new immutable list from the list represented by this builder.</source>
          <target state="translated">Nueva lista inmutable de la lista representada por este generador.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde la lista inmutable.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copia toda la lista inmutable en una matriz unidimensional compatible, empezando en el principio de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde la lista inmutable.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in array at which copying begins.</source>
          <target state="translated">Índice de base cero de la matriz donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copia la lista inmutable completa en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in the source immutable list at which copying begins.</source>
          <target state="translated">Índice de base cero de la lista inmutable de origen donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde la lista inmutable.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Número de elementos que se van a copiar.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copia la lista inmutable completa en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>Gets the number of elements in this immutable list.</source>
          <target state="translated">Obtiene el número de elementos de esta lista inmutable.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>The number of elements in this list.</source>
          <target state="translated">Número de elementos de esta lista.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Delegado que define las condiciones de los elementos que se van a buscar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Determina si la lista inmutable contiene elementos que cumplen las condiciones definidas por el predicado especificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la lista inmutable contiene uno o varios elementos que cumplen las condiciones definidas por el predicado especificado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la primera aparición en toda la lista inmutable.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Primer elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Delegado que define las condiciones de los elementos que se van a buscar.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>Retrieves all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Recupera todos los elementos que coinciden con las condiciones definidas por el predicado especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.</source>
          <target state="translated">Lista inmutable que contiene todos los elementos que cumplen las condiciones definidas por el predicado especificado, si se encuentran; en caso contrario, devuelve una lista inmutable vacía.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en toda la lista inmutable.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la lista inmutable que va desde el índice especificado hasta el último elemento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Número de elementos de la sección en la que se va a realizar la búsqueda.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la lista inmutable que comienza en el índice especificado y contiene el número especificado de elementos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la última aparición en toda la lista inmutable.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Último elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en toda la lista inmutable.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda hacia atrás.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la lista inmutable que va desde el primer elemento hasta el índice especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda hacia atrás.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Número de elementos de la sección en la que se va a realizar la búsqueda.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegado que define las condiciones del elemento que se va a buscar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la lista inmutable que contiene el número especificado de elementos y termina en el índice especificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>The delegate to perform on each element of the list.</source>
          <target state="translated">Delegado para realizar la acción en cada elemento de la lista.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>Performs the specified action on each element of the list.</source>
          <target state="translated">Realiza la acción especificada en cada elemento de la lista.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>An enumerator that can be used to iterate through the list.</source>
          <target state="translated">Un enumerador que se puede utilizar para recorrer en iteración la lista.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The zero-based index at which the range starts.</source>
          <target state="translated">Índice de base cero en el que empieza el intervalo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">Número de elementos del intervalo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>Creates a shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Crea una copia superficial de un intervalo de elementos en la lista inmutable de origen.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Copia superficial de un intervalo de elementos en la lista inmutable de origen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en el rango de elementos de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dentro del intervalo de elementos de la lista inmutable, si se encuentra; de lo contrario, –1.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (cero) es válido en una lista vacía.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el índice especificado hasta el último elemento.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the last element, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde <ph id="ph1">&lt;paramref name="index" /&gt;</ph> hasta el último elemento, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (cero) es válido en una lista vacía.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Número de elementos de la sección en la que se va a realizar la búsqueda.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la lista inmutable que comienza en el índice especificado y contiene el número especificado de elementos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que comienza en <ph id="ph1">&lt;paramref name="index" /&gt;</ph> y contiene el número de elementos de <ph id="ph2">&lt;paramref name="count" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (cero) es válido en una lista vacía.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">Número de elementos que se van a buscar.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">Comparador de valores que se utilizará para comparar la igualdad de elementos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> que comienza en el índice especificado y contiene el número especificado de elementos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que comienza en <ph id="ph1">&lt;paramref name="index" /&gt;</ph> y contiene el número de elementos de <ph id="ph2">&lt;paramref name="count" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero donde debe insertarse <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The object to insert into the immutable list.</source>
          <target state="translated">Objeto que se va a insertar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>Inserts an item to the immutable list at the specified index.</source>
          <target state="translated">Inserta un elemento en la lista inmutable en el índice especificado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">Índice de base cero donde se deben insertar los nuevos elementos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be inserted into the immutable list.</source>
          <target state="translated">Colección cuyos elementos se deben insertar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are null, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">La propia colección no puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>, pero puede contener elementos null si el tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> es un tipo de referencia.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the elements of a collection into the immutable list at the specified index.</source>
          <target state="translated">Inserta los elementos de una colección en la lista inmutable en el índice especificado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The index of the item to get or set.</source>
          <target state="translated">Índice del elemento que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>Gets or sets the value for a given index in the list.</source>
          <target state="translated">Obtiene o establece el valor de un índice determinado de la lista.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The value at the specified index.</source>
          <target state="translated">Valor en el índice especificado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la última aparición en toda la lista inmutable.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire immutable list, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> en toda la lista inmutable, si se encuentra; en caso contrario, –1.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda hacia atrás.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta el índice especificado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that extends from the first element to <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda hacia atrás.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Número de elementos de la sección en la que se va a realizar la búsqueda.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la lista inmutable que contiene el número de elementos especificado y termina en el índice determinado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Índice de base cero de la última aparición de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dentro del intervalo de elementos de la lista inmutable que contiene el número de elementos de <ph id="ph2">&lt;paramref name="count" /&gt;</ph> y termina en <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objeto que se va a buscar en la lista inmutable.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Índice inicial de base cero de la búsqueda.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (cero) es válido en una lista vacía.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">Número de elementos que se van a buscar.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">Comparador de valores que se utilizará para comparar la igualdad de elementos.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la lista inmutable que contiene el número de elementos especificado y termina en el índice determinado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que comienza en <ph id="ph1">&lt;paramref name="index" /&gt;</ph> y contiene el número de elementos de <ph id="ph2">&lt;paramref name="count" /&gt;</ph>, si se encuentra; en caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>The object to remove from the list.</source>
          <target state="translated">Objeto que se va a quitar de la lista.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the immutable list.</source>
          <target state="translated">Quita la primera repetición de un objeto específico de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se ha quitado correctamente de la lista; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if item is not found in the list.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se encuentra el elemento en la lista.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Delegado que define las condiciones de los elementos que se van a quitar.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Quita todos los elementos que cumplen las condiciones definidas por el predicado especificado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The number of elements removed from the immutable list.</source>
          <target state="translated">Número de elementos que se han quitado de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove from the list.</source>
          <target state="translated">Índice de base cero del elemento que se va a quitar de la lista.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index of the immutable list.</source>
          <target state="translated">Quita el elemento del índice especificado de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse">
          <source>Reverses the order of the elements in the entire immutable list.</source>
          <target state="translated">Invierte el orden de los elementos de la lista inmutable completa.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">Índice inicial de base cero del intervalo que se va a invertir.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">Número de elementos del intervalo que se va a invertir.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range of the immutable list.</source>
          <target state="translated">Invierte el orden de los elementos del intervalo especificado de la lista inmutable.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort">
          <source>Sorts the elements in the entire immutable list by using the default comparer.</source>
          <target state="translated">Ordena los elementos de toda la lista inmutable utilizando el comparador predeterminado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">Implementación que se va a utilizar al comparar elementos, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> para utilizar el comparador predeterminado (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparer.</source>
          <target state="translated">Ordena los elementos de la lista inmutable completa usando el comparador especificado.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>The object to use when comparing elements.</source>
          <target state="translated">Objeto ue se va a utilizar al comparar elementos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparison object.</source>
          <target state="translated">Ordena los elementos de la lista inmutable completa usando el objeto de comparación especificado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">Índice inicial de base cero del intervalo que se va a ordenar.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to sort.</source>
          <target state="translated">Longitud del intervalo que se va a ordenar.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">Implementación que se va a utilizar al comparar elementos, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> para utilizar el comparador predeterminado (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in a range of elements in the immutable list  by using the specified comparer.</source>
          <target state="translated">Ordena los elementos en un intervalo de elementos de la lista inmutable usando el comparador especificado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether this instance is read-only.</source>
          <target state="translated">Obtiene un valor que indica si la instancia es de solo lectura.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Always <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Siempre <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the list.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde la lista.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the list to an array, starting at a particular array index.</source>
          <target state="translated">Copia los elementos de la lista en una matriz, comenzando por un índice concreto de la matriz.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtiene un valor que indica si el acceso a la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated">Es true si el acceso a la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos); de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene un objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The object to add to the list.</source>
          <target state="translated">Objeto que se va a agregar a la lista.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">Agrega un elemento a la lista.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
          <target state="translated">La posición en la que se insertó el nuevo elemento o -1 para indicar que el elemento no se insertó en la colección.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>Removes all items from the list.</source>
          <target state="translated">Quita todos los elementos de la lista.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objeto que se va a buscar en la lista.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specific value.</source>
          <target state="translated">Determina si la lista contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the list; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> se encuentra en la lista; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objeto que se va a buscar en la lista.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the list.</source>
          <target state="translated">Determina el índice de un elemento específico de la lista.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Devuelve el índice de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> si se encuentra en la lista; de lo contrario, devuelve -1.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Índice de base cero en el que se debe insertar <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The object to insert into the list.</source>
          <target state="translated">Objeto que se va a insertar en la lista.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">Inserta un elemento en la lista del índice especificado.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtiene un valor que indica si la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiene un tamaño fijo.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, false.</source>
          <target state="translated">Es true si la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiene un tamaño fijo; de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, false.</source>
          <target state="translated">Es true si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> es de solo lectura; de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>The index.</source>
          <target state="translated">Índice.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the specified index.</source>
          <target state="translated">Obtiene o establece la clase <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> en el índice especificado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>The object to remove from the list.</source>
          <target state="translated">Objeto que se va a quitar de la lista.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the list.</source>
          <target state="translated">Quita la primera aparición de un objeto específico de la lista.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>Creates an immutable list based on the contents of this instance.</source>
          <target state="translated">Crea una lista inmutable basada en el contenido de esta instancia.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>An immutable list.</source>
          <target state="translated">Lista inmutable.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</source>
          <target state="translated">Este método es una operación o (n) y enfoques de tiempo o (1) como el número de mutaciones reales del conjunto desde la última llamada a este método los enfoques 0.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions to check against the elements.</source>
          <target state="translated">Delegado que define las condiciones que los elementos deben cumplir.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>Determines whether every element in the immutable list matches the conditions defined by the specified predicate.</source>
          <target state="translated">Determina si cada elemento de la lista inmutable cumple las condiciones definidas por el predicado especificado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si cada elemento de la lista inmutable cumple las condiciones definidas por el predicado especificado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>If the list has no elements, the return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si la lista no tiene ningún elemento, el valor devuelto es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>