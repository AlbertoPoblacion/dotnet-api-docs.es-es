<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IImmutableSet`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f13057cce47ec609c051ef1268cb5c2da93218d9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f13057cce47ec609c051ef1268cb5c2da93218d9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableSet`1">
          <source>The type of element stored in the set.</source>
          <target state="translated">Tipo de elemento almacenado en el conjunto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableSet`1">
          <source>Represents a set of elements that can only be modified by creating a new instance of the set.</source>
          <target state="translated">Representa un conjunto de elementos que solo pueden modificarse mediante la creación de una nueva instancia del conjunto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableSet`1">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>Paquete NuGet<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>sobre las colecciones inmutables y la instalación<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableSet`1">
          <source>Mutations on this set generate new sets.</source>
          <target state="translated">Las mutaciones en este conjunto de generan nuevos conjuntos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableSet`1">
          <source>Incremental changes to a set share as much memory as possible with the prior versions of a set, while allowing garbage collection to clean up any unique set data that is no longer being referenced.</source>
          <target state="translated">Los cambios incrementales en un conjunto compartan tanta memoria como sea posible con las versiones anteriores de un conjunto, permitiendo la colección de elementos no utilizados limpiar los datos de conjunto único que ya no se hace referencia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Add(`0)">
          <source>The element to add.</source>
          <target state="translated">Elemento que se va a agregar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Add(`0)">
          <source>Adds the specified element to this immutable set.</source>
          <target state="translated">Agrega el elemento especificado a este conjunto inmutable.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Add(`0)">
          <source>A new set with the element added, or this set if the element is already in the set.</source>
          <target state="translated">Nuevo conjunto con el elemento agregado o este conjunto si el elemento ya está en el conjunto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Clear">
          <source>Retrieves an empty immutable set that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">Recupera un conjunto inmutable vacío que tiene la misma ordenación y semántica de orden que esta instancia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Clear">
          <source>An empty set that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">Conjunto vacío que tiene la misma ordenación y semántica de orden que esta instancia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Contains(`0)">
          <source>The element to locate in the set.</source>
          <target state="translated">Elemento que se debe buscar en el conjunto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Contains(`0)">
          <source>Determines whether this immutable set contains a specified element.</source>
          <target state="translated">Determina si este conjunto inmutable contiene un elemento especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set contains the specified value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto contiene el valor especificado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from this set.</source>
          <target state="translated">Colección de elementos que se van a quitar de este conjunto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes the elements in the specified collection from the current immutable set.</source>
          <target state="translated">Quita del conjunto inmutable actual los elementos de la colección especificada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set with the items removed; or the original set if none of the items were in the set.</source>
          <target state="translated">Nuevo conjunto con los elementos que se han quitado; o el conjunto original si no se encontraba ninguno de los elementos en el conjunto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableSet`1" /&gt;</ph>.</source>
          <target state="translated">Colección que se va a comparar con el <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable set that contains only elements that exist in this set and the specified set.</source>
          <target state="translated">Crea un conjunto inmutable que contiene solo elementos que existen en este conjunto y en el conjunto especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable set that contains elements that exist in both sets.</source>
          <target state="translated">Nuevo conjunto inmutable que contiene elementos que existen en ambos conjuntos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set is a proper (strict) subset of the specified collection.</source>
          <target state="translated">Determina si el conjunto inmutable actual es un subconjunto apropiado (estricto) de la colección especificada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper subset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto actual es un subconjunto apropiado de la colección especificada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the current set is a proper subset of <ph id="ph1">`other`</ph>, <ph id="ph2">`other`</ph> must have at least one element that the current set does not have.</source>
          <target state="translated">Si el conjunto actual es un subconjunto apropiado de <ph id="ph1">`other`</ph>, <ph id="ph2">`other`</ph> debe tener al menos un elemento que no tiene el conjunto actual.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set is a proper (strict) superset of the specified collection.</source>
          <target state="translated">Determina si el conjunto inmutable actual es un supraconjunto apropiado (estricto) de la colección especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper superset of the specified collection; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto actual es un supraconjunto apropiado de la colección especificada; de lo contrario, es falso.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the current set is a proper superset of <ph id="ph1">`other`</ph>, the current set must have at least one element that <ph id="ph2">`other`</ph> does not have.</source>
          <target state="translated">Si el conjunto actual es un supraconjunto apropiado de <ph id="ph1">`other`</ph>, el conjunto actual debe tener al menos un elemento que <ph id="ph2">`other`</ph> no tiene.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set is a subset of a specified collection.</source>
          <target state="translated">Determina si el conjunto inmutable actual es un subconjunto apropiado (estricto) de una colección especificada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a subset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto actual es un subconjunto de la colección especificada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set is a superset of a specified collection.</source>
          <target state="translated">Determina si el conjunto inmutable actual es un supraconjunto apropiado (estricto) de una colección especificada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a superset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto actual es un supraconjunto de la colección especificada; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set overlaps with the specified collection.</source>
          <target state="translated">Determina si el conjunto inmutable actual se superpone a la colección especificada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set and the specified collection share at least one common element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto actual y la colección especificada comparten al menos un elemento común; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">Elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Remove(`0)">
          <source>Removes the specified element from this immutable set.</source>
          <target state="translated">Elimina el elemento especificado de este conjunto inmutable.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Remove(`0)">
          <source>A new set with the specified element removed, or the current set if the element cannot be found in the set.</source>
          <target state="translated">Nuevo conjunto con el elemento especificado eliminado o el conjunto actual si no se encuentra el elemento en el conjunto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable set and the specified collection contain the same elements.</source>
          <target state="translated">Determina si el conjunto inmutable actual y la colección especificada contienen los mismos elementos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sets are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si los conjuntos son iguales; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">Colección que se va a comparar con el conjunto actual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable set that contains only elements that are present either in the current set or in the specified collection, but not both.</source>
          <target state="translated">Crea un conjunto inmutable que únicamente contiene elementos que están presentes en el conjunto actual o en la colección especificada, pero no en ambos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set that contains the elements that are present only in the current set or in the specified collection, but not both.</source>
          <target state="translated">Conjunto nuevo que únicamente contiene elementos que están presentes en el conjunto actual o en la colección especificada, pero no en ambos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>The value to search for.</source>
          <target state="translated">Valor que se va a buscar.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>The matching value from the set, if found, or <bpt id="p1">&lt;c&gt;</bpt>equalvalue<ept id="p1">&lt;/c&gt;</ept> if there are no matches.</source>
          <target state="translated">Valor coincidente del conjunto, si se encuentra, o <bpt id="p1">&lt;c&gt;</bpt>equalvalue<ept id="p1">&lt;/c&gt;</ept> si no hay ninguna coincidencia.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>Determines whether the set contains a specified value.</source>
          <target state="translated">Determina si el conjunto contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching value was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se encuentra un valor coincidente; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>Following are some scenarios where <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableSet%601.TryGetValue%2A&gt;</ph> may be useful:</source>
          <target state="translated">A continuación se muestran algunos escenarios donde <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableSet%601.TryGetValue%2A&gt;</ph> puede resultar útil:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>You want to reuse a previously stored object reference instead of creating a new reference.</source>
          <target state="translated">Desea volver a usar una referencia de objeto previamente almacenado en lugar de crear una nueva referencia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)">
          <source>You want to retrieve more complete data about an object</source>
          <target state="translated">Van a recuperar los datos más completos acerca de un objeto</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to add elements from.</source>
          <target state="translated">Colección de la que se van a agregar elementos.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates a new immutable set that contains all elements that are present in either the current set or in the specified collection.</source>
          <target state="translated">Crea un conjunto inmutable que contiene todos los elementos que están presentes en el conjunto actual o en la colección especificada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable set with the items added; or the original set if all the items were already in the set.</source>
          <target state="translated">Nuevo conjunto inmutable con los elementos agregados; o conjunto original si ya estaban todos los elementos en el conjunto.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.IImmutableSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements contained in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Cualquier duplicar elementos incluidos en <ph id="ph1">`other`</ph> se omiten.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>