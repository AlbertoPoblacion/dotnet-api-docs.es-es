<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c78dbd47bac399c650a28aca972a809af1f16bac" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Genera instancias de <see cref="T:System.Xml.XmlDictionaryReader" /> que pueden leer datos codificados por JavaScript Object Notation (JSON) de una secuencia o búfer y asignarlos a un conjunto de información XML e instancias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que pueden asignar un conjunto de información XML a JSON y escribir datos codificados por JSON en una secuencia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) procesa mensajes JSON con una asignación entre los datos JSON y el conjunto de información XML. Normalmente, esta asignación está oculta. Sin embargo, en algunos escenarios avanzados puede ser necesario realizar manualmente la conversión entre JSON y XML. En este caso, la clase <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> se puede utilizar para crear los sistemas de lectura y de escritura XML necesarios. Observe que no es posible asignar a JSON todos los elementos de conjunto de información XML. Para obtener más información acerca de la asignación, consulte [Cómo: serializar y deserializar datos JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias o búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada una de las sobrecargas usa <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de denegación de servicio (DoS) al leer datos que no son de confianza. Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
        <param name="quotas">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
        <summary>Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryReader" /> que puede procesar datos JavaScript Object Notation (JSON).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>. Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.  
  
 Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
        <param name="quotas">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
        <summary>Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>. Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.  
  
 Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
        <param name="offset">La posición inicial de la que leer en <c>buffer</c>.</param>
        <param name="count">Número de bytes que se pueden leer de <c>buffer</c>.</param>
        <param name="quotas">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>. Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.  
  
 Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
        <param name="quotas">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
        <param name="onClose">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
        <param name="offset">La posición inicial de la que leer en <c>buffer</c>.</param>
        <param name="count">Número de bytes que se pueden leer de <c>buffer</c>.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
        <param name="quotas">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
        <param name="onClose">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector. El valor predeterminado es <see langword="null" />.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), con un tamaño y desplazamiento especificados y codificación de caracteres, a un conjunto de información XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos no es de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método estático <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> devuelve una instancia de <xref:System.Xml.XmlDictionaryWriter> que puede asignar un conjunto de información XML a una secuencia de JSON. No se garantiza que <xref:System.Xml.XmlDictionaryWriter> genere JSON válido. Si se utiliza en un modo no admitido por la asignación JSON-XML, puede iniciar una excepción o escribir un documento JSON no válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
        <summary>Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La codificación de caracteres predeterminada es UTF-8. Cuando se cierra el sistema de escritura, se cierra también la secuencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se cierra el sistema de escritura, se cierra también la secuencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
        <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
        <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
        <param name="indent">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
        <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
        <param name="indent">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
        <param name="indentChars">La cadena usada para aplicar sangría a cada nivel.</param>
        <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
        <returns>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>