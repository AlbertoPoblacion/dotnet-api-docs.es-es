<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stroke.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bbc2998fc7c991c000e9cdb3a850e6fa973cf7bd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbc2998fc7c991c000e9cdb3a850e6fa973cf7bd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Represents a single ink stroke.</source>
          <target state="translated">Representa un trazo único de tinta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is the data object that is collected from a pointing device, such as a tablet pen or a mouse.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> es el objeto de datos que se recopila desde un dispositivo señalador, como un lápiz de tablet PC o un mouse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> se pueden crear y manipular mediante programación y se puede representar visualmente en un elemento habilitado para entradas manuscritas, como el <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> contains information about both its position and appearance.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> contiene información sobre su posición y la apariencia.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is a collection of <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects that specifies the position of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propiedad es una colección de <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos que especifica la posición de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> property specifies a stroke's appearance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> propiedad especifica la apariencia de un trazo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> from a <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> desde una <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`myInkPresenter`</ph>.</source>
          <target state="translated">En este ejemplo se supone que hay un <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> denominado <ph id="ph2">`myInkPresenter`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is empty..</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> está vacío.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object that specifies the appearance of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que especifica la apariencia del objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> from a <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> desde una <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`myInkPresenter`</ph>.</source>
          <target state="translated">En este ejemplo se supone que hay un <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> denominado <ph id="ph2">`myInkPresenter`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="drawingAtrributes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="drawingAtrributes" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> está vacía.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The unique identifier for the property.</source>
          <target state="translated">Identificador único de la propiedad.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The value of the custom property.</source>
          <target state="translated">Valor de la propiedad personalizada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept> must be of type <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> or an array of these data types, except <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph>, which is not allowed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept> debe ser de tipo <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> o una matriz de estos tipos de datos, excepto <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph>, que no está permitido.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>Adds a custom property to the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Agrega una propiedad personalizada al objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>This method is useful if you need to store extra information in the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">Este método es útil si necesita almacenar información adicional en el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The following example demonstrates how to add a custom property to a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar una propiedad personalizada a un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph> argument is not one of the allowed data types listed in the <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph> section.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph> no es ninguno de los tipos de datos permitidos que se muestran en la sección <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>Returns a deep copy of the existing <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Devuelve una copia en profundidad del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> existente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">El nuevo objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The properties of an object that is a deep copy of another object have the same values as the properties of the original object.</source>
          <target state="translated">Las propiedades de un objeto que es una copia en profundidad de otro objeto tienen los mismos valores que las propiedades del objeto original.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The following example demonstrates how to get a copy of the current <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo obtener una copia del elemento actual <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">Identificador único de la propiedad.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object contains the specified custom property.</source>
          <target state="translated">Devuelve un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> contiene la propiedad personalizada especificada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the custom property exists; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propiedad personalizada existe; de lo contrario, devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>The following example demonstrates how to determine whether a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object has a custom property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo determinar si un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto tiene una propiedad personalizada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon a <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</source>
          <target state="translated">Representa el objeto de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> haciendo uso de un objeto de la clase <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> en el que se representará el trazo especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</source>
          <target state="translated">Representa el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> según el <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>The following example demonstrates how to draw a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object by using a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo dibujar un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto mediante el uso de un <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> en el que se representará el trazo especificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object defining the attributes of the stroke that is drawn.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que define los atributos del trazo que se dibuja.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Representa el objeto de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> haciendo uso de objetos de las clases <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object by using a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo dibujar un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto mediante el uso de un <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> en el que se representará el trazo especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object defining the attributes of the stroke that is drawn.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que define los atributos del trazo que se dibuja.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> on the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> using the specified <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Representa el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> en el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> especificado utilizando el objeto <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method to perform custom drawing when you inherit from the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> método para realizar un dibujo personalizado cuando se hereda de la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de un <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> se utiliza para obtener los puntos del lápiz.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> se utiliza la propiedad.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> para el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>These attributes, such as color and width, are applied to the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object as it is drawn.</source>
          <target state="translated">Estos atributos, como el color y ancho, se aplican a la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto mientras se dibuja.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>Changing <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> causes the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributesChanged&gt;</ph> event to fire.</source>
          <target state="translated">Cambiar <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> hace que el <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributesChanged&gt;</ph> activación del evento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> to make a stroke green.</source>
          <target state="translated">El ejemplo siguiente se establece el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> para hacer que un trazo verde.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>The set value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor establecido es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object change.</source>
          <target state="translated">Se produce cuando cambia la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /&gt;</ph> asociada al objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs&gt;</ph> contains information about the property that changed.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs&gt;</ph> contiene información acerca de la propiedad modificada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>You can compare the <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A&gt;</ph> property against the members of <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributeIds&gt;</ph> to see which value changed.</source>
          <target state="translated">Puede comparar la <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A&gt;</ph> propiedad con respecto a los miembros de <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributeIds&gt;</ph> para ver qué valor cambió.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar un controlador para este evento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced">
          <source>Occurs when the drawing attributes of a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object are replaced.</source>
          <target state="translated">Se produce cuando se reemplazan los atributos de dibujo de un objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar un controlador para este evento.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>Returns the stylus points the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> uses when <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Devuelve los puntos de lápiz óptico que utiliza el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> cuando el valor de la propiedad <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that contains the stylus points along the spine of a <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> when <ph id="ph3">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph></source>
          <target state="translated">Objeto de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que contiene los puntos de lápiz óptico a lo largo del lomo de un objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> cuando el valor de <ph id="ph3">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> es <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> method returns a new <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> that contains the stylus points that the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> uses when the <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property on the <ph id="ph5">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property is set to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> método devuelve un nuevo <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> que contiene el lápiz señala que la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> cuando se utiliza el <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad en el <ph id="ph5">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> propiedad está establecida en <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>To get the stylus points that are used when <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, use the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property.</source>
          <target state="translated">Para obtener los puntos del lápiz que se utiliza cuando <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> está establecido en <ph id="ph2">`false`</ph>, use el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de un <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> se utiliza para obtener los puntos del lápiz.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> se utiliza la propiedad.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>Retrieves the bounding box for the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Recupera el rectángulo de selección para el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure defining the bounding box for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que define el rectángulo de selección para el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>The following example demonstrates how to get the boundary rectangle for a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo obtener el rectángulo delimitador para un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified area.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están dentro del área especificada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The points that specify the line which defines where to clip.</source>
          <target state="translated">Puntos que especifican la línea que define dónde se va a recortar.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified bounds.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified bounds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contiene copias de los segmentos del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that is within <ph id="ph4">`lassoPoints`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contiene los trazos que representan los segmentos de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que está dentro de <ph id="ph4">`lassoPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> no se cambia el original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método conecta los puntos primeros y últimos en <ph id="ph2">`lassoPoints`</ph> para crear el lazo.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example removes the ink that is outside of the specified bounds.</source>
          <target state="translated">En el ejemplo siguiente se quita la entrada de lápiz que está fuera de los límites especificados.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to clip.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que especifica el área que se va a recortar.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified rectangle.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están dentro del rectángulo especificado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the bounds of <ph id="ph3">&lt;paramref name="bounds" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contiene copias de los segmentos del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están dentro de los límites de <ph id="ph3">&lt;paramref name="bounds" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that is within <ph id="ph4">`bounds`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contiene los trazos que representan los segmentos de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que está dentro de <ph id="ph4">`bounds`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> no se cambia el original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>The following example removes the ink that is outside of the specified bounds.</source>
          <target state="translated">En el ejemplo siguiente se quita la entrada de lápiz que está fuera de los límites especificados.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns the segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after part of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is erased.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> después de que se borre parte del objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that specifies the area to erase.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que especifica el área que se va a borrar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified bounds.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están fuera de los límites especificados.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified bounds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contiene los segmentos del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están fuera de los límites especificados.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that are outside of <ph id="ph4">`lassoPoints`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contiene los trazos que representan los segmentos de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que están fuera de <ph id="ph4">`lassoPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> no se cambia el original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método conecta los puntos primeros y últimos en <ph id="ph2">`lassoPoints`</ph> para crear el lazo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example removes the ink that is within the specified bounds.</source>
          <target state="translated">En el ejemplo siguiente se quita la entrada de lápiz que está dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to erase.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que especifica el área que se va a borrar.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified rectangle.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están fuera del rectángulo especificado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the bounds of the specified <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contiene los segmentos del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que están fuera de los límites de la estructura <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that are outside of <ph id="ph4">`bounds`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contiene los trazos que representan los segmentos de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que están fuera de <ph id="ph4">`bounds`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> no se cambia el original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>The following example removes the ink that is within the specified bounds.</source>
          <target state="translated">En el ejemplo siguiente se quita la entrada de lápiz que está dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that specifies the path that dissects the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que especifica el trazado que disecciona el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> that specifies the shape of the eraser.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> que especifica la forma del borrador.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Returns the segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after it is dissected by the designated path using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>.</source>
          <target state="translated">Devuelve los segmentos del actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> una vez diseccionado por el trazado designado utilizando el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after it is dissected by the specified path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contiene copias de los segmentos del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> una vez diseccionado por el trazado especificado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method uses <ph id="ph2">`eraserShape`</ph> to hit test the stroke along <ph id="ph3">`eraserPath`</ph> and returns a <ph id="ph4">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that represent dissected segments.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método usa <ph id="ph2">`eraserShape`</ph> se alcanza el trazo a lo largo de la prueba <ph id="ph3">`eraserPath`</ph> y devuelve un <ph id="ph4">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que representa los segmentos diseccionados.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> no se cambia el original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following example demonstrates how to erase the ink that intersects a specified path.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo borrar la tinta que forma una intersección con una ruta de acceso especificada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Obtiene la propiedad <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Obtiene la propiedad <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> to customize the shape of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> método para obtener un <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> para personalizar la forma de la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Consider caching the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> to avoid calling <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> multiple times, which may impact performance.</source>
          <target state="translated">Considere la posibilidad de almacenamiento en caché el <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> para evitar llamar a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> varias veces, lo que puede afectar al rendimiento.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> that determines the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que determina el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> using the specified <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> del actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> utilizando el objeto <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> que representa el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;</ph> properties of <ph id="ph7">`drawingAttributes`</ph> to determine the <ph id="ph8">&lt;xref:System.Windows.Media.Geometry&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> método usa la <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;</ph> y <ph id="ph6">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;</ph> propiedades de <ph id="ph7">`drawingAttributes`</ph> para determinar el <ph id="ph8">&lt;xref:System.Windows.Media.Geometry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Consider caching the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> to avoid calling <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> multiple times, which may impact performance.</source>
          <target state="translated">Considere la posibilidad de almacenamiento en caché el <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> para evitar llamar a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> varias veces, lo que puede afectar al rendimiento.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de un <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> se utiliza para obtener los puntos del lápiz.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> se utiliza la propiedad.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">Identificador único de la propiedad.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>Retrieves the property data for the specified GUID.</source>
          <target state="translated">Recupera los datos de la propiedad del GUID especificado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> containing the property data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="object" /&gt;</ph> que contiene los datos de la propiedad.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>The following example demonstrates how to retrieve a custom property on a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recuperar una propiedad personalizada en un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> is not associated with a custom property of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> no está asociado a una propiedad personalizada de <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>Retrieves the GUIDs of any custom properties associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Recupera los GUID de las propiedades personalizadas asociadas al objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> objects.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>The following example demonstrates how to get the GUIDs of a stroke's custom properties.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo obtener los GUID de propiedades personalizadas de un trazo.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects or is within a certain area.</source>
          <target state="translated">Devuelve si el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> forma una intersección o está dentro de un área determinada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> methods to determine whether a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> intersects a certain point or is within specified bounds.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> métodos para determinar si un <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> forma una intersección con un punto determinado o está dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The following methods check whether the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is intersected.</source>
          <target state="translated">Los siguientes métodos de protección si la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> se forma una intersección.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The following methods check whether the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is surrounded.</source>
          <target state="translated">Los siguientes métodos de protección si la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> está rodeado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> para la prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>Returns a value that indicates whether current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects the specified point.</source>
          <target state="translated">Devuelve un valor que indica si el actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> forma una intersección con el punto especificado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="point" /&gt;</ph> intersects the current stroke; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="point" /&gt;</ph> interseca con el actual trazo; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>This method behaves the same way as the overloaded <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29&gt;</ph> method does when <ph id="ph2">`diameter`</ph> is 1.</source>
          <target state="translated">Este método comporta del mismo modo que sobrecargado <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29&gt;</ph> método hace cuando <ph id="ph2">`diameter`</ph> es 1.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>The following example changes the color of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> if it intersects a certain area.</source>
          <target state="translated">En el ejemplo siguiente se cambia el color de una <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> si forma una intersección con un área concreta.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the bounds of the area to hit test.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que representa los límites del área objeto de la prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The percentage of the length of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, that must be in <bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> to be considered hit.</source>
          <target state="translated">Porcentaje de la longitud de <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que debe estar en <bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept> para que <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> se considere un acierto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is within the specified bounds.</source>
          <target state="translated">Devuelve un valor que indica si el actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> está dentro de los límites especificados.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stroke is within the specified bounds; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el trazo actual está dentro de los límites especificados; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> método conecta los puntos primeros y últimos en <ph id="ph2">`lassoPoints`</ph> para crear el lazo.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The following example renders a stroke purple if at least 80% of the stroke is within the bounds of <ph id="ph1">`myPoints`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se presenta un trazo de color púrpura si al menos el 80% del trazo está dentro de los límites de <ph id="ph1">`myPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The path that <bpt id="p1">&lt;c&gt;</bpt>stylusShape<ept id="p1">&lt;/c&gt;</ept> follows for hit testing</source>
          <target state="translated">Ruta de acceso que sigue <bpt id="p1">&lt;c&gt;</bpt>stylusShape<ept id="p1">&lt;/c&gt;</ept> para la prueba de aciertos.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The shape of <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> with which to hit test.</source>
          <target state="translated">Forma de <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> con la que probar aciertos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Returns whether the specified path intersects the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>.</source>
          <target state="translated">Devuelve si el trazado especificado interseca con el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> utilizando el objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="stylusShape" /&gt;</ph> intersects the current stroke; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="stylusShape" /&gt;</ph> interseca con el actual trazo; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> method uses <ph id="ph2">`stylusShape`</ph> to hit test the stroke along <ph id="ph3">`eraserPath`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> método usa <ph id="ph2">`stylusShape`</ph> se alcanza el trazo a lo largo de la prueba <ph id="ph3">`eraserPath`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following code renders a stroke purple if the stroke intersects the path of <ph id="ph1">`myPoints`</ph>.</source>
          <target state="translated">El siguiente código representa un trazo de color púrpura si el trazo se corta con la ruta de acceso de <ph id="ph1">`myPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that defines the center of the area to hit test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que define el centro del área que se va a someter a una prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The diameter of the area to hit test.</source>
          <target state="translated">Diámetro del área que se va a someter a una prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>Returns a value that indicates whether current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects the specified area.</source>
          <target state="translated">Devuelve un valor que indica si el actual objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> forma una intersección con el área especificada.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified area intersects the current stroke; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el área especificada forma una intersección con el trazo actual; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The following example changes the color of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> if it intersects a certain area.</source>
          <target state="translated">En el ejemplo siguiente se cambia el color de una <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> si forma una intersección con un área concreta.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that represents the bounds of the area to hit test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que representa los límites del área para la prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>The percentage of the length of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, that must be in <bpt id="p1">&lt;c&gt;</bpt>percentageWithinBounds<ept id="p1">&lt;/c&gt;</ept> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> to be considered hit..</source>
          <target state="translated">Porcentaje de la longitud de <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> que debe estar en <bpt id="p1">&lt;c&gt;</bpt>percentageWithinBounds<ept id="p1">&lt;/c&gt;</ept> para que <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> se considere un acierto.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is within the bounds of the specified rectangle.</source>
          <target state="translated">Devuelve un valor que indica si <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> está dentro de los límites del rectángulo especificado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stroke is within the bounds of <ph id="ph2">&lt;paramref name="bounds" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el trazo actual está dentro de los límites de <ph id="ph2">&lt;paramref name="bounds" /&gt;</ph>; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>The following example renders a stroke purple if at least 80% of the stroke is within the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se presenta un trazo de color púrpura si al menos el 80% del trazo está dentro de la <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>Occurs when the appearance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> changes.</source>
          <target state="translated">Se produce cuando cambia la apariencia del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event and calls the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> controla la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos y llamadas a la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>If you inherit from the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class and your stroke's appearance is based on a custom state, you must call the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method to raise the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event.</source>
          <target state="translated">Si se hereda de la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> clase y la apariencia del trazo se basa en un estado personalizado, debe llamar a la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método para generar el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /&gt;</ph> event.</source>
          <target state="translated">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar este método en una clase derivada, llame a la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A&gt;</ph> método de la clase base para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /&gt;</ph> event.</source>
          <target state="translated">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar este método en una clase derivada, llame a la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A&gt;</ph> método de la clase base para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.Invalidated" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.Invalidated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>If you inherit from the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class and your stroke's appearance is based on a custom state, you must call the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method to raise the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event.</source>
          <target state="translated">Si se hereda de la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> clase y la apariencia del trazo se basa en un estado personalizado, debe llamar a la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método para generar el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event and calls the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> controla la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos y llamadas a la <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The following example draws a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> either as a solid stroke or as a series of <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects, depending on the <ph id="ph3">`Mode`</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se dibuja un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> como un trazo sólido o como una serie de <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos, dependiendo de la <ph id="ph3">`Mode`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method, which in turn calls the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> where the stroke is drawn.</source>
          <target state="translated">El ejemplo se llama el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método, que a su vez llama el <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> donde se dibuja el trazo.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">Datos de evento que describen la propiedad que cambió, así como los valores antiguos y nuevos.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Occurs when any <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> property changes.</source>
          <target state="translated">Se produce cuando cambia alguna propiedad de <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /&gt;</ph> event.</source>
          <target state="translated">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar este método en una clase derivada, llame a la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A&gt;</ph> método de la clase base para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.PropertyDataChanged">
          <source>Occurs when the custom properties on a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object changes.</source>
          <target state="translated">Se produce cuando cambian las propiedades personalizadas en un objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.PropertyDataChanged">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar un controlador para este evento.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">Identificador único de la propiedad.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>Deletes a custom property from the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Elimina una propiedad personalizada del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>The following example demonstrates how to delete a custom property from a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo eliminar una propiedad personalizada de una <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>Returns the stylus points of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Devuelve los puntos de lápiz óptico del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that contains the stylus points that represent the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que contiene los puntos de lápiz óptico que representan el actual objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>To get the stylus points that are used when the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, use the <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> method.</source>
          <target state="translated">Para obtener los puntos del lápiz que se usa cuando el <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad en el <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> propiedad está establecida en <ph id="ph3">`true`</ph>, use el <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> (método).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property must have at least one <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> in it.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> asignado a la <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propiedad debe tener al menos un <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> en ella.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>If you try to assign an empty <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, or remove all the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects from <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, an exception occurs.</source>
          <target state="translated">Si intenta asignar vacío <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, o quite todos los <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos de <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The following example is part of an overridden <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that draws a circle at each <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph>.</source>
          <target state="translated">El siguiente ejemplo es parte de un invalidado <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que dibuja un círculo en cada <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, el <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> se utiliza para obtener los puntos del lápiz.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> se utiliza la propiedad.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.StylusPointsChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> property changes.</source>
          <target state="translated">Se produce cuando cambia la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.StylusPointsChanged">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsChanged&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo controlar la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.StylusPointsReplaced">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> property is assigned a new <ph id="ph2">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph>.</source>
          <target state="translated">Se produce cuando se asigna a la propiedad <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> una nueva colección <ph id="ph2">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.StylusPointsReplaced">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsReplaced&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo controlar la <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsReplaced&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> object defining the transformation.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> que define la transformación.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the transformation to the tip of the stylus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para aplicar la transformación a la punta del lápiz óptico; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>Performs a transformation based upon the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> object.</source>
          <target state="translated">Realiza una transformación mediante el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> object represents a 3x3 matrix used for transformations in two-dimensional space.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> objeto representa una matriz de 3 x 3 usada para las transformaciones en un espacio bidimensional.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>Each point of the Stroke object is transformed by the supplied Matrix.</source>
          <target state="translated">Cada punto del objeto Stroke se transforma la matriz proporcionada.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.</source>
          <target state="translated">Por ejemplo si el valor original de Point.X es 100, el valor original de Point.Y es 55 y la transformación Matrix.Scale (0,5, 0,5), el nuevo valor de Point.X es 50 y el nuevo valor de Point.Y es 27,5.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The following example demonstrates how to transform a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo transformar un <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>