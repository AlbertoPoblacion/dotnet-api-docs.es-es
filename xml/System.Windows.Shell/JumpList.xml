<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="74aa001f1c38814158e52e258f21e0c410fc563a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30670029" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una lista de elementos y tareas que se muestra como un menú de un botón de la barra de tareas de Windows 7.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [!INCLUDE[win7](~/includes/win7-md.md)] barra de tareas proporciona funcionalidad mejorada para iniciar programas directamente desde el botón de barra de tareas mediante Jump List. Las listas Jump List también se usan en el [!INCLUDE[win7](~/includes/win7-md.md)] menú Inicio. Tener acceso a una Jump List haciendo clic en un botón de barra de tareas o haciendo clic en la flecha situada junto a un programa en el menú Inicio. Para obtener más información sobre Jump List, consulte el [barra de tareas](http://go.microsoft.com/fwlink/?LinkId=178478) sección de Windows User Experience Interaction Guidelines.  
  
 El <xref:System.Windows.Shell.JumpList> clase proporciona un contenedor administrado para la funcionalidad Jump List en el [!INCLUDE[win7](~/includes/win7-md.md)] barra de tareas y administra los datos pasados a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. La funcionalidad expuesta por el <xref:System.Windows.Shell.JumpList> no está disponible en las versiones de la clase [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] anteriores a [!INCLUDE[win7](~/includes/win7-md.md)]. Las aplicaciones que utilizan el <xref:System.Windows.Shell.JumpList> clase se ejecutará en otras versiones de [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)], pero la Jump List no estará disponible. Para obtener más información sobre el shell de Windows y API de Jump List nativas, vea [las extensiones de la barra de tareas](http://go.microsoft.com/fwlink/?LinkId=178479).  
  
 La siguiente ilustración muestra la Jump lista para Reproductor de Windows Media, con los elementos en el **tareas** y **frecuente** categorías.  
  
 ![Jump List del Reproductor de medios de Windows](~/add/media/wpfshell-jumplist.png "Jump List del Reproductor de medios de Windows")  
Jump List de Windows Media Player  
  
## <a name="configuring-a-jump-list"></a>Configurar una Jump List  
 Las listas Jump List pueden contener dos tipos de elementos de un <xref:System.Windows.Shell.JumpTask> y <xref:System.Windows.Shell.JumpPath>. A <xref:System.Windows.Shell.JumpTask> es un vínculo a un programa y un <xref:System.Windows.Shell.JumpPath> es un vínculo a un archivo. Puede separar visualmente los elementos de una Jump List creando un <xref:System.Windows.Shell.JumpTask> que no tiene un <xref:System.Windows.Shell.JumpTask.Title%2A> y <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> especificado. Este vacío <xref:System.Windows.Shell.JumpTask> se mostrará como una línea horizontal en la Jump List.  
  
> [!NOTE]
>  Si el tipo de archivo especificado en un <xref:System.Windows.Shell.JumpPath> no está registrado con la aplicación, el archivo no aparecerá en la Jump List. Por ejemplo, si agrega un <xref:System.Windows.Shell.JumpPath> que apunta a un archivo .txt, su aplicación debe registrarse para controlar los archivos .txt. Para obtener más información, consulte [Introducción a las asociaciones de archivo](http://go.microsoft.com/fwlink/?LinkId=178480).  
  
 Elementos de salto se colocan en categorías en el <xref:System.Windows.Shell.JumpList>. De forma predeterminada, un <xref:System.Windows.Shell.JumpItem> se muestra en el **tareas** categoría. Como alternativa, puede especificar un <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> para el <xref:System.Windows.Shell.JumpItem>.  
  
 Puede especificar si el estándar **recientes** y **frecuente** categorías se muestran en la <xref:System.Windows.Shell.JumpList> estableciendo la <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> y <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> propiedades. El contenido de estas categorías es administrado por el [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Dado que estas categorías podrían contener gran parte de los mismos datos, normalmente muestran uno u otro en su <xref:System.Windows.Shell.JumpList>, pero no ambos. [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] administra automáticamente elementos recientes si se abren a través de un cuadro de diálogo de archivos común o se utilizan para abrir una aplicación a través de la asociación de tipo de archivo. Cuando se tiene acceso a un elemento a través de la Jump List, se puede notificar la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell para agregar el elemento a la **recientes** categoría mediante una llamada a la <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> método.  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Aplicar una Jump List al Shell de Windows  
 No se puede tener acceso directamente a Jump List del shell o leer su contenido en el <xref:System.Windows.Shell.JumpList> clase. En su lugar, el <xref:System.Windows.Shell.JumpList> clase proporciona una representación de un Jump List que puede trabajar con y, a continuación, se aplican a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Normalmente se crea un <xref:System.Windows.Shell.JumpList> y ha configurado una vez cuando se ejecuta la aplicación por primera vez. Sin embargo, puede modificar o reemplazar el <xref:System.Windows.Shell.JumpList> en tiempo de ejecución.  
  
 Cuando haya configurado la <xref:System.Windows.Shell.JumpList> propiedades, debe aplicar el <xref:System.Windows.Shell.JumpList> al shell de Windows antes de que su contenido aparezca en la barra de tareas Jump List. Esto se hace automáticamente cuando la <xref:System.Windows.Shell.JumpList> en primer lugar se adjunta a una aplicación, ya sea en XAML o en una llamada a la <xref:System.Windows.Shell.JumpList.SetJumpList%2A> método. Si modifica el contenido de la <xref:System.Windows.Shell.JumpList> en tiempo de ejecución, se debe llamar a la <xref:System.Windows.Shell.JumpList.Apply%2A> método para aplicar su contenido actual al shell de Windows.  
  
## <a name="setting-a-jump-list-in-xaml"></a>Establecer una Jump List en XAML  
 A <xref:System.Windows.Shell.JumpList> no se adjunta automáticamente a un <xref:System.Windows.Application> objeto. Adjuntar un <xref:System.Windows.Shell.JumpList> a una <xref:System.Windows.Application> objeto en XAML mediante la sintaxis de la propiedad adjunta. El <xref:System.Windows.Shell.JumpList> la clase implementa la <xref:System.ComponentModel.ISupportInitialize> interfaz para admitir la declaración de XAML de un <xref:System.Windows.Shell.JumpList>. Si el <xref:System.Windows.Shell.JumpList> se declara en XAML y se adjunta al actual <xref:System.Windows.Application>, se aplica automáticamente a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell cuando el <xref:System.Windows.Shell.JumpList> se inicializa.  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>Establecer y modificar una Jump List en el código  
 Adjuntar un <xref:System.Windows.Shell.JumpList> a una <xref:System.Windows.Application> objeto en el código mediante una llamada a estático <xref:System.Windows.Shell.JumpList.SetJumpList%2A> método. Esto también se aplica el <xref:System.Windows.Shell.JumpList> a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell.  
  
 Para modificar un <xref:System.Windows.Shell.JumpList> en tiempo de ejecución, se llama a la <xref:System.Windows.Shell.JumpList.GetJumpList%2A> método para obtener el <xref:System.Windows.Shell.JumpList> que está actualmente conectado a un <xref:System.Windows.Application>. Después de haber modificado las propiedades de la <xref:System.Windows.Shell.JumpList>, debe llamar a la <xref:System.Windows.Shell.JumpList.Apply%2A> método para aplicar los cambios en el shell de Windows.  
  
> [!NOTE]
>  Normalmente se crea uno <xref:System.Windows.Shell.JumpList> que está conectada a la <xref:System.Windows.Application> y aplican a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell. Sin embargo, puede crear varias <xref:System.Windows.Shell.JumpList> objetos. Solo un <xref:System.Windows.Shell.JumpList> cada vez que se puede aplicar a la [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell y solo uno <xref:System.Windows.Shell.JumpList> cada vez que se puede asociar con un <xref:System.Windows.Application>. .NET Framework no requiere que éstos sean los mismos <xref:System.Windows.Shell.JumpList>.  
  
> [!NOTE]
>  Esta clase contiene una petición de vínculo en el nivel de clase que se aplica a todos los miembros. Un <xref:System.Security.SecurityException> se produce cuando el llamador inmediato no tiene permiso de plena confianza. Para obtener más información acerca de las peticiones de seguridad, consulte [peticiones de vínculo](~/docs/framework/misc/link-demands.md) y [peticiones de herencia](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una aplicación con una Jump List. La aplicación tiene tres botones que le permiten agregar una tarea a la Jump List actual, borrar el contenido de la Jump List y aplica una nueva Jump List a la aplicación.  
  
 En el ejemplo siguiente se muestra cómo declarar un <xref:System.Windows.Shell.JumpList> en el marcado. El <xref:System.Windows.Shell.JumpList> contiene dos <xref:System.Windows.Shell.JumpTask> vínculos y otra <xref:System.Windows.Shell.JumpPath>. Aplicar el <xref:System.Windows.Shell.JumpPath> al shell se producirá un error si la aplicación no está registrada para administrar la extensión de nombre de archivo .txt.  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 En el ejemplo siguiente se muestra la página de código subyacente para `App.xaml`. Este código controla el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 En el ejemplo siguiente se muestra el marcado usado para crear la interfaz de usuario de la aplicación.  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 En el ejemplo siguiente se muestra la página de código subyacente para `MainWindow.xaml`. Este código muestra cómo modificar, desactivar y crear un <xref:System.Windows.Shell.JumpList> en código de procedimiento. Para la nueva Jump List, el método estático <xref:System.Windows.Shell.JumpList.SetJumpList%2A> método se llama para asociar el <xref:System.Windows.Shell.JumpList> con la aplicación actual y aplicar el <xref:System.Windows.Shell.JumpList> al shell de Windows.  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">para tener acceso total modificar el shell de Windows. Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Shell.JumpList" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Shell.JumpList" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">Colección de objetos <see cref="T:System.Windows.Shell.JumpItem" /> que aparecen en la Jump List.</param>
        <param name="showFrequent">Valor que indica si los elementos que se usan con frecuencia aparecen en la Jump list.</param>
        <param name="showRecent">Valor que indica si los elementos usados recientemente aparecen en la Jump list.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Shell.JumpList" /> con los parámetros especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El **recientes** y **frecuente** categorías a menudo contienen muchos de los mismos elementos de salto. Como resultado, las aplicaciones suelen mostrar el **recientes** o **frecuente** categoría en la Jump List, pero no ambos.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega el elemento especificado a la categoría **Reciente** de la Jump List.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">Ruta de acceso que se va a agregar a la Jump List.</param>
        <summary>Agrega la ruta de acceso del elemento especificado a la categoría **Reciente** de la Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la **recientes** categoría se administran mediante el shell de Windows. Para mostrar elementos utilizados recientemente en la Jump List, establezca la <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> propiedad `true`.  
  
 Puede llamar a la <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> método para solicitar que el shell de Windows agregue una ruta de acceso de elemento para el **recientes** lista de elementos. Si la aplicación no está registrada para controlar el tipo de archivo del elemento, no aparecerá en la **recientes** lista y las llamadas a <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> se producirá un error en modo silencioso.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">
          <see cref="T:System.Windows.Shell.JumpPath" /> que se va a agregar a la Jump List.</param>
        <summary>Agrega la ruta de acceso especificada para el salto a la categoría **Reciente** de la Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la **recientes** categoría se administran mediante el shell de Windows. Para mostrar elementos utilizados recientemente en la Jump List, establezca la <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> propiedad `true`.  
  
 Puede llamar a la <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> método para solicitar que el shell de Windows agregue la ruta de acceso de salto especificado para la **recientes** lista de elementos. Si la aplicación no está registrada para controlar el tipo de archivo del elemento, no aparecerá en la **recientes** lista y las llamadas a <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> se producirá un error en modo silencioso.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">
          <see cref="T:System.Windows.Shell.JumpTask" /> que se va a agregar a la Jump List.</param>
        <summary>Agrega la tarea especificada para el salto a la categoría **Reciente** de la Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la **recientes** categoría se administran mediante el shell de Windows. Para mostrar elementos utilizados recientemente en la Jump List, establezca la <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> propiedad `true`.  
  
 Puede llamar a la <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> método para solicitar que el shell de Windows agregue la tarea de salto especificado para la **recientes** lista de elementos.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envía <see cref="T:System.Windows.Shell.JumpList" /> al shell de Windows en su estado actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Shell.JumpList.Apply%2A> método envía el contenido de la <xref:System.Windows.Shell.JumpList> al shell de Windows en su estado actual. Una vez completada, esta llamada la <xref:System.Windows.Shell.JumpList.JumpItems%2A> propiedad se modifica para contener solo aquellos elementos que el shell de Windows se agregó correctamente a su Jump List de la barra de tareas. Puede tener acceso a las listas de elementos quitados a través de los controladores de eventos para el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo obtener el actual <xref:System.Windows.Shell.JumpList> y borrar el contenido de la <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección. El <xref:System.Windows.Shell.JumpList.Apply%2A> , a continuación, se llama el método para aplicar la <xref:System.Windows.Shell.JumpList> cambios en el shell de Windows. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Shell.JumpList" /> no se inicializa completamente.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Señala el inicio de la inicialización de <see cref="T:System.Windows.Shell.JumpList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Shell.JumpList> la clase implementa la <xref:System.ComponentModel.ISupportInitialize> interfaz para admitir la declaración de XAML de un <xref:System.Windows.Shell.JumpList>. El <xref:System.Windows.Shell.JumpList.BeginInit%2A> método solo se llama cuando el <xref:System.Windows.Shell.JumpList> se declara en XAML y se adjunta a un <xref:System.Windows.Application> utilizando la sintaxis de la propiedad adjunta. No llame a este método desde el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Esta llamada a <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> está anidada en una llamada anterior a <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Señala el final de la inicialización de <see cref="T:System.Windows.Shell.JumpList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Shell.JumpList> la clase implementa la <xref:System.ComponentModel.ISupportInitialize> interfaz para admitir la declaración de XAML de un <xref:System.Windows.Shell.JumpList>. El <xref:System.Windows.Shell.JumpList.EndInit%2A> método solo se llama cuando el <xref:System.Windows.Shell.JumpList> se declara en XAML y se adjunta a un <xref:System.Windows.Application> utilizando la sintaxis de la propiedad adjunta. No llame a este método desde el código.  
  
 El <xref:System.Windows.Shell.JumpList.EndInit%2A> método tiene el mismo efecto que el <xref:System.Windows.Shell.JumpList.Apply%2A> método. <xref:System.Windows.Shell.JumpList.EndInit%2A> envía el contenido de la <xref:System.Windows.Shell.JumpList> al shell de Windows en su estado actual. Una vez completada, esta llamada la <xref:System.Windows.Shell.JumpList.JumpItems%2A> propiedad se modifica para contener solo aquellos elementos que el shell de Windows se agregó correctamente a su Jump List. Puede tener acceso a las listas de elementos quitados a través de los controladores de eventos para el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Esta llamada a <see cref="M:System.Windows.Shell.JumpList.EndInit" /> no lleva emparejada una llamada a <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">Aplicación asociada al objeto <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <summary>Devuelve el objeto <see cref="T:System.Windows.Shell.JumpList" /> asociado a una aplicación.</summary>
        <returns>Objeto <see cref="T:System.Windows.Shell.JumpList" /> asociado a la aplicación especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede llamar a la <xref:System.Windows.Shell.JumpList.GetJumpList%2A> método para obtener el <xref:System.Windows.Shell.JumpList> asociado actualmente a un <xref:System.Windows.Application>. .NET Framework no requiere que éste sea el <xref:System.Windows.Shell.JumpList> que se aplica actualmente al shell de Windows.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo obtener el <xref:System.Windows.Shell.JumpList> asociado a la aplicación actual. A <xref:System.Windows.Shell.JumpTask> se agrega a la <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección y se agrega a la **recientes** categoría. El <xref:System.Windows.Shell.JumpList.Apply%2A> método se llama para aplicar la actualización <xref:System.Windows.Shell.JumpList> al shell de Windows. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de objetos <see cref="T:System.Windows.Shell.JumpItem" /> que aparecen en la Jump List.</summary>
        <value>Colección de objetos <see cref="T:System.Windows.Shell.JumpItem" /> que aparecen en la Jump List. El valor predeterminado es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las listas Jump List pueden contener dos tipos de elementos de un <xref:System.Windows.Shell.JumpTask> y <xref:System.Windows.Shell.JumpPath>. A <xref:System.Windows.Shell.JumpTask> es un vínculo a un programa y un <xref:System.Windows.Shell.JumpPath> es un vínculo a un archivo.  
  
 Cuando un <xref:System.Windows.Shell.JumpList> se crea, el <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección está vacía. Puede agregar cualquier <xref:System.Windows.Shell.JumpTask> o <xref:System.Windows.Shell.JumpPath> objetos a la colección. La colección solo contiene elementos que se han agregado por el programa. Después de la <xref:System.Windows.Shell.JumpList> se ha pasado el shell de Windows por una llamada correcta a la <xref:System.Windows.Shell.JumpList.EndInit%2A> o <xref:System.Windows.Shell.JumpList.Apply%2A> métodos, el <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección contendrá únicamente los elementos que se agregaron correctamente a la barra de tareas Jump List. Se quitan los elementos que no se agregaron correctamente el <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección. Puede tener acceso a las listas de elementos quitados a través de los controladores de eventos para el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo obtener el actual <xref:System.Windows.Shell.JumpList> y borrar el contenido de la <xref:System.Windows.Shell.JumpList.JumpItems%2A> colección. El <xref:System.Windows.Shell.JumpList.Apply%2A> , a continuación, se llama el método para aplicar la <xref:System.Windows.Shell.JumpList> cambios en el shell de Windows. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el shell de Windows no agrega correctamente los elementos de salto a la Jump list.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después del contenido de la <xref:System.Windows.Shell.JumpList> se aplican al shell de Windows, la <xref:System.Windows.Shell.JumpList.JumpItems%2A> propiedad se modifica para contener solo aquellos elementos que el shell de Windows se agregó correctamente a su Jump List. Puede tener acceso a las listas de elementos quitados a través de los controladores de eventos para el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo controlar la <xref:System.Windows.Shell.JumpList.JumpItemsRejected> eventos para mostrar los elementos rechazados en un cuadro de mensaje. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el usuario quita de la lista los elementos de salto que anteriormente estaban en la Jump List.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después del contenido de la <xref:System.Windows.Shell.JumpList> se aplican al shell de Windows, la <xref:System.Windows.Shell.JumpList.JumpItems%2A> propiedad se modifica para contener solo aquellos elementos que el shell de Windows se agregó correctamente a su Jump List. Puede tener acceso a las listas de elementos quitados a través de los controladores de eventos para el <xref:System.Windows.Shell.JumpList.JumpItemsRejected> y <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo controlar la <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> eventos para mostrar los elementos rechazados en un cuadro de mensaje. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">Aplicación asociada al objeto <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <param name="value">
          <see cref="T:System.Windows.Shell.JumpList" /> que se va a asociar a la aplicación.</param>
        <summary>Establece el objeto <see cref="T:System.Windows.Shell.JumpList" /> asociado a una aplicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede crear varias <xref:System.Windows.Shell.JumpList> objetos. Sin embargo, solo un <xref:System.Windows.Shell.JumpList> cada vez que se puede asociar con un <xref:System.Windows.Application>. Llame a la <xref:System.Windows.Shell.JumpList.SetJumpList%2A> método para establecer el <xref:System.Windows.Shell.JumpList> asociado actualmente a un <xref:System.Windows.Application>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Windows.Shell.JumpList> en el código. El método estático <xref:System.Windows.Shell.JumpList.SetJumpList%2A> método se llama para asociar el <xref:System.Windows.Shell.JumpList> a la aplicación actual. El <xref:System.Windows.Shell.JumpList> se aplica automáticamente al shell de Windows cuando se establece. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los elementos que se usan con frecuencia aparecen en la Jump List.</summary>
        <value>
          Es <see langword="true" /> si los elementos que se usan con frecuencia aparecen en la Jump List; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la **frecuente** categoría se administran mediante el shell de Windows. Para mostrar los elementos que se usan con frecuencia en la Jump List, establezca la <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> propiedad `true`.  
  
 El **recientes** y **frecuente** categorías a menudo contienen muchos de los mismos elementos de salto. Como resultado, las aplicaciones suelen mostrar el **recientes** o **frecuente** categoría en la Jump List, pero no ambos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Windows.Shell.JumpList> configurado para mostrar el **frecuente** categoría. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los elementos usados recientemente aparecen en la Jump List.</summary>
        <value>
          Es <see langword="true" /> si los elementos usados recientemente aparecen en la Jump List; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la **recientes** categoría se administran mediante el shell de Windows. Para mostrar los elementos que se usan con frecuencia en la Jump List, establezca la <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> propiedad `true`.  
  
 El **recientes** y **frecuente** categorías a menudo contienen muchos de los mismos elementos de salto. Como resultado, las aplicaciones suelen mostrar el **recientes** o **frecuente** categoría en la Jump List, pero no ambos.  
  
 Puede llamar a la <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> método para solicitar que el shell de Windows agregue elementos a la **recientes** lista de elementos. Si la aplicación no está registrada para controlar el tipo de nombre de archivo del elemento, no aparecerá en la **recientes** lista y las llamadas a <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> se producirá un error en modo silencioso.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Windows.Shell.JumpList> configurado para mostrar el **recientes** categoría. Este ejemplo forma parte de un ejemplo más extenso disponible en la <xref:System.Windows.Shell.JumpList> general sobre la clase.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>