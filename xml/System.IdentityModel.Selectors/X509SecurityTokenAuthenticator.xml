<Type Name="X509SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa22991b89524e54d695efbd2cdfd4c534de5e0b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37651341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenAuthenticator : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenAuthenticator = class&#xA;    inherit SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Autentica un <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la clase <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> para autenticar los tokens de seguridad <xref:System.IdentityModel.Tokens.X509SecurityToken>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llama al método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> para autenticar el token, el certificado X.509 no está asignado a una identidad de Windows y el certificado se valida mediante una cadena de certificados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator validator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="validator">Un <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que comprueba que el certificado es válido.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> usando el validador de certificados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.IdentityModel.Selectors.X509CertificateValidator> proporciona un conjunto de modelos de validación de certificados predefinido, como, por ejemplo, la propiedad <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>. Estos modelos de validación se pueden pasar al parámetro `validator`. Cuando una aplicación requiere un método de validación personalizado, derive una clase de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e invalide el método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. El método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> llama al método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 De forma predeterminada, el <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> no asigna el certificado X.509 a una identidad de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">Un <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que comprueba que el certificado es válido.</param>
        <param name="mapToWindows">
          <see langword="true" /> para asignar la identidad del certificado a una identidad de Windows; de lo contrario, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> utilizando el método de validación de certificado especificado e indica si la identidad del certificado está asignada a una identidad de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.IdentityModel.Selectors.X509CertificateValidator> proporciona un conjunto de modelos de validación de certificados predefinido, como, por ejemplo, la propiedad <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>. Estos modelos de validación se pueden pasar al parámetro `validator`. Cuando una aplicación requiere un método de validación personalizado, derive una clase de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e invalide el método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. El método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> llama al método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 Cuando se llama al método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> para autenticar el token y `mapToWindows` es `true`, el certificado X.509 se asigna a una cuenta de Windows y las notificaciones se agregan al <xref:System.IdentityModel.Policy.EvaluationContext> con los grupos de Windows a los que el usuario pertenece. La forma en la que el certificado X.509 se asigna a una cuenta de Windows depende del tipo de token de seguridad:  
  
-   Cuando el token de seguridad es del tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, el certificado X.509 se asigna utilizando la propiedad <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>.  
  
-   Cuando el token de seguridad es del tipo `X509SecurityToken`, el certificado X.509 se asigna a una cuenta de Windows utilizando su nombre principal del usuario (UPN).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean, includeWindowsGroups As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows, includeWindowsGroups)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="includeWindowsGroups" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">Un <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que comprueba que el certificado es válido.</param>
        <param name="mapToWindows">
          <see langword="true" /> para asignar la identidad del certificado a una identidad de Windows; de lo contrario, <see langword="false" />.</param>
        <param name="includeWindowsGroups">
          <see langword="true" /> para incluir los grupos a los que pertenece el usuario de Windows en la propiedad <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> que se construye a lo largo del proceso de autenticación; de lo contrario, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> utilizando el método de validación de certificado especificado e indica si la identidad del certificado se asigna a una identidad de Windows y los grupos de Windows a los que el usuario pertenece.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el fin de mejorar el rendimiento, pase `false` al parámetro `includeWindowsGroups` cuando la información de grupos de Windows no se requiera.  
  
 La clase <xref:System.IdentityModel.Selectors.X509CertificateValidator> tiene varias propiedades estáticas, como, por ejemplo, la propiedad <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> que se puede pasar al parámetro `validator`. Estas propiedades proporcionan métodos de validación comunes para los certificados X.509. Cuando se requiere un método de validación personalizado, derive una clase de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e invalide el método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. El método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> llama al método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 Cuando `true` se pasa al parámetro `mapToWindows`, el certificado X.509 se asigna a una cuenta de Windows y las notificaciones pertinentes se agregan al <xref:System.IdentityModel.Policy.EvaluationContext>, como los grupos de Windows a los que el usuario pertenece. Cuando el token de seguridad es del tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, la propiedad <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> está utilizando la identidad que se especifica en el token; de lo contrario, el certificado X.509 se asigna a una identidad de Windows utilizando un inicio de sesión de Kerberos S4U basado en la extensión SubjectAltNames del nombre de entidad de seguridad del usuario del certificado X.509.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="x509SecurityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que se va a validar.</param>
        <summary>Obtiene un valor que indica si el autenticador de tokens de seguridad puede validar el token de seguridad especificado.</summary>
        <returns>
          <see langword="true" /> cuando <paramref name="token" /> es un token de seguridad <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> o una clase que deriva de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> no autentica el token de seguridad; el método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> realiza eso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapCertificateToWindowsAccount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapCertificateToWindowsAccount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MapCertificateToWindowsAccount : bool" Usage="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si asignar el certificado X.509 a una cuenta de Windows.</summary>
        <value>
          <see langword="true" /> para asignar el certificado X.509 a una cuenta de Windows; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> sólo se puede establecer un constructor.  
  
 Si se utiliza la seguridad de HTTPS o nivel de transporte SSL y el canal de seguridad subyacente o Internet Information Services (IIS) ya proporcionan asignación, se aplica la asignación, sin validación de cadena. De lo contrario, antes de realizar la asignación, el certificado se valida mediante una cadena de certificados y el certificado debe encadenarse a una identidad de NT_AUTHORITY. La estructura de la cadena utilizada corresponde a la cert_chain_policy_nt_auth, tal y como se define en el `CertVerifyCertificateChainPolicy` función (consulte la [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) función en el SDK de criptografía). Este comportamiento sólo se produce al asignar un certificado a una cuenta de Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="x509SecurityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que se va a validar.</param>
        <summary>Autentica el token de seguridad especificado y devuelve el conjunto de directivas de la autorización para el token de seguridad.</summary>
        <returns>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de tipo <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> que contiene el conjunto de directivas de autorización en vigor para esta aplicación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se invalide el método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>, siga estas instrucciones:  
  
-   Cuando el token de seguridad pasado en el parámetro `token` no se puede validar, produzca la excepción <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.  
  
-   Cuando no hay en vigor ninguna directiva de la autorización para esta aplicación, devuelva un <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> vacío de tipo <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  
  
 Cuando este método devuelve `null`, Windows Communication Foundation generará una <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> excepción.  
  
 El método <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> llama al método <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> del método de validación especificado en el constructor para autenticar el parámetro `token`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>