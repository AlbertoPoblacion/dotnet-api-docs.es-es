<Type Name="KerberosSecurityTokenProvider" FullName="System.IdentityModel.Selectors.KerberosSecurityTokenProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c69432d05f26c7b4ded3f4d3f43ea6a86934b246" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51929754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KerberosSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KerberosSecurityTokenProvider extends System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class KerberosSecurityTokenProvider&#xA;Inherits SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class KerberosSecurityTokenProvider : System::IdentityModel::Selectors::SecurityTokenProvider" />
  <TypeSignature Language="F#" Value="type KerberosSecurityTokenProvider = class&#xA;    inherit SecurityTokenProvider" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un proveedor del token de seguridad que proporciona tokens de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> para un remitente del mensaje SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la mayoría de las instancias la clase <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider> no necesita ser llamada directamente, como se llama cuando un cliente envía un mensaje SOAP que requiere un token de seguridad <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>. Específicamente, un cliente especifica el tipo de token de seguridad que necesitó utilizar la  clase <xref:System.ServiceModel.Description.ClientCredentials> y la clase  <xref:System.ServiceModel.Description.ClientCredentials> llama al método<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> para obtener un token de seguridad. Cuando el token de seguridad necesario es un token de seguridad,  <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> el método <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> llama al método <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d892973-1558-4115-a9e1-696777776125">Cómo: Crear un Token personalizado</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (servicePrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider servicePrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName">El nombre de entidad de seguridad de servicio para el que obtener un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> utilizando el nombre de entidad de seguridad de servicio especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor establece el nivel de suplantación que un cliente permite en <xref:System.Security.Principal.TokenImpersonationLevel>`Identification`. El contexto actual del subproceso de la llamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) se utiliza como una identidad del cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="servicePrincipalName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string * System.Security.Principal.TokenImpersonationLevel -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider (servicePrincipalName, tokenImpersonationLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" />
        <Parameter Name="tokenImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName">El nombre de entidad de seguridad de servicio para el que obtener un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
        <param name="tokenImpersonationLevel">
          <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> que especifica el grado al que un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> puede representar en nombre del cliente.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> utilizando el nombre de entidad de seguridad del servicio especificado y si un cliente le permite a un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> suplantar las credenciales del cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contexto actual del subproceso de la llamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) se utiliza como una identidad del cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="tokenImpersonationLevel" /> no es <see langword="Identification" /> ni <see langword="Impersonation" />.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="servicePrincipalName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, class System.Net.NetworkCredential networkCredential) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel, System::Net::NetworkCredential ^ networkCredential);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential credential);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string servicePrincipalName, valuetype System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, class System.Net.NetworkCredential credential) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KerberosSecurityTokenProvider(System::String ^ servicePrincipalName, System::Security::Principal::TokenImpersonationLevel tokenImpersonationLevel, System::Net::NetworkCredential ^ credential);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider : string * System.Security.Principal.TokenImpersonationLevel * System.Net.NetworkCredential -&gt; System.IdentityModel.Selectors.KerberosSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.KerberosSecurityTokenProvider (servicePrincipalName, tokenImpersonationLevel, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="servicePrincipalName" Type="System.String" Index="0" />
        <Parameter Name="tokenImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="1" />
        <Parameter Name="networkCredential" Type="System.Net.NetworkCredential" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="servicePrincipalName">El nombre de entidad de seguridad de servicio para el que obtener un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
        <param name="tokenImpersonationLevel">
          <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> que especifica el grado al que un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> puede representar en nombre del proceso cliente.</param>
        <param name="networkCredential">
          <see cref="T:System.Net.NetworkCredential" /> que representa la identidad de <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
        <param name="credential">
          <see cref="T:System.Net.NetworkCredential" /> que representa la identidad de <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> utilizando el nombre de entidad de seguridad del servicio especificado, la identidad del cliente, y si un cliente le permite a un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> suplantar las credenciales del cliente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="tokenImpersonationLevel" /> no es <see langword="Identification" /> ni <see langword="Impersonation" />.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="servicePrincipalName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="kerberosSecurityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> que especifica el valor de tiempo de espera para el mensaje que obtiene el token de seguridad.</param>
        <summary>Obtiene un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad para obtener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> que llama al método <xref:System.ServiceModel.Description.ClientCredentials> cuando un cliente envía un mensaje SOAP y se necesita un token de seguridad <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>.  
  
 El método <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> llama al método <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential NetworkCredential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential NetworkCredential" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ NetworkCredential { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NetworkCredential : System.Net.NetworkCredential" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la identidad del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</summary>
        <value>
          <see cref="T:System.Net.NetworkCredential" /> que representa la identidad de <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el valor de la propiedad <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential%2A> es `null` y se llama al método <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>, el contexto actual del subproceso de la llamada (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) se utiliza como una identidad del cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePrincipalName">
      <MemberSignature Language="C#" Value="public string ServicePrincipalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServicePrincipalName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePrincipalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServicePrincipalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePrincipalName : string" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de entidad de seguridad del servicio para el que obtener un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> .</summary>
        <value>El nombre de entidad de seguridad del servicio para el que obtener un token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel TokenImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica el grado al que un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> puede representar el nombre de un cliente.</summary>
        <value>
          <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> que especifica el grado al que un destinatario del token de seguridad <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> puede representar en nombre del cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel%2A> debe ser bien `Identification` o `Impersonation`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>