<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HwndHost.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fd565933d14b6f23aa8c789d653f9f5a5791d2b2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd565933d14b6f23aa8c789d653f9f5a5791d2b2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndHost">
          <source>Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</source>
          <target state="translated">Hospeda una ventana de Win32 como un elemento del contenido de Windows Presentation Foundation (WPF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>To host a <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window, create a class that derives from <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</source>
          <target state="translated">Al host una <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> ventana, cree una clase que deriva de <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph> method and create your <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window as a child of the parent window that is passed into the method.</source>
          <target state="translated">Invalidar el <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph> método y crear su <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> ventana como un elemento secundario de la ventana primaria que se pasa al método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Although <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, various properties of <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> that come from <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and other intermediate classes such as <ph id="ph5">&lt;xref:System.Windows.UIElement&gt;</ph> are not generally mapped to possible <ph id="ph6">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> equivalents.</source>
          <target state="translated">Aunque <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> deriva <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, distintas propiedades de <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> que provienen de <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> y otras clases intermedias como <ph id="ph5">&lt;xref:System.Windows.UIElement&gt;</ph> no se asignan normalmente a posibles <ph id="ph6">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> equivalentes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Also, not all <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph><ph id="ph2"> / </ph><ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> input events transfer across the interoperation boundary.</source>
          <target state="translated">Además, no todos los <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> <ph id="ph2"> / </ph> <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> transferencia de eventos de entrada a través de los límites de interoperación.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> primarily so that an <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance can be inserted into the widest variety of possible content models, and so that default <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> layout characteristics can apply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se deriva de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> principalmente para que una <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instancia se pueden insertar en la variedad más amplia posible de modelos de contenido y, por lo tanto que default <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> pueden aplicar las características de diseño.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>For more details on <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>, see <bpt id="p1">[</bpt>WPF and Win32 Interoperation<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>.</source>
          <target state="translated">Para obtener más detalles sobre <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>, consulte <bpt id="p1">[</bpt>WPF y Win32 interoperación<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.#ctor">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The window handle of the parent window.</source>
          <target state="translated">Identificador de la ventana de la ventana primaria.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>When overridden in a derived class, creates the window to be hosted.</source>
          <target state="translated">Cuando se invalida en una clase derivada, crea la ventana que se va a hospedar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The handle to the child <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window to create.</source>
          <target state="translated">Identificador de la ventana secundaria <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> que se va a crear.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>This method's implementation is called from within the internal implementation of <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph>.</source>
          <target state="translated">Implementación de este método se llama desde dentro de la implementación interna de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The child window will be created only if the window is owned by the calling thread.</source>
          <target state="translated">Se creará la ventana secundaria solo si la ventana es pertenece al subproceso que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Override this method to build the window being hosted.</source>
          <target state="translated">Invalide este método para crear la ventana que se hospeda.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The window that you return must be a child of the window specified by <ph id="ph1">&lt;paramref name="hwndParent" /&gt;</ph>.</source>
          <target state="translated">La ventana que devuelve debe ser un elemento secundario de la ventana especificada por <ph id="ph1">&lt;paramref name="hwndParent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>In addition, the child window will only be created if the window is owned by the calling thread.</source>
          <target state="translated">Además, la ventana secundaria se creará solo si la ventana es pertenece al subproceso que realiza la llamada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>A structure that contains the window handle.</source>
          <target state="translated">Estructura que contiene el identificador de ventana.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>When overridden in a derived class, destroys the hosted window.</source>
          <target state="translated">Cuando se invalida en una clase derivada, destruye la ventana hospedada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Override this method to destroy the hosted window as created by <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</source>
          <target state="translated">Invalide este método para destruir la ventana hospedada tal como lo creó <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The <ph id="ph1">&lt;paramref name="hwnd" /&gt;</ph> parameter should be the handle as returned by <ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;paramref name="hwnd" /&gt;</ph> parámetro debe ser el identificador devuelto por <ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndHost">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">Libera inmediatamente los recursos del sistema que pueda contener el objeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Derived classes can override this method (by the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> signature) if they need to do additional cleanup.</source>
          <target state="translated">Las clases derivadas pueden invalidar este método (por el <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> firma) si necesita realizar una limpieza adicional.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">Libera inmediatamente los recursos del sistema que pueda contener el objeto.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This method can be overridden, but not by this signature.</source>
          <target state="translated">Este método puede reemplazarse, pero no mediante esta firma.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> for the overridable signature.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> para la firma reemplazable.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This parameterless signature is the one required by the interface contract, and it effectively calls the active <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> implementation with <ph id="ph2">`disposing`</ph> being <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Esta firma sin parámetros es el exigido por el contrato de interfaz y llama eficazmente a activos <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> implementación con <ph id="ph2">`disposing`</ph> que se va a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> if called from an explicit disposer and <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">Se establece en <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se llama desde un contenedor de eliminación y, de lo contrario es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">Libera inmediatamente los recursos del sistema que pueda contener el objeto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Derived classes can override this method if they need to do additional cleanup.</source>
          <target state="translated">Las clases derivadas pueden reemplazar este método si necesita realizar una limpieza adicional.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>However, they should also call the base implementation to ensure that all resources are freed.</source>
          <target state="translated">Sin embargo, también debe llamar a la implementación base para asegurarse de que todos los recursos se liberan.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>The base implementation does fairly substantial work to free resources that are known to the base class.</source>
          <target state="translated">La implementación base realiza un trabajo importante para liberar los recursos que se sabe que la clase base.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>If a window is being hosted, it will be destroyed.</source>
          <target state="translated">Si se hospeda una ventana, se destruirá.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>The calling thread must be the same as the dispatcher.</source>
          <target state="translated">El subproceso que realiza la llamada debe ser el mismo que el distribuidor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndHost.DpiChanged">
          <source>Occurs after the DPI of the screen on which the HwndHost is displayed changes.</source>
          <target state="translated">Se produce después de que cambie el valor de PPP de la pantalla en la que se muestra HwndHost.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> for when the DPI of the screen the HwndHost is on changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> cuando el valor de PPP de la pantalla de HwndHost está en los cambios.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Finalize">
          <source>Performs the final cleanup before the garbage collector destroys the object.</source>
          <target state="translated">Realiza la limpieza final antes de que el recolector de elementos no utilizados destruya el objeto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Finalize">
          <source>Like most finalizers, this calls <ph id="ph1">`Dispose(false)`</ph>.</source>
          <target state="translated">Al igual que la mayoría de los finalizadores, llama <ph id="ph1">`Dispose(false)`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>Gets the window handle  of the hosted window.</source>
          <target state="translated">Obtiene el identificador de ventana de la ventana hospedada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>The window handle.</source>
          <target state="translated">Identificador de la ventana.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>to get this object.</source>
          <target state="translated">Para obtener este objeto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">Obtiene un valor que indica si el receptor o uno de los componentes que contiene tiene el foco.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el receptor o uno de los componentes que contiene tiene el foco; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated">Tamaño del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Returns the size of the window represented by the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object, as requested by layout engine operations.</source>
          <target state="translated">Devuelve el tamaño de la ventana representado por el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>, de la forma solicitada por las operaciones del motor de diseño.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated">Tamaño del objeto <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>in order to adjust the layout (by having the layout engine act upon the hosted region).</source>
          <target state="translated">Para ajustar el diseño (haciendo que el motor de diseño actúan sobre la región hospedada).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>, a window is expected to be the size requested by layout at the time the window is created.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>, una ventana se espera que el tamaño solicitado por el diseño en el momento de crea la ventana.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Derived classes should override this method only if they have additional information regarding required window size.</source>
          <target state="translated">Las clases derivadas deben reemplazar este método sólo si tienen información adicional sobre el tamaño de la ventana necesaria.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The specific implementation here is already an override of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> virtual member, which bases size constraints on the window handle and treats a zero value in one or more dimensions as a non-constraint.</source>
          <target state="translated">La implementación concreta ya es una invalidación de la <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> miembro virtual, que basa las restricciones de tamaño en el identificador de ventana y trata un valor cero en una o más dimensiones como sin restricción.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /&gt;</ph> class also overrides a <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /&gt;</ph> implementation that will result in a clip of the form if it is too large.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /&gt;</ph> clase también invalida un <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /&gt;</ph> implementación resultante en un clip del formulario si es demasiado grande.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>Occurs for each unhandled message that is received by the hosted window.</source>
          <target state="translated">Se produce por cada mensaje no controlado que reciba la ventana hospedada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>to add or remove handlers of this event.</source>
          <target state="translated">Para agregar o quitar controladores de este evento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> .</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> para <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The type-specific <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation.</source>
          <target state="translated">Implementación de <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> específica del tipo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The implementation of this method is typically to call the constructor of a specific <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> implementation, and return it as the return value.</source>
          <target state="translated">La implementación de este método suele ser llamar al constructor de un determinado <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> implementación y devolverlo como el valor devuelto.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A&gt;</ph> does this, but the automation peer that it returns is an internal class.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> implementación de <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A&gt;</ph> hace esto, pero la automatización del mismo nivel que devuelve es una clase interna.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The original DPI scale setting.</source>
          <target state="translated">Configuración de escala de PPP original.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The new DPI scale setting.</source>
          <target state="translated">Nueva configuración de escala de PPP.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>Called when the DPI at which this HwndHost is rendered changes.</source>
          <target state="translated">Llamado cuando cambia el valor de PPP en el que este HwndHost se representa.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Called when the hosted window receives a <bpt id="p1">[</bpt>WM_KEYDOWN<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161282)</ept> message.</source>
          <target state="translated">Se llama cuando la ventana hospedada recibe un mensaje <bpt id="p1">[</bpt>WM_KEYDOWN<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161282)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This is an override of the class handler <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;</ph> and provides the behavior of translating the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> message into a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event, marking the event as handled whenever appropriate.</source>
          <target state="translated">Se trata de un reemplazo del controlador de la clase <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;</ph> y proporciona el comportamiento de la traducción de la <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> de mensajes en un <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> eventos, marcar el evento como controlado siempre que sea adecuado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">Datos del evento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Called when the hosted window receives a <bpt id="p1">[</bpt>WM_KEYUP<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161283)</ept> message.</source>
          <target state="translated">Se llama cuando la ventana hospedada recibe un mensaje <bpt id="p1">[</bpt>WM_KEYUP<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161283)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>This is an override of the class handler <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;</ph> and provides the behavior of translating the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> message into a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event, marking the event as handled whenever appropriate.</source>
          <target state="translated">Se trata de un reemplazo del controlador de la clase <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;</ph> y proporciona el comportamiento de la traducción de la <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> de mensajes en un <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> eventos, marcar el evento como controlado siempre que sea adecuado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">Mensaje de las teclas de acceso y los datos asociados.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">Se llama a este método cuando se invoca una de las teclas de acceso de este receptor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>The window's position.</source>
          <target state="translated">Posición de la ventana.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>Called when the hosted window's position changes.</source>
          <target state="translated">Se le llama cuando cambia la posición de la ventana hospedada.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>Subclasses can override this method to resize the window based on the provided dimensions of <ph id="ph1">&lt;paramref name="rcBoundingBox" /&gt;</ph>.</source>
          <target state="translated">Las subclases pueden invalidar este método para cambiar el tamaño de la ventana basándose en las dimensiones proporcionadas de <ph id="ph1">&lt;paramref name="rcBoundingBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">Receptor <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> interface of a contained component.</source>
          <target state="translated">Registra la interfaz <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> de un componente contenido.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">Sitio <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el receptor o uno de los componentes que contiene tiene el foco; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">Una referencia a la interfaz <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del contenedor.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>to call this method.</source>
          <target state="translated">llamar a este método.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">Mensaje de las teclas de acceso y los datos asociados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this message structure.</source>
          <target state="translated">No modifique esta estructura de mensaje.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha administrado el mensaje; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">Receptor <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">Sitio <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>to call this method.</source>
          <target state="translated">llamar a este método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">Especifica si el foco debería establecerse en la primera o última posición de tabulación.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el foco se ha establecido tal y como se solicitó; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, si no hay ninguna posición de tabulación.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>to call this method.</source>
          <target state="translated">llamar a este método.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el mensaje está controlado por la implementación del método; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">llamar a este método.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">Para una descripción de este miembro, vea <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el mensaje se ha procesado y no debe llamarse a <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">Especifica si el foco debería establecerse en la primera o última posición de tabulación.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">Establece el foco en la primera o última posición de tabulación del receptor.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes keyboard input at the keydown message level.</source>
          <target state="translated">Procesa la entrada de teclado en el nivel de mensajes de pulsación de teclas.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> method is called.</source>
          <target state="translated">Procesa los mensajes de entrada WM_CHAR, WM_SYSCHAR, WM_DEADCHAR y WM_SYSDEADCHAR antes de llamar al método <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
          <source>Updates the child window's size, visibility, and position to reflect the current state of the element.</source>
          <target state="translated">Actualiza el tamaño, la visibilidad y la posición de la ventana secundaria para reflejar el estado actual del elemento.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The window handle of the hosted window.</source>
          <target state="translated">Identificador de ventana de la ventana hospedada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The message to act upon.</source>
          <target state="translated">Mensaje en el que se va a actuar.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Information that may be relevant to handling the message.</source>
          <target state="translated">Información que puede ser relevante para controlar el mensaje.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This is typically used to store small pieces of information, such as flags.</source>
          <target state="translated">Se suele utilizar para almacenar pequeños fragmentos de información, como los marcadores.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Information that may be relevant to handling the message.</source>
          <target state="translated">Información que puede ser relevante para controlar el mensaje.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This is typically used to reference an object.</source>
          <target state="translated">Se suele utilizar para hacer referencia a un objeto.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Whether events resulting should be marked handled.</source>
          <target state="translated">Indica si los eventos resultantes deben marcarse como controlados.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>When overridden in a derived class, accesses the window process (handle) of the hosted child window.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene acceso al proceso de ventana (identificador) de la ventana secundaria hospedada.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The window handle of the child window.</source>
          <target state="translated">Identificador de ventana de la ventana secundaria.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">Este tipo o miembro no está disponible en la zona de seguridad de Internet.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>to call this method.</source>
          <target state="translated">llamar a este método.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The base implementation in <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> does not return a practical process, but will return <bpt id="p1">&lt;c&gt;</bpt>IntPtr.Zero<ept id="p1">&lt;/c&gt;</ept> as a failsafe.</source>
          <target state="translated">La implementación base en <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> no devuelve ningún proceso práctico, pero devolverá <bpt id="p1">&lt;c&gt;</bpt>IntPtr.Zero<ept id="p1">&lt;/c&gt;</ept> como un seguro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>