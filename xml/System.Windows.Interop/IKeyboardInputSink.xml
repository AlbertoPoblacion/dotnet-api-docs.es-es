<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IKeyboardInputSink.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53120cf880fee3bfbee4ccce673b07364bc06400a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3120cf880fee3bfbee4ccce673b07364bc06400a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</source>
          <target state="translated">Proporciona a los componentes un receptor del teclado que administra el desplazamiento mediante tabulación, los aceleradores y las teclas de acceso en los límites de interoperabilidad y entre los identificadores de ventana (HWND).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</source>
          <target state="translated">Esta interfaz implementa la administración de los mensajes del teclado en escenarios de interoperación de WPF-Win32.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>A keyboard sink handles input from particular subsets of the overall keyboard input model for <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</source>
          <target state="translated">Un receptor de teclado controla la entrada procedente de determinados subconjuntos del modelo de entrada de teclado general para <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> y <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>y permite que se procesen y se dirigen a HWND que no sea uno con el foco de teclado actual de entrada de teclado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>If your component contains other components, and maintains a tab order, your component must also implement <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;</ph> and keep track of which component has focus.</source>
          <target state="translated">Si su componente contiene otros componentes y mantiene un orden de tabulación, también debe implementar el componente <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;</ph> y realizar un seguimiento de qué componente tiene el foco.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>For a discussion of the input architecture specifically implemented for <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph> interop, see <bpt id="p1">[</bpt>Windows Forms and WPF Interoperability Input Architecture<ept id="p1">](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)</ept>.</source>
          <target state="translated">Para obtener una descripción de la arquitectura de entrada implementada específicamente para <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph> interoperabilidad, vea <bpt id="p1">[</bpt>Windows Forms y WPF Interoperability Input Architecture<ept id="p1">](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> each implement the <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface, through explicit interface definitions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> cada implemente el <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interfaz a través de definiciones de interfaz explícita.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>The explicit definitions supply default behaviors, and can also be accessed if necessary through an <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface cast of <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</source>
          <target state="translated">Las definiciones explícitas proporcionan comportamientos predeterminados y también puede tener acceso si es necesario a través de un <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interfaz convierte de <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">Obtiene un valor que indica si el receptor o uno de los componentes que contiene tiene el foco.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el receptor o uno de los componentes que contiene tiene el foco; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>This method is necessary for forwarding <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> calls to child components with focus from within the <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation.</source>
          <target state="translated">Este método es necesario para el reenvío de <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> llamadas a los componentes secundarios tiene el foco desde el <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A&gt;</ph> recursively until you reach the level of specific focus and forward <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> there.</source>
          <target state="translated">Llame a <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A&gt;</ph> recursivamente hasta que llegue al nivel de foco específico y su reenvío <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> no existe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>Gets or sets a reference to the component's container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">Obtiene o establece una referencia a la interfaz <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del contenedor del componente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">Una referencia a la interfaz <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del contenedor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>This property should initially be set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Inicialmente, esta propiedad debe establecerse en <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>Any container that adds the sink to its components list will set <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A&gt;</ph> before any other methods are called, and it can be set multiple times after that.</source>
          <target state="translated">Establecerá cualquier contenedor que agreguen el receptor a su lista de componentes <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A&gt;</ph> antes de llamar a cualquier otro método y se puede establecer varias veces después de eso.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>You should set the property to <ph id="ph1">`null`</ph> again before disposal.</source>
          <target state="translated">Debe establecer la propiedad en <ph id="ph1">`null`</ph> antes de la eliminación.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">Mensaje de las teclas de acceso y los datos asociados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this message structure.</source>
          <target state="translated">No modifique esta estructura de mensaje.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">Se llama a este método cuando se invoca una de las teclas de acceso de este receptor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha administrado el mensaje; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</source>
          <target state="translated">El <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> mensaje debe ser WM_CHAR, WM_SYSCHAR, WM_DEADCHAR o WM_SYSDEADCHAR.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the component has contained components, the message must be passed in your implementation by calling each contained component's <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> method.</source>
          <target state="translated">Si el componente ha tenido componentes, se debe pasar el mensaje en el componente de implementación mediante una llamada cada contenida <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>An interface that returns <ph id="ph1">`true`</ph> from <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> will not call <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</source>
          <target state="translated">Una interfaz que devuelve <ph id="ph1">`true`</ph> de <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> no llamará a <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Implementations can choose to perform all specific key combination handling in <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</ph>.and bypass <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</source>
          <target state="translated">Pueden elegir las implementaciones para realizar la combinación de teclas específica todos control en <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</ph>y omitir <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">Receptor <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> interface of a contained component.</source>
          <target state="translated">Registra la interfaz <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> de un componente contenido.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">Sitio <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> del componente contenido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</source>
          <target state="translated">Componentes con componentes secundarios deben mantener colecciones internas de sitios y usar este método para agregar un nuevo receptor y devolver el nuevo sitio.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>You only need to maintain the site collection, because the sink can be obtained from the site.</source>
          <target state="translated">Solo debe mantener la colección de sitios, dado que el receptor puede obtenerse a partir del sitio.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">Especifica si el foco debería establecerse en la primera o última posición de tabulación.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">Establece el foco en la primera o última posición de tabulación del receptor.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el foco se ha establecido tal y como se solicitó; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, si no hay ninguna posición de tabulación.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection.First&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection.Last&gt;</ph> are the only relevant values that should be passed to this method in the <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection.First&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection.Last&gt;</ph> son los únicos valores pertinentes que se deben pasar a este método en el <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes keyboard input at the keydown message level.</source>
          <target state="translated">Procesa la entrada de teclado en el nivel de mensajes de pulsación de teclas.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el mensaje está controlado por la implementación del método; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</source>
          <target state="translated">El mensaje debe ser WM_KEYDOWN o WM_SYSKEYDOWN.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the component is unable to handle the input translations and has child components that might have translations, it typically calls <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> method on the child component that holds the current focus before returning a result.</source>
          <target state="translated">Si el componente no puede administrar las traducciones de entrada y tiene componentes secundarios que pueden tener traducciones, normalmente llama <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> método en el componente secundario que contiene el foco actual antes de devolver un resultado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the message cannot be handled immediately, you can re-dispatch it from within the <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation if necessary, and then return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Si el mensaje no se puede controlar inmediatamente, vuelva a puede enviar desde el <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementación si es necesario y, a continuación, vuelva <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</ph> to a child component, or to call <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;</ph> on the parent site because the tab sequence has reached the beginning or end bounds.</source>
          <target state="translated">Un escenario principal para traducir las teclas de aceleración es controlar el mensaje de keydown VK_TAB y determinar si se debe establecer el foco dentro del componente, llamar a <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</ph> a un componente secundario o llamar a <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;</ph> en el registro primario de sitio porque la secuencia de tabulación ha alcanzado los límites del principio o al final.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Certain components may choose to not handle the tab key in this fashion.</source>
          <target state="translated">Ciertos componentes pueden optar por no administrar la tecla tab en este modo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">El mensaje y los datos asociados.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">No modifique esta estructura.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">Se pasa por referencia debido únicamente a razones de rendimiento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">Teclas modificadoras.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> is called.</source>
          <target state="translated">Procesa los mensajes de entrada WM_CHAR, WM_SYSCHAR, WM_DEADCHAR y WM_SYSDEADCHAR antes de llamar a <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el mensaje se ha procesado y no debe llamarse a <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If you implement this method to return <ph id="ph1">`true`</ph>, the input architecture will not call <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> for that key message.</source>
          <target state="translated">Si implementa este método para devolver <ph id="ph1">`true`</ph>, no se llamará la arquitectura de entrada <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> para ese mensaje de tecla.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>