<Type Name="ComponentDispatcher" FullName="System.Windows.Interop.ComponentDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c067685c2dbbcf8aa6b9cb1639c9f41d07b7466" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ComponentDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ComponentDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.ComponentDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDispatcher abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="df673-101">Habilita el control compartido del suministro de mensajes entre Win32 y WPF en escenarios de interoperación.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df673-101">Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df673-102">Aunque la propia clase es estática, todos los miembros de <xref:System.Windows.Interop.ComponentDispatcher> son específicas de un subproceso determinado.</span><span class="sxs-lookup"><span data-stu-id="df673-102">Although the class itself is static, all members of <xref:System.Windows.Interop.ComponentDispatcher> are specific to a particular thread.</span></span> <span data-ttu-id="df673-103">Por ejemplo, si examina el valor de <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> en dos subprocesos diferentes, podría obtener valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="df673-103">For example, if you examine the value of <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> on two different threads, you might get different values.</span></span>  
  
 <span data-ttu-id="df673-104">Los métodos son estáticos, pero están respaldados por estructuras de datos por subproceso.</span><span class="sxs-lookup"><span data-stu-id="df673-104">The methods are static but they are backed by per-thread data structures.</span></span>  <span data-ttu-id="df673-105">Los métodos estáticos permiten el acceso de singleton, pero la <xref:System.Windows.Interop.ComponentDispatcher> ordenar las operaciones por subproceso apropiado.</span><span class="sxs-lookup"><span data-stu-id="df673-105">The static methods allow singleton access but the <xref:System.Windows.Interop.ComponentDispatcher> is sorting out the appropriate per-thread operations.</span></span>  
  
 <span data-ttu-id="df673-106">El propietario del suministro de mensajes se define mediante el código que llama la [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] función [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx).</span><span class="sxs-lookup"><span data-stu-id="df673-106">The owner of the message pump is defined by the code that calls the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function  [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx).</span></span> <span data-ttu-id="df673-107">Las llamadas de propietario <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> para cada mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="df673-107">The owner calls <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> for every keyboard message.</span></span> <span data-ttu-id="df673-108">Este método provoca el <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> eventos con los mensajes en el evento contenían datos.</span><span class="sxs-lookup"><span data-stu-id="df673-108">This method raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> event with the messages contained in the event data.</span></span> <span data-ttu-id="df673-109">Si no se controla ese evento, el propietario provoca la <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> eventos con los mensajes contenían en el evento de argumento.</span><span class="sxs-lookup"><span data-stu-id="df673-109">If that event is not handled, the owner raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> event with the messages contained in the event argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="df673-110">Se admiten sólo los mensajes de teclado.</span><span class="sxs-lookup"><span data-stu-id="df673-110">Only keyboard messages are supported.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="df673-111">para tener acceso a cualquier miembro de esta clase.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df673-111">to access any member of this class.</span>
      </span>
      <span data-ttu-id="df673-112">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="df673-112">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="CurrentKeyboardMessage">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Interop.MSG CurrentKeyboardMessage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentKeyboardMessage As MSG" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Interop::MSG CurrentKeyboardMessage { System::Windows::Interop::MSG get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.MSG</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-113">Obtiene el último mensaje que se ha producido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-113">Gets the last message that was raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="df673-114">El último mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-114">The last message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-115">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-115">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-116">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="EnterThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler EnterThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EnterThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EnterThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-117">Se produce cuando un subproceso se vuelve modal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-117">Occurs when a thread becomes modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-118">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-118">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-119">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-119">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadModal">
      <MemberSignature Language="C#" Value="public static bool IsThreadModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsThreadModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsThreadModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsThreadModal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-120">Obtiene un valor que indica si el subproceso es modal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-120">Gets a value that indicates whether the thread is modal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="df673-121">
            <see langword="true" /> si el subproceso es modal; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-121">
              <see langword="true" /> if the thread is modal; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-122">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-122">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-123">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-123">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="LeaveThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler LeaveThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LeaveThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LeaveThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-124">Se produce cuando un subproceso modal se vuelve no modal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-124">Occurs when a modal thread becomes nonmodal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-125">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-125">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-126">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-126">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="PopModal">
      <MemberSignature Language="C#" Value="public static void PopModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PopModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PopModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="df673-127">Se llama para indicar que un subproceso modal ya no es modal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-127">Called to indicate that a modal thread is no longer modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-128">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-128">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-129">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-129">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="PushModal">
      <MemberSignature Language="C#" Value="public static void PushModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="df673-130">Se llama para indicar que el subproceso es modal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-130">Called to indicate that the thread is modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-131">Todos los miembros de esta clase requieren <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permiso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-131">All members of this class require <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permission.</span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="RaiseIdle">
      <MemberSignature Language="C#" Value="public static void RaiseIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseIdle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="df673-132">Se llama para indicar que un subproceso está inactivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-132">Called to indicate that a thread is idle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-133">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-133">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-134">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-134">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      </Docs>
    </Member>
    <Member MemberName="RaiseThreadMessage">
      <MemberSignature Language="C#" Value="public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RaiseThreadMessage(valuetype System.Windows.Interop.MSG&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RaiseThreadMessage (ByRef msg As MSG) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RaiseThreadMessage(System::Windows::Interop::MSG % msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="df673-135">El mensaje y sus datos asociados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-135">The message and its associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df673-136">Indica que hay un nuevo mensaje disponible para su posible control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-136">Indicates that a new message is available for possible handling.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df673-137">
            <see langword="true" />, si uno de los módulos que escuchan el bucle de mensajes ha procesado el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-137">
              <see langword="true" />, if one of the modules listening to the message loop processed the message.</span>
          </span>
          <span data-ttu-id="df673-138">El propietario del bucle de mensajes debe omitir el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-138">The owner of the message loop should ignore the message.</span>
          </span>
          <span data-ttu-id="df673-139">
            <see langword="false" /> si no se procesó el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-139">
              <see langword="false" />, if the message was not processed.</span>
          </span>
          <span data-ttu-id="df673-140">En este caso, el propietario del suministro de mensajes debe llamar a la función de [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) seguida de [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx).</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-140">In this case, the owner of the message pump should call the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) followed by [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df673-141">El propietario del suministro de mensajes debe llamar a este método para cada mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="df673-141">The owner of the message pump should call this method for every keyboard message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-142">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-142">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-143">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-143">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadFilterMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadFilterMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadFilterMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-144">Se produce cuando el suministro de mensajes recibe un mensaje del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-144">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-145">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-145">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-146">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-146">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadIdle">
      <MemberSignature Language="C#" Value="public static event EventHandler ThreadIdle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadIdle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadIdle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThreadIdle;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-147">Se produce cuando el subproceso está inactivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-147">Occurs when the thread is idle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df673-148">Si no hay ningún mensaje en la cola, el estado de inactividad anunciado por el <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> evento es una hora eficaz para realizar el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="df673-148">If there are no messages in the queue, then the idle state announced by the <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> event is an efficient time to do processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-149">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-149">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-150">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-150">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      </Docs>
    </Member>
    <Member MemberName="ThreadPreprocessMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadPreprocessMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadPreprocessMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df673-151">Se produce cuando el suministro de mensajes recibe un mensaje del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-151">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df673-152">Este evento se debe generar después <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, si no se controla ese evento.</span><span class="sxs-lookup"><span data-stu-id="df673-152">This event should be raised after <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, if that event is not handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="df673-153">para tener acceso a cualquier miembro de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-153">to access any member of this class.</span>
          </span>
          <span data-ttu-id="df673-154">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="df673-154">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      </Docs>
    </Member>
  </Members>
</Type>