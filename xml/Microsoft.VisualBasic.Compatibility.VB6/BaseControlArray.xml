<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a5723b036c680fb9249ceac4204d499b60b660" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32088780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementa la funcionalidad básica común a las matrices de controles en las aplicaciones actualizadas desde Visual Basic 6.0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente no se hereda de `BaseControlArray`. Para crear su propia matriz de controles, heredar de una de las clases de matriz de control en el `Microsoft.VisualBasic.Compatibility.VB6` espacio de nombres.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a esta clase no se usa normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, llama a una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">
          <see cref="T:System.ComponentModel.IContainer" /> donde se va a hospedar la matriz de controles.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />, especificando opcionalmente un contenedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Dado que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, llama a una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Windows.Forms.Control" /> que se va a probar.</param>
        <summary>Obtiene un valor que indica si un control es miembro de una matriz de colores.</summary>
        <returns>
          Es <see langword="true" /> si el control es miembro de la matriz de controles; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a que esta clase no se usa normalmente para crear una instancia de la clase, no se suele llamar a este método `Protected` directamente, sino mediante una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Las clases derivadas deben asegurarse de que <paramref name="target" /> es del tipo correcto para la matriz de controles.  
  
 Cuando se reemplaza <see langword="BaseCanExtend" /> en una clase derivada, no llame a la <see langword="BaseCanExtend" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <see cref="T:System.Windows.Forms.Control" /> cuyo índice se desea recuperar.</param>
        <summary>Obtiene el índice de un control en una matriz de controles.</summary>
        <returns>Entero <see langword="Short" /> que representa el índice del control en la matriz de controles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a que esta clase no se usa normalmente para crear una instancia de la clase, no se suele llamar a este método `Protected` directamente, sino mediante una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="BaseGetIndex" /> en una clase derivada, no llame a la <see langword="BaseGetIndex" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">Entero que representa el índice del control en la matriz de controles.</param>
        <summary>Obtiene el control correspondiente al índice especificado en una matriz de controles.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Control" /> en el <paramref name="Index" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a que esta clase no se usa normalmente para crear una instancia de la clase, no se suele llamar a este método `Protected` directamente, sino mediante una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="BaseGetItem" /> en una clase derivada, no llame a la <see langword="BaseGetItem" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>No se admite en la clase <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se admite este método.  
  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. -  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <see cref="T:System.Windows.Forms.Control" /> cuyo índice se desea establecer.</param>
        <param name="Index">Entero <see langword="Short" /> que representa el índice del control.</param>
        <param name="fIsDynamic">Opcional. <see langword="Boolean" /> que especifica si se creó el control en tiempo de diseño (<see langword="false" />) o en tiempo de ejecución (<see langword="true" />).</param>
        <summary>Establece el índice de un control en una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a que esta clase no se usa normalmente para crear una instancia de la clase, no se suele llamar a este método `Protected` directamente, sino mediante una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="BaseSetIndex" /> en una clase derivada, no llame a la <see langword="BaseSetIndex" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Devuelve un valor que indica si un control es miembro de una matriz de colores.</summary>
        <returns>
          Es <see langword="true" /> si el control es miembro de la matriz de controles; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Dado que esta clase no se usa normalmente para crear una instancia de la clase, esto `Protected` método no se suele llamar directamente, pero en su lugar, llama a una clase derivada.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="BaseShouldSerialiazeIndex" /> en una clase derivada, no llame a la <see langword="BaseShouldSerialiazeIndex" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena el contenedor de una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena valores que permiten saber si un control de una matriz de controles se creó en tiempo de diseño o en tiempo de ejecución.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena valores que representan los controles de una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el número de controles en una matriz de controles.</summary>
        <returns>Short que contiene el número de controles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad en un [para... Next (instrucción)](~/docs/visual-basic/language-reference/statements/for-next-statement.md) para realizar una operación en los controles en una matriz de controles.  
  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados utilizados por un control de una matriz de controles y, opcionalmente, también libera los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método. `Dispose()` se invoca el protegido `Dispose(Boolean)` método con el parámetro va a eliminar establecido en `true`. <xref:System.Object.Finalize%2A> invoca `Dispose` con el parámetro va a eliminar establecido en `false`.  
  
 Cuando el parámetro que se va a eliminar es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que hace referencia a este control. Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos. Cuando se reemplaza <see langword="Dispose(Boolean)" />, asegúrese de que no hagan referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md). Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena un valor que indica si el código de inicialización para el contenedor de una matriz de controles ha terminado de ejecutarse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el tipo de un control en una matriz de controles.</summary>
        <returns>Este método debe invalidarse.  
  
 La clase <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0. Debido a que esta clase no se usa normalmente para crear una instancia de la clase, no se suele llamar a este método <see langword="Protected" /> directamente, sino mediante una clase derivada.  
  
 <block subset="none" type="note"><para>  
 Las funciones y los objetos del espacio de nombres <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
</para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="GetControlInstanceType" /> en una clase derivada, no llame a la <see langword="GetControlInstanceType" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una referencia a un objeto enumerador, que se utiliza para recorrer en iteración una matriz de controles.</summary>
        <returns>Un objeto <see cref="T:System.Collections.IEnumerator" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Agrega controladores de eventos para un control en una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método debe invalidarse.  
  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see langword="HookUpControlEvents" /> en una clase derivada, no llame a la <see langword="HookUpControlEvents" /> método de la clase base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena los índices de una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un valor <see langword="Short" /> que contiene el menor subíndice disponible para una matriz de controles.</summary>
        <returns>
          <see langword="Short" /> que contiene los límites inferiores de una matriz de controles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `LBound` función se utiliza con la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> función para determinar el tamaño de una matriz de controles.  
  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <see langword="Short" /> que representa el índice del nuevo control.</param>
        <summary>Crea un nuevo elemento en una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es el equivalente de Visual Basic 6.0 `Load` función para crear dinámicamente un nuevo elemento de matriz de control.  
  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Activa la inicialización del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los entornos de diseño, este método utilizan normalmente para comenzar la inicialización de un componente que se emplea en un formulario o utilizado por otro componente. El <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> método termina la inicialización. Mediante el `BeginInit` y <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> métodos impide que el control que se va a usar antes de que esté totalmente inicializado. La inicialización se produce en tiempo de ejecución.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finaliza la inicialización de un control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entornos de diseño suelen utilizar este método para finalizar la inicialización de un componente que se emplea en un formulario o utilizado por otro componente. El `EndInit` método termina la inicialización. Mediante el <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> y `EndInit` métodos impide que el control que se va a usar antes de que esté totalmente inicializado. La inicialización se produce en tiempo de ejecución.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un valor <see langword="Short" /> que contiene el mayor subíndice disponible para una matriz de controles.</summary>
        <returns>
          <see langword="Short" /> que contiene los límites superiores de una matriz de controles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `UBound` función se utiliza con la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> función para determinar el tamaño de una matriz de controles.  
  
 La <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> clase es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <see langword="Short" /> que representa el índice del control que se va a quitar.</param>
        <summary>Quita un control de una matriz de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es el equivalente de Visual Basic 6.0 `Unload` función para quitar dinámicamente un elemento de la matriz de control.  
  
> [!NOTE]
>  Solo los controles que se han agregado dinámicamente mediante el <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> método puede quitarse de la matriz de controles.  
  
 La clase <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> es la clase base para todas las matrices de controles que se usan en las aplicaciones actualizadas desde Visual Basic 6.0.  
  
> [!NOTE]
>  Las funciones y los objetos en el <xref:Microsoft.VisualBasic.Compatibility.VB6> espacio de nombres se proporcionan para su uso con las herramientas de actualización de Visual Basic 6.0 a Visual Basic. En la mayoría de los casos, estos objetos y funciones duplican la funcionalidad de otros espacios de nombres de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Únicamente son necesarios cuando el modelo de código de Visual Basic 6.0 difiere notablemente de la implementación de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>