<Type Name="Support" FullName="Microsoft.VisualBasic.Compatibility.VB6.Support">
  <TypeSignature Language="C#" Value="public sealed class Support" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Support extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.Support" />
  <TypeSignature Language="VB.NET" Value="Public Module Support" />
  <TypeSignature Language="C++ CLI" Value="public ref class Support sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="69b32-101">Contiene varias funciones de utilidad para la compatibilidad con versiones anteriores de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-101">Contains various utility functions for backward compatibility with Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-102">Las funciones de esta clase se utilizan durante la actualización de proyectos de Visual Basic 6.0 a Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-102">The functions in this class are used during the upgrade of Visual Basic 6.0 projects to Visual Basic.</span></span> <span data-ttu-id="69b32-103">Algunas funciones reemplazan funciones de Visual Basic 6.0 que ya no se admiten en Visual Basic; otras compensan las diferencias en los modelos de objetos.</span><span class="sxs-lookup"><span data-stu-id="69b32-103">Some functions replace Visual Basic 6.0 functions that are no longer supported in Visual Basic; others compensate for differences in the object models.</span></span>  
  
 <span data-ttu-id="69b32-104">Para usar las funciones de esta clase en un proyecto de Visual Basic, agregue una referencia a la `Microsoft.VisualBasic.Compatibility.VB6` espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="69b32-104">To use functions in this class in a Visual Basic project, add a reference to the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static Array CopyArray (Array SourceArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Array CopyArray(class System.Array SourceArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyArray (SourceArray As Array) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CopyArray(Array ^ SourceArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="69b32-105">Objeto <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-105">A <see cref="T:System.Array" />.</span></span></param>
        <summary><span data-ttu-id="69b32-106">Duplica la funcionalidad de Visual Basic 6.0 de asignar un tipo <see langword="Array" /> a un tipo <see langword="Variant" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-106">Duplicates Visual Basic 6.0 functionality of assigning an <see langword="Array" /> to a <see langword="Variant" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-107">Matriz que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="69b32-107">The array to copy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-108">Visual Basic 6.0 `Variant` ya no se admite el tipo de datos en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-108">The Visual Basic 6.0 `Variant` data type is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-109">El `CopyArray` función se utiliza con las herramientas de actualización para copiar un `Array` a o desde un `Variant` matriz.</span><span class="sxs-lookup"><span data-stu-id="69b32-109">The `CopyArray` function is used by the upgrade tools to copy an `Array` to or from a `Variant` array.</span></span>  
  
 <span data-ttu-id="69b32-110">Para copiar una matriz en Visual Basic, utilice la <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> o <xref:System.Array.CopyTo%2A> métodos de la <xref:System.Array> clase.</span><span class="sxs-lookup"><span data-stu-id="69b32-110">To copy an array in Visual Basic, use the <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> or <xref:System.Array.CopyTo%2A> methods of the <xref:System.Array> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorToIPicture">
      <MemberSignature Language="C#" Value="public static object CursorToIPicture (System.Windows.Forms.Cursor curs);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CursorToIPicture(class System.Windows.Forms.Cursor curs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CursorToIPicture (curs As Cursor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CursorToIPicture(System::Windows::Forms::Cursor ^ curs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curs" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="curs"><span data-ttu-id="69b32-111"><see cref="T:System.Windows.Forms.Cursor" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-111">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-112">Devuelve un objeto OLE <see langword="IPicture" /> que se corresponde con el objeto <see cref="T:System.Windows.Forms.Cursor" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-112">Returns an OLE <see langword="IPicture" /> object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-113"><see cref="T:System.Object" /> que representa el objeto OLE <see langword="IPicture" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-113">An <see cref="T:System.Object" /> that represents the OLE <see langword="IPicture" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-114">En Visual Basic 6.0, el `MouseIcon` propiedad de un formulario o un control se pueden utilizar para cargar un personalizado `MousePointer` (cursor).</span><span class="sxs-lookup"><span data-stu-id="69b32-114">In Visual Basic 6.0, the `MouseIcon` property of a form or control could be used to load a custom `MousePointer` (cursor).</span></span> <span data-ttu-id="69b32-115">En algunos casos, la imagen para la `MouseIcon` se almacena como un `stdOle.IPicture`; esta función se usa la herramienta de actualización para convertir un <xref:System.Windows.Forms.Cursor> a una `stdOle.IPicture`.</span><span class="sxs-lookup"><span data-stu-id="69b32-115">In some cases, the image for the `MouseIcon` was stored as a `stdOle.IPicture`; this function is used by the upgrade tool to convert a <xref:System.Windows.Forms.Cursor> to a `stdOle.IPicture`.</span></span>  
  
 <span data-ttu-id="69b32-116">Para convertir un <xref:System.Windows.Forms.Cursor> en Visual Basic, utilice la <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> método de la <xref:System.Windows.Forms.AxHost> clase.</span><span class="sxs-lookup"><span data-stu-id="69b32-116">To convert a <xref:System.Windows.Forms.Cursor> in Visual Basic, use the <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> method of the <xref:System.Windows.Forms.AxHost> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eqv">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-117">Realiza una equivalencia lógica entre dos expresiones.</span><span class="sxs-lookup"><span data-stu-id="69b32-117">Performs a logical equivalence on two expressions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static bool Eqv (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Eqv(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Eqv(bool a, bool b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-118"><see cref="T:System.Boolean" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-118">A <see cref="T:System.Boolean" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-119"><see cref="T:System.Boolean" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-119">A <see cref="T:System.Boolean" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-120">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-120">Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</span></span></summary>
        <returns>
          <span data-ttu-id="69b32-121">Es <see langword="true" /> si las dos expresiones son iguales; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-121"><see langword="true" /> if the two expressions are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-122">Si ambas expresiones son `Null`, resultado también es `Null`.</span><span class="sxs-lookup"><span data-stu-id="69b32-122">If either expression is `Null`, result is also `Null`.</span></span> <span data-ttu-id="69b32-123">Cuando ninguna de las expresiones es `Null`, resultado se determina según la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="69b32-123">When neither expression is `Null`, result is determined according to the following table:</span></span>  
  
|<span data-ttu-id="69b32-124">Si expression1 es</span><span class="sxs-lookup"><span data-stu-id="69b32-124">If expression1 is</span></span>|<span data-ttu-id="69b32-125">Y expression2 es</span><span class="sxs-lookup"><span data-stu-id="69b32-125">And expression2 is</span></span>|<span data-ttu-id="69b32-126">El resultado es</span><span class="sxs-lookup"><span data-stu-id="69b32-126">The result is</span></span>|  
|-----------------------|------------------------|-------------------|  
|`true`|`true`|`true`|  
|`true`|`false`|`false`|  
|`false`|`true`|`false`|  
|`false`|`false`|`true`|  
  
 <span data-ttu-id="69b32-127">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; utilice el operador de comparación es igual a (=) en lugar de `Eqv` para las evaluaciones lógicas.</span><span class="sxs-lookup"><span data-stu-id="69b32-127">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of `Eqv` for logical evaluations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static byte Eqv (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Eqv(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Eqv(System::Byte a, System::Byte b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-128"><see cref="T:System.Byte" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-128">A <see cref="T:System.Byte" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-129"><see cref="T:System.Byte" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-129">A <see cref="T:System.Byte" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-130">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-130">Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-131"><see cref="T:System.Byte" /> que contiene el resultado de la comparación bit a bit.</span><span class="sxs-lookup"><span data-stu-id="69b32-131">A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-132">El `Eqv` operador realiza una comparación bit a bit de bits colocados idénticamente en dos expresiones numéricas y establece el bit según la tabla siguiente correspondiente:</span><span class="sxs-lookup"><span data-stu-id="69b32-132">The `Eqv` operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:</span></span>  
  
|<span data-ttu-id="69b32-133">Si el bit en expression1 es</span><span class="sxs-lookup"><span data-stu-id="69b32-133">If bit in expression1 is</span></span>|<span data-ttu-id="69b32-134">Y el bit en expression2 es</span><span class="sxs-lookup"><span data-stu-id="69b32-134">And bit in expression2 is</span></span>|<span data-ttu-id="69b32-135">El resultado es</span><span class="sxs-lookup"><span data-stu-id="69b32-135">The result is</span></span>|  
|------------------------------|-------------------------------|-------------------|  
|<span data-ttu-id="69b32-136">0</span><span class="sxs-lookup"><span data-stu-id="69b32-136">0</span></span>|<span data-ttu-id="69b32-137">0</span><span class="sxs-lookup"><span data-stu-id="69b32-137">0</span></span>|<span data-ttu-id="69b32-138">1</span><span class="sxs-lookup"><span data-stu-id="69b32-138">1</span></span>|  
|<span data-ttu-id="69b32-139">0</span><span class="sxs-lookup"><span data-stu-id="69b32-139">0</span></span>|<span data-ttu-id="69b32-140">1</span><span class="sxs-lookup"><span data-stu-id="69b32-140">1</span></span>|<span data-ttu-id="69b32-141">0</span><span class="sxs-lookup"><span data-stu-id="69b32-141">0</span></span>|  
|<span data-ttu-id="69b32-142">1</span><span class="sxs-lookup"><span data-stu-id="69b32-142">1</span></span>|<span data-ttu-id="69b32-143">0</span><span class="sxs-lookup"><span data-stu-id="69b32-143">0</span></span>|<span data-ttu-id="69b32-144">0</span><span class="sxs-lookup"><span data-stu-id="69b32-144">0</span></span>|  
|<span data-ttu-id="69b32-145">1</span><span class="sxs-lookup"><span data-stu-id="69b32-145">1</span></span>|<span data-ttu-id="69b32-146">1</span><span class="sxs-lookup"><span data-stu-id="69b32-146">1</span></span>|<span data-ttu-id="69b32-147">1</span><span class="sxs-lookup"><span data-stu-id="69b32-147">1</span></span>|  
  
 <span data-ttu-id="69b32-148">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; para su uso de las evaluaciones bit a bit el `Not` y `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="69b32-148">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static short Eqv (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Eqv(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Eqv(short a, short b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-149"><see cref="T:System.Int16" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-149">A <see cref="T:System.Int16" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-150"><see cref="T:System.Int16" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-150">A <see cref="T:System.Int16" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-151">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-151">Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-152"><see cref="T:System.Int16" /> que contiene el resultado de la comparación.</span><span class="sxs-lookup"><span data-stu-id="69b32-152">A <see cref="T:System.Int16" /> that contains the result of the comparison.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-153">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; para su uso de las evaluaciones bit a bit el `Not` y `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="69b32-153">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static int Eqv (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Eqv(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Eqv(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-154"><see cref="T:System.Int32" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-154">A <see cref="T:System.Int32" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-155"><see cref="T:System.Int32" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-155">A <see cref="T:System.Int32" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-156">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-156">Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-157"><see cref="T:System.Int32" /> que contiene el resultado de la comparación.</span><span class="sxs-lookup"><span data-stu-id="69b32-157">A <see cref="T:System.Int32" /> that contains the result of the comparison.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-158">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; para su uso de las evaluaciones bit a bit el `Not` y `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="69b32-158">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static long Eqv (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Eqv(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Eqv(long a, long b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-159"><see cref="T:System.Int64" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-159">A <see cref="T:System.Int64" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-160"><see cref="T:System.Int64" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-160">A <see cref="T:System.Int64" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-161">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-161">Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-162"><see cref="T:System.Int64" /> que contiene el resultado de la comparación.</span><span class="sxs-lookup"><span data-stu-id="69b32-162">A <see cref="T:System.Int64" /> that contains the result of the comparison.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-163">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; para su uso de las evaluaciones bit a bit el `Not` y `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="69b32-163">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static object Eqv (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Eqv(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eqv(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-164"><see cref="T:System.Object" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-164">A <see cref="T:System.Object" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-165"><see cref="T:System.Object" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="69b32-165">A <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="69b32-166">Realiza una equivalencia lógica entre dos expresiones <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-166">Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-167"><see cref="T:System.Object" /> que contiene el resultado de la comparación.</span><span class="sxs-lookup"><span data-stu-id="69b32-167">A <see cref="T:System.Object" /> that contains the result of the comparison.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-168">En Visual Basic, la `Eqv` operador ya no forma parte del lenguaje Visual Basic; para su uso de las evaluaciones bit a bit el `Not` y `XOr` operadores.</span><span class="sxs-lookup"><span data-stu-id="69b32-168">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeBold">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeBold(class System.Drawing.Font CurrentFont, bool Bold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeBold (CurrentFont As Font, Bold As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeBold(System::Drawing::Font ^ CurrentFont, bool Bold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Bold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-169">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-169">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Bold">
          <span data-ttu-id="69b32-170">Es <see langword="true" /> para establecer el bit de estilo <see cref="F:System.Drawing.FontStyle.Bold" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-170"><see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-171">Cambia el bit de estilo <see cref="F:System.Drawing.FontStyle.Bold" /> de una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-171">Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</span></span></summary>
        <returns><span data-ttu-id="69b32-172"><see cref="T:System.Drawing.Font" /> con el nuevo estilo aplicado.</span><span class="sxs-lookup"><span data-stu-id="69b32-172">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-173">En Visual Basic 6.0, estilos de fuente se aplicaban estableciendo propiedades; en fuente de Visual Basic se aplican los estilos mediante una <xref:System.Drawing.FontStyle> enumeración.</span><span class="sxs-lookup"><span data-stu-id="69b32-173">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="69b32-174">Esta función se utiliza con las herramientas de actualización para traducir las propiedades de Visual Basic 6.0 a las enumeraciones nuevo.</span><span class="sxs-lookup"><span data-stu-id="69b32-174">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeGdiCharSet">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeGdiCharSet(class System.Drawing.Font CurrentFont, unsigned int8 GdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeGdiCharSet (CurrentFont As Font, GdiCharSet As Byte) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeGdiCharSet(System::Drawing::Font ^ CurrentFont, System::Byte GdiCharSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="GdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-175">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-175">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="GdiCharSet"><span data-ttu-id="69b32-176">Valor de byte que especifica el juego de caracteres GDI que se va a utilizar.</span><span class="sxs-lookup"><span data-stu-id="69b32-176">A byte value that specifies the GDI character set to use.</span></span></param>
        <summary><span data-ttu-id="69b32-177">Devuelve una fuente para un juego de caracteres GDI especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-177">Returns a font for a specified GDI character set.</span></span></summary>
        <returns><span data-ttu-id="69b32-178"><see cref="T:System.Drawing.Font" /> para el juego de caracteres GDI especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-178">A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-179">En Visual Basic 6.0, el `stdFont` objeto tenía un `CharSet` propiedad que especifica la GDI juego de caracteres para una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-179">In Visual Basic 6.0, the `stdFont` object had a `CharSet` property that specified the GDI character set for a font.</span></span> <span data-ttu-id="69b32-180">En Visual Basic, el juego de caracteres se especifica como una función opcional de un <xref:System.Drawing.Font> constructor.</span><span class="sxs-lookup"><span data-stu-id="69b32-180">In Visual Basic, the character set is specified as an optional of a <xref:System.Drawing.Font> constructor.</span></span> <span data-ttu-id="69b32-181">Esta función se utiliza con las herramientas de actualización para convertir un `stdFont` a una <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="69b32-181">This function is used by the upgrade tools to convert a `stdFont` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="FontChangeItalic">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeItalic(class System.Drawing.Font CurrentFont, bool Italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeItalic (CurrentFont As Font, Italic As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeItalic(System::Drawing::Font ^ CurrentFont, bool Italic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Italic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-182">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-182">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Italic">
          <span data-ttu-id="69b32-183">Es <see langword="true" /> para establecer el bit de estilo <see cref="F:System.Drawing.FontStyle.Italic" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-183"><see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-184">Cambia el bit de estilo <see cref="F:System.Drawing.FontStyle.Italic" /> de una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-184">Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</span></span></summary>
        <returns><span data-ttu-id="69b32-185"><see cref="T:System.Drawing.Font" /> con el nuevo estilo aplicado.</span><span class="sxs-lookup"><span data-stu-id="69b32-185">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-186">En Visual Basic 6.0, estilos de fuente se aplicaban estableciendo propiedades; en fuente de Visual Basic se aplican los estilos mediante una <xref:System.Drawing.FontStyle> enumeración.</span><span class="sxs-lookup"><span data-stu-id="69b32-186">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="69b32-187">Esta función se utiliza con las herramientas de actualización para traducir las propiedades de Visual Basic 6.0 a las enumeraciones nuevo.</span><span class="sxs-lookup"><span data-stu-id="69b32-187">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeName">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeName(class System.Drawing.Font CurrentFont, string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeName (CurrentFont As Font, Name As String) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeName(System::Drawing::Font ^ CurrentFont, System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-188">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-188">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Name"><span data-ttu-id="69b32-189">Valor de tipo <see langword="String" /> que representa la propiedad <see langword="Font" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-189">A <see langword="String" /> that represents the Visual Basic 6.0 <see langword="Font" /> property.</span></span></param>
        <summary><span data-ttu-id="69b32-190">Devuelve un nuevo objeto <see cref="T:System.Drawing.Font" /> para el objeto <see langword="Font" /> especificado de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-190">Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 <see langword="Font" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-191"><see cref="T:System.Drawing.Font" /> que coincide con el objeto <see langword="Font" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-191">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="Font" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-192">En Visual Basic 6.0, el nombre de una fuente se especifica mediante la `Font` propiedad; en Visual Basic, <xref:System.Drawing.Font.Name%2A> es una propiedad de la <xref:System.Drawing.Font> objeto.</span><span class="sxs-lookup"><span data-stu-id="69b32-192">In Visual Basic 6.0, the name of a font was specified by the `Font` property; in Visual Basic, <xref:System.Drawing.Font.Name%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="69b32-193">Esta función se utiliza con las herramientas de actualización para convertir un Visual Basic 6.0 `Font` a una <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="69b32-193">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeSize(class System.Drawing.Font CurrentFont, float32 Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeSize (CurrentFont As Font, Size As Single) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeSize(System::Drawing::Font ^ CurrentFont, float Size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-194">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-194">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Size"><span data-ttu-id="69b32-195">Valor de tipo <see langword="Single" /> que representa la propiedad <see langword="FontSize" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-195">A <see langword="Single" /> that represents the Visual Basic 6.0 <see langword="FontSize" /> property.</span></span></param>
        <summary><span data-ttu-id="69b32-196">Cambia la propiedad <see cref="P:System.Drawing.Font.Size" /> de una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-196">Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</span></span></summary>
        <returns><span data-ttu-id="69b32-197"><see cref="T:System.Drawing.Font" /> que coincide con el objeto <see langword="FontSize" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-197">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="FontSize" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-198">En Visual Basic 6.0, el tamaño de una fuente se ha especificado por el `FontSize` propiedad; en Visual Basic, <xref:System.Drawing.Font.Size%2A> es una propiedad de la <xref:System.Drawing.Font> objeto.</span><span class="sxs-lookup"><span data-stu-id="69b32-198">In Visual Basic 6.0, the size of a font was specified by the `FontSize` property; in Visual Basic, <xref:System.Drawing.Font.Size%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="69b32-199">Esta función se utiliza con las herramientas de actualización para convertir un Visual Basic 6.0 `Font` a una <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="69b32-199">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeStrikeout">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeStrikeout(class System.Drawing.Font CurrentFont, bool Strikeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeStrikeout (CurrentFont As Font, Strikeout As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeStrikeout(System::Drawing::Font ^ CurrentFont, bool Strikeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Strikeout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-200">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-200">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Strikeout">
          <span data-ttu-id="69b32-201">Es <see langword="true" /> para establecer el bit de estilo <see cref="F:System.Drawing.FontStyle.Strikeout" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-201"><see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-202">Cambia el bit de estilo <see cref="F:System.Drawing.FontStyle.Strikeout" /> de una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-202">Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</span></span></summary>
        <returns><span data-ttu-id="69b32-203"><see cref="T:System.Drawing.Font" /> con el nuevo estilo aplicado.</span><span class="sxs-lookup"><span data-stu-id="69b32-203">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-204">En Visual Basic 6.0, estilos de fuente se aplicaban estableciendo propiedades; en fuente de Visual Basic se aplican los estilos mediante una <xref:System.Drawing.FontStyle> enumeración.</span><span class="sxs-lookup"><span data-stu-id="69b32-204">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="69b32-205">Esta función se utiliza con las herramientas de actualización para traducir las propiedades de Visual Basic 6.0 a las enumeraciones nuevo.</span><span class="sxs-lookup"><span data-stu-id="69b32-205">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeUnderline">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeUnderline(class System.Drawing.Font CurrentFont, bool Underline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeUnderline (CurrentFont As Font, Underline As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeUnderline(System::Drawing::Font ^ CurrentFont, bool Underline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Underline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><span data-ttu-id="69b32-206">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-206">A <see cref="T:System.Drawing.Font" />.</span></span></param>
        <param name="Underline">
          <span data-ttu-id="69b32-207">Es <see langword="true" /> para establecer el bit de estilo <see cref="F:System.Drawing.FontStyle.Underline" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-207"><see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-208">Cambia el bit de estilo <see cref="F:System.Drawing.FontStyle.Underline" /> de una fuente.</span><span class="sxs-lookup"><span data-stu-id="69b32-208">Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</span></span></summary>
        <returns><span data-ttu-id="69b32-209"><see cref="T:System.Drawing.Font" /> con el nuevo estilo aplicado.</span><span class="sxs-lookup"><span data-stu-id="69b32-209">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-210">En Visual Basic 6.0, estilos de fuente se aplicaban estableciendo propiedades; en fuente de Visual Basic se aplican los estilos mediante una <xref:System.Drawing.FontStyle> enumeración.</span><span class="sxs-lookup"><span data-stu-id="69b32-210">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="69b32-211">Esta función se utiliza con las herramientas de actualización para traducir las propiedades de Visual Basic 6.0 a las enumeraciones nuevo.</span><span class="sxs-lookup"><span data-stu-id="69b32-211">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontToIFont">
      <MemberSignature Language="C#" Value="public static object FontToIFont (System.Drawing.Font fnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FontToIFont(class System.Drawing.Font fnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontToIFont (fnt As Font) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FontToIFont(System::Drawing::Font ^ fnt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fnt" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="fnt"><span data-ttu-id="69b32-212"><see cref="T:System.Drawing.Font" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-212">The <see cref="T:System.Drawing.Font" /> to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-213">Convierte un objeto <see cref="T:System.Drawing.Font" /> en un objeto <see langword="stdFont" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-213">Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 <see langword="stdFont" /> object.</span></span></summary>
        <returns><span data-ttu-id="69b32-214">Un objeto <see langword="stdFont" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-214">A <see langword="stdFont" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-215">Visual Basic 6.0 `stdFont` objeto estaba basado en COM y no tiene ningún equivalente en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-215">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="69b32-216">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un <xref:System.Drawing.Font> y un `stdFont` durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-216">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = 1, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;, Optional DayOfWeek As FirstDayOfWeek = 1, Optional WeekOfYear As FirstWeekOfYear = 1) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="69b32-217">Expresión de <see cref="T:System.Object" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-217">The <see cref="T:System.Object" /> expression to convert.</span></span></param>
        <param name="Style"><span data-ttu-id="69b32-218">Opcional.</span><span class="sxs-lookup"><span data-stu-id="69b32-218">Optional.</span></span> <span data-ttu-id="69b32-219"><see cref="T:System.String" /> que representa un formato de fecha.</span><span class="sxs-lookup"><span data-stu-id="69b32-219">A <see cref="T:System.String" /> that represents a date format.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="69b32-220">Opcional.</span><span class="sxs-lookup"><span data-stu-id="69b32-220">Optional.</span></span> <span data-ttu-id="69b32-221">Una enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-221">A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="69b32-222">Opcional.</span><span class="sxs-lookup"><span data-stu-id="69b32-222">Optional.</span></span> <span data-ttu-id="69b32-223">Una enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-223">A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="69b32-224">Convierte la función <see langword="Format" /> de Visual Basic 6.0 de modo que sea compatible con Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-224">Converts the Visual Basic 6.0 <see langword="Format" /> function to be compatible with Visual Basic.</span></span></summary>
        <returns><span data-ttu-id="69b32-225"><see cref="T:System.String" /> que contiene los datos con formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-225">A <see cref="T:System.String" /> that contains the formatted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-226">Visual Basic 6.0 `Format` función podría ejecutarse en un `Variant` tipo de datos; en Visual Basic la `Variant` tipo de datos ya no existe.</span><span class="sxs-lookup"><span data-stu-id="69b32-226">The Visual Basic 6.0 `Format` function could operate on a `Variant` data type; in Visual Basic the `Variant` data type no longer exists.</span></span> <span data-ttu-id="69b32-227">Esta función se utiliza con las herramientas de actualización para convertir un `Variant` con formato mediante el `Format` función a un tipo compatible con el tiempo de ejecución de common language.</span><span class="sxs-lookup"><span data-stu-id="69b32-227">This function is used by the upgrade tools to convert a `Variant` formatted by using the `Format` function to a common language runtime-compliant type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height"><span data-ttu-id="69b32-228"><see cref="T:System.Double" /> que representa el alto.</span><span class="sxs-lookup"><span data-stu-id="69b32-228">A <see cref="T:System.Double" /> that represents the height.</span></span></param>
        <param name="ScaleHeight"><span data-ttu-id="69b32-229">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleHeight" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-229">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalHeightInPixels"><span data-ttu-id="69b32-230"><see langword="Integer" /> que representa el alto en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-230">An <see langword="Integer" /> that represents the height in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-231">Convierte una medida en píxeles en una medida de <see langword="ScaleHeight" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-231">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-232">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleHeight" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-232">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-233">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-233">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-234">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-234">This included a user-defined value.</span></span> <span data-ttu-id="69b32-235">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-235">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-236">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-236">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width"><span data-ttu-id="69b32-237"><see cref="T:System.Double" /> que representa el ancho.</span><span class="sxs-lookup"><span data-stu-id="69b32-237">A <see cref="T:System.Double" /> that represents the width.</span></span></param>
        <param name="ScaleWidth"><span data-ttu-id="69b32-238">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleWidth" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-238">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalWidthInPixels"><span data-ttu-id="69b32-239"><see langword="Integer" /> que representa el ancho en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-239">An <see langword="Integer" /> that represents the width in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-240">Convierte una medida en píxeles en una medida de <see langword="ScaleWidth" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-240">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-241">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleWidth" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-241">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-242">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-242">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-243">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-243">This included a user-defined value.</span></span> <span data-ttu-id="69b32-244">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-244">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-245">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-245">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserX">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-246"><see cref="T:System.Double" /> que representa la coordenada X.</span><span class="sxs-lookup"><span data-stu-id="69b32-246">A <see cref="T:System.Double" /> that represents the X coordinate.</span></span></param>
        <param name="ScaleLeft"><span data-ttu-id="69b32-247">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleLeft" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-247">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="ScaleWidth"><span data-ttu-id="69b32-248">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleWidth" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-248">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalWidthInPixels"><span data-ttu-id="69b32-249"><see langword="Integer" /> que representa el ancho en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-249">An <see langword="Integer" /> that represents the width in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-250">Convierte una medida en píxeles en una medida de <see langword="ScaleLeft" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-250">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-251">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleLeft" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-251">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-252">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-252">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-253">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-253">This included a user-defined value.</span></span> <span data-ttu-id="69b32-254">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-254">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-255">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-255">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserY">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-256"><see cref="T:System.Double" /> que representa la coordenada X.</span><span class="sxs-lookup"><span data-stu-id="69b32-256">A <see cref="T:System.Double" /> that represents the X coordinate.</span></span></param>
        <param name="ScaleTop"><span data-ttu-id="69b32-257">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleTop" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-257">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="ScaleHeight"><span data-ttu-id="69b32-258">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleHeight" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-258">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalHeightInPixels"><span data-ttu-id="69b32-259"><see langword="Integer" /> que representa el alto en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-259">An <see langword="Integer" /> that represents the height in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-260">Convierte una medida en píxeles en una medida de <see langword="ScaleTop" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-260">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleTop" /> measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-261">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleTop" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-261">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleTop" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-262">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-262">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-263">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-263">This included a user-defined value.</span></span> <span data-ttu-id="69b32-264">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-264">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-265">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-265">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsX">
      <MemberSignature Language="C#" Value="public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsX (X As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-266">Valor de tipo <see cref="T:System.Double" /> que representa la coordenada X en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-266">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</span></span></param>
        <param name="ToScale"><span data-ttu-id="69b32-267">Enumeración de <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa el modo <see langword="ScaleMode" /> de Visual Basic 6.0 al que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-267">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span></span></param>
        <summary><span data-ttu-id="69b32-268">Convierte una medida en píxeles en una medida de Visual Basic 6.0 para un modo <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="69b32-268">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-269">Valor de tipo <see cref="T:System.Double" /> que contiene el valor de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-269">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-270">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-270">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-271">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-271">This included a user-defined value.</span></span> <span data-ttu-id="69b32-272">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-272">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-273">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-273">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsY">
      <MemberSignature Language="C#" Value="public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsY (Y As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-274">Valor de tipo <see cref="T:System.Double" /> que representa la coordenada Y en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-274">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</span></span></param>
        <param name="ToScale"><span data-ttu-id="69b32-275">Enumeración de <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa el modo <see langword="ScaleMode" /> de Visual Basic 6.0 al que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-275">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span></span></param>
        <summary><span data-ttu-id="69b32-276">Convierte una medida en píxeles en una medida de Visual Basic 6.0 para un modo <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="69b32-276">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-277">Valor de tipo <see cref="T:System.Double" /> que contiene el valor de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-277">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-278">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-278">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-279">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-279">This included a user-defined value.</span></span> <span data-ttu-id="69b32-280">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-280">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-281">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-281">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveControl">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control GetActiveControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Windows.Forms.Control GetActiveControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ GetActiveControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-282">Obtiene el control que tiene actualmente el foco.</span><span class="sxs-lookup"><span data-stu-id="69b32-282">Gets the control that currently has focus.</span></span></summary>
        <returns><span data-ttu-id="69b32-283">Control que tiene actualmente el foco.</span><span class="sxs-lookup"><span data-stu-id="69b32-283">The control that currently has focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-284">Esta función se utiliza con las herramientas de actualización para reemplazar Visual Basic 6.0 `Screen.ActiveControl` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-284">This function is used by the upgrade tools to replace the Visual Basic 6.0 `Screen.ActiveControl` property.</span></span> <span data-ttu-id="69b32-285">Es el equivalente de llamar al método <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-285">It is the equivalent of calling <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> in Visual Basic.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancel">
      <MemberSignature Language="C#" Value="public static bool GetCancel (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetCancel(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancel (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetCancel(System::Windows::Forms::Button ^ btn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn"><span data-ttu-id="69b32-286">Un control <see cref="T:System.Windows.Forms.Button" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-286">A <see cref="T:System.Windows.Forms.Button" /> control.</span></span></param>
        <summary><span data-ttu-id="69b32-287">Obtiene un valor que indica si un control <see cref="T:System.Windows.Forms.Button" /> es el botón Cancelar de un formulario.</span><span class="sxs-lookup"><span data-stu-id="69b32-287">Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</span></span></summary>
        <returns>
          <span data-ttu-id="69b32-288">Es <see langword="true" /> si <paramref name="btn" /> es el botón Cancelar; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-288"><see langword="true" /> if <paramref name="btn" /> is the cancel button; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-289">Esta función es el equivalente de la comprobación de la <xref:System.Windows.Forms.Form.CancelButton%2A> propiedad de un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="69b32-289">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static bool GetDefault (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetDefault(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefault (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetDefault(System::Windows::Forms::Button ^ btn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn"><span data-ttu-id="69b32-290">Un control <see cref="T:System.Windows.Forms.Button" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-290">A <see cref="T:System.Windows.Forms.Button" /> control.</span></span></param>
        <summary><span data-ttu-id="69b32-291">Obtiene un valor que determina si un control <see cref="T:System.Windows.Forms.Button" /> es el botón predeterminado de un formulario.</span><span class="sxs-lookup"><span data-stu-id="69b32-291">Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</span></span></summary>
        <returns>
          <span data-ttu-id="69b32-292">Es <see langword="true" /> si <paramref name="btn" /> es el botón predeterminado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-292"><see langword="true" /> if <paramref name="btn" /> is the default button; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-293">Esta función es el equivalente de la comprobación de la <xref:System.Windows.Forms.Form.AcceptButton%2A> propiedad de un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="69b32-293">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEXEName">
      <MemberSignature Language="C#" Value="public static string GetEXEName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetEXEName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEXEName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEXEName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-294">Obtiene el nombre del archivo ejecutable (.exe) de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-294">Gets the name of the executable file (.exe) for the current application.</span></span></summary>
        <returns><span data-ttu-id="69b32-295"><see cref="T:System.String" /> que contiene el nombre sin la extensión de nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="69b32-295">A <see cref="T:System.String" /> that contains the name without a file name extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHInstance">
      <MemberSignature Language="C#" Value="public static IntPtr GetHInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static native int GetHInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHInstance () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-296">Obtiene el identificador de instancia (HINSTANCE) de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-296">Gets the instance handle (HINSTANCE) for the current application.</span></span></summary>
        <returns><span data-ttu-id="69b32-297"><see cref="T:System.IntPtr" /> de la instancia de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-297">An <see cref="T:System.IntPtr" /> for the current application instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-298">Esta función es el equivalente de llamar al método <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span><span class="sxs-lookup"><span data-stu-id="69b32-298">This function is the equivalent of calling <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemData">
      <MemberSignature Language="C#" Value="public static int GetItemData (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GetItemData(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetItemData(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="69b32-299">Control <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-299">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></param>
        <param name="Index"><span data-ttu-id="69b32-300"><see langword="Integer" /> que representa el índice del elemento <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-300">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></param>
        <summary><span data-ttu-id="69b32-301">Obtiene un valor de tipo <see langword="Integer" /> asociado a un elemento <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-301">Gets an <see langword="Integer" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span></span></summary>
        <returns><span data-ttu-id="69b32-302"><see langword="Integer" /> asociado al <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-302">The <see langword="Integer" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-303">En Visual Basic 6.0, el `ItemData` propiedad para un `ListBox` o `ComboBox` control se podría establecer en tiempo de diseño en el **propiedades** ventana para asociar una `Integer` con un `ListBox` o `ComboBox` elemento.</span><span class="sxs-lookup"><span data-stu-id="69b32-303">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="69b32-304">En Visual Basic, la `ItemData` propiedad ya no existe; la `GetItemData` y <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> métodos pueden utilizarse para emular el comportamiento de `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="69b32-304">In Visual Basic, the `ItemData` property no longer exists; the `GetItemData` and <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemString">
      <MemberSignature Language="C#" Value="public static string GetItemString (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetItemString(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetItemString(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="69b32-305">Control <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-305">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></param>
        <param name="Index"><span data-ttu-id="69b32-306"><see langword="Integer" /> que representa el índice del elemento <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-306">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></param>
        <summary><span data-ttu-id="69b32-307">Obtiene un valor de tipo <see cref="T:System.String" /> asociado a un elemento <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-307">Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span></span></summary>
        <returns><span data-ttu-id="69b32-308"><see cref="T:System.String" /> asociado al <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-308">The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-309">Esta función se utiliza con las herramientas de actualización para emular Visual Basic 6.0 `List` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-309">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="69b32-310">En Visual Basic, utilice la <xref:System.Windows.Forms.ComboBox.Items%2A> o <xref:System.Windows.Forms.ListBox.Items%2A> propiedad en su lugar.</span><span class="sxs-lookup"><span data-stu-id="69b32-310">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public static string GetPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-311">Obtiene la ruta de acceso actual de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="69b32-311">Gets the current path for the application.</span></span></summary>
        <returns><span data-ttu-id="69b32-312"><see cref="T:System.String" /> que contiene la ruta de acceso del ensamblado que se ejecuta actualmente.</span><span class="sxs-lookup"><span data-stu-id="69b32-312">A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconToIPicture">
      <MemberSignature Language="C#" Value="public static object IconToIPicture (System.Drawing.Icon ico);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IconToIPicture(class System.Drawing.Icon ico) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Function IconToIPicture (ico As Icon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IconToIPicture(System::Drawing::Icon ^ ico);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ico" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="ico"><span data-ttu-id="69b32-313">Objeto <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-313">A <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <summary><span data-ttu-id="69b32-314">Obtiene un objeto OLE <see langword="IPicture" /> para el objeto <see cref="T:System.Drawing.Icon" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-314">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-315"><see cref="T:System.Object" /> que representa el objeto <see langword="IPicture" /> OLE.</span><span class="sxs-lookup"><span data-stu-id="69b32-315">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-316">En Visual Basic 6.0, una OLE `IPicture` objeto podría usarse para especificar un icono; en Visual Basic, OLE `IPicture` ya no se admite el formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-316">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an icon; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="69b32-317">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un `IPicture` y <xref:System.Drawing.Icon>.</span><span class="sxs-lookup"><span data-stu-id="69b32-317">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Icon>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IFontToFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font IFontToFont (object objFnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font IFontToFont(object objFnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IFontToFont (objFnt As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ IFontToFont(System::Object ^ objFnt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objFnt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objFnt"><span data-ttu-id="69b32-318"><see cref="T:System.Object" /> que contiene un objeto <see langword="stdFont" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-318">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 <see langword="stdFont" />.</span></span></param>
        <summary><span data-ttu-id="69b32-319">Convierte un objeto <see langword="stdFont" /> de Visual Basic 6.0 en un objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-319">Converts a Visual Basic 6.0 <see langword="stdFont" /> object to a <see cref="T:System.Drawing.Font" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-320">Un objeto especificado para convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-320">A specified object to convert.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-321">Visual Basic 6.0 `stdFont` objeto estaba basado en COM y no tiene ningún equivalente en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-321">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="69b32-322">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un <xref:System.Drawing.Font> y un `stdFont` durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-322">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPicture">
      <MemberSignature Language="C#" Value="public static object ImageToIPicture (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPicture(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPicture (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPicture(System::Drawing::Image ^ img);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img"><span data-ttu-id="69b32-323">Objeto <see cref="T:System.Drawing.Image" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-323">A <see cref="T:System.Drawing.Image" />.</span></span></param>
        <summary><span data-ttu-id="69b32-324">Obtiene un objeto OLE <see langword="IPicture" /> para el objeto <see cref="T:System.Drawing.Image" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-324">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-325"><see cref="T:System.Object" /> que representa el objeto <see langword="IPicture" /> OLE.</span><span class="sxs-lookup"><span data-stu-id="69b32-325">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-326">En Visual Basic 6.0, una OLE `IPicture` objeto puede utilizarse para especificar una imagen; en Visual Basic, OLE `IPicture` ya no se admite el formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-326">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="69b32-327">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un `IPicture` y <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="69b32-327">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPictureDisp">
      <MemberSignature Language="C#" Value="public static object ImageToIPictureDisp (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPictureDisp(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPictureDisp (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPictureDisp(System::Drawing::Image ^ img);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img"><span data-ttu-id="69b32-328">Objeto <see cref="T:System.Drawing.Image" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-328">A <see cref="T:System.Drawing.Image" />.</span></span></param>
        <summary><span data-ttu-id="69b32-329">Obtiene un objeto OLE <see langword="IPictureDisp" /> para el objeto <see cref="T:System.Drawing.Image" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-329">Gets an OLE <see langword="IPictureDisp" /> object for a given <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-330"><see cref="T:System.Object" /> que representa el objeto <see langword="IPictureDisp" /> OLE.</span><span class="sxs-lookup"><span data-stu-id="69b32-330">An <see cref="T:System.Object" /> representing the OLE <see langword="IPictureDisp" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-331">En Visual Basic 6.0, una OLE `IPictureDisp` objeto puede utilizarse para especificar una imagen; en Visual Basic, OLE `IPicture` ya no se admite el formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-331">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="69b32-332">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un `IPicture` y <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="69b32-332">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imp">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-333">Realiza una implicación lógica entre dos expresiones.</span><span class="sxs-lookup"><span data-stu-id="69b32-333">Performs a logical implication on two expressions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static bool Imp (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Imp(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Imp(bool a, bool b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-334">Una expresión <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-334">A <see cref="T:System.Boolean" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-335">Una expresión <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-335">A <see cref="T:System.Boolean" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-336">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-336">Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-337"><see cref="T:System.Boolean" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-337">A <see cref="T:System.Boolean" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-338">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-338">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-339">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-339">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="69b32-340">En Visual Basic, utilice `Not` y `XOr` en lugar de `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-340">In Visual Basic, use `Not` and `XOr` instead of `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static byte Imp (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Imp(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Imp(System::Byte a, System::Byte b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-341">Una expresión <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-341">A <see cref="T:System.Byte" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-342">Una expresión <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-342">A <see cref="T:System.Byte" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-343">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-343">Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-344"><see cref="T:System.Byte" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-344">A <see cref="T:System.Byte" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-345">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-345">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-346">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-346">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="69b32-347">En Visual Basic, utilice `Not` y `XOr` para reemplazar `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-347">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static short Imp (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Imp(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Imp(short a, short b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-348">Una expresión <see langword="Short" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-348">A <see langword="Short" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-349">Una expresión <see langword="Short" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-349">A <see langword="Short" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-350">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-350">Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-351"><see langword="Short" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-351">A <see langword="Short" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-352">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-352">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-353">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-353">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="69b32-354">En Visual Basic, utilice `Not` y `XOr` para reemplazar `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-354">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static int Imp (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Imp(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Imp(int a, int b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-355">Expresión <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-355">An <see langword="Integer" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-356">Expresión <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-356">An <see langword="Integer" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-357">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-357">Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-358"><see langword="Integer" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-358">An <see langword="Integer" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-359">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-359">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-360">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-360">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="69b32-361">En Visual Basic, utilice `Not` y `XOr` para reemplazar `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-361">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static long Imp (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Imp(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Imp(long a, long b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-362">Una expresión <see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-362">A <see langword="Long" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-363">Una expresión <see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-363">A <see langword="Long" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-364">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-364">Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-365"><see langword="Long" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-365">A <see langword="Long" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-366">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-366">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-367">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-367">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="69b32-368">En Visual Basic, utilice `Not` y `XOr` para reemplazar `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-368">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static object Imp (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Imp(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Imp(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="69b32-369">Expresión <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-369">An <see cref="T:System.Object" /> expression.</span></span></param>
        <param name="b"><span data-ttu-id="69b32-370">Expresión <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-370">An <see cref="T:System.Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="69b32-371">Realiza una implicación lógica entre dos expresiones <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-371">Performs a logical implication on two <see cref="T:System.Object" /> expressions.</span></span></summary>
        <returns><span data-ttu-id="69b32-372"><see cref="T:System.Object" /> que contiene el resultado.</span><span class="sxs-lookup"><span data-stu-id="69b32-372">An <see cref="T:System.Object" /> that contains the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-373">Visual Basic 6.0 `Imp` ya no se admite el operador en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-373">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="69b32-374">Esta función se utiliza con las herramientas de actualización para reemplazar el `Imp` operador durante la actualización del proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-374">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span> <span data-ttu-id="69b32-375">Durante la actualización, el tipo de datos Variant se actualiza a <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="69b32-375">During upgrade, the Variant data type is upgraded to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="69b32-376">En Visual Basic, utilice `Not` y `XOr` para reemplazar `Imp`.</span><span class="sxs-lookup"><span data-stu-id="69b32-376">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureDispToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureDispToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureDispToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureDispToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureDispToImage(System::Object ^ pict);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict"><span data-ttu-id="69b32-377">Objeto OLE <see langword="IPictureDisp" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-377">An OLE <see langword="IPictureDisp" /> object.</span></span></param>
        <summary><span data-ttu-id="69b32-378">Obtiene un objeto <see cref="T:System.Drawing.Image" /> para el objeto OLE <see langword="IPictureDisp" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-378">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPictureDisp" /> object.</span></span></summary>
        <returns><span data-ttu-id="69b32-379">Un objeto de imagen.</span><span class="sxs-lookup"><span data-stu-id="69b32-379">An image object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-380">En Visual Basic 6.0, una OLE `IPictureDisp` objeto puede utilizarse para especificar una imagen; en Visual Basic, OLE `IPicture` ya no se admite el formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-380">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="69b32-381">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un `IPictureDisp` y <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="69b32-381">This function is used by the upgrade tools to convert between an `IPictureDisp` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureToImage(System::Object ^ pict);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict"><span data-ttu-id="69b32-382">Objeto OLE <see langword="IPicture" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-382">An OLE <see langword="IPicture" /> object.</span></span></param>
        <summary><span data-ttu-id="69b32-383">Obtiene un objeto <see cref="T:System.Drawing.Image" /> para el objeto OLE <see langword="IPicture" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="69b32-383">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPicture" /> object.</span></span></summary>
        <returns><span data-ttu-id="69b32-384">Un objeto convertido en imagen.</span><span class="sxs-lookup"><span data-stu-id="69b32-384">A converted object to image.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-385">En Visual Basic 6.0, una OLE `IPicture` objeto puede utilizarse para especificar una imagen; en Visual Basic, OLE `IPicture` ya no se admite el formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-385">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="69b32-386">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre un `IPicture` y <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="69b32-386">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-387">Carga los datos de varios tipos posibles de un archivo de recursos (.res) y devuelve una matriz de tipo <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-387">Loads data of several possible types from a resource (.res) file and returns a <see cref="T:System.Byte" /> array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-388"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-388">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <param name="restype"><span data-ttu-id="69b32-389"><see cref="T:System.Object" /> que especifica el tipo de recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-389">An <see cref="T:System.Object" /> that specifies the resource type.</span></span></param>
        <summary><span data-ttu-id="69b32-390">Carga los datos de varios tipos posibles de un archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-390">Loads data of several possible types from a resource (.res) file.</span></span></summary>
        <returns><span data-ttu-id="69b32-391"><see cref="T:System.Object" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-391">An <see cref="T:System.Object" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-392">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-392">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-393">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-393">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-394">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-394">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-395">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-395">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-396">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-396">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-397">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-397">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-398"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-398">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <param name="restype"><span data-ttu-id="69b32-399"><see cref="T:System.Object" /> que especifica el tipo de recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-399">An <see cref="T:System.Object" /> that specifies the resource type.</span></span></param>
        <param name="Culture"><span data-ttu-id="69b32-400">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica la configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-400">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span></span></param>
        <summary><span data-ttu-id="69b32-401">Carga los datos de varios tipos posibles desde un archivo de recursos (.res), especificando una configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-401">Loads data of several possible types from a resource (.res) file, specifying a locale.</span></span></summary>
        <returns><span data-ttu-id="69b32-402"><see cref="T:System.Object" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-402">An <see cref="T:System.Object" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-403">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-403">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-404">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-404">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-405">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-405">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-406">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-406">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-407">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-407">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-408">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-408">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResPicture">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-409">Carga un mapa de bits, un icono o un cursor desde un archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-409">Loads a bitmap, icon, or cursor from a resource (.res) file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-410"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-410">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <param name="restype"><span data-ttu-id="69b32-411">Enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> que especifica el tipo de recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-411">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span></span></param>
        <summary><span data-ttu-id="69b32-412">Carga un mapa de bits, un icono o un cursor desde un archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-412">Loads a bitmap, icon, or cursor from a resource (.res) file.</span></span></summary>
        <returns><span data-ttu-id="69b32-413"><see cref="T:System.Object" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-413">An <see cref="T:System.Object" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-414">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-414">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-415">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-415">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-416">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-416">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-417">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-417">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-418">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-418">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-419">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-419">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-420"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-420">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <param name="restype"><span data-ttu-id="69b32-421">Enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> que especifica el tipo de recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-421">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span></span></param>
        <param name="Culture"><span data-ttu-id="69b32-422">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica la configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-422">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span></span></param>
        <summary><span data-ttu-id="69b32-423">Carga un mapa de bits, un icono o un cursor desde un archivo de recursos (.res), especificando una configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-423">Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</span></span></summary>
        <returns><span data-ttu-id="69b32-424"><see cref="T:System.Object" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-424">An <see cref="T:System.Object" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-425">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-425">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-426">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-426">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-427">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-427">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-428">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-428">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-429">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-429">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-430">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-430">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-431">Carga una cadena desde un archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-431">Loads a string from a resource (.res) file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-432"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-432">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <summary><span data-ttu-id="69b32-433">Carga una cadena desde un archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-433">Loads a string from a resource (.res) file.</span></span></summary>
        <returns><span data-ttu-id="69b32-434"><see cref="T:System.String" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-434">A <see cref="T:System.String" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-435">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-435">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-436">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-436">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-437">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-437">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-438">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-438">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-439">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-439">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-440">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-440">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer, Culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID, System::Globalization::CultureInfo ^ Culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID"><span data-ttu-id="69b32-441"><see cref="T:System.Object" /> que especifica los datos del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-441">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span></span></param>
        <param name="Culture"><span data-ttu-id="69b32-442">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica la configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-442">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span></span></param>
        <summary><span data-ttu-id="69b32-443">Carga una cadena desde un archivo de recursos (.res), especificando una configuración regional.</span><span class="sxs-lookup"><span data-stu-id="69b32-443">Loads a string from a resource (.res) file, specifying a locale.</span></span></summary>
        <returns><span data-ttu-id="69b32-444"><see cref="T:System.String" /> que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="69b32-444">A <see cref="T:System.String" /> that contains the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-445">En Visual Basic 6.0, las versiones internacionales de una aplicación se creaban colocando toda la información adaptable, como cadenas, en un archivo de recursos independiente (. res) para cada idioma.</span><span class="sxs-lookup"><span data-stu-id="69b32-445">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="69b32-446">En tiempo de ejecución, los recursos específicos de la configuración regional se cargaron desde el archivo de recursos mediante una llamada a la `LoadResString`, `LoadResPicture`, y `LoadResData` funciones.</span><span class="sxs-lookup"><span data-stu-id="69b32-446">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="69b32-447">En Visual Basic, se crean versiones internacionales de una aplicación cambiando el `Language` propiedad de un formulario en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="69b32-447">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="69b32-448">Se crea automáticamente un archivo de recursos independiente (.resx) para cada configuración regional seleccionada.</span><span class="sxs-lookup"><span data-stu-id="69b32-448">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="69b32-449">Ya no debe cargar explícitamente los recursos desde el código; los recursos se cargan automáticamente basándose en la configuración regional del usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-449">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="69b32-450">Para obtener más información, consulte [Globalizar formularios Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="69b32-450">For more information, see [Globalizing Windows Forms](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsX">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsX(double X);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-451">Valor de tipo <see langword="Double" /> que contiene la coordenada X que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-451">A <see langword="Double" /> that contains the X coordinate to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-452">Convierte una coordenada X de píxeles en twips.</span><span class="sxs-lookup"><span data-stu-id="69b32-452">Converts an X coordinate from pixels to twips.</span></span></summary>
        <returns><span data-ttu-id="69b32-453">Valor de tipo <see langword="Double" /> que contiene la coordenada X expresada en twips.</span><span class="sxs-lookup"><span data-stu-id="69b32-453">A <see langword="Double" /> that contains the X coordinate expressed in twips.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-454">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-454">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-455">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-455">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsY">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsY(double Y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-456">Valor de tipo <see langword="Double" /> que contiene la coordenada Y que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-456">A <see langword="Double" /> that contains the Y coordinate to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-457">Convierte una coordenada Y de píxeles en twips.</span><span class="sxs-lookup"><span data-stu-id="69b32-457">Converts a Y coordinate from pixels to twips.</span></span></summary>
        <returns><span data-ttu-id="69b32-458">Valor de tipo <see langword="Double" /> que contiene la coordenada Y expresada en twips.</span><span class="sxs-lookup"><span data-stu-id="69b32-458">A <see langword="Double" /> that contains the Y coordinate expressed in twips.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-459">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-459">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-460">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-460">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public static void SendKeys (string Keys, bool Wait = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SendKeys(string Keys, bool Wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As String, Optional Wait As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.String" />
        <Parameter Name="Wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Keys"><span data-ttu-id="69b32-461"><see cref="T:System.String" /> que contiene los valores de las teclas.</span><span class="sxs-lookup"><span data-stu-id="69b32-461">A <see cref="T:System.String" /> that contains the key values.</span></span></param>
        <param name="Wait">
          <span data-ttu-id="69b32-462">Es <see langword="true" /> para procesar las pulsaciones de tecla antes de que se devuelva el control al procedimiento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-462"><see langword="true" /> to process keystrokes before control is returned to the procedure; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-463">Envía una o varias pulsaciones de tecla a la ventana activa como si se realizaran con el teclado.</span><span class="sxs-lookup"><span data-stu-id="69b32-463">Sends one or more keystrokes to the active window as if typed at the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-464">Esta función se utiliza con las herramientas de actualización para emular Visual Basic 6.0 `SendKeys` método.</span><span class="sxs-lookup"><span data-stu-id="69b32-464">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `SendKeys` method.</span></span> <span data-ttu-id="69b32-465">En Visual Basic, utilice el `My.Computer.Keyboard.SendKeys` método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="69b32-465">In Visual Basic, use the `My.Computer.Keyboard.SendKeys` method instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancel">
      <MemberSignature Language="C#" Value="public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetCancel(class System.Windows.Forms.Button btn, bool Cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancel (btn As Button, Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCancel(System::Windows::Forms::Button ^ btn, bool Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn"><span data-ttu-id="69b32-466">Objeto <see cref="T:System.Windows.Forms.Button" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-466">A <see cref="T:System.Windows.Forms.Button" />.</span></span></param>
        <param name="Cancel">
          <span data-ttu-id="69b32-467">Es <see langword="true" /> si la propiedad <see langword="CommandButton" /> del control <see langword="Cancel" /> de Visual Basic 6.0 es <see langword="true" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-467"><see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Cancel" /> property is <see langword="true" />; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-468">Establece la propiedad <see cref="P:System.Windows.Forms.Form.CancelButton" /> de un objeto <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-468">Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-469">En Visual Basic 6.0, el valor booleano `Default` y `Cancel` propiedades de un `CommandButton` control determinan si el control responde a las teclas ENTRAR o ESC, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="69b32-469">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="69b32-470">En Visual Basic, la <xref:System.Windows.Forms.Button> ya no tiene control `Default` o `Cancel` propiedades.</span><span class="sxs-lookup"><span data-stu-id="69b32-470">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="69b32-471">El <xref:System.Windows.Forms.Form> objeto tiene <xref:System.Windows.Forms.Form.AcceptButton%2A> y <xref:System.Windows.Forms.Form.CancelButton%2A> propiedades que proporcionan la misma funcionalidad; estas propiedades toman el nombre de un <xref:System.Windows.Forms.Button> control como un argumento.</span><span class="sxs-lookup"><span data-stu-id="69b32-471">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="69b32-472">Esta función se utiliza con las herramientas de actualización para establecer el <xref:System.Windows.Forms.Form.CancelButton%2A> propiedad de un <xref:System.Windows.Forms.Form>.based en el `Cancel` propiedad de un actualizado de Visual Basic 6.0 `CommandButton` control.</span><span class="sxs-lookup"><span data-stu-id="69b32-472">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Cancel` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (System.Windows.Forms.Button btn, bool Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetDefault(class System.Windows.Forms.Button btn, bool Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefault (btn As Button, Default As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefault(System::Windows::Forms::Button ^ btn, bool Default);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Default" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn"><span data-ttu-id="69b32-473">Objeto <see cref="T:System.Windows.Forms.Button" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-473">A <see cref="T:System.Windows.Forms.Button" />.</span></span></param>
        <param name="Default">
          <span data-ttu-id="69b32-474">Es <see langword="true" /> si la propiedad <see langword="CommandButton" /> del control <see langword="Default" /> de Visual Basic 6.0 es <see langword="true" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-474"><see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Default" /> property is <see langword="true" />; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="69b32-475">Establece la propiedad <see cref="P:System.Windows.Forms.Form.AcceptButton" /> de un objeto <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-475">Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-476">En Visual Basic 6.0, el valor booleano `Default` y `Cancel` propiedades de un `CommandButton` control determinan si el control responde a las teclas ENTRAR o ESC, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="69b32-476">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="69b32-477">En Visual Basic, la <xref:System.Windows.Forms.Button> ya no tiene control `Default` o `Cancel` propiedades.</span><span class="sxs-lookup"><span data-stu-id="69b32-477">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="69b32-478">El <xref:System.Windows.Forms.Form> objeto tiene <xref:System.Windows.Forms.Form.AcceptButton%2A> y <xref:System.Windows.Forms.Form.CancelButton%2A> propiedades que proporcionan la misma funcionalidad; estas propiedades toman el nombre de un <xref:System.Windows.Forms.Button> control como un argumento.</span><span class="sxs-lookup"><span data-stu-id="69b32-478">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="69b32-479">Esta función se utiliza con las herramientas de actualización para establecer el <xref:System.Windows.Forms.Form.AcceptButton%2A> propiedad de un <xref:System.Windows.Forms.Form>.based en el `Default` propiedad de un actualizado de Visual Basic 6.0 `CommandButton` control.</span><span class="sxs-lookup"><span data-stu-id="69b32-479">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Default` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemData">
      <MemberSignature Language="C#" Value="public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemData(class System.Windows.Forms.Control Control, int32 Index, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemData(System::Windows::Forms::Control ^ Control, int Index, int ItemData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="69b32-480">Control <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-480">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></param>
        <param name="Index"><span data-ttu-id="69b32-481"><see langword="Index" /> del objeto <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-481">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></param>
        <param name="ItemData"><span data-ttu-id="69b32-482"><see langword="Integer" /> que se va a asignar a la propiedad <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-482">An <see langword="Integer" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</span></span></param>
        <summary><span data-ttu-id="69b32-483">Establece la propiedad <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> de un objeto <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-483">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-484">En Visual Basic 6.0, el `ItemData` propiedad para un `ListBox` o `ComboBox` control se podría establecer en tiempo de diseño en el **propiedades** ventana para asociar una `Integer` con un `ListBox` o `ComboBox` elemento.</span><span class="sxs-lookup"><span data-stu-id="69b32-484">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="69b32-485">En Visual Basic, la `ItemData` propiedad ya no existe; la <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> y `SetItemData` métodos pueden utilizarse para emular el comportamiento de `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="69b32-485">In Visual Basic, the `ItemData` property no longer exists; the <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> and `SetItemData` methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemString">
      <MemberSignature Language="C#" Value="public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemString(class System.Windows.Forms.Control Control, int32 Index, string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemString(System::Windows::Forms::Control ^ Control, int Index, System::String ^ ItemString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="69b32-486">Control <see cref="T:System.Windows.Forms.ListBox" /> <see cref="T:System.Windows.Forms.ListBox" /> o <see cref="T:System.Windows.Forms.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-486">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></param>
        <param name="Index"><span data-ttu-id="69b32-487"><see langword="Index" /> del objeto <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-487">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></param>
        <param name="ItemString"><span data-ttu-id="69b32-488"><see cref="T:System.String" /> que se va a asignar a la propiedad <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-488">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</span></span></param>
        <summary><span data-ttu-id="69b32-489">Establece la propiedad <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> de un objeto <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-489">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-490">Esta función se utiliza con las herramientas de actualización para emular Visual Basic 6.0 `List` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-490">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="69b32-491">En Visual Basic, utilice la <xref:System.Windows.Forms.ComboBox.Items%2A> o <xref:System.Windows.Forms.ListBox.Items%2A> propiedad en su lugar.</span><span class="sxs-lookup"><span data-stu-id="69b32-491">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetResourceBaseName">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b32-492">Asigna el nombre de un archivo de recursos de Visual Basic 6.0 al espacio de nombres del proyecto de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-492">Assigns the name of a Visual Basic 6.0 resource file to the Visual Basic project namespace.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ BaseFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="BaseFileName"><span data-ttu-id="69b32-493">Archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-493">A resource file (.res).</span></span></param>
        <summary><span data-ttu-id="69b32-494">Asigna el nombre de un archivo de recursos de Visual Basic 6.0 al espacio de nombres del proyecto de Visual Basic actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-494">Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic project namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-495">Control de recursos es diferente para Visual Basic 6.0 y Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-495">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="69b32-496">Esta función se utiliza con las herramientas de actualización para agregar un archivo de recursos de Visual Basic 6.0 a un proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-496">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string ProjectNamespace, string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (ProjectNamespace As String, BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ ProjectNamespace, System::String ^ BaseFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProjectNamespace" Type="System.String" />
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProjectNamespace"><span data-ttu-id="69b32-497"><see cref="T:System.String" /> que contiene el <see langword="Namespace" /> del archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="69b32-497">A <see cref="T:System.String" /> that contains the <see langword="Namespace" /> for the resource file.</span></span></param>
        <param name="BaseFileName"><span data-ttu-id="69b32-498">Archivo de recursos (.res).</span><span class="sxs-lookup"><span data-stu-id="69b32-498">A resource file (.res).</span></span></param>
        <summary><span data-ttu-id="69b32-499">Asigna el nombre de un archivo de recursos de Visual Basic 6.0 a un espacio de nombres del proyecto de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-499">Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic project namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-500">Control de recursos es diferente para Visual Basic 6.0 y Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-500">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="69b32-501">Esta función se utiliza con las herramientas de actualización para agregar un archivo de recursos de Visual Basic 6.0 a un proyecto.</span><span class="sxs-lookup"><span data-stu-id="69b32-501">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForm">
      <MemberSignature Language="C#" Value="public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ShowForm(class System.Windows.Forms.Form Form, int32 Modal, class System.Windows.Forms.Form OwnerForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
        <Parameter Name="Modal" Type="System.Int32" />
        <Parameter Name="OwnerForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form"><span data-ttu-id="69b32-502"><see cref="T:System.Windows.Forms.Form" /> que se va a mostrar.</span><span class="sxs-lookup"><span data-stu-id="69b32-502">The <see cref="T:System.Windows.Forms.Form" /> to display.</span></span></param>
        <param name="Modal"><span data-ttu-id="69b32-503">Opcional.</span><span class="sxs-lookup"><span data-stu-id="69b32-503">Optional.</span></span> <span data-ttu-id="69b32-504">Enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> que especifica la modalidad.</span><span class="sxs-lookup"><span data-stu-id="69b32-504">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</span></span></param>
        <param name="OwnerForm"><span data-ttu-id="69b32-505">Opcional.</span><span class="sxs-lookup"><span data-stu-id="69b32-505">Optional.</span></span> <span data-ttu-id="69b32-506">Parámetro <c>owner</c> del método <see cref="M:System.Windows.Forms.Form.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-506">The <c>owner</c> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span></span></param>
        <summary><span data-ttu-id="69b32-507">Muestra un formulario llamando al método <see cref="M:System.Windows.Forms.Control.Show" /> o <see cref="M:System.Windows.Forms.Form.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-507">Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-508">En Visual Basic 6.0, el `Show` método especifica si un formulario se muestra de forma modal; en Visual Basic se reemplaza por la <xref:System.Windows.Forms.Control.Show%2A> y <xref:System.Windows.Forms.Form.ShowDialog%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="69b32-508">In Visual Basic 6.0, the `Show` method specified whether a Form would be displayed modally; in Visual Basic it is replaced by the <xref:System.Windows.Forms.Control.Show%2A> and <xref:System.Windows.Forms.Form.ShowDialog%2A> methods.</span></span> <span data-ttu-id="69b32-509">Esta función se utiliza con las herramientas de actualización para Visual Basic 6.0 se asignan `Show` método como el <xref:System.Windows.Forms.Control.Show%2A> o <xref:System.Windows.Forms.Form.ShowDialog%2A> método.</span><span class="sxs-lookup"><span data-stu-id="69b32-509">This function is used by the upgrade tools to map the Visual Basic 6.0 `Show` method to either the <xref:System.Windows.Forms.Control.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabLayout">
      <MemberSignature Language="C#" Value="public static string TabLayout (params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TabLayout(object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TabLayout (ParamArray Args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TabLayout(... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Args"><span data-ttu-id="69b32-510">Expresión o lista de expresiones que se van a imprimir.</span><span class="sxs-lookup"><span data-stu-id="69b32-510">An expression or list of expressions to print.</span></span></param>
        <summary><span data-ttu-id="69b32-511">Aplica formato a las cadenas para simular la funcionalidad de <see langword="Debug.Print" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-511">Formats strings to simulate the Visual Basic 6.0 <see langword="Debug.Print" /> functionality.</span></span></summary>
        <returns><span data-ttu-id="69b32-512"><see cref="T:System.String" /> con formato.</span><span class="sxs-lookup"><span data-stu-id="69b32-512">A formatted <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-513">En Visual Basic 6.0, el `Debug.Print` método tenía un `outputlist` parámetro que especifica cómo se formatea la salida en el **inmediato** ventana.</span><span class="sxs-lookup"><span data-stu-id="69b32-513">In Visual Basic 6.0, the `Debug.Print` method had an `outputlist` parameter that specified how output was formatted in the **Immediate** window.</span></span> <span data-ttu-id="69b32-514">Esta función se utiliza con las herramientas de actualización para traducir el `outputlist` parámetro en una cadena para su presentación en el **inmediato** ventana.</span><span class="sxs-lookup"><span data-stu-id="69b32-514">This function is used by the upgrade tools to translate the `outputlist` parameter into a string for display in the **Immediate** window.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height"><span data-ttu-id="69b32-515"><see cref="T:System.Double" /> que representa el alto.</span><span class="sxs-lookup"><span data-stu-id="69b32-515">A <see cref="T:System.Double" /> that represents the height.</span></span></param>
        <param name="ScaleHeight"><span data-ttu-id="69b32-516">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleHeight" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-516">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalHeightInPixels"><span data-ttu-id="69b32-517"><see langword="Integer" /> que representa el alto en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-517">An <see langword="Integer" /> that represents the height in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-518">Convierte una medida de <see langword="ScaleHeight" /> de Visual Basic 6.0 en una medida en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-518">Converts a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement to a pixel measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-519">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleHeight" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-519">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-520">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-520">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-521">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-521">This included a user-defined value.</span></span> <span data-ttu-id="69b32-522">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-522">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-523">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-523">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width"><span data-ttu-id="69b32-524"><see cref="T:System.Double" /> que representa el ancho.</span><span class="sxs-lookup"><span data-stu-id="69b32-524">A <see cref="T:System.Double" /> that represents the width.</span></span></param>
        <param name="ScaleWidth"><span data-ttu-id="69b32-525">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleWidth" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-525">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalWidthInPixels"><span data-ttu-id="69b32-526"><see langword="Integer" /> que representa el ancho en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-526">An <see langword="Integer" /> that represents the width in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-527">Convierte una medida de <see langword="ScaleWidth" /> de Visual Basic 6.0 en una medida en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-527">Converts a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement to a pixel measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-528">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleWidth" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-528">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-529">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-529">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-530">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-530">This included a user-defined value.</span></span> <span data-ttu-id="69b32-531">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-531">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-532">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-532">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserX">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-533"><see cref="T:System.Double" /> que representa la coordenada X.</span><span class="sxs-lookup"><span data-stu-id="69b32-533">A <see cref="T:System.Double" /> that represents the X coordinate.</span></span></param>
        <param name="ScaleLeft"><span data-ttu-id="69b32-534">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleLeft" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-534">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="ScaleWidth"><span data-ttu-id="69b32-535">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleWidth" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-535">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalWidthInPixels"><span data-ttu-id="69b32-536"><see langword="Integer" /> que representa el ancho en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-536">An <see langword="Integer" /> that represents the width in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-537">Convierte una medida de <see langword="ScaleLeft" /> de Visual Basic 6.0 en una medida en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-537">Converts a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement to a pixel measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-538">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleLeft" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-538">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-539">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-539">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-540">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-540">This included a user-defined value.</span></span> <span data-ttu-id="69b32-541">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-541">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-542">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-542">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserY">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-543">Valor de tipo <see cref="T:System.Double" /> que representa la coordenada Y.</span><span class="sxs-lookup"><span data-stu-id="69b32-543">A <see cref="T:System.Double" /> that represents the Y coordinate.</span></span></param>
        <param name="ScaleTop"><span data-ttu-id="69b32-544">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleTop" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-544">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="ScaleHeight"><span data-ttu-id="69b32-545">Valor de tipo <see cref="T:System.Double" /> que representa el valor de <see langword="ScaleHeight" /> de Visual Basic 6.0 para el modo <see langword="ScaleMode" /> actual.</span><span class="sxs-lookup"><span data-stu-id="69b32-545">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span></span></param>
        <param name="OriginalHeightInPixels"><span data-ttu-id="69b32-546"><see langword="Integer" /> que representa el alto en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-546">An <see langword="Integer" /> that represents the height in pixels.</span></span></param>
        <summary><span data-ttu-id="69b32-547">Convierte una medida de <see langword="ScaleTop" /> de Visual Basic 6.0 en una medida en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-547">Converts a Visual Basic 6.0 <see langword="ScaleTop" /> measurement to a pixel measurement.</span></span></summary>
        <returns><span data-ttu-id="69b32-548">Valor de tipo <see cref="T:System.Double" /> que contiene el valor convertido de <see langword="ScaleLeft" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-548">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-549">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-549">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-550">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-550">This included a user-defined value.</span></span> <span data-ttu-id="69b32-551">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-551">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-552">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-552">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsX">
      <MemberSignature Language="C#" Value="public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsX (X As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-553"><see cref="T:System.Double" /> que representa la coordenada X.</span><span class="sxs-lookup"><span data-stu-id="69b32-553">A <see cref="T:System.Double" /> that represents the X coordinate.</span></span></param>
        <param name="FromScale"><span data-ttu-id="69b32-554">Enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa el <see langword="ScaleMode" /> de Visual Basic 6.0 desde el que se realiza la conversión.</span><span class="sxs-lookup"><span data-stu-id="69b32-554">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span></span></param>
        <summary><span data-ttu-id="69b32-555">Convierte una medida de Visual Basic 6.0 a una medida en píxeles para un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="69b32-555">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-556"><see cref="T:System.Double" /> que contiene el valor en píxeles de la <see langword="ScaleMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="69b32-556">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-557">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-557">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-558">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-558">This included a user-defined value.</span></span> <span data-ttu-id="69b32-559">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-559">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-560">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-560">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsY">
      <MemberSignature Language="C#" Value="public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsY (Y As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-561">Valor de tipo <see cref="T:System.Double" /> que representa la coordenada Y.</span><span class="sxs-lookup"><span data-stu-id="69b32-561">A <see cref="T:System.Double" /> that represents the Y coordinate.</span></span></param>
        <param name="FromScale"><span data-ttu-id="69b32-562">Enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> que representa el <see langword="ScaleMode" /> de Visual Basic 6.0 desde el que se realiza la conversión.</span><span class="sxs-lookup"><span data-stu-id="69b32-562">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span></span></param>
        <summary><span data-ttu-id="69b32-563">Convierte una medida de Visual Basic 6.0 a una medida en píxeles para un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="69b32-563">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span></span></summary>
        <returns><span data-ttu-id="69b32-564"><see cref="T:System.Double" /> que contiene el valor en píxeles de la <see langword="ScaleMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="69b32-564">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-565">Visual Basic 6.0 admite varios sistemas de coordenadas definidos por un `ScaleMode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="69b32-565">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="69b32-566">Esto incluye un valor definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-566">This included a user-defined value.</span></span> <span data-ttu-id="69b32-567">Visual Basic solo admite un sistema de coordenadas que se basa en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-567">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="69b32-568">Esta función se utiliza con las herramientas de actualización para convertir entre píxeles y un valor de escala definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="69b32-568">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelX">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelX ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelX();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-569">Obtiene un valor que se utiliza para convertir los twips en píxeles basándose en la configuración de pantalla.</span><span class="sxs-lookup"><span data-stu-id="69b32-569">Gets a value that is used to convert twips to pixels based on screen settings.</span></span></summary>
        <returns><span data-ttu-id="69b32-570"><see langword="Double" /> que contiene el factor de conversión.</span><span class="sxs-lookup"><span data-stu-id="69b32-570">A <see langword="Double" /> that contains the conversion factor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-571">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-571">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-572">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-572">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelY">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelY ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelY();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b32-573">Obtiene un valor que se utiliza para convertir los twips en píxeles basándose en la configuración de pantalla.</span><span class="sxs-lookup"><span data-stu-id="69b32-573">Gets a value that is used to convert twips to pixels based on screen settings.</span></span></summary>
        <returns><span data-ttu-id="69b32-574"><see langword="Double" /> que contiene el factor de conversión.</span><span class="sxs-lookup"><span data-stu-id="69b32-574">A <see langword="Double" /> that contains the conversion factor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-575">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-575">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-576">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-576">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsX">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsX(double X);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X"><span data-ttu-id="69b32-577">Valor de tipo <see langword="Double" /> que contiene la coordenada X que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-577">A <see langword="Double" /> that contains the X coordinate to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-578">Convierte una coordenada X de twips en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-578">Converts an X coordinate from twips to pixels.</span></span></summary>
        <returns><span data-ttu-id="69b32-579">Valor de tipo <see langword="Double" /> que contiene la coordenada X expresada en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-579">A <see langword="Double" /> that contains the X coordinate expressed in pixels.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-580">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-580">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-581">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-581">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsY">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsY(double Y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y"><span data-ttu-id="69b32-582">Valor de tipo <see langword="Double" /> que contiene la coordenada X que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="69b32-582">A <see langword="Double" /> that contains the X coordinate to convert.</span></span></param>
        <summary><span data-ttu-id="69b32-583">Convierte una coordenada Y de twips en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-583">Converts a Y coordinate from twips to pixels.</span></span></summary>
        <returns><span data-ttu-id="69b32-584">Valor de tipo <see langword="Double" /> que contiene la coordenada Y expresada en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-584">A <see langword="Double" /> that contains the Y coordinate expressed in pixels.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-585">En Visual Basic 6.0, las coordenadas se expresan en twips; en Visual Basic se expresan en píxeles.</span><span class="sxs-lookup"><span data-stu-id="69b32-585">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="69b32-586">Esta función se utiliza con las herramientas de actualización para realizar conversiones entre los dos sistemas de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="69b32-586">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateControls">
      <MemberSignature Language="C#" Value="public static void ValidateControls (System.Windows.Forms.ContainerControl Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ValidateControls(class System.Windows.Forms.ContainerControl Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateControls (Form As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateControls(System::Windows::Forms::ContainerControl ^ Form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="Form"><span data-ttu-id="69b32-587"><see cref="T:System.Windows.Forms.ContainerControl" /> del que depende el control.</span><span class="sxs-lookup"><span data-stu-id="69b32-587">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</span></span></param>
        <summary><span data-ttu-id="69b32-588">Emula el comportamiento del método <see langword="ValidateControls" /> de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-588">Emulates the behavior of the Visual Basic 6.0 <see langword="ValidateControls" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-589">En Visual Basic 6.0, el `ValidateControls` usó el método para forzar la `Validate` eventos para el control que tiene el foco cuando se cierra un formulario; si el `Validate` se produce un error en el evento, se produce un error.</span><span class="sxs-lookup"><span data-stu-id="69b32-589">In Visual Basic 6.0, the `ValidateControls` method was used to force the `Validate` event for the control that has focus when a form is closed; if the `Validate` event fails, an error was raised.</span></span> <span data-ttu-id="69b32-590">En Visual Basic, la `ValidateControls` método se sustituye por la <xref:System.Windows.Forms.ContainerControl.Validate%2A> método, que devuelve `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="69b32-590">In Visual Basic, the `ValidateControls` method is replaced by the <xref:System.Windows.Forms.ContainerControl.Validate%2A> method, which returns `true` or `false`.</span></span>  
  
 <span data-ttu-id="69b32-591">Esta función se utiliza con las herramientas de actualización para emular el comportamiento de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-591">This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhatsThisMode">
      <MemberSignature Language="C#" Value="public static void WhatsThisMode (System.Windows.Forms.Form Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WhatsThisMode(class System.Windows.Forms.Form Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WhatsThisMode(System::Windows::Forms::Form ^ Form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form"><span data-ttu-id="69b32-592">Objeto <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-592">A <see cref="T:System.Windows.Forms.Form" />.</span></span></param>
        <summary><span data-ttu-id="69b32-593">Muestra la ayuda emergente de un formulario actualizado de Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="69b32-593">Displays pop-up Help for a form upgraded from Visual Basic 6.0.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-594">Se ha implementado Ayuda emergente en Visual Basic 6.0 mediante el `WhatsThisButton` y `WhatsThisHelp` propiedades de un formulario; el elemento emergente Ayuda en Visual Basic se implementa mediante el <xref:System.Windows.Forms.Form.HelpButton%2A> propiedad de un formulario.</span><span class="sxs-lookup"><span data-stu-id="69b32-594">Pop-up Help in Visual Basic 6.0 was implemented by using the `WhatsThisButton` and `WhatsThisHelp` properties of a form; pop-up Help in Visual Basic is implemented by using the <xref:System.Windows.Forms.Form.HelpButton%2A> property of a form.</span></span> <span data-ttu-id="69b32-595">Esta función se utiliza con las herramientas de actualización para cambiar el método para mostrar Ayuda emergente en una aplicación actualizada.</span><span class="sxs-lookup"><span data-stu-id="69b32-595">This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public static void ZOrder (System.Windows.Forms.Control Control, int Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ZOrder(class System.Windows.Forms.Control Control, int32 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZOrder(System::Windows::Forms::Control ^ Control, int Position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="69b32-596">Objeto <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-596">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <param name="Position"><span data-ttu-id="69b32-597">Una enumeración <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" />.</span><span class="sxs-lookup"><span data-stu-id="69b32-597">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="69b32-598">Convierte el método <see langword="ZOrder" /> de Visual Basic para usarlo en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="69b32-598">Converts the Visual Basic <see langword="ZOrder" /> method for use in Visual Basic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b32-599">En Visual Basic 6.0, el `ZOrder` método se utiliza para especificar la distribución en capas de controles; en Visual Basic, este método se reemplaza por la <xref:System.Windows.Forms.Control.BringToFront%2A> y <xref:System.Windows.Forms.Control.SendToBack%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="69b32-599">In Visual Basic 6.0, the `ZOrder` method was used to specify the layering of controls; in Visual Basic .it is replaced by the <xref:System.Windows.Forms.Control.BringToFront%2A> and <xref:System.Windows.Forms.Control.SendToBack%2A> methods.</span></span> <span data-ttu-id="69b32-600">Esta función se utiliza con las herramientas de actualización para realizar asignaciones entre los métodos.</span><span class="sxs-lookup"><span data-stu-id="69b32-600">This function is used by the upgrade tools to map between the methods.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>