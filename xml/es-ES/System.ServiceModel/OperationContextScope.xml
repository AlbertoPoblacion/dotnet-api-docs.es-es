<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContextScope.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7228412344a05c517de3d7aef54e71c6dc73268cb3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28412344a05c517de3d7aef54e71c6dc73268cb3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Creates a block within which an <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object is in scope.</source>
          <target state="translated">Crea un bloque dentro del cual un objeto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> se encontrará dentro del ámbito.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> class to create a scope for a specific <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or a scope for a new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object using a specified <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> object.</source>
          <target state="translated">Utilice la clase <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> para crear un ámbito para un objeto <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> concreto o un ámbito para un nuevo objeto <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> utilizando un objeto <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> can be used in a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service or WCF client application.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> pueden usarse en un <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> servicio o aplicación de cliente WCF.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Once the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object has established the current operation context, you can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> to:</source>
          <target state="translated">Cuando el objeto <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> ha establecido el contexto de la operación actual, puede utilizar <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> para:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access and modify incoming and outgoing message headers and other properties.</source>
          <target state="translated">Acceder y modificar los encabezados de mensajes entrantes y salientes y demás propiedades.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the runtime, including dispatchers, the host, channel, and extensions.</source>
          <target state="translated">Tener acceso al tiempo de ejecución, incluidos los distribuidores, el host, el canal y las extensiones.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access other types of contexts, such as security, instance, and request contexts.</source>
          <target state="translated">Tener acceso a otros tipos de contextos, como la seguridad, la instancia y los contextos de la solicitud.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the channel associated with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or (if the channel implements <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph>) the associated channel's session identifier.</source>
          <target state="translated">Tener acceso al canal asociado al objeto <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> o (si el canal implementa <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph>) el identificador de sesión del canal asociado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is created, the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is stored and the new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> becomes the one returned by the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property.</source>
          <target state="translated">Cuando se crea <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>, el <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> actual está almacenado y el nuevo <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> será el que devuelva la propiedad <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is disposed, the original <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is restored.</source>
          <target state="translated">Cuando se dispone <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph>, se restaura el <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> original.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Do not use the asynchronous "await" pattern within a OperationContextScope block.</source>
          <target state="translated">No utilice el modelo asincrónico "await" dentro de un bloque de OperationContextScope.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</source>
          <target state="translated">Cuando se produce la continuación, se puede ejecutar en un subproceso diferente y OperationContextScope es específicas de un subproceso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>If you need to call "await" for an async call, use it outside of the OperationContextScope block.</source>
          <target state="translated">Si necesita llamar a "await" para una llamada asincrónica, use fuera del bloque de OperationContextScope.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application to add a custom header to the outgoing message.</source>
          <target state="translated">El ejemplo siguiente muestra cómo utilizar <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel to use when creating the scope for a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">El canal que usar para crear el ámbito para un nuevo <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> to create a new <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the scope.</source>
          <target state="translated">Inicializa un nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> que utiliza el <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> especificado para crear un nuevo <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> para el ámbito.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">Utilice el constructor <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> para crear un nuevo <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> para un canal de cliente que se puede usar para agregar o modificar los encabezados de mensajes salientes, leer los encabezados de mensajes entrantes o tener acceso a otras propiedades del tiempo de ejecución de <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The headers added to the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph> property of the newly created <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> apply only to the channel that was passed to the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Los encabezados agregados a la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph> del <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> que se acaba de crear sólo se aplican al canal que se pasó al constructor <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</source>
          <target state="translated">Si el usuario crea a continuación un nuevo canal dentro de su ámbito, los encabezados no se aplicarán a los mensajes enviados al nuevo canal.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">El ejemplo siguiente muestra cómo utilizar <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>The active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> in the created scope.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> activo en el ámbito creado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class to create a scope for the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Inicializa un nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> para crear un ámbito para el objeto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a code block within which the specified <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object is the current scope.</source>
          <target state="translated">Utilice el constructor <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> para crear un bloque de código dentro del cual el objeto <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> especificado es el ámbito actual.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.Dispose">
          <source>Restores the original <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> to the active context and recycles the <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> object.</source>
          <target state="translated">Restaura el <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> original al contexto activo y recicla el objeto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>