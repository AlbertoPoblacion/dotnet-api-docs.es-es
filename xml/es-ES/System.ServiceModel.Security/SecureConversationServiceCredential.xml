<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureConversationServiceCredential.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72d98fa2acd137838a7c052d4ad969b56418ff7ee2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d98fa2acd137838a7c052d4ad969b56418ff7ee2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">Proporciona la configuración de credencial para un servicio de conversación seguro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">Las conversaciones seguras implican el intercambio de varios mensajes y utilizan un token de contexto de seguridad (SCT) para garantizar la seguridad.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">Las partes de la comunicación comparten el SCT a lo largo de una sesión de comunicación.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A service can issue two different kinds of SCTs:</source>
          <target state="translated">Un servicio puede emitir dos tipos diferentes de SCT:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">El primero es un SCT basado en sesión que contiene un identificador único. Los mensajes llevan sólo el identificador, y el servicio mantiene una caché de asignación de estado que realiza asignaciones entre los identificadores de SCT y el contenido (como notificaciones, claves de seguridad, etc.).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">Un cliente con buen comportamiento debe enviar una cancelación de SCT que ayude al servicio a optimizar los recursos de la caché.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>If you instantiate this class by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> with the <ph id="ph2">`requireCancellation`</ph> parameter equal to <ph id="ph3">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated">Si crea instancias de esta clase llamando a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> con el parámetro <ph id="ph2">`requireCancellation`</ph> igual a <ph id="ph3">`true`</ph>, el SCT se emite de esta manera.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">El segundo es un SCT autónomo que reside en una cookie del cliente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">El SCT contiene la información de estado completa, por lo que no requiere la administración de estados por parte del servicio ni la cancelación de SCT por parte del cliente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">Esto se denomina a veces un SCT de "modo de cookie".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">Dado que el SCT contiene la información de estado completa, su tamaño es mayor que en el caso basado en sesión.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">Con los SCT basados en sesión, el servicio almacena gran parte de la información de estado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">Sin embargo, dado que es autónomo, se puede utilizar durante toda la duración del servicio y se conserva tras el apagado y reinicio del servicio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Gets a collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Obtiene una colección de notificaciones <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para la serialización de cookies.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>A collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Colección de notificaciones <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para la serialización de cookies.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> as the default.</source>
          <target state="translated">Para serializar las notificaciones en cookies de SCT, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> utiliza <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> como valor predeterminado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Because the Claim resource is extensible, WCF allows you to provide a list of known resource types.</source>
          <target state="translated">Dado que el recurso de notificación es extensible, WCF permite proporcionar una lista de tipos de recursos conocidos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>This assists the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">Esto ayuda a <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> durante la deserialización de las notificaciones en la cookie para que pueda devolver los objetos originales fuertemente tipados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>The following code shows how to get this property.</source>
          <target state="translated">El código siguiente muestra cómo obtener esta propiedad.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Gets or sets a customized <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> for encoding and decoding cookie serialization.</source>
          <target state="translated">Obtiene o establece un <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> personalizado para codificar y descodificar la serialización de cookies.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> object, which is a customization of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph>, que es una personalización de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">En "modo de cookie", un servicio emite un token de contexto de seguridad (SCT) en forma de cookie para el cliente, para que no tenga que mantener cualquier estado de seguridad.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">El cliente devuelve la cookie en el mensaje de solicitud para que el servicio sepa cómo desproteger y comprobar el mensaje de solicitud.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">Dado que el SCT se transmite a menudo a través de una red no segura, se debe proteger.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses the <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">De forma predeterminada, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> utiliza la clase <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> para proteger la cookie mediante la API de protección de datos (DPAPI, Data Protection API).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">Para que DPAPI funcione en un entorno de granja de servidores web, todos los servicios back-end se deben ejecutar como la misma cuenta de usuario de dominio para DPAPI.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">En otras palabras, si el servicio está hospedado en web, el proceso de trabajo de Internet Information Services (IIS) se debe configurar para ejecutarse como usuario del dominio.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>This property enables you to use a customized <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">Esta propiedad le permite utilizar un <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> personalizado para cifrar y descifrar la cookie, y no depender de DPAPI.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The following code shows how to set this property.</source>
          <target state="translated">El código siguiente muestra cómo establecer esta propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>