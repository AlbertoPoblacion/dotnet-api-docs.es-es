<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea8d2371f50f6473b6c1b91043495834215c8ab3" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51916066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type ControlCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso mediante programación a la configuración de la caché de resultados de un control de usuario de ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.ControlCachePolicy> clase se usa por desarrolladores en escenarios de control de usuario mediante programación para especificar la configuración de almacenamiento en caché de salida para los controles de usuario (archivos .ascx). ASP.NET incrusta los controles de usuario dentro de un <xref:System.Web.UI.BasePartialCachingControl> instancia. La <xref:System.Web.UI.BasePartialCachingControl> clase representa un control de usuario que tiene habilitada la memoria caché de salida. Al acceder a la <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType> propiedad de un <xref:System.Web.UI.PartialCachingControl> control, siempre recibirá válido <xref:System.Web.UI.ControlCachePolicy> objeto. Sin embargo, si tiene acceso a la <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType> propiedad de un <xref:System.Web.UI.UserControl> (control), recibirá un válido <xref:System.Web.UI.ControlCachePolicy> objeto solo si el control de usuario ya se incluye en un <xref:System.Web.UI.BasePartialCachingControl> control. Si no se ajusta, el <xref:System.Web.UI.ControlCachePolicy> devuelto por la propiedad de objeto producirá excepciones cuando se intenta manipular, porque no tiene asociado un <xref:System.Web.UI.BasePartialCachingControl>. Para determinar si un <xref:System.Web.UI.UserControl> instancia admite el almacenamiento en caché sin generar excepciones, inspeccione la <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> propiedad.  
  
 Mediante el <xref:System.Web.UI.ControlCachePolicy> clase es una de varias maneras de habilitar la caché de resultados. En la lista siguiente se describe los métodos que puede usar para habilitar el almacenamiento en caché de salida:  
  
-   Use la directiva para habilitar la caché de resultados en escenarios declarativos.  
  
-   Use el <xref:System.Web.UI.PartialCachingAttribute> atributo para habilitar el almacenamiento en caché para un control de usuario en un archivo de código subyacente.  
  
-   Use la <xref:System.Web.UI.ControlCachePolicy> clase para especificar la configuración de caché en escenarios de programación en el que está trabajando con <xref:System.Web.UI.BasePartialCachingControl> instancias que se han habilitado para caché mediante uno de los métodos anteriores y se carga dinámicamente mediante el <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType> método. Un <xref:System.Web.UI.ControlCachePolicy> instancia se puede manipular correctamente sólo entre la `Init` y `PreRender` fases del ciclo de vida del control. Si modifica un <xref:System.Web.UI.ControlCachePolicy> objeto después de la `PreRender` fase, ASP.NET inicia una excepción, ya que los cambios realizan después de representa el control no afectan realmente a configuración de caché (un control se almacena en caché durante el `Render` fase). Por último, una instancia del control de usuario (y, por tanto, su <xref:System.Web.UI.ControlCachePolicy> objeto) solo está disponible para la manipulación mediante programación cuando se representa realmente.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo se puede cargar dinámicamente un control de usuario y manipular mediante programación en tiempo de ejecución. El <xref:System.Web.UI.PartialCachingAttribute> atributo se aplica a un control de usuario denominado `SimpleControl`, lo que significa que el control de usuario ajustado por un <xref:System.Web.UI.PartialCachingControl> control en tiempo de ejecución. El `SimpleControl` configuración de almacenamiento en caché del objeto puede ser mediante programación manipular a través de su asociado <xref:System.Web.UI.ControlCachePolicy> objeto, que está disponible a través de una referencia a la <xref:System.Web.UI.PartialCachingControl> control que lo contiene. En este ejemplo, el <xref:System.Web.UI.ControlCachePolicy.Duration%2A> se examina la propiedad durante la inicialización de la página y se modifica utilizando el <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> y <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> métodos si se cumplen ciertas condiciones.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el `SimpleControl` control de usuario desde una página de formularios Web Forms. Para ejecutar este ejemplo correctamente, asegúrese de que el archivo de control de usuario (.ascx), su archivo de código subyacente (.cs o .vb) y la página de formularios Web Forms que hospeda el control de usuario (.aspx) en el mismo directorio.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
    <related type="Article" href="https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e">Almacenamiento en caché las partes de una página ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cached : bool with get, set" Usage="System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el almacenamiento en caché de fragmentos está habilitado para el control de usuario.</summary>
        <value>
          <see langword="true" /> si el resultado del control de usuario se almacena en caché; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.  
  
\- o - 
El valor de la propiedad <see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> se establece fuera de las fases de inicialización y representación del control.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instancia de la clase <see cref="T:System.Web.Caching.CacheDependency" /> asociada a los resultados del control de usuario almacenados en caché.</summary>
        <value>El objeto <see cref="T:System.Web.Caching.CacheDependency" /> asociado al control. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> propiedad delega en el <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> propiedad de la <xref:System.Web.UI.BasePartialCachingControl> control que contiene el control de usuario. Cuando el <xref:System.Web.Caching.CacheDependency> instancia se invalide, el control de usuario se quita de la memoria caché.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.  
  
\- o - 
El valor de la propiedad <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> se establece fuera de las fases de inicialización y representación del control.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan with get, set" Usage="System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo que deben permanecer en la caché de resultados los elementos almacenados en caché.</summary>
        <value>Una estructura <see cref="T:System.TimeSpan" /> que representa el tiempo que un control de usuario debe permanecer en la caché de resultados. El valor predeterminado es <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se establece una directiva de expiración absoluta mediante la <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> método, el <xref:System.Web.UI.ControlCachePolicy.Duration%2A> propiedad devuelve la cantidad de tiempo restante hasta la expiración de la entrada de caché.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo se puede cargar dinámicamente un control de usuario y manipular mediante programación en tiempo de ejecución. El <xref:System.Web.UI.PartialCachingAttribute> atributo se aplica a un control de usuario denominado `SimpleControl`, lo que significa que es ajustado por un <xref:System.Web.UI.PartialCachingControl> control en tiempo de ejecución. El `SimpleControl` configuración de almacenamiento en caché del objeto puede ser mediante programación manipular a través de su asociado <xref:System.Web.UI.ControlCachePolicy> objeto, que está disponible a través de una referencia a la <xref:System.Web.UI.PartialCachingControl> control que lo contiene. En este ejemplo, el <xref:System.Web.UI.ControlCachePolicy.Duration%2A> se examina la propiedad durante la inicialización de la página y se cambia la expiración de caché si se cumplen ciertas condiciones. Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.ControlCachePolicy> clase.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.  
  
\- o - 
El valor de la propiedad <see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> se establece fuera de las fases de inicialización y representación del control.</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del proveedor de caché de resultados que está asociado a una instancia de control.</summary>
        <value>Nombre del proveedor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> propiedad le permite especificar el proveedor de caché de resultados actual que está asociado a un control, mediante el <xref:System.Web.UI.ControlCachePolicy> instancia. Esta propiedad se puede establecer sólo antes el <xref:System.Web.UI.Control.PreRender> se produce un evento en el ciclo de vida del control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se encontró el nombre del proveedor.</exception>
        <exception cref="T:System.Web.HttpException">Se intentó establecer la propiedad <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> durante o después del evento <see cref="E:System.Web.UI.Control.PreRender" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="controlCachePolicy.SetExpires expirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">Estructura <see cref="T:System.DateTime" /> a partir de la cual expira la entrada en caché.</param>
        <summary>Indica a la clase <see cref="T:System.Web.UI.BasePartialCachingControl" /> que contiene el control de usuario que la entrada en memoria caché expira en la fecha y hora especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> y <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> métodos (pasando `true`) para indicar el <xref:System.Web.UI.BasePartialCachingControl> control que contiene el control de usuario para usar una directiva en lugar de una directiva de expiración absoluta de caché de expiración variable. Use la <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> método y el <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> método (pasando `false`) para especificar una directiva de expiración absoluta.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo se puede cargar dinámicamente un control de usuario y manipular mediante programación en tiempo de ejecución. El <xref:System.Web.UI.PartialCachingAttribute> atributo se aplica a un control de usuario denominado `SimpleControl`, lo que significa que el control de usuario ajustado por un <xref:System.Web.UI.PartialCachingControl> control en tiempo de ejecución. El `SimpleControl` configuración de almacenamiento en caché del objeto puede ser mediante programación manipular a través de su asociado <xref:System.Web.UI.ControlCachePolicy> objeto, que está disponible a través de una referencia a la <xref:System.Web.UI.PartialCachingControl> control que lo contiene. En este ejemplo, el <xref:System.Web.UI.ControlCachePolicy.Duration%2A> se examina la propiedad durante la inicialización de la página y se modifica utilizando el <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> y <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> métodos si se cumplen ciertas condiciones. Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.ControlCachePolicy> clase.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="controlCachePolicy.SetSlidingExpiration useSlidingExpiration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">
          <see langword="true" /> para utilizarse una expiración variable en lugar de una expiración absoluta para la entrada en caché; en caso contrario, <see langword="false" />.</param>
        <summary>Indica al control <see cref="T:System.Web.UI.BasePartialCachingControl" /> que contiene el control de usuario que se configure la entrada en caché del control de usuario para utilizarse una expiración variable o absoluta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> y <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> métodos (pasando `true`) para indicar el <xref:System.Web.UI.BasePartialCachingControl> control que contiene el control de usuario para usar una directiva en lugar de una directiva de expiración absoluta de caché de expiración variable. Use la <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> método y el <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> método (pasando `false`) para especificar una directiva de expiración absoluta.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo se puede cargar dinámicamente un control de usuario y manipular mediante programación en tiempo de ejecución. Un control de usuario denominado `SimpleControl` está decorado con un <xref:System.Web.UI.PartialCachingAttribute> atributo, lo que significa que es ajustado por un <xref:System.Web.UI.PartialCachingControl> control en tiempo de ejecución. El `SimpleControl` configuración de almacenamiento en caché del objeto puede ser mediante programación manipular a través de su asociado <xref:System.Web.UI.ControlCachePolicy> objeto, que está disponible a través de una referencia a la <xref:System.Web.UI.PartialCachingControl> control que lo contiene. En este ejemplo, es examina durante la inicialización de la página Configuración de almacenamiento en caché y se puede cambiar si se cumplen ciertas condiciones. Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.ControlCachePolicy> clase.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="controlCachePolicy.SetVaryByCustom varyByCustom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">Lista de cadenas personalizadas.</param>
        <summary>Establece una lista de cadenas personalizadas que utilizará la caché de resultados para modificar el control de usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se pasa "explorador" como el `varyByCustom` parámetro, el control de usuario cambiará por tipo de explorador y el número de versión principal. Si se especifica otra cadena personalizada, debe reemplazar el <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> método en el archivo Global.asax de la aplicación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCaching : bool" Usage="System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control de usuario admite el almacenamiento en caché.</summary>
        <value>
          <see langword="true" /> si el control de usuario admite el almacenamiento en caché; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control de usuario admite el almacenamiento en caché si está asociada con un <xref:System.Web.UI.BasePartialCachingControl> instancia, lo que indica que una directiva se ha analizado el analizador de ASP.NET o el control de usuario se había decorado con un <xref:System.Web.UI.PartialCachingAttribute> atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una lista de identificadores de control para modificar el resultado almacenado en memoria caché.</summary>
        <value>Una lista de cadenas, separadas por punto y coma, que se utiliza para modificar la caché de resultados de un control de usuario. Estas cadenas representan los valores de la propiedad <see cref="P:System.Web.UI.Control.ID" /> de los controles de servidor ASP.NET declarados en el control de usuario.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.  
  
\- o - 
El valor de la propiedad <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> se establece fuera de las fases de inicialización y representación del control.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una lista de nombres de parámetro <see langword="GET" /> o <see langword="POST" /> para modificar el resultado almacenado en memoria caché.</summary>
        <value>Lista de cadenas, separadas por punto y coma, que se utiliza para modificar la caché de resultados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, estas cadenas se corresponden con un valor de cadena de consulta enviada con el método GET o a un parámetro enviado mediante el método POST. Cuando el <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> propiedad se establece en varios parámetros, la caché de resultados contiene una versión diferente del documento solicitado para cada parámetro de especificada. Entre los valores posibles se incluyen "none", "*" y cualquier cadena de consulta o nombre de parámetro POST válido.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control de usuario no está asociado a un control <see cref="T:System.Web.UI.BasePartialCachingControl" /> y no se puede almacenar en la memoria caché.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>