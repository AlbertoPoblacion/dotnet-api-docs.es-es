<Type Name="VerificationConditionalOperator" FullName="System.Web.UI.VerificationConditionalOperator">
  <TypeSignature Language="C#" Value="public enum VerificationConditionalOperator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VerificationConditionalOperator extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.VerificationConditionalOperator" />
  <TypeSignature Language="VB.NET" Value="Public Enum VerificationConditionalOperator" />
  <TypeSignature Language="C++ CLI" Value="public enum class VerificationConditionalOperator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="2b0f0-101">Especifica operadores para una expresión condicional utilizada en una clase <see cref="T:System.Web.UI.VerificationAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2b0f0-101">Specifies operators for a conditional expression used in a <see cref="T:System.Web.UI.VerificationAttribute" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b0f0-102">Al usar la extensión de una clase, miembro o indizador con un <xref:System.Web.UI.VerificationAttribute>, puede utilizar una expresión condicional para definir cómo se comprueba la accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="2b0f0-102">When using extending a class, member or indexer with a <xref:System.Web.UI.VerificationAttribute>, you may use a conditional expression to define how accessibility is verified.</span></span> <span data-ttu-id="2b0f0-103">El lado izquierdo de una expresión condicional es la <xref:System.Web.UI.VerificationAttribute.ConditionalProperty%2A> y el lado derecho es el <xref:System.Web.UI.VerificationAttribute.ConditionalValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b0f0-103">The left side of a conditional expression is the <xref:System.Web.UI.VerificationAttribute.ConditionalProperty%2A> and the right side is the <xref:System.Web.UI.VerificationAttribute.ConditionalValue%2A>.</span></span> <span data-ttu-id="2b0f0-104">Cuando se utiliza el operador Equals, el lado izquierdo debe ser igual el lado derecho de la expresión condicional para la regla de comprobación en true de informe.</span><span class="sxs-lookup"><span data-stu-id="2b0f0-104">When the Equals operator is used, the left side must equal the right side of the conditional expression for the verification rule to report true.</span></span> <span data-ttu-id="2b0f0-105">Cuando se utiliza el operador de valores, el lado izquierdo no debe ser igual a la derecha de la expresión condicional para la regla de comprobación en true de informe.</span><span class="sxs-lookup"><span data-stu-id="2b0f0-105">When the NotEquals operator is used, the left side must not equal to the right side of the conditional expression for the verification rule to report true.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.VerificationAttribute" />
    <altmember cref="T:System.Web.UI.VerificationReportLevel" />
    <altmember cref="T:System.Web.UI.VerificationRule" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="Equals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.VerificationConditionalOperator Equals = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.VerificationConditionalOperator.Equals" />
      <MemberSignature Language="VB.NET" Value="Equals" />
      <MemberSignature Language="C++ CLI" Value="Equals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.VerificationConditionalOperator</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2b0f0-106">Operador de igualdad (=).</span><span class="sxs-lookup"><span data-stu-id="2b0f0-106">The equal to operator (=).</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="NotEquals" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.VerificationConditionalOperator NotEquals = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.VerificationConditionalOperator.NotEquals" />
      <MemberSignature Language="VB.NET" Value="NotEquals" />
      <MemberSignature Language="C++ CLI" Value="NotEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.VerificationConditionalOperator</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2b0f0-107">Operador de desigualdad (! =).</span><span class="sxs-lookup"><span data-stu-id="2b0f0-107">The not equal to operator (!=).</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>