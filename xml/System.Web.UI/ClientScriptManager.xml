<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19ff5181caa07c458ad6ff38334f4d37a7d0917" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bc215-101">Define los métodos para la administración de scripts de cliente en aplicaciones web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bc215-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-102">La <xref:System.Web.UI.ClientScriptManager> clase se utiliza para administrar secuencias de comandos de cliente y agregarlas a las aplicaciones Web.</span><span class="sxs-lookup"><span data-stu-id="bc215-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="bc215-103">Puede obtener una referencia a la <xref:System.Web.UI.ClientScriptManager> clase desde el <xref:System.Web.UI.Page.ClientScript%2A> propiedad de la <xref:System.Web.UI.Page> objeto.</span><span class="sxs-lookup"><span data-stu-id="bc215-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="bc215-104">Puede agregar mediante declaración un script de cliente a una página Web mediante la inclusión de la secuencia de comandos en el marcado HTML de la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="bc215-105">Sin embargo, hay situaciones cuando se necesita agregar dinámicamente el script de cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="bc215-106">Para agregar dinámicamente un script, use la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, el <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método, el <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, o la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método, dependiendo de cuándo y cómo desea agregar el script.</span><span class="sxs-lookup"><span data-stu-id="bc215-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="bc215-107">Para obtener más información, consulte [Cómo: Agregar cliente Script dinámicamente a ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="bc215-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="bc215-108">El <xref:System.Web.UI.ClientScriptManager> clase identifica de forma única las secuencias de comandos mediante una clave <xref:System.String> y <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="bc215-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="bc215-109">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-110">Utilizando el tipo de script ayuda a evitar la confusión entre scripts similares de controles de usuario diferentes que podrían estar en uso en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="bc215-111">La <xref:System.Web.UI.ClientScriptManager> clase puede usarse para invocar las devoluciones de llamada de cliente en situaciones cuando, es conveniente ejecutar el código del servidor desde el cliente sin realizar una devolución de datos.</span><span class="sxs-lookup"><span data-stu-id="bc215-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="bc215-112">Esto se conoce como realizar una devolución de llamada fuera de banda al servidor.</span><span class="sxs-lookup"><span data-stu-id="bc215-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="bc215-113">En una devolución de llamada de cliente, una función de script de cliente envía una solicitud asincrónica para una página Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="bc215-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="bc215-114">La página Web se ejecuta una versión modificada de su ciclo de vida normal para procesar la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="bc215-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="bc215-115">Use la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método para obtener una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada de cliente a un evento de servidor.</span><span class="sxs-lookup"><span data-stu-id="bc215-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="bc215-116">Para obtener más información, consulte [Implementing las devoluciones de llamada de cliente sin Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="bc215-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-117">Las devoluciones de llamada de la secuencia de comandos no funcionará en los exploradores más antiguos que no admiten el modelo de objetos de documento (DOM) y requieren que ECMAScript esté habilitado en el cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="bc215-118">Para comprobar si el explorador admite las devoluciones de llamada, use la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propiedad, que es accesible a través de la <xref:System.Web.HttpRequest.Browser%2A> propiedad de la función intrínseca de ASP.NET <xref:System.Web.HttpContext.Request%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="bc215-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="bc215-119">Use la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método y <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> método para definir un evento de postback de cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="bc215-120">Estos métodos permiten las funciones de script de cliente, cuando se invoca, para hacer que el servidor enviar a la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="bc215-121">Un evento de postback de cliente es diferente de una devolución de llamada de cliente en que la página Web finaliza un ciclo de vida normal para procesar el evento de devolución de cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-122">Si utilizas un <xref:System.Web.UI.WebControls.Button> control y el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad está establecida en `false`, puede usar el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método para devolver el cliente devolución de datos del evento para el <xref:System.Web.UI.WebControls.Button> control.</span><span class="sxs-lookup"><span data-stu-id="bc215-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="bc215-123">El <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> propiedad de la <xref:System.Web.UI.WebControls.Button> (control), <xref:System.Web.UI.WebControls.ImageButton> (control), y <xref:System.Web.UI.WebControls.LinkButton> control puede usarse para ejecutar el script de cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-124">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método de la <xref:System.Web.UI.ClientScriptManager> clase.</span><span class="sxs-lookup"><span data-stu-id="bc215-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="bc215-125">Se definen dos scripts de cliente en la página: `PopupScript`, que muestra un mensaje de alerta cuando se carga la página, y `ButtonClickScript`, que define un controlador de cliente para un botón HTML `onClick` eventos.</span><span class="sxs-lookup"><span data-stu-id="bc215-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-126">Obtiene una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada del cliente a un evento de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-127">Objeto <see cref="T:System.Web.UI.Control" /> de servidor que controla la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="bc215-128">El control debe implementar la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" /> y proporcionar un método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-129">Argumento pasado desde el script de cliente al de servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-129">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="bc215-130">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-130">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="bc215-131">Nombre del controlador de eventos de cliente que recibe el resultado de un evento de servidor correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-131">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="bc215-132">El script de cliente que se evalúa en el cliente antes de iniciar la devolución de llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-132">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="bc215-133">El resultado del script se devuelve al controlador de eventos de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-133">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-134">Obtiene una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada del cliente a un evento de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="bc215-135">La función de cliente para este método sobrecargado incluye un control, un argumento, un script de cliente y un contexto especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-136">El nombre de una función de cliente que invoca la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-136">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-137">El <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> método realiza una devolución de llamada fuera de banda en el servidor que es una versión modificada del ciclo de vida normal de una página.</span><span class="sxs-lookup"><span data-stu-id="bc215-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="bc215-138">Para obtener más información, consulte [Implementing las devoluciones de llamada de cliente sin Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="bc215-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-139">Cuando el explorador es Microsoft Internet Explorer (versión 5.0 o posterior), el mecanismo de devolución de llamada de secuencia de comandos se implementa a través del objeto COM Microsoft.XmlHttp y requiere que el explorador se establezca para ejecutar los controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="bc215-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="bc215-140">Para otros exploradores, se utiliza un objeto XMLHttpRequest utilizando local Document Object Model (DOM) del explorador.</span><span class="sxs-lookup"><span data-stu-id="bc215-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="bc215-141">Para comprobar si un explorador admite las devoluciones de llamada de cliente, utilice la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="bc215-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="bc215-142">Para comprobar si un explorador admite XML sobre HTTP, utilice el <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="bc215-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="bc215-143">Ambas propiedades son accesibles a través de la <xref:System.Web.HttpRequest.Browser%2A> propiedad de la función intrínseca de ASP.NET <xref:System.Web.HttpContext.Request%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="bc215-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="bc215-144">El <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método realiza una devolución de llamada de forma sincrónica utilizando XML sobre HTTP.</span><span class="sxs-lookup"><span data-stu-id="bc215-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="bc215-145">Al enviar datos de forma sincrónica en un escenario de devolución de llamada, las devoluciones de llamada sincrónicas devuelvan inmediatamente y no bloquean el explorador.</span><span class="sxs-lookup"><span data-stu-id="bc215-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="bc215-146">Devolución de llamada de dos devoluciones de llamada sincrónica no puede ejecutar al mismo tiempo en el explorador.</span><span class="sxs-lookup"><span data-stu-id="bc215-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="bc215-147">Si se desencadena una segunda devolución de llamada sincrónica mientras otra está actualmente pendiente, la segunda devolución de llamada sincrónica cancela la primera y la segunda devolución de llamada se devolverá.</span><span class="sxs-lookup"><span data-stu-id="bc215-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="bc215-148">Para enviar datos de forma asincrónica, use una de las sobrecargas que toma el `useAsync` parámetro, que es un valor booleano valor que controla este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="bc215-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="bc215-149">En el escenario asincrónico puede tener varias devoluciones de llamada pendientes; Sin embargo, no se garantiza el orden en el que devuelven para que coincida con el orden en el que se iniciaron.</span><span class="sxs-lookup"><span data-stu-id="bc215-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="bc215-150">Además, esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método no especifica ninguna función de cliente para controlar el caso de una condición de error generado por el <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="bc215-151">Para especificar un controlador de devolución de llamada de error de cliente, utilice una de las sobrecargas que toma el `clientErrorCallback` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="bc215-152">El <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> método toma una cadena opcional `argument` parámetro y devuelve una cadena.</span><span class="sxs-lookup"><span data-stu-id="bc215-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="bc215-153">Para pasar o recibir varios valores, concatene los valores en la entrada o cadena devuelta, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="bc215-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-154">Evite utilizar el estado de vista en la implementación de página o propiedades de control que necesiten actualizarse durante las operaciones de devolución de llamada de secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="bc215-155">Si las propiedades son sobrevivir a las solicitudes de página, puede usar el estado de sesión.</span><span class="sxs-lookup"><span data-stu-id="bc215-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-156">En el ejemplo de código siguiente se muestra cómo utilizar dos sobrecargas de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método en un escenario de devolución de llamada de cliente que incrementa enteros.</span><span class="sxs-lookup"><span data-stu-id="bc215-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="bc215-157">Se muestran dos mecanismos de devolución de llamada; la diferencia entre ellos es el uso de la `context` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="bc215-158">A `ReceiveServerData1` función de devolución de llamada de cliente se proporciona mediante la `context` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="bc215-159">En cambio, el `ReceiveServerData2` función de devolución de llamada de cliente se define en un `<script>` bloque en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="bc215-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método es el controlador de servidor que se incrementa el valor que se pasa y <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> método devuelve el valor incrementado como una cadena.</span><span class="sxs-lookup"><span data-stu-id="bc215-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="bc215-161">Si el <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método devuelve un error, el `ProcessCallBackError` se llama la función de cliente.</span><span class="sxs-lookup"><span data-stu-id="bc215-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-162">El <see cref="T:System.Web.UI.Control" /> especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bc215-163">El objeto <see cref="T:System.Web.UI.Control" /> no implementa la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-164">Objeto <see cref="T:System.Web.UI.Control" /> de servidor que controla la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="bc215-165">El control debe implementar la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" /> y proporcionar un método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-166">Argumento pasado desde el script de cliente al de servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-166">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="bc215-167">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-167">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="bc215-168">Nombre del controlador de eventos de cliente que recibe el resultado de un evento de servidor correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-168">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="bc215-169">El script de cliente que se evalúa en el cliente antes de iniciar la devolución de llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-169">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="bc215-170">El resultado del script se devuelve al controlador de eventos de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-170">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="bc215-171">Es <see langword="true" /> para realizar la devolución de llamada de forma asincrónica; es <see langword="false" /> para realizar la devolución de llamada de forma sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-171">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-172">Obtiene una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada del cliente a los eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="bc215-173">La función de cliente para este método sobrecargado incluye un control, un argumento, un script de cliente, un contexto y un valor booleano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-174">El nombre de una función de cliente que invoca la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-174">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-175">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método requiere un `useAsync` parámetro, que le permite realizar la devolución de llamada de cliente de forma asincrónica estableciendo el valor en `true`.</span><span class="sxs-lookup"><span data-stu-id="bc215-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="bc215-176">Las versiones de sobrecarga de este método que no requieren la `useAsync` parámetro establece el valor en `false` de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bc215-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="bc215-177">Para obtener más información sobre este método, vea la sección Comentarios para la sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-178">El <see cref="T:System.Web.UI.Control" /> especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bc215-179">El objeto <see cref="T:System.Web.UI.Control" /> no implementa la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="bc215-180">Nombre de un servidor <see cref="T:System.Web.UI.Control" /> que controla la devolución de llamada del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="bc215-181">El control debe implementar la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" /> y proporcionar un método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-182">Argumento pasado desde el script de cliente al de servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-182">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="bc215-183">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-183">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="bc215-184">Nombre del controlador de eventos de cliente que recibe el resultado de un evento de servidor correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-184">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="bc215-185">El script de cliente que se evalúa en el cliente antes de iniciar la devolución de llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-185">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="bc215-186">El resultado del script se devuelve al controlador de eventos de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-186">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="bc215-187">Nombre del controlador de eventos de cliente que recibe el resultado cuando se produce un error en el controlador de eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="bc215-188">Es <see langword="true" /> para realizar la devolución de llamada de forma asincrónica; es <see langword="false" /> para realizar la devolución de llamada de forma sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-188">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-189">Obtiene una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada del cliente a los eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="bc215-190">La función de cliente para este método sobrecargado incluye un destino, un argumento, un script de cliente, un contexto, un controlador de errores y un valor booleano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-191">El nombre de una función de cliente que invoca la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-191">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-192">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método toma un `target` cadena de parámetro en lugar de un <xref:System.Web.UI.Control> parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="bc215-193">Utilice esta sobrecarga cuando desee que la devolución de llamada para volver atrás y un valor distinto de una cadena que contiene el <xref:System.Web.UI.Control.UniqueID%2A> del control.</span><span class="sxs-lookup"><span data-stu-id="bc215-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="bc215-194">Además, esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método requiere un `useAsync` y un `clientErrorCallback` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="bc215-195">El `useAsync` parámetro le permite realizar la devolución de llamada de cliente de forma asincrónica estableciendo el valor en `true`.</span><span class="sxs-lookup"><span data-stu-id="bc215-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="bc215-196">Las versiones de sobrecarga de este método que no requieren la `useAsync` parámetro establece el valor en `false` de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bc215-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="bc215-197">El `clientErrorCallback` parámetro le permite definir el nombre de la función de cliente que se llama si el controlador de servidor, el <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método, devuelve un error.</span><span class="sxs-lookup"><span data-stu-id="bc215-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="bc215-198">Las versiones de sobrecarga de este método que no requieren la `clientErrorCallback` parámetro establece el valor en null.</span><span class="sxs-lookup"><span data-stu-id="bc215-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="bc215-199">Para obtener más información sobre este método, vea la sección Comentarios para la sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-200">En el ejemplo de código siguiente se muestra cómo utilizar dos sobrecargas de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método en un escenario de devolución de llamada de cliente que incrementa enteros.</span><span class="sxs-lookup"><span data-stu-id="bc215-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="bc215-201">Se muestran dos mecanismos de devolución de llamada; la diferencia entre ellos es el uso de la `context` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="bc215-202">A `ReceiveServerData1` función de devolución de llamada de cliente se proporciona mediante la `context` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="bc215-203">En cambio, el `ReceiveServerData2` función de devolución de llamada de cliente se define en un `<script>` bloque en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="bc215-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método es el controlador de servidor que se incrementa el valor que se pasa y <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> método devuelve el valor incrementado como una cadena.</span><span class="sxs-lookup"><span data-stu-id="bc215-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="bc215-205">Si el <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método devuelve un error y, a continuación, la función de cliente `ProcessCallBackError` se llama.</span><span class="sxs-lookup"><span data-stu-id="bc215-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-206">Objeto <see cref="T:System.Web.UI.Control" /> de servidor que controla la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="bc215-207">El control debe implementar la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" /> y proporcionar un método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-208">Argumento pasado desde el script de cliente al método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> de servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="bc215-209">Nombre del controlador de eventos de cliente que recibe el resultado de un evento de servidor correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-209">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="bc215-210">El script de cliente que se evalúa en el cliente antes de iniciar la devolución de llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-210">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="bc215-211">El resultado del script se devuelve al controlador de eventos de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-211">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="bc215-212">Nombre del controlador de eventos de cliente que recibe el resultado cuando se produce un error en el controlador de eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="bc215-213">Es <see langword="true" /> para realizar la devolución de llamada de forma asincrónica; es <see langword="false" /> para realizar la devolución de llamada de forma sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-213">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-214">Obtiene una referencia a una función de cliente que, cuando se invoca, inicia una devolución de llamada del cliente a los eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="bc215-215">La función de cliente para este método sobrecargado incluye un control, un argumento, un script de cliente, un contexto, un controlador de errores y un valor booleano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-216">El nombre de una función de cliente que invoca la devolución de llamada de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-216">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-217">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método requiere un `useAsync` y un `clientErrorCallback` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="bc215-218">El `useAsync` parámetro le permite realizar la devolución de llamada de cliente de forma asincrónica estableciendo el valor en `true`.</span><span class="sxs-lookup"><span data-stu-id="bc215-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="bc215-219">Las versiones de sobrecarga de este método que no requieren la `useAsync` parámetro establece el valor en `false` de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bc215-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="bc215-220">El `clientErrorCallback` parámetro le permite definir el nombre de la función de cliente que se llama si el controlador del servidor (el <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (método)) devuelve un error.</span><span class="sxs-lookup"><span data-stu-id="bc215-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="bc215-221">Las versiones de sobrecarga de este método que no requieren la `clientErrorCallback` parámetro establece el valor en null.</span><span class="sxs-lookup"><span data-stu-id="bc215-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="bc215-222">Para obtener más información sobre este método, vea la sección Comentarios para la sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-223">El <see cref="T:System.Web.UI.Control" /> especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bc215-224">El objeto <see cref="T:System.Web.UI.Control" /> no implementa la interfaz <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-225">Obtiene una referencia, con <see langword="javascript:" /> anexado al principio, que se puede utilizar en un evento de devolución de datos del cliente al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-226">Control de servidor que va a procesar el valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-226">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-227">Parámetro pasado al control de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-227">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-228">Obtiene una referencia, con <see langword="javascript:" /> anexado al principio, que se puede utilizar en un evento de devolución de datos del cliente al servidor para el control especificado y con los argumentos de evento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-229">Cadena que representa una llamada de JavaScript a la función de postback que incluye el id. del control de destino y los argumentos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-230">Mediante el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método requiere que el control que controla la devolución de datos para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="bc215-231">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page>, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-232">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="bc215-233">El control personalizado, `MyControl`, implementa el <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="bc215-234">Cuando se hace clic en el elemento delimitador HTML en la página, el <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> se invoca el método del control personalizado.</span><span class="sxs-lookup"><span data-stu-id="bc215-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="bc215-235">En el ejemplo de código siguiente se tiene la misma funcionalidad que el anterior, excepto que en lugar de un control personalizado, el <xref:System.Web.UI.Page> la clase implementa la <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-236">Control de servidor que va a procesar el valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-236">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-237">Parámetro pasado al control de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-237">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="bc215-238">Es <see langword="true" /> para registrar el evento postback para su validación; es <see langword="false" /> para no registrarlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-238">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-239">Obtiene una referencia, con <see langword="javascript:" /> anexado al principio, que se puede utilizar en un evento de devolución de datos del cliente al servidor para el control especificado y con los argumentos de evento especificados y, también, con una indicación booleana de si se debe registrar la devolución de datos para realizar la validación del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-240">Cadena que representa una llamada de JavaScript a la función de postback que incluye el id. del control de destino y los argumentos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-241">Mediante el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método requiere que el control que controla la devolución de datos para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="bc215-242">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page>, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-243">Devuelve una cadena que se puede utilizar en un evento de cliente para que se produzca un postback al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-243">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="bc215-244">Objeto <see cref="T:System.Web.UI.PostBackOptions" /> que define el postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-245">Devuelve una cadena que se puede utilizar en un evento de cliente para que se produzca un postback al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-245">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="bc215-246">La instancia <see cref="T:System.Web.UI.PostBackOptions" /> especificada define la cadena de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-247">Cadena que, cuando se trata como script en el cliente, inicia el postback del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-247">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-248">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page>, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="bc215-249">El <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método puede utilizarse con el <xref:System.Web.UI.WebControls.Button> controlar cuándo el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="bc215-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="bc215-250">En este escenario, el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método devuelve el cliente de devolución de datos del evento para el <xref:System.Web.UI.WebControls.Button> control.</span><span class="sxs-lookup"><span data-stu-id="bc215-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-251">El parámetro <see cref="T:System.Web.UI.PostBackOptions" /> es <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-252">Servidor <see cref="T:System.Web.UI.Control" /> que procesa los datos devueltos en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-253">Cadena de argumentos opcionales para pasar al control que procesa el postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-253">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-254">Devuelve una cadena que se puede utilizar en un evento de cliente para que se produzca un postback al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-254">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="bc215-255">El control especificado para controlar el postback y un argumento de cadena con información adicional sobre el evento definen la cadena de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-256">Cadena que, cuando se trata como script en el cliente, inicia el postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-256">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-257">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page>, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="bc215-258">El <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método puede utilizarse con el <xref:System.Web.UI.WebControls.Button> controlar cuándo el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="bc215-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="bc215-259">En este escenario, el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método devuelve el cliente de devolución de datos del evento para el <xref:System.Web.UI.WebControls.Button> control.</span><span class="sxs-lookup"><span data-stu-id="bc215-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-260">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="bc215-261">El control personalizado, `MyControl`, implementa el <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="bc215-262">Cuando se hace clic en el botón en la página, el <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> se invoca el método del control personalizado.</span><span class="sxs-lookup"><span data-stu-id="bc215-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="bc215-263">En el ejemplo de código siguiente se tiene la misma funcionalidad que el anterior, excepto que en lugar de un control personalizado, el <xref:System.Web.UI.Page> la clase implementa la <xref:System.Web.UI.IPostBackEventHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="bc215-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-264">El <see cref="T:System.Web.UI.Control" /> especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="bc215-265">Objeto <see cref="T:System.Web.UI.PostBackOptions" /> que define el postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="bc215-266">
            <see langword="true" /> para registrar la referencia de evento para su validación; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-266">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-267">Devuelve una cadena que se puede utilizar en un evento de cliente para que se produzca un postback al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-267">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="bc215-268">El objeto <see cref="T:System.Web.UI.PostBackOptions" /> especificado define la cadena de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="bc215-269">Opcionalmente, registra la referencia de evento para su validación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-269">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-270">Cadena que, cuando se trata como script en el cliente, inicia el postback del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-270">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-271">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page> de objetos, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="bc215-272">El <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método puede utilizarse con el <xref:System.Web.UI.WebControls.Button> controlar cuándo el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="bc215-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="bc215-273">En este escenario, el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método devuelve el cliente de devolución de datos del evento para el <xref:System.Web.UI.WebControls.Button> control.</span><span class="sxs-lookup"><span data-stu-id="bc215-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="bc215-274">Si `registerForEventValidation` es `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> llamadas al método el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> método para registrar la referencia de evento para su validación con un identificador de control único que representa el control de cliente que se va a generar el evento.</span><span class="sxs-lookup"><span data-stu-id="bc215-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-275">El valor de <see cref="T:System.Web.UI.PostBackOptions" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="bc215-276">Servidor <see cref="T:System.Web.UI.Control" /> que procesa los datos devueltos en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-277">Cadena de argumentos opcionales que se va a pasar a <c>control</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-277">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="bc215-278">
            <see langword="true" /> para registrar la referencia de evento para su validación; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-278">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-279">Devuelve una cadena que se debe utilizar en un evento de cliente para que se produzca un postback al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-279">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="bc215-280">El control especificado para controlar el postback y un argumento de cadena con información adicional sobre el evento definen la cadena de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="bc215-281">Opcionalmente, registra la referencia de evento para su validación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-281">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-282">Cadena que, cuando se trata como script en el cliente, inicia el postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-282">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-283">Para implementar la <xref:System.Web.UI.IPostBackEventHandler> interfaz para un <xref:System.Web.UI.Page>, use la directiva.</span><span class="sxs-lookup"><span data-stu-id="bc215-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="bc215-284">El <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método puede utilizarse con el <xref:System.Web.UI.WebControls.Button> controlar cuándo el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="bc215-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="bc215-285">En este escenario, el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método devuelve el cliente de devolución de datos del evento para el <xref:System.Web.UI.WebControls.Button> control.</span><span class="sxs-lookup"><span data-stu-id="bc215-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="bc215-286">Si `registerForEventValidation` es true, el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> llamadas al método el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> método para registrar la referencia de evento para su validación con un identificador de control único que representa el control de cliente que se va a generar el evento.</span><span class="sxs-lookup"><span data-stu-id="bc215-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-287">El <see cref="T:System.Web.UI.Control" /> especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-288">Tipo del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-288">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="bc215-289">Nombre completo del recurso en el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-289">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-290">Obtiene una referencia de la dirección URL de un recurso en un ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-290">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-291">Referencia de la dirección URL al recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-291">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-292">El <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método devuelve una referencia de dirección URL a un recurso incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="bc215-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="bc215-293">La referencia devuelta no es una dirección URL codificada.</span><span class="sxs-lookup"><span data-stu-id="bc215-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="bc215-294">Recursos pueden ser archivos de script, imágenes o cualquier archivo estático.</span><span class="sxs-lookup"><span data-stu-id="bc215-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="bc215-295">Especifique el tipo basándose en el objeto que se va a tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="bc215-296">Un recurso Web registrado en la página se identifica por su tipo y nombre.</span><span class="sxs-lookup"><span data-stu-id="bc215-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="bc215-297">Solo un recurso con un par de nombre y un tipo determinado se puede registrar con la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="bc215-298">Al intentar registrar un recurso que ya está registrado, no crea un duplicado del recurso registrado.</span><span class="sxs-lookup"><span data-stu-id="bc215-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="bc215-299">El <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método se utiliza junto con el <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método para tener acceso a recursos incrustados en ensamblados.</span><span class="sxs-lookup"><span data-stu-id="bc215-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="bc215-300">Para obtener más información sobre el uso de recursos en aplicaciones, consulte [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="bc215-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-301">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="bc215-302">El *tipo* parámetro en este ejemplo se establece en el tipo de clase en el ensamblado que contiene el recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="bc215-303">El `resourceName` parámetro se especifica con la ruta de acceso completa al recurso, que incluye el espacio de nombres predeterminado.</span><span class="sxs-lookup"><span data-stu-id="bc215-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="bc215-304">En el ejemplo de código siguiente se muestra cómo aplicar mediante programación el <xref:System.Web.UI.WebResourceAttribute> atributo de metadatos para marcar el ensamblado para los recursos que se enviarán.</span><span class="sxs-lookup"><span data-stu-id="bc215-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="bc215-305">Compile la clase siguiente en una biblioteca de clases con un espacio de nombres predeterminado establecido en `Samples.AspNet.CS.Controls` o `Samples.AspNet.VB.Controls`, dependiendo de qué lenguaje que esté utilizando.</span><span class="sxs-lookup"><span data-stu-id="bc215-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="bc215-306">Este ejemplo requiere un archivo JavaScript denominado `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="bc215-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="bc215-307">El archivo .js es un recurso incrustado en el ensamblado que contiene el `ClientScriptResourceLabel` objeto.</span><span class="sxs-lookup"><span data-stu-id="bc215-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="bc215-308">Si está utilizando Visual Studio], en la ventana de propiedades del proyecto de biblioteca de clase, establezca **acción de compilación** a **recurso incrustado** cuando se selecciona el archivo de script.</span><span class="sxs-lookup"><span data-stu-id="bc215-308">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="bc215-309">Si está compilando la biblioteca, en la línea de comandos, utilice el modificador para incrustar el recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-310">El nombre del recurso de Web es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-310">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bc215-311">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-311">\- or -</span>
          </span>
          <span data-ttu-id="bc215-312">El nombre del recurso del Web tiene una longitud de cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-312">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-313">Determina si el bloque de script de cliente se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bc215-314">Clave del bloque de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-314">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-315">Determina si el bloque de script de cliente se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-316">Es <see langword="true" /> si el bloque de script de cliente está registrado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-316">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-317">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método para evitar registrar scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="bc215-318">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-319">Un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-320">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="bc215-321">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método llama a la sobrecarga que toma tanto un `key` y un `type` parámetro con el tipo establecido como un <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="bc215-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-322">Tipo del bloque de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-322">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-323">Clave del bloque de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-323">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-324">Determina si el bloque de script de cliente se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" /> utilizando una clave y un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-325">Es <see langword="true" /> si el bloque de script de cliente está registrado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-325">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-326">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método para evitar registrar scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="bc215-327">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-328">Un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-329">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-330">Especifique el tipo basándose en el objeto que se va a tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="bc215-331">Por ejemplo, cuando se usa un `Page` instancia para tener acceso al recurso, especifique el `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-332">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="bc215-333">Tenga en cuenta que, si se quita la lógica para comprobar si el bloque de script de cliente existente, no habría dos scripts de cliente duplicados en el código fuente HTML de la página representada, porque el <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método comprueba los duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="bc215-334">La ventaja de la comprobación es reducir los cálculos innecesarios.</span><span class="sxs-lookup"><span data-stu-id="bc215-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-335">El tipo de script de cliente es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-335">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-336">Determina si la inclusión de script de cliente se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bc215-337">Clave de la inclusión de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-337">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-338">Determina si la inclusión de script de cliente se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-339">Es <see langword="true" /> si la inclusión de script de cliente está registrada; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-339">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-340">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método para evitar registrar scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="bc215-341">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-342">Incluir un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-343">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="bc215-344">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método llama a la sobrecarga que toma tanto un `key` y un `type` parámetro con el tipo establecido como un <xref:System.Web.UI.Page> objeto.</span><span class="sxs-lookup"><span data-stu-id="bc215-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-345">Tipo de la inclusión de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-345">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-346">Clave de la inclusión de script de cliente que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-346">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-347">Determina si la inclusión de script de cliente se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" /> utilizando una clave y un tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-348">Es <see langword="true" /> si la inclusión de script de cliente está registrada; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-348">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-349">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> incluye el método para evitar registrar scripts de cliente duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="bc215-350">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-351">Incluir un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-352">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-353">Especifique el tipo basándose en el objeto que se va a tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="bc215-354">Por ejemplo, al utilizar una instancia de la página para tener acceso al recurso, especifique el `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-355">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="bc215-356">Tenga en cuenta que, si se quita la lógica para comprobar la inclusión de la secuencia de comandos de cliente existente, no habría dos scripts de cliente duplicados en el código fuente HTML de la página representada, porque el <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método comprueba los duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="bc215-357">La ventaja de la comprobación es reducir los cálculos innecesarios.</span><span class="sxs-lookup"><span data-stu-id="bc215-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="bc215-358">Este ejemplo requiere un archivo JavaScript denominado `Script_include.js`, con el siguiente contenido:</span><span class="sxs-lookup"><span data-stu-id="bc215-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-359">El tipo de inclusión de script de cliente es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-359">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-360">Determina si la instrucción OnSubmit se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bc215-361">Clave de la instrucción OnSubmit que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-361">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-362">Determina si la instrucción OnSubmit se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-363">Es <see langword="true" /> si la instrucción OnSubmit se encuentra registrada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-363">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-364">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método para evitar registrar instrucciones OnSubmit duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="bc215-365">Esto es especialmente importante si la instrucción requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-366">Una instrucción se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-367">Instrucciones con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="bc215-368">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método llama a la sobrecarga que toma tanto un `key` y un `type` parámetro con el tipo establecido como un <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="bc215-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-369">Tipo de la instrucción OnSubmit que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-369">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-370">Clave de la instrucción OnSubmit que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-370">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-371">Determina si la instrucción OnSubmit se encuentra registrada con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave y el tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-372">Es <see langword="true" /> si la instrucción OnSubmit se encuentra registrada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-372">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-373">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método para evitar registrar instrucciones duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="bc215-374">Esto es especialmente importante si la instrucción requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-375">Una instrucción se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-376">Instrucciones con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-377">Especifique el tipo basándose en el objeto que se va a tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="bc215-378">Por ejemplo, cuando se usa un `Page` instancia para tener acceso al recurso, especifique el `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-379">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="bc215-380">Un script denominado `OnSubmitScript` está registrado con el <xref:System.Web.UI.Page> para que cuando se envía el formulario de la página se invoca la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-381">El tipo de instrucción OnSubmit es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-381">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-382">Determina si el script de inicio se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bc215-383">Clave del script de inicio que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-383">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-384">Determina si el script de inicio se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-385">Es <see langword="true" /> si el script de inicio está registrado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-385">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-386">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método para evitar registrar scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="bc215-387">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-388">Un script de inicio se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-389">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="bc215-390">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método llama a la sobrecarga que toma una cadena de ambos `key` y un `type` parámetro con el tipo establecido como un <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="bc215-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-391">Tipo del script de inicio que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-391">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-392">Clave del script de inicio que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-392">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-393">Determina si el script de inicio se encuentra registrado con el objeto <see cref="T:System.Web.UI.Page" /> utilizando la clave y el tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc215-394">Es <see langword="true" /> si el script de inicio está registrado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-394">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-395">Llamar a este método antes de llamar a la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método para evitar registrar scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="bc215-396">Esto es especialmente importante si el script requiere una gran cantidad de recursos del servidor para crear.</span><span class="sxs-lookup"><span data-stu-id="bc215-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="bc215-397">Un script de inicio de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-398">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-399">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="bc215-400">Tenga en cuenta que, si se han quitado la lógica para comprobar si el bloque de script de inicio existente, no habría dos scripts de inicio duplicadas en el código fuente HTML de la página representada, porque el <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método comprueba los duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="bc215-401">La ventaja de la comprobación es reducir los cálculos innecesarios.</span><span class="sxs-lookup"><span data-stu-id="bc215-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-402">El tipo de script es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-402">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="bc215-403">Nombre de matriz que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-403">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="bc215-404">Valor o valores de la matriz que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-404">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-405">Registra una declaración de matriz JavaScript con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un nombre y un valor de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-406">El <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> comprueba si una matriz registrada existe con el mismo nombre que el nombre especificado en el `arrayName` parámetro y, si es así, agrega los valores especificados en la `arrayValue` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="bc215-407">Dado que el mecanismo de almacenamiento subyacente se basa en un <xref:System.Collections.ArrayList>, se permiten los duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="bc215-408">Si una matriz registrada con el mismo nombre que el `arrayName` no existe el parámetro, se crea y los valores de la `arrayValue` parámetro agregado a él.</span><span class="sxs-lookup"><span data-stu-id="bc215-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="bc215-409">Si desea que los literales de cadena en la matriz de JavaScript resultante, incluya entre comillas simples (') o comillas dobles de escape (\\") en el `arrayValue` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="bc215-410">El valor de la `arrayValue` parámetro debe ser un único elemento.</span><span class="sxs-lookup"><span data-stu-id="bc215-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="bc215-411">Si más de un valor debe agregarse a la matriz, realizar varias llamadas con el <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-412">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> y <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="bc215-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="bc215-413">En el ejemplo se registra una matriz y un valor oculto y define la `OnClick` eventos de un `<input>` botón para calcular la suma de dos valores de la matriz y el valor hidden.</span><span class="sxs-lookup"><span data-stu-id="bc215-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-414">
            <paramref name="arrayName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-414">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-415">Registra el script de cliente con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-416">Tipo del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-416">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-417">Clave del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-417">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="bc215-418">Literal del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-418">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-419">Registra el script de cliente con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, clave y literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-420">Un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-421">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-422">Con la página, se puede registrar un único script con un tipo determinado y un par de claves.</span><span class="sxs-lookup"><span data-stu-id="bc215-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-423">Al intentar registrar un script que ya está registrado, no crea un duplicado de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="bc215-424">Llame a la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método para determinar si ya está registrado un script de cliente con un par de clave y un tipo determinado y evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="bc215-425">En esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, debe asegurarse de que el script proporcionado en el `script` parámetro se encapsula en un `<script>` bloque del elemento.</span><span class="sxs-lookup"><span data-stu-id="bc215-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="bc215-426">El <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método agrega un bloque de script a la parte superior de la página representada.</span><span class="sxs-lookup"><span data-stu-id="bc215-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="bc215-427">No se garantiza que los bloques de script se generen en el orden en que están registrados.</span><span class="sxs-lookup"><span data-stu-id="bc215-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="bc215-428">Si es importante el orden de los bloques de script, use un <xref:System.Text.StringBuilder> de objetos para recopilar las secuencias de comandos en una sola cadena y, a continuación, registrarlas en un bloque de script de cliente único.</span><span class="sxs-lookup"><span data-stu-id="bc215-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-429">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-430">Tipo del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-430">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-431">Clave del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-431">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="bc215-432">Literal del script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-432">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="bc215-433">Valor booleano que indica si se agregan etiquetas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-433">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-434">Registra el script de cliente con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, clave, literal de script y valor booleano que indican si se agregan etiquetas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-435">Un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-436">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-437">Con la página, se puede registrar un único script con un tipo determinado y un par de claves.</span><span class="sxs-lookup"><span data-stu-id="bc215-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-438">Al intentar registrar un script que ya está registrado, no crea un duplicado de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="bc215-439">Llame a la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método para determinar si ya está registrado un script de cliente con un par de clave y un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="bc215-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="bc215-440">Esto le permite evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="bc215-441">En esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, puede indicar si el script proporcionado en el `script` parámetro se ajusta con un `<script>` bloque del elemento mediante el uso de la `addScriptTags` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="bc215-442">Establecer `addScriptTags` a `true` indica que se agregarán automáticamente las etiquetas de script.</span><span class="sxs-lookup"><span data-stu-id="bc215-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="bc215-443">El <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método agrega un bloque de script a la parte superior de la página representada.</span><span class="sxs-lookup"><span data-stu-id="bc215-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="bc215-444">No se garantiza que los bloques de script se generen en el orden en que están registrados.</span><span class="sxs-lookup"><span data-stu-id="bc215-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="bc215-445">Si es importante el orden de los bloques de script, use un <xref:System.Text.StringBuilder> de objetos para recopilar las secuencias de comandos en una sola cadena y, a continuación, registrarlas en un bloque de script de cliente único.</span><span class="sxs-lookup"><span data-stu-id="bc215-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-446">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="bc215-447">Tenga en cuenta que la `addScriptTags` parámetro está establecido en `true` para la apertura y cierre etiquetas de script no se incluye con el `script` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-448">El tipo del bloque de script de cliente es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-448">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-449">Registra la inclusión de script de cliente con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bc215-450">Clave de la inclusión de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-450">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="bc215-451">Dirección URL de la inclusión de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-451">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-452">Registra el script de cliente con el objeto <see cref="T:System.Web.UI.Page" /> utilizando una clave y una dirección URL que permiten que se llame desde el script del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-453">Incluir un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-454">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-455">Con la página, se puede registrar un único script con un tipo determinado y un par de claves.</span><span class="sxs-lookup"><span data-stu-id="bc215-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-456">Al intentar registrar un script que ya está registrado, no crea un duplicado de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="bc215-457">Llame a la <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> método para determinar si una secuencia de comandos de cliente se incluyen con una clave dada y par de tipo ya está registrada y evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-458">Para resolver la dirección URL del cliente, use el <xref:System.Web.UI.Control.ResolveClientUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="bc215-459">Este método utiliza el contexto de la dirección URL en la que se llama para resolver la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="bc215-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="bc215-460">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método llama a la sobrecarga que toma un `key`, `URL`y un `type` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="bc215-461">El método agrega un bloque de script en la parte superior de la página presentada.</span><span class="sxs-lookup"><span data-stu-id="bc215-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-462">Para obtener información relacionada, incluida la sintaxis, uso y un ejemplo, vea <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="bc215-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-463">Tipo de la inclusión de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-463">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-464">Clave de la inclusión de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-464">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="bc215-465">Dirección URL de la inclusión de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-465">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-466">Registra la inclusión de script de cliente con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, una clave y una dirección URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-467">Esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método toma *clave* y *url* parámetros para identificar la secuencia de comandos, así como un `type` parámetro para especificar la identificación de la secuencia de comandos de cliente que incluya.</span><span class="sxs-lookup"><span data-stu-id="bc215-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="bc215-468">Especifique el tipo basándose en el objeto que se va a tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="bc215-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="bc215-469">Por ejemplo, cuando se usa un `Page` instancia para tener acceso al recurso, especifique el `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc215-470">Para resolver la dirección URL del cliente, use el <xref:System.Web.UI.Control.ResolveClientUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="bc215-471">Este método utiliza el contexto de la dirección URL en la que se llama para resolver la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="bc215-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="bc215-472">Este método agrega un bloque de script en la parte superior de la página presentada.</span><span class="sxs-lookup"><span data-stu-id="bc215-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-473">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="bc215-474">Tenga en cuenta que si se quita la lógica para comprobar la inclusión de la secuencia de comandos de cliente existente, podría no haber scripts de cliente duplicados en la página presentada porque el <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método comprueba los duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="bc215-475">La ventaja de la comprobación es reducir los cálculos innecesarios.</span><span class="sxs-lookup"><span data-stu-id="bc215-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="bc215-476">Este ejemplo requiere un archivo JavaScript denominado Script_include.js con el siguiente contenido:</span><span class="sxs-lookup"><span data-stu-id="bc215-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-477">El tipo de inclusión de script de cliente es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-477">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc215-478">La dirección URL es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-478">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bc215-479">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-479">\- or -</span>
          </span>
          <span data-ttu-id="bc215-480">URL está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-480">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-481">Tipo del recurso de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-481">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="bc215-482">Nombre del recurso de script de cliente que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-482">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-483">Registra el recurso de script de cliente con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo y un nombre de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-484">El <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método se utiliza cuando se obtiene acceso a recursos compilados desde ensamblados a través del controlador HTTP WebResource.axd.</span><span class="sxs-lookup"><span data-stu-id="bc215-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="bc215-485">El <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método registra el script con el <xref:System.Web.UI.Page> de objetos y evita los script duplicados.</span><span class="sxs-lookup"><span data-stu-id="bc215-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="bc215-486">Este método ajusta el contenido de la dirección URL de recurso con un `<script>` bloque del elemento.</span><span class="sxs-lookup"><span data-stu-id="bc215-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-487">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="bc215-488">En el ejemplo de código siguiente se muestra cómo aplicar mediante programación el <xref:System.Web.UI.WebResourceAttribute> atributo de metadatos para marcar el ensamblado para los recursos que se enviarán.</span><span class="sxs-lookup"><span data-stu-id="bc215-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="bc215-489">Este ejemplo requiere un archivo JavaScript denominado `Script_include.js`, con el siguiente contenido:</span><span class="sxs-lookup"><span data-stu-id="bc215-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="bc215-490">Compile el `Script_include.js` archivo como un recurso en el `Samples.AspNet.CS.Controls` ensamblado que contiene el `ClientScriptResourceLabel` clase.</span><span class="sxs-lookup"><span data-stu-id="bc215-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-491">El nombre del recurso de cliente es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-491">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bc215-492">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-492">\- or -</span>
          </span>
          <span data-ttu-id="bc215-493">El nombre del recurso de cliente tiene una longitud de cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-493">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-494">Registra un par de nombre y valor como atributo personalizado (expando) del control especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="bc215-495">Control <see cref="T:System.Web.UI.Control" /> en la página que contiene el atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="bc215-496">Nombre del atributo personalizado que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-496">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="bc215-497">Valor del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-497">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-498">Registra un par de nombre y valor como atributo personalizado (expando) del control especificado incluyendo un Id. de control, nombre de atributo y valor de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-499">El <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método registra un par de nombre/valor como un atributo personalizado (expando) en las clases <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="bc215-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="bc215-500">El atributo expando se establece dinámicamente desde JavaScript para conservar la compatibilidad de XHTML con marcado del control representado.</span><span class="sxs-lookup"><span data-stu-id="bc215-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="bc215-501">Se escapan las comillas y barras diagonales inversas en valores de atributo personalizado (expando).</span><span class="sxs-lookup"><span data-stu-id="bc215-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="bc215-502">Si no desea utilizar comillas y barras diagonales inversas de escape, llame a la <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> sobrecarga de método y establezca la `encode` parámetro `false`.</span><span class="sxs-lookup"><span data-stu-id="bc215-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="bc215-503">Si no se encuentra el atributo expando o no se encuentra el control para agregar el atributo expando, todavía se genera el script de cliente, pero no afectará al control.</span><span class="sxs-lookup"><span data-stu-id="bc215-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="bc215-504">Control <see cref="T:System.Web.UI.Control" /> en la página que contiene el atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="bc215-505">Nombre del atributo personalizado que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-505">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="bc215-506">Valor del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-506">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="bc215-507">Valor booleano que indica si se codifica el atributo personalizado que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-507">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-508">Registra un par de nombre y valor como atributo personalizado (expando) del control especificado proporcionando un Id. de control, un nombre de atributo, un valor de atributo y un valor booleano que indica si se codifica el valor de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-509">El <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método registra un par de nombre/valor como un atributo personalizado (expando) en las clases <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="bc215-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="bc215-510">El atributo expando se establece dinámicamente desde JavaScript para conservar la compatibilidad de XHTML con marcado del control representado.</span><span class="sxs-lookup"><span data-stu-id="bc215-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="bc215-511">Establecer el `encode` parámetro `true` si necesita utilizar comillas y barras diagonales inversas en el valor de su atributo expando escape.</span><span class="sxs-lookup"><span data-stu-id="bc215-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="bc215-512">Si no se encuentra el atributo expando o no se encuentra el control para agregar el atributo expando, todavía se genera el script de cliente, pero no afectará al control.</span><span class="sxs-lookup"><span data-stu-id="bc215-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-513">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método de la <xref:System.Web.UI.ClientScriptManager> clase.</span><span class="sxs-lookup"><span data-stu-id="bc215-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="bc215-514">El script de cliente en los conjuntos de la página representada la `title` atributo de un `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="bc215-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-515">Registra una referencia de evento para su validación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-515">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="bc215-516">Identificador único que representa el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-516">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-517">Registra una referencia de evento para su validación con un identificador de control único que representa el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-518">Para obtener más información y ejemplos, vea el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-519">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método y <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método con el fin de registrar una devolución de llamada para la validación y cómo validar que la devolución de llamada se origina en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="bc215-520">Objeto <see cref="T:System.Web.UI.PostBackOptions" /> que especifica cómo se genera el código JavaScript de cliente para iniciar un evento de postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-521">Registra una referencia de evento para su validación con <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-522">Para obtener más información y ejemplos, vea el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="bc215-523">Identificador único que representa el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-523">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-524">Argumentos de evento que se pasan con el evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-524">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-525">Registra una referencia de evento para su validación con un identificador de control único y argumentos de evento que representan el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc215-526">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método y <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método para registrar una devolución de llamada para la validación y para validar que la devolución de llamada se origina en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="bc215-527">Para mejorar la validación se muestra en el ejemplo, puede modificar la validación `argument` parámetro para incluir información específica del usuario como una identidad o función</span><span class="sxs-lookup"><span data-stu-id="bc215-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="bc215-528">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método para registrar una devolución de llamada para la validación.</span><span class="sxs-lookup"><span data-stu-id="bc215-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bc215-529">Se llama al método antes del método <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="bc215-530">Nombre del campo oculto que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-530">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="bc215-531">Valor inicial del campo que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-531">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-532">Registra un valor oculto con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-533">El <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> método crea oculto `<input>` elemento de la página HTML representada.</span><span class="sxs-lookup"><span data-stu-id="bc215-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-534">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> y <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="bc215-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="bc215-535">En el ejemplo se registra una matriz y un valor oculto y define la `OnClick` eventos de un `<input>` botón para calcular la suma de dos valores de la matriz y el valor hidden.</span><span class="sxs-lookup"><span data-stu-id="bc215-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-536">
            <paramref name="hiddenFieldName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-536">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-537">Tipo de la instrucción OnSubmit que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-537">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-538">Clave de la instrucción OnSubmit que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-538">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="bc215-539">Literal de script de la instrucción OnSubmit que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-539">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-540">Registra una instrucción OnSubmit con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, una clave y un literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="bc215-541">La instrucción se ejecuta cuando se envía el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-542">Una instrucción OnSubmit se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-543">Instrucciones con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-544">Solo una instrucción con un tipo determinado y un par de claves se puede registrar con la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-545">Al intentar registrar una instrucción que ya está registrada, no creará un duplicado de la instrucción.</span><span class="sxs-lookup"><span data-stu-id="bc215-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="bc215-546">Llame a la <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método para determinar si una instrucción OnSubmit ya está registrada con un par de clave y un tipo determinado y evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="bc215-547">El `script` parámetro de la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método puede contener varios comandos de script, siempre que están correctamente delimitadas con un punto y coma (;).</span><span class="sxs-lookup"><span data-stu-id="bc215-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="bc215-548">El <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> agrega una secuencia de comandos que se ejecuta antes de enviar la página y le da la oportunidad de cancelar el envío.</span><span class="sxs-lookup"><span data-stu-id="bc215-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="bc215-549">Para obtener más información sobre los formularios HTML y el `OnSubmit` de atributo, vea la [sitio Web de World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="bc215-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-550">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-551">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-551">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-552">Registra el script de inicio con el objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-553">Tipo del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-553">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-554">Clave del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-554">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="bc215-555">Literal del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-555">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-556">Registra el script de inicio con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, una clave y un literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-557">Un script de cliente se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-558">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-559">Con la página, se puede registrar un único script con un tipo determinado y un par de claves.</span><span class="sxs-lookup"><span data-stu-id="bc215-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-560">Al intentar registrar un script que ya está registrado, no crea un duplicado de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="bc215-561">Llame a la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método para determinar si ya está registrado un script de inicio con un par de clave y un tipo determinado y evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="bc215-562">En esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, debe asegurarse de que el script proporcionado en el `script` parámetro se ajusta con un `<script>` bloque del elemento.</span><span class="sxs-lookup"><span data-stu-id="bc215-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="bc215-563">El bloque de script agregado por el <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> el método se ejecuta cuando finaliza la carga de la página, pero antes de la página <xref:System.Web.UI.Control.OnLoad%2A> evento se desencadena.</span><span class="sxs-lookup"><span data-stu-id="bc215-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="bc215-564">No se garantiza que los bloques de script se generen en el orden en que están registrados.</span><span class="sxs-lookup"><span data-stu-id="bc215-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="bc215-565">Si es importante el orden de los bloques de script, use un <xref:System.Text.StringBuilder> de objetos para recopilar las secuencias de comandos en una sola cadena y, a continuación, registrarlas en un bloque de script de cliente único.</span><span class="sxs-lookup"><span data-stu-id="bc215-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-566">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="bc215-567">Tenga en cuenta que la apertura y cierre etiquetas de script se incluyen dentro de la `script` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="bc215-568">Que el script agregadas las etiquetas en función de un valor del parámetro adicional, consulte el <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bc215-569">Tipo del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-569">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="bc215-570">Clave del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-570">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="bc215-571">Literal del script de inicio que se va a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-571">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="bc215-572">Valor booleano que indica si se agregan etiquetas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-572">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-573">Registra el script de inicio con el objeto <see cref="T:System.Web.UI.Page" /> utilizando un tipo, una clave, un literal de script y un valor booleano que indican si se agregan etiquetas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc215-574">Un script de inicio se identifica mediante su clave y su tipo.</span><span class="sxs-lookup"><span data-stu-id="bc215-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="bc215-575">Las secuencias de comandos con la misma clave y tipo se consideran duplicadas.</span><span class="sxs-lookup"><span data-stu-id="bc215-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="bc215-576">Con la página, se puede registrar un único script con un tipo determinado y un par de claves.</span><span class="sxs-lookup"><span data-stu-id="bc215-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="bc215-577">Al intentar registrar un script que ya está registrado, no crea un duplicado de la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="bc215-578">Llame a la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método para determinar si ya está registrado un script de inicio con un par de clave y un tipo determinado y evitar innecesariamente agregar la secuencia de comandos.</span><span class="sxs-lookup"><span data-stu-id="bc215-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="bc215-579">En esta sobrecarga de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, puede indicar si el script proporcionado en el `script` parámetro se ajusta con un `<script>` bloque del elemento mediante el uso de la `addScriptTags` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="bc215-580">Establecer `addScriptTags` a `true` indica que se agregarán automáticamente las etiquetas de script.</span><span class="sxs-lookup"><span data-stu-id="bc215-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="bc215-581">El bloque de script agregado por el <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> el método se ejecuta cuando finaliza la carga de la página, pero antes de la página <xref:System.Web.UI.Control.OnLoad%2A> evento se desencadena.</span><span class="sxs-lookup"><span data-stu-id="bc215-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="bc215-582">No se garantiza que los bloques de script se generen en el orden en que están registrados.</span><span class="sxs-lookup"><span data-stu-id="bc215-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="bc215-583">Si es importante el orden de los bloques de script, use un <xref:System.Text.StringBuilder> de objetos para recopilar las secuencias de comandos en una sola cadena y, a continuación, registrarlas en un bloque de script de cliente único.</span><span class="sxs-lookup"><span data-stu-id="bc215-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc215-584">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc215-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="bc215-585">Tenga en cuenta que la `addScriptTags` parámetro está establecido en `false` para la apertura y cierre etiquetas de script se incluyen con el `script` parámetro.</span><span class="sxs-lookup"><span data-stu-id="bc215-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc215-586">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-586">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc215-587">Valida un evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-587">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="bc215-588">Identificador único que representa el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-588">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-589">Valida un evento de cliente que se registró para la validación de eventos mediante el método <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="bc215-590">Identificador único que representa el control de cliente que genera el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-590">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="bc215-591">Los argumentos de evento que se pasan con el evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-591">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc215-592">Valida un evento de cliente que se registró para la validación de eventos mediante el método <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc215-593">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método y <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método para registrar una devolución de llamada para la validación y para validar que la devolución de llamada se origina en la página.</span><span class="sxs-lookup"><span data-stu-id="bc215-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="bc215-594">Para mejorar la validación se muestra a continuación, puede modificar la validación `argument` parámetro para incluir información específica del usuario como una identidad o función</span><span class="sxs-lookup"><span data-stu-id="bc215-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc215-595">
            <paramref name="uniqueId" /> es <see langword="null" /> o una cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc215-595">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>