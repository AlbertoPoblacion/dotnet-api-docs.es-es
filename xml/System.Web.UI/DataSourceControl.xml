<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="842df3c6b74186a3d204954e81b7f70a1326ef4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type DataSourceControl = class&#xA;    inherit Control&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serves as the base class for controls that represent data sources to data-bound controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET admite una arquitectura de enlace de datos de control que permite a los controles de servidor Web enlazar a datos de una manera coherente. Controles de servidor Web que se enlazan a datos se denominan controles enlazados a datos y las clases que facilitan este enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: una base de datos relacional, un archivo, una secuencia, un objeto comercial y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, sin tener en cuenta el origen o el formato de los datos subyacentes.  
  
 Utilice los controles de origen de datos que se proporcionan con ASP.NET, incluidos los <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, y <xref:System.Web.UI.WebControls.XmlDataSource>, para realizar la mayoría de las tareas de desarrollo de Web. Utilizar la base de <xref:System.Web.UI.DataSourceControl> clase si desea implementar su propio control de origen de datos personalizado.  
  
 Mientras que cualquier clase que implemente la <xref:System.Web.UI.IDataSource> interfaz es un control de origen de datos, controles de origen de datos ASP.NET mayoría extienden abstracto <xref:System.Web.UI.DataSourceControl> (clase), que proporciona una implementación base de la <xref:System.Web.UI.IDataSource> interfaz. El <xref:System.Web.UI.DataSourceControl> clase también proporciona una implementación de la <xref:System.ComponentModel.IListSource> interfaz, que le permite asignar mediante programación el control de origen de datos a la `DataSource` propiedad de un control enlazado a datos y devolver datos al control como una lista.  
  
 Cualquier control ASP.NET que se deriva de la <xref:System.Web.UI.WebControls.DataBoundControl> clase puede enlazar a un control de origen de datos. Cuando un <xref:System.Web.UI.WebControls.DataBoundControl> está enlazado a un control de origen de datos, enlace de datos se realiza automáticamente en tiempo de ejecución. También puede utilizar controles de origen de datos con controles ASP.NET que expongan una `DataSource` o `DataSourceID` propiedad y admiten el enlace de datos básicos, pero están no deriva de <xref:System.Web.UI.WebControls.DataBoundControl>. Al usar estos controles enlazados a datos, debe llamar explícitamente a la `DataBind` método. Para obtener más información sobre el enlace de datos, vea [mapa de contenido de acceso de datos de ASP.NET](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
 Un control de origen de datos puede considerar como la combinación de la <xref:System.Web.UI.DataSourceControl> objeto y sus listas de datos, denominado vistas del origen de datos asociadas. Cada lista de datos se representa mediante un <xref:System.Web.UI.DataSourceView> objeto. Dado que el almacenamiento de datos subyacente contiene una o varias listas de datos, un <xref:System.Web.UI.DataSourceControl> siempre se asocia a uno o más denominado <xref:System.Web.UI.DataSourceView> objetos. El <xref:System.Web.UI.IDataSource> interfaz define los métodos que todos los controles de origen de datos que se utilizan para interactuar con vistas del origen de datos: el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método se utiliza para enumerar las vistas del origen de datos asociadas actualmente con el control de origen de datos y el <xref:System.Web.UI.DataSourceControl.GetView%2A> método se usa para recuperar una instancia de la vista del origen de datos específico por nombre.  
  
 También puede considerar el origen control de datos como dos interfaces distintas que los llamadores utilizan para obtener acceso a datos. El <xref:System.Web.UI.DataSourceControl> clase es la interfaz que los desarrolladores de páginas interactúan directamente al desarrollar una página de formularios Web Forms, y la <xref:System.Web.UI.DataSourceView> clase es la interfaz que interactúan los controles enlazados a datos y los autores de controles enlazados a datos. Dado que la <xref:System.Web.UI.DataSourceView> objeto solo está disponible en tiempo de ejecución, todos los estados guardados para el control de origen de datos o vista del origen de datos debe exponerse directamente mediante el control de origen de datos.  
  
 No hay ninguna representación visual de los controles de origen de datos ASP.NET; se implementan como controles, por lo que puede crear mediante declaración y, opcionalmente, que puedan participar en la administración de Estados. Como resultado, los controles de origen de datos no admiten características visuales, como <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo puede extender una clase la <xref:System.Web.UI.DataSourceControl> clase. El `CsvDataSource` control representa almacenados en un archivo .csv de datos de archivo de valores separados por comas. El `CsvDataSource` clase proporciona sus propias implementaciones de la <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>y otros métodos, porque las implementaciones de la clase base no son funcionales.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el `CsvDataSource` control en un formulario Web Forms.  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceControl" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="dataSourceControl.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
        <summary>Applies the style properties that are defined in the page style sheet to the control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.DataSourceControl.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the server control identifier generated by ASP.NET.</summary>
        <value>El identificador de control de servidor generado por ASP.NET.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This property is not used for data source controls.</summary>
        <value>Esta propiedad no se utiliza para los controles de origen de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad de la <xref:System.Web.UI.Control> no se utiliza la clase base para los controles de origen de datos porque los controles de origen de datos no representan el marcado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set this property.</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.DataSourceControl.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</summary>
        <value>Colección de controles secundarios del control de servidor especificado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="dataSourceControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a collection to store child controls.</summary>
        <returns>Returns a <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Dado que los controles de origen de datos no permiten controles secundarios, el <xref:System.Web.UI.DataSourceControl> implementación predeterminada de la clase no es compatible con la incrustación de controles secundarios.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this control supports themes.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación gráfica, no admite temas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> property.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="dataSourceControl.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The identifier for the control to be found.</param>
        <summary>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.</summary>
        <returns>The specified control, or <see langword="null" /> if the specified control does not exist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="dataSourceControl.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets input focus to the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque el <xref:System.Web.UI.DataSourceControl> control no tiene ningún objeto visual de representación, llamar a la <xref:System.Web.UI.DataSourceControl.Focus%2A> método produce un <xref:System.NotSupportedException> excepción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to call the <see cref="M:System.Web.UI.DataSourceControl.Focus" /> method.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="dataSourceControl.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored.</param>
        <summary>Gets the named data source view associated with the data source control.</summary>
        <returns>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede enumerar el conjunto de vistas actualmente asociado con el control de origen de datos mediante una llamada a la <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método.  
  
 Clases de control de origen de datos pueden admitir una o varias vistas en sus datos subyacentes. Estas vistas están representadas por instancias de la <xref:System.Web.UI.DataSourceView> clase. La vista del origen de datos define las funciones de un control de origen de datos, hace todo el trabajo necesario para recuperar datos desde el almacén de datos subyacente y realiza operaciones como la ordenación, inserción, eliminación y actualización.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetView%2A> método devuelva un valor especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase de control de origen de datos que extiende la <xref:System.Web.UI.DataSourceControl> la clase implementa la <xref:System.Web.UI.IDataSource.GetView%2A> método, que devuelve una instancia fuertemente tipada de la <xref:System.Web.UI.DataSourceView> clase. Dado que el control de origen de datos admite sólo una vista, se omite el nombre y devuelve una vista denominada con el nombre de vista predeterminado. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection&#xA;override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="dataSourceControl.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
        <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Collections.ICollection> colección de nombres es el conjunto permitido de valores que puede pasarse a la <xref:System.Web.UI.DataSourceControl.GetView%2A> método.  
  
 El <xref:System.Web.UI.ListSourceHelper> (clase), que se usa para la <xref:System.Web.UI.DataSourceControl> la clase <xref:System.ComponentModel.IListSource> implementación, comprueba la <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método tanto para el <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> y <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> llamadas para determinar si el control de origen de los datos se asocia a uno o más vistas del origen de datos. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada del método, <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> devuelve `false` y <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> devuelve `null`.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para devolver una colección de nombres de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase que extiende el <xref:System.Web.UI.DataSourceControl> clase puede invalidar la implementación predeterminada, que devuelve `null`, para proporcionar una colección de nombres de vista. La `CsvDataSource` clase sólo admite una vista; por lo tanto, se devuelve una colección de un elemento con el nombre de vista predeterminado. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="dataSourceControl.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines if the server control contains any child controls.</summary>
        <returns>
          <see langword="true" /> if the control contains other controls; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseDataSourceChangedEvent : EventArgs -&gt; unit&#xA;override this.RaiseDataSourceChangedEvent : EventArgs -&gt; unit" Usage="dataSourceControl.RaiseDataSourceChangedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método notifica a un control enlazado a datos que ha cambiado el origen de datos subyacente o los datos almacenados en memoria caché, y que el control debe volver a enlazar y realizar ningún trabajo adicional es necesario. Normalmente, el <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método se llama cuando ha cambiado una propiedad de control de código fuente de datos o un valor de parámetro.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método cuando ha cambiado un origen de datos o los datos subyacentes de una manera que podría afectar a cualquier controles enlazados. En este ejemplo, un control de origen de datos basados en archivos que extiende el <xref:System.Web.UI.DataSourceControl> clase genera el <xref:System.Web.UI.IDataSource.DataSourceChanged> eventos mediante una llamada a <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> cualquier momento el `FileName` se cambia la propiedad.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataSourceControl.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
        <summary>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.DataSourceControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the skin to apply to the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
        <value>
          <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que la <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación visual, no se puede establecer el <xref:System.Web.UI.DataSourceControl.SkinID%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> property.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the data source control is associated with one or more lists of data.</summary>
        <value>
          <see langword="true" /> Si el <see cref="T:System.Web.UI.DataSourceControl" /> está asociado a uno o varios <see cref="T:System.Web.UI.DataSourceView" /> objetos; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se utiliza para determinar si el objeto actual se puede usar como origen de una o varias listas de datos. Controles de origen de datos encapsulan sus listas de datos como <xref:System.Web.UI.DataSourceView> objetos; por lo tanto, cuando se asocia a uno o varios <xref:System.Web.UI.DataSourceView> objetos, un <xref:System.Web.UI.DataSourceControl> control representa un objeto de origen de la lista y la propiedad devuelve `true`.  
  
 Esta propiedad llama al método estático <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType> método para determinar si el control de origen de los datos actuales se puede utilizar como un origen de datos. El <xref:System.Web.UI.ListSourceHelper> clase determina si el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método devuelve una colección válida de nombres de vista. Si lo hace, esta propiedad devuelve `true`. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada de la <xref:System.Web.UI.DataSourceControl> de la clase, el método devuelve `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a list of data source controls that can be used as sources of lists of data.</summary>
        <returns>An <see cref="T:System.Collections.IList" /> of data source controls that can be used as sources of lists of data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se utiliza para recuperar un conjunto de objetos que se pueden usar como orígenes de datos. Controles de origen de datos encapsulan sus listas de datos como <xref:System.Web.UI.DataSourceView> objetos; por lo tanto, cuando se asocia a uno o varios <xref:System.Web.UI.DataSourceView> objetos, un <xref:System.Web.UI.DataSourceControl> control representa un objeto de origen de la lista y el método devuelve un <xref:System.Collections.IList> colección de un elemento, el <xref:System.Web.UI.DataSourceControl> propio.  
  
 Llama a este método estático <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType> método para recuperar un <xref:System.Collections.IList> colección de objetos que se pueden usar como orígenes de datos. El <xref:System.Web.UI.ListSourceHelper> clase determina si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve una colección válida de nombres de vista. Si es así, el <xref:System.Web.UI.ListSourceHelper> clase devuelve una <xref:System.Collections.IList> colección de un elemento, el <xref:System.Web.UI.DataSourceControl> control. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada de la <xref:System.Web.UI.DataSourceControl> (clase), el <xref:System.Web.UI.ListSourceHelper> clase también devuelve `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored.</param>
        <summary>Gets the named <see cref="T:System.Web.UI.DataSourceView" /> object associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control. Some data source controls support only one view, while others support more than one.</summary>
        <returns>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `viewName` parámetro se ignora cuando se llama a este método en controles de origen de datos que sólo admiten una vista, como el <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.AccessDataSource> controles.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> implementación predeterminada de la clase, que se llama a este método de interfaz, devuelve `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetView%2A> método devuelva un valor especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</summary>
        <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> implementación predeterminada de la clase, que se llama a este método de interfaz, devuelve `null`, lo que indica que sólo una vista se admite. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para devolver una colección de nombres de vista. Puede pasar un nombre a la <xref:System.Web.UI.DataSourceControl.GetView%2A> método para devolver un <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataSourceControl.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the control is visually displayed.</summary>
        <value>Siempre es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que la <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación visual, la <xref:System.Web.UI.DataSourceControl.Visible%2A> propiedad siempre devuelve `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set the value of the <see cref="P:System.Web.UI.DataSourceControl.Visible" /> property.</exception>
      </Docs>
    </Member>
  </Members>
</Type>