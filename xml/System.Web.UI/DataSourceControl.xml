<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="649ae83093f14f0e32d60a20383cdc93b9e30716" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37589331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type DataSourceControl = class&#xA;    inherit Control&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funciona como la clase base para los controles que representan orígenes de datos para controles enlazados a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET es compatible con una arquitectura de enlace de datos de control que permite a los controles de servidor Web enlazar a datos de una manera coherente. Controles de servidor Web que se enlazan a datos se conocen como controles enlazados a datos y las clases que facilitan este enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: una base de datos relacional, un archivo, una secuencia, un objeto de negocios y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, independientemente del origen o el formato de los datos subyacentes.  
  
 Utilice los controles de origen de datos que se proporcionan con ASP.NET, incluidos <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, y <xref:System.Web.UI.WebControls.XmlDataSource>, para realizar la mayoría de las tareas de desarrollo de Web. Utilizar la base de <xref:System.Web.UI.DataSourceControl> clase cuando desea implementar su propio control de origen de datos personalizados.  
  
 Mientras que cualquier clase que implementa el <xref:System.Web.UI.IDataSource> interfaz es un control de origen de datos, mayoría de los controles de origen de datos ASP.NET ampliar la abstracta <xref:System.Web.UI.DataSourceControl> (clase), que proporciona una implementación base de la <xref:System.Web.UI.IDataSource> interfaz. El <xref:System.Web.UI.DataSourceControl> clase también proporciona una implementación de la <xref:System.ComponentModel.IListSource> interfaz, que le permite asignar mediante programación el control de origen de datos para el `DataSource` propiedad de un control enlazado a datos y devolver datos al control como una lista básica.  
  
 Cualquier control ASP.NET que se deriva el <xref:System.Web.UI.WebControls.DataBoundControl> clase puede enlazar a un control de origen de datos. Cuando un <xref:System.Web.UI.WebControls.DataBoundControl> está enlazado a un control de origen de datos, enlace de datos se realiza automáticamente en tiempo de ejecución. También puede usar controles de origen de datos con controles ASP.NET que expongan un `DataSource` o `DataSourceID` propiedad y compatibilidad con el enlace de datos básicos, pero están no derivadas de <xref:System.Web.UI.WebControls.DataBoundControl>. Al usar estos controles enlazados a datos, debe llamar explícitamente la `DataBind` método. Para obtener más información sobre el enlace de datos, vea [mapa de contenido de acceso de datos de ASP.NET](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
 Puede pensar en un control de origen de datos como la combinación de la <xref:System.Web.UI.DataSourceControl> objeto y sus listas de datos, denominado vistas del origen de datos asociadas. Cada lista de los datos se representa mediante un <xref:System.Web.UI.DataSourceView> objeto. Dado que el almacenamiento de datos subyacente contiene una o varias listas de datos, un <xref:System.Web.UI.DataSourceControl> siempre está asociada con una o más denominada <xref:System.Web.UI.DataSourceView> objetos. El <xref:System.Web.UI.IDataSource> interfaz define los métodos que todos los controles de origen de datos que se utilizan para interactuar con vistas del origen de datos: el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método se utiliza para enumerar las vistas del origen de datos actualmente asociadas con el control de origen de datos y el <xref:System.Web.UI.DataSourceControl.GetView%2A> método se utiliza para recuperar una instancia de la vista del origen de datos específico por nombre.  
  
 Puede pensar también en el control de origen de datos como dos interfaces distintas que usan los autores de llamadas para acceder a los datos. El <xref:System.Web.UI.DataSourceControl> clase es la interfaz que los desarrolladores de páginas interactúan directamente al desarrollar una página de formularios Web Forms, y el <xref:System.Web.UI.DataSourceView> clase es la interfaz que interactúan los controles enlazados a datos y los autores de controles enlazados a datos. Dado que el <xref:System.Web.UI.DataSourceView> objeto está disponible solo en tiempo de ejecución, cualquier estado persistente para el control de origen de datos o vista del origen de datos debe exponerse directamente por el control de origen de datos.  
  
 No hay ninguna representación visual de los controles de origen de datos ASP.NET; se implementan como controles para que pueda crear mediante declaración y, opcionalmente, que puedan participar en la administración de estado. Como resultado, los controles de origen de datos no admiten características visuales como <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo puede ampliar una clase la <xref:System.Web.UI.DataSourceControl> clase. El `CsvDataSource` control representa los datos separados por comas de archivo almacenados en un archivo CSV. El `CsvDataSource` clase proporciona sus propias implementaciones de la <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>y otros métodos, porque las implementaciones de la clase base no son funcionales.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar el `CsvDataSource` control en un formulario Web.  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="dataSourceControl.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <see cref="T:System.Web.UI.Page" /> que contiene el control.</param>
        <summary>Aplica al control las propiedades de estilo definidas en la hoja de estilos de página.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.DataSourceControl.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador del control de servidor generado por ASP.NET.</summary>
        <value>Identificador del control de servidor generado por ASP.NET.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no se utiliza para los controles de orígenes de datos.</summary>
        <value>Esta propiedad no se utiliza para los controles de orígenes de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad de la <xref:System.Web.UI.Control> no se utiliza la clase base para los controles de origen de datos porque los controles de origen de datos no representan el marcado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado establecer esta propiedad.</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.DataSourceControl.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.ControlCollection" /> que representa los controles secundarios de un control de servidor especificado en la jerarquía de la interfaz de usuario.</summary>
        <value>Colección de controles secundarios del control de servidor especificado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="dataSourceControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una colección para almacenar controles secundarios.</summary>
        <returns>Devuelve un <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Debido a los controles de origen de datos no permiten los controles secundarios, el <xref:System.Web.UI.DataSourceControl> implementación predeterminada de la clase no admite la incrustación de controles secundarios.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control admite temas.</summary>
        <value>
          <see langword="false" /> en todos los casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación visual, no admite temas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado establecer el valor de la propiedad <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="dataSourceControl.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificador del control que se va a buscar.</param>
        <summary>Busca un control de servidor con el parámetro <paramref name="id" /> especificado en el contenedor de nomenclatura actual.</summary>
        <returns>Control especificado, o <see langword="null" /> si el control especificado no existe.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="dataSourceControl.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece el foco de entrada en el control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque el <xref:System.Web.UI.DataSourceControl> control no tiene ningún objeto visual de representación, una llamada a la <xref:System.Web.UI.DataSourceControl.Focus%2A> método produce una <xref:System.NotSupportedException> excepción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado llamar al método <see cref="M:System.Web.UI.DataSourceControl.Focus" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="dataSourceControl.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre del objeto <see cref="T:System.Web.UI.DataSourceView" /> que se va a recuperar. En el caso de los controles de origen de datos que sólo admiten una vista, como <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, este parámetro se omite.</param>
        <summary>Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.</summary>
        <returns>Devuelve el objeto <see cref="T:System.Web.UI.DataSourceView" /> con nombre asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede enumerar el conjunto de vistas actualmente asociado con el control de origen de datos mediante una llamada a la <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método.  
  
 Clases de control de origen de datos pueden admitir una o varias vistas en sus datos subyacentes. Estas vistas se representan mediante instancias de la <xref:System.Web.UI.DataSourceView> clase. La vista del origen de datos define las funciones de un control de origen de datos, realiza todo el trabajo necesario para recuperar datos del almacén de datos subyacente y realiza operaciones como la ordenación, inserción, eliminación y actualización.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetView%2A> método devuelva especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase de control de origen de datos que extiende el <xref:System.Web.UI.DataSourceControl> la clase implementa la <xref:System.Web.UI.IDataSource.GetView%2A> método, que devuelve una instancia fuertemente tipada de la <xref:System.Web.UI.DataSourceView> clase. Dado que el control de origen de datos admite sólo una vista, se omite el nombre y devuelve una vista denominada con el nombre de la vista predeterminada. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection&#xA;override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="dataSourceControl.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una colección de nombres, que representa la lista de objetos <see cref="T:System.Web.UI.DataSourceView" /> asociados al control <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>Colección <see cref="T:System.Collections.ICollection" /> que contiene los nombres de los objetos <see cref="T:System.Web.UI.DataSourceView" /> asociados al control <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Collections.ICollection> colección de nombres es el conjunto permitido de valores que se pueden pasar a la <xref:System.Web.UI.DataSourceControl.GetView%2A> método.  
  
 El <xref:System.Web.UI.ListSourceHelper> (clase), que se usa para la <xref:System.Web.UI.DataSourceControl> la clase <xref:System.ComponentModel.IListSource> implementación, comprueba la <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método tanto para el <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> y <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> llamadas para determinar si el control de origen de datos está asociada con una o más vistas del origen de datos. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada del método, <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> devuelve `false` y <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> devuelve `null`.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para devolver una colección de nombres de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase que extiende el <xref:System.Web.UI.DataSourceControl> clase puede invalidar la implementación predeterminada, que devuelve `null`, para proporcionar una colección de nombres de vista. La `CsvDataSource` clase sólo admite una vista; por lo tanto, se devuelve una colección de un elemento con el nombre de la vista predeterminada. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="dataSourceControl.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si el control de servidor contiene controles secundarios.</summary>
        <returns>Es <see langword="true" /> si el control contiene otros controles; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseDataSourceChangedEvent : EventArgs -&gt; unit&#xA;override this.RaiseDataSourceChangedEvent : EventArgs -&gt; unit" Usage="dataSourceControl.RaiseDataSourceChangedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método notifica a un control enlazado a datos que ha cambiado el origen de datos subyacente o los datos almacenados en memoria caché, y que el control debe volver a enlazar y realizar cualquier trabajo adicional es necesario. Normalmente, el <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método se llama cuando ha cambiado una propiedad de control de origen de datos o un valor de parámetro.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método cuando ha cambiado un origen de datos o los datos subyacentes de forma que puedan afectar a cualquier controles enlazados. En este ejemplo, un control de origen de datos basados en archivos que se extiende el <xref:System.Web.UI.DataSourceControl> clase genera el <xref:System.Web.UI.IDataSource.DataSourceChanged> eventos mediante una llamada a <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> cualquier momento el `FileName` se cambia la propiedad.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataSourceControl.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el contenido de control.</param>
        <summary>Envía el contenido de control del servidor a un objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> proporcionado y almacena información de seguimiento sobre el control si está habilitado el seguimiento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.DataSourceControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la máscara que se va a aplicar al control <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <value>
          <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación visual, no se puede establecer el <xref:System.Web.UI.DataSourceControl.SkinID%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado establecer el valor de la propiedad <see cref="P:System.Web.UI.DataSourceControl.SkinID" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si el control de origen de datos está asociado a una o varias listas de datos.</summary>
        <value>Es <see langword="true" /> si el control <see cref="T:System.Web.UI.DataSourceControl" /> está asociado a uno o varios objetos <see cref="T:System.Web.UI.DataSourceView" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se utiliza para determinar si el objeto actual se puede usar como origen de una o varias listas de datos. Controles de origen de datos encapsulan sus listas de datos como <xref:System.Web.UI.DataSourceView> objetos; por lo tanto, cuando se asocia con una o varias <xref:System.Web.UI.DataSourceView> objetos, un <xref:System.Web.UI.DataSourceControl> control representa un objeto de origen de la lista y la propiedad devuelve `true`.  
  
 Esta propiedad llama al método estático <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType> se puede usar el método para determinar si el control de origen de datos actuales como un origen de datos. El <xref:System.Web.UI.ListSourceHelper> clase determina si el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método devuelve una colección de nombres de vista válida. Si lo hace, esta propiedad devuelve `true`. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada de la <xref:System.Web.UI.DataSourceControl> clase, el método devuelve `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de controles de origen de datos que pueden utilizarse como orígenes de listas de datos.</summary>
        <returns>Interfaz <see cref="T:System.Collections.IList" /> de controles de origen de datos que pueden utilizarse como orígenes de listas de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para recuperar un conjunto de objetos que pueden utilizarse como orígenes de datos. Controles de origen de datos encapsulan sus listas de datos como <xref:System.Web.UI.DataSourceView> objetos; por lo tanto, cuando se asocia con una o varias <xref:System.Web.UI.DataSourceView> objetos, un <xref:System.Web.UI.DataSourceControl> control representa un objeto de origen de la lista y el método devuelve un <xref:System.Collections.IList> colección de un elemento, el <xref:System.Web.UI.DataSourceControl> propio.  
  
 Llama a este método estático <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType> método para recuperar un <xref:System.Collections.IList> colección de objetos que pueden utilizarse como orígenes de datos. El <xref:System.Web.UI.ListSourceHelper> clase determina si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve una colección de nombres de vista válida. Si es así, el <xref:System.Web.UI.ListSourceHelper> clase devuelve una <xref:System.Collections.IList> colección de un elemento, el <xref:System.Web.UI.DataSourceControl> control. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> devuelve `null`, que es la implementación predeterminada de la <xref:System.Web.UI.DataSourceControl> (clase), el <xref:System.Web.UI.ListSourceHelper> también devuelve la clase `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre del objeto <see cref="T:System.Web.UI.DataSourceView" /> que se va a recuperar. En el caso de los controles de origen de datos que sólo admiten una vista, como <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, este parámetro se omite.</param>
        <summary>Obtiene el objeto <see cref="T:System.Web.UI.DataSourceView" /> con nombre asociado al control <see cref="T:System.Web.UI.DataSourceControl" />. Ciertos controles de origen de datos sólo admiten una vista, mientras que otros admiten más de una.</summary>
        <returns>Devuelve el objeto <see cref="T:System.Web.UI.DataSourceView" /> con nombre asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `viewName` parámetro se omite cuando se llama a este método en controles de origen de datos que sólo admiten una vista, como el <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.AccessDataSource> controles.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase, que se llama a este método de interfaz, `null`. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetView%2A> método devuelva especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una colección de nombres, que representa la lista de objetos <see cref="T:System.Web.UI.DataSourceView" /> asociados al control <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>Colección <see cref="T:System.Collections.ICollection" /> que contiene los nombres de los objetos <see cref="T:System.Web.UI.DataSourceView" /> asociados al control <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceControl> devuelve la implementación predeterminada de la clase, que se llama a este método de interfaz, `null`, lo que indica que sólo una vista es compatible. Si extiende el <xref:System.Web.UI.DataSourceControl> clase, invalide el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para devolver una colección de nombres de vista. Se puede pasar un nombre a la <xref:System.Web.UI.DataSourceControl.GetView%2A> método devuelva un <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataSourceControl.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control se muestra gráficamente.</summary>
        <value>Siempre es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.UI.DataSourceControl> control no tiene ninguna representación visual, la <xref:System.Web.UI.DataSourceControl.Visible%2A> propiedad siempre devuelve `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado establecer el valor de la propiedad <see cref="P:System.Web.UI.DataSourceControl.Visible" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>