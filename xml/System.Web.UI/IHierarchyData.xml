<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e6712740cae06a948a024b3e0c2bcf7c77989f1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Expone un nodo de una estructura de datos jerárquica, incluyendo el objeto de nodo y algunas propiedades que describen características del nodo. Los objetos que implementan la interfaz <see cref="T:System.Web.UI.IHierarchyData" /> se pueden contener en colecciones <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> y los utilizan los controles de origen de datos y de navegación del sitio ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchyData> interfaz se implementa mediante las clases que representan los nodos de una estructura jerárquica y realizar el seguimiento de las relaciones jerárquicas en sus nodos primarios y secundarios. Las clases que implementan la <xref:System.Web.UI.IHierarchyData> interfaz puede incluirse en las colecciones que implementan la <xref:System.Web.UI.IHierarchicalEnumerable> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar la <xref:System.Web.UI.IHierarchyData> interfaz con una clase que encapsule un <xref:System.IO.FileSystemInfo> objeto. El <xref:System.IO.FileSystemInfo> clase es un buen ejemplo de un nodo de datos jerárquico que la <xref:System.Web.UI.IHierarchyData> interfaz representa para controles de origen de datos jerárquicos de ASP.NET. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 En el ejemplo de código siguiente se muestra cómo recursivamente recorrer en iteración un <xref:System.Web.UI.IHierarchicalEnumerable> colección, extraer el <xref:System.Web.UI.IHierarchyData> elemento desde el enumerador con el <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> método y realizar el trabajo básico con el elemento de datos.  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene un objeto de enumeración que representa todos los nodos secundarios del nodo jerárquico actual.</summary>
        <returns>Colección <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> de nodos secundarios del nodo jerárquico actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propiedad para determinar si el <xref:System.Web.UI.IHierarchyData> nodo tiene nodos secundarios.  
  
   
  
## Examples  
 El código siguiente muestra cómo comprobar el <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propiedad para determinar si el nodo de datos jerárquico actual tiene nodos secundarios y recuperarlos mediante el <xref:System.Web.UI.IHierarchyData.GetChildren%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.IHierarchyData> interfaz.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.IHierarchyData" /> que representa el nodo primario del nodo jerárquico actual.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.IHierarchyData" /> que representa el nodo primario del nodo jerárquico actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchyData> interfaz no define una propiedad de conveniencia HasParent, por lo que los llamadores deben comprobar el valor devuelto de la <xref:System.Web.UI.IHierarchyData.GetParent%2A> método para `null` para determinar si el actual <xref:System.Web.UI.IHierarchyData> nodo es el nodo raíz de los datos jerárquicos estructura a la que pertenece el nodo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar la <xref:System.Web.UI.IHierarchyData.GetParent%2A> método en una clase que implementa el <xref:System.Web.UI.IHierarchyData> interfaz. El `FileSystemHierarchyData` clase ajusta un <xref:System.IO.FileSystemInfo> objeto y el <xref:System.Web.UI.IHierarchyData.GetParent%2A> implementación del método comprueba el tipo de la <xref:System.IO.FileSystemInfo> objeto y devuelve el objeto principal más adecuado en función del tipo. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.IHierarchyData> interfaz y la <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si el nodo de datos jerárquico que representa el objeto <see cref="T:System.Web.UI.IHierarchyData" /> tiene algún nodo secundario.</summary>
        <value>Es <see langword="true" /> si el nodo actual tiene nodos secundarios; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propiedad es una propiedad de conveniencia que permite a los llamadores no se compruebe el valor devuelto de la <xref:System.Web.UI.IHierarchyData.GetChildren%2A> método para `null`. Si el <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propiedad devuelve `true`, llame a la <xref:System.Web.UI.IHierarchyData.GetChildren%2A> método para recuperar un <xref:System.Web.UI.IHierarchicalEnumerable> colección de nodos secundarios.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo se usa un control enlazado a datos jerárquico de ASP.NET un <xref:System.Web.UI.IHierarchyData> objeto en un método recursivo al enlace de datos. Los elementos de un <xref:System.Web.UI.IHierarchicalEnumerable> están colección enumerada y para cada una <xref:System.Web.UI.IHierarchyData> objeto se recupera mediante el <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> método. Por último, el <xref:System.Web.UI.IHierarchyData.HasChildren%2A> se comprueba la propiedad para determinar si se recurse. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> clase.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nodo de datos jerárquico que representa el objeto <see cref="T:System.Web.UI.IHierarchyData" />.</summary>
        <value>Objeto de nodo de datos jerárquico <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mientras que muchas clases que representan nodos de datos jerárquicos, como el <xref:System.Web.SiteMapNode> clase, implemente el <xref:System.Web.UI.IHierarchyData> directamente la interfaz, otras clases de almacenamiento solo actúan como un contenedor para una clase que implementa la interfaz. El <xref:System.Web.UI.IHierarchyData.Item%2A> propiedad se proporciona para estas situaciones de diseño, cuando los objetos de negocios son funcionalmente equivalentes a un <xref:System.Web.UI.IHierarchyData> objeto pero no puede modificarse fácilmente.  
  
   
  
## Examples  
 El código siguiente muestra cómo obtener acceso a <xref:System.Web.UI.IHierarchyData> propiedades, compruebe el tipo de un <xref:System.Web.UI.IHierarchyData> objeto utilizando el <xref:System.Web.UI.IHierarchyData.Type%2A> propiedad y el objeto para realizar más operaciones específicas del tipo de conversión. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.IHierarchyData> interfaz.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ruta de acceso jerárquica del nodo.</summary>
        <value>Objeto <see cref="T:System.String" /> que identifica la ruta de acceso jerárquica relativa al nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchyData.Path%2A> propiedad se puede pasar a la <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> método para recuperar el <xref:System.Web.UI.HierarchicalDataSourceView> objeto que corresponde al nodo identificado por <xref:System.Web.UI.IHierarchyData.Path%2A>.  
  
> [!CAUTION]
>  El <xref:System.Web.UI.IHierarchyData.Path%2A> propiedad no debe contener toda la información confidencial sobre el entorno de host, dado que se puede representar al cliente en un control enlazado a datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar la <xref:System.Web.UI.IHierarchyData.Path%2A> propiedad en una clase que implementa el <xref:System.Web.UI.IHierarchyData> interfaz. El `FileSystemHierarchyData` clase ajusta un <xref:System.IO.FileSystemInfo> objeto y el <xref:System.Web.UI.IHierarchyData.Path%2A> implementación de la propiedad devuelve su ruta de acceso del sistema de archivos. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.IHierarchyData> interfaz y la <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del tipo del objeto <see cref="T:System.Object" /> contenido en la propiedad <see cref="P:System.Web.UI.IHierarchyData.Item" />.</summary>
        <value>Nombre del tipo de objeto que representa el objeto <see cref="T:System.Web.UI.IHierarchyData" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchyData.Type%2A> propiedad no devuelve el <xref:System.Type?displayProperty=nameWithType> del objeto representado en un <xref:System.Web.UI.IHierarchyData> objeto. Devuelve un nombre utilizado por los controles enlazados a datos para diferenciar entre los elementos de una jerarquía que tienen diferentes propiedades enlazables.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo escribir básica <xref:System.Web.UI.IHierarchyData> propiedades para un <xref:System.Web.HttpResponse> transmitir, a continuación, comprobar el tipo de un <xref:System.Web.UI.IHierarchyData> objeto utilizando el <xref:System.Web.UI.IHierarchyData.Type%2A> propiedad y el objeto para realizar más operaciones específicas del tipo de conversión. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.IHierarchyData> interfaz.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>