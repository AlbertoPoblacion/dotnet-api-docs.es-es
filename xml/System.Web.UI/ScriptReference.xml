<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff95b64c9a7ee03b8bf81c5965d8e212d501d4c6" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51917820" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registra un archivo ECMAScript (JavaScript) para su uso en una página web ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede incluir un archivo JavaScript en una página Web ASP.NET mediante el registro a través de un <xref:System.Web.UI.ScriptReference> objeto. Puede registrar un archivo de script que se encuentra como un archivo .js (un archivo de script estático) en el sitio Web. También puede registrar un archivo de script que se incrusta como un recurso en un ensamblado. Después de registrar el archivo de script, puede utilizar sus funciones en el script de cliente en la página Web.  
  
 Para registrar un archivo de script estático, establezca el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad de la <xref:System.Web.UI.ScriptReference> objeto según la ubicación relativa del archivo.  
  
 Para registrar un archivo de script que se incrusta como un recurso en un ensamblado, establezca el <xref:System.Web.UI.ScriptReference.Assembly%2A> propiedad en el nombre del ensamblado que contiene el archivo. A continuación, establezca el <xref:System.Web.UI.ScriptReference.Name%2A> propiedad en el nombre del archivo .js que está incrustado en el ensamblado. En ese caso, debe estar incrustado del archivo de script, no vinculado.  
  
 Establece el <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> propiedad para indicar si desea usar la depuración o versión de la secuencia de comandos.  
  
 El <xref:System.Web.UI.ScriptMode.Auto> valor produce resultados diferentes en función de si hace referencia a un archivo de script independiente o a un archivo de script que se incrusta como un recurso en un ensamblado. Un archivo de script independiente se define con el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad. Una referencia de ensamblado debe tener acceso a través de la <xref:System.Web.UI.ScriptReference.Name%2A> y <xref:System.Web.UI.ScriptReference.Assembly%2A> propiedades. Los resultados de la <xref:System.Web.UI.ScriptMode.Auto> valor son los siguientes:  
  
-   Cuando se aplica a un archivo de script independiente donde el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad se especifica, el <xref:System.Web.UI.ScriptMode.Auto> valor es equivalente a <xref:System.Web.UI.ScriptMode.Release>.  
  
-   Cuando se aplica a una referencia de script en un ensamblado, <xref:System.Web.UI.ScriptMode.Auto> es equivalente a <xref:System.Web.UI.ScriptMode.Inherit>. Cuando solo <xref:System.Web.UI.ScriptReference.Name%2A> se especifica, se usa para hacer referencia a la secuencia de comandos. Cuando <xref:System.Web.UI.ScriptReference.Name%2A> y <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad se especifica, el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad se utiliza en lugar de <xref:System.Web.UI.ScriptReference.Name%2A>, pero el <xref:System.Web.UI.ScriptMode.Auto> valor todavía equivale a <xref:System.Web.UI.ScriptMode.Inherit>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo hacer referencia a un control personalizado y un archivo JavaScript que se incrusta en el ensamblado del control. Se supone que el ensamblado en la carpeta Bin del sitio Web. El control personalizado anima <xref:System.Web.UI.UpdatePanel> controles. Se compila el archivo JavaScript como un recurso incrustado denominado SampleControl.UpdatePanelAnimation.js. Registrar el archivo JavaScript incrustado mediante el <xref:System.Web.UI.ScriptReference.Assembly%2A> y <xref:System.Web.UI.ScriptReference.Name%2A> propiedades.  
  
 Para usar este ejemplo, compile el archivo de JavaScript que se muestra en el ejemplo como un recurso incrustado con el control personalizado. Coloque el ensamblado resultante en la carpeta Bin del sitio Web. Para obtener un ejemplo de cómo incrustar un archivo JavaScript en un ensamblado, vea [Tutorial: incrustar un archivo JavaScript como un recurso en un ensamblado](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 El ejemplo siguiente muestra una página que utiliza el control personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 El ejemplo siguiente muestra la definición de clase del control personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 El ejemplo siguiente muestra el archivo JavaScript auxiliar.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 El ejemplo siguiente muestra código que se debe agregar al archivo AssemblyInfo del proyecto que contiene el control personalizado y el archivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ruta de acceso del archivo de script de cliente relativa a la página web.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptReference" /> utilizando una ruta de acceso especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del archivo de script que se incrusta en el ensamblado.</param>
        <param name="assembly">Nombre del ensamblado que contiene el archivo de script de cliente como recurso incrustado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptReference" /> utilizando un nombre y ensamblado especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del ensamblado que contiene el archivo de script de cliente como recurso incrustado.</summary>
        <value>Nombre completo o parcial del ensamblado que contiene un archivo de script de cliente como recurso incrustado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establece el <xref:System.Web.UI.ScriptReference.Assembly%2A> propiedad cuando se hace referencia a un archivo de script de cliente que se incluye como un recurso incrustado en un ensamblado. Establecer <xref:System.Web.UI.ScriptReference.Assembly%2A> al nombre del ensamblado completo o parcialmente completo. Un nombre completo del ensamblado incluye un nombre, referencia cultural, clave pública y número de versión. Un nombre de ensamblado parciales incluye sólo un nombre.  
  
 Cuando se especifica un valor para <xref:System.Web.UI.ScriptReference.Assembly%2A>, también debe especificar el nombre del recurso incrustado en el <xref:System.Web.UI.ScriptReference.Name%2A> propiedad. En caso contrario, un <xref:System.InvalidOperationException> se iniciará.  
  
 El ensamblado que se hace referencia deben estar en la carpeta Bin del sitio Web o en la caché global de ensamblados.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo hacer referencia a un control personalizado y un archivo JavaScript que se incrusta en el ensamblado del control. Se supone que el ensamblado en la carpeta Bin del sitio Web. El control personalizado anima <xref:System.Web.UI.UpdatePanel> controles. Se compila el archivo JavaScript como un recurso incrustado denominado SampleControl.UpdatePanelAnimation.js. Registrar el archivo JavaScript incrustado mediante el <xref:System.Web.UI.ScriptReference.Assembly%2A> y <xref:System.Web.UI.ScriptReference.Name%2A> propiedades.  
  
 Para usar este ejemplo, compile el archivo de JavaScript que se muestra en el ejemplo como un recurso incrustado con el control personalizado. Coloque el ensamblado resultante en la carpeta Bin del sitio Web. Para obtener un ejemplo de cómo incrustar un archivo JavaScript en un ensamblado, vea [Tutorial: incrustar un archivo JavaScript como un recurso en un ensamblado](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 El ejemplo siguiente muestra una página que utiliza el control personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 El ejemplo siguiente muestra la definición de clase del control personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 El ejemplo siguiente muestra el archivo JavaScript auxiliar.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 El ejemplo siguiente muestra código que se debe agregar al archivo AssemblyInfo del proyecto que contiene el control personalizado y el archivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Control <see langword="ScriptManager" /> en la página web de destino.</param>
        <param name="zip">Es <see langword="true" /> si se debe comprimir el script; de lo contrario, es <see langword="false" />.</param>
        <summary>Recupera la dirección URL que se representa como valor del atributo <see langword="src" /> del elemento <see langword="script" />.</summary>
        <returns>Cadena que contiene la dirección URL que se presenta como valor del atributo <see langword="src" /> del elemento <see langword="script" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la propiedad <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> se incluye en la dirección URL cuando se registra un archivo de script de cliente desde un recurso.</summary>
        <value>Es <see langword="true" /> si no se utiliza la ruta de acceso del script al registrar el script de cliente; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establece <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> a `true` si desea registrar un archivo de script de cliente sin incluir el <xref:System.Web.UI.ScriptManager.ScriptPath%2A> valor en la dirección URL del archivo de script.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Un objeto <see cref="T:System.Web.UI.ScriptManager" />.</param>
        <summary>Determina si la referencia de script es un script AJAX.</summary>
        <returns>Es <see langword="true" /> si la referencia de script es un script AJAX; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si el script compuesto contiene una referencia a un script del marco de trabajo ASP.NET AJAX.</summary>
        <returns>Es <see langword="true" /> si el script compuesto contiene una referencia a un script de ASP.NET AJAX Framework; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del recurso incrustado que contiene el archivo de script de cliente.</summary>
        <value>Nombre del archivo de script de cliente que está incrustado como recurso en un ensamblado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establece el <xref:System.Web.UI.ScriptReference.Name%2A> propiedad para hacer referencia a un archivo de script de cliente que se incrusta como un recurso en un ensamblado.  
  
 Si se definen valores tanto para el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> y <xref:System.Web.UI.ScriptReference.Name%2A> propiedades en la misma referencia de script, el <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propiedad tiene prioridad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo hacer referencia a un control personalizado y un archivo JavaScript que se incrusta en el ensamblado del control. Se supone que el ensamblado en la carpeta Bin del sitio Web. El control personalizado anima <xref:System.Web.UI.UpdatePanel> controles. Se compila el archivo JavaScript como un recurso incrustado denominado SampleControl.UpdatePanelAnimation.js. Registrar el archivo JavaScript incrustado mediante el <xref:System.Web.UI.ScriptReference.Assembly%2A> y <xref:System.Web.UI.ScriptReference.Name%2A> propiedades.  
  
 Para usar este ejemplo, compile el archivo de JavaScript que se muestra en el ejemplo como un recurso incrustado con el control personalizado. Coloque el ensamblado resultante en la carpeta Bin del sitio Web. Para obtener un ejemplo de cómo incrustar un archivo JavaScript en un ensamblado, vea [Tutorial: incrustar un archivo JavaScript como un recurso en un ensamblado](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 El ejemplo siguiente muestra una página que utiliza el control personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 El ejemplo siguiente muestra la definición de clase del control personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 El ejemplo siguiente muestra el archivo JavaScript auxiliar.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 El ejemplo siguiente muestra código que se debe agregar al archivo AssemblyInfo del proyecto que contiene el control personalizado y el archivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el valor de la propiedad <see cref="P:System.Web.UI.ScriptReference.Name" />, la propiedad <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> o el nombre del tipo.</summary>
        <returns>Valor de la propiedad <see cref="P:System.Web.UI.ScriptReference.Name" /> si está definido, o valor de la propiedad <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> si está definido; en caso contrario, valor de la propiedad <see cref="P:System.Reflection.MemberInfo.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>