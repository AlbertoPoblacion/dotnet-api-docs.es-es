<Type Name="IHierarchicalDataSource" FullName="System.Web.UI.IHierarchicalDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="068fe041f91a6298c206dec1b00bff288bc69ea2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHierarchicalDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchicalDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchicalDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchicalDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchicalDataSource" />
  <TypeSignature Language="F#" Value="type IHierarchicalDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa un origen de datos jerárquico al que se pueden enlazar controles enlazados a datos jerárquicos como <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET admite una arquitectura de enlace de datos de control que permite a los controles de servidor Web enlazar a datos y presentarlos de una manera coherente. Controles de servidor Web que se enlazan a datos se denominan controles enlazados a datos y las clases que facilitan ese enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: un archivo, una secuencia, una base de datos relacional, un objeto comercial y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, sin tener en cuenta el origen o el formato de los datos subyacentes.  
  
 Controles de origen de datos que representan datos jerárquicos derivan de la <xref:System.Web.UI.HierarchicalDataSourceControl> (clase), que es la implementación base de ASP.NET de la <xref:System.Web.UI.IHierarchicalDataSource> interfaz. El <xref:System.Web.UI.IHierarchicalDataSource> interfaz se usan para definir controles de origen de datos que exponen datos jerárquicos, en lugar de tabulares o datos de estilo de lista, al servidor Web de los controles que derivan de la <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> de la clase, como el <xref:System.Web.UI.WebControls.TreeView> control. La interfaz define un método único, <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>, que recupera un fuertemente tipado <xref:System.Web.UI.HierarchicalDataSourceView> objeto. Controles de origen de datos que implementan esta interfaz admiten una vista jerárquica para cada nivel jerárquico de los datos que representan. Las vistas del origen de datos no tienen nombre, como <xref:System.Web.UI.DataSourceView> objetos, pero se identifican por su ruta de acceso jerárquica única, que es el `viewPath` parámetro pasado a la <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> método.  
  
 Un control de origen de datos puede considerar como la combinación de la <xref:System.Web.UI.IHierarchicalDataSource> objeto y sus vistas asociadas en los datos subyacentes. Cada uno asociado <xref:System.Web.UI.HierarchicalDataSourceView> objeto define las funciones de un control de origen de datos para el nivel jerárquico representado y, al igual que todos los datos origen vista objetos ASP.NET, realiza operaciones como insert, update, delete y ordenación.  
  
 Controles que muestran solo los datos jerárquicos, como origen de datos <xref:System.Web.UI.WebControls.SiteMapDataSource>, se derivan de la <xref:System.Web.UI.HierarchicalDataSourceControl> clase. Otros datos del origen de controles que exponen sus datos como datos jerárquicos y datos tabulares, como <xref:System.Web.UI.WebControls.XmlDataSource>, se derivan de <xref:System.Web.UI.HierarchicalDataSourceControl> pero implementa la <xref:System.Web.UI.IDataSource> y <xref:System.ComponentModel.IListSource> interfaces.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo extender la abstracta <xref:System.Web.UI.HierarchicalDataSourceControl> de la clase, que implementa el <xref:System.Web.UI.IHierarchicalDataSource> interfaz para crear un control de origen de datos que muestra información del sistema de archivos. El `FileSystemDataSource` clase proporciona una implementación de la <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> método, que recupera un objeto de vista fuertemente tipada para una ruta de acceso del sistema de archivo especificado. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IHierarchicalDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece cuando ha cambiado el almacenamiento de datos que representa la interfaz <see cref="T:System.Web.UI.IHierarchicalDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchicalDataSource.DataSourceChanged> evento se desencadena cuando se realiza un cambio a las propiedades del control de origen de datos, como cambiar la <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad de un <xref:System.Web.UI.WebControls.XmlDataSource> control o cambiar los datos en el almacenamiento de datos subyacente, lo que sucede cuando se cambian nodos XML Editar acciones realizadas por un <xref:System.Web.UI.WebControls.XmlDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="public System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="abstract member GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="iHierarchicalDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">Ruta de acceso jerárquica de la vista que se va a recuperar.</param>
        <summary>Obtiene el objeto auxiliar de la vista para la interfaz <see cref="T:System.Web.UI.IHierarchicalDataSource" /> para la ruta de acceso especificada.</summary>
        <returns>Devuelve un objeto <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> que representa una vista única de los datos a nivel jerárquico identificados por el parámetro <paramref name="viewPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IHierarchicalDataSource> interfaz, como la <xref:System.Web.UI.IDataSource> de la interfaz, define un método que usan los controles de origen de datos jerárquicos para recuperar una vista del origen de datos. Al igual que todos <xref:System.Web.UI.DataSourceView> objetos auxiliares que están asociados a controles de origen de datos, un <xref:System.Web.UI.HierarchicalDataSourceView> objeto define las operaciones que puede realizar el origen de datos con los datos subyacentes. Sin embargo, aunque los controles de origen de datos que representan datos tabulares suelen tengan sólo una vista con nombre, los controles de origen de datos jerárquicos admiten una vista para cada nivel de datos jerárquicos que representa el control de origen de datos. El nivel de datos jerárquicos se identifica mediante una ruta de acceso jerárquica única, pasado como el `viewPath` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> método en una clase que extiende el <xref:System.Web.UI.HierarchicalDataSourceControl> clase para recuperar un fuertemente tipado <xref:System.Web.UI.HierarchicalDataSourceView> objeto para una ruta de acceso jerárquica única. El `FileSystemDataSource` implementación de la clase de <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> recupera un `FileSystemDataSourceView` objeto de ruta de acceso especificada. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceView" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>