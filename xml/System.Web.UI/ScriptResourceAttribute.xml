<Type Name="ScriptResourceAttribute" FullName="System.Web.UI.ScriptResourceAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d073848e057665f8d947bc40cf2e76f1280fffcc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375990" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ScriptResourceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptResourceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptResourceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScriptResourceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptResourceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ScriptResourceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un recurso de un ensamblado que se va a utilizar desde un archivo de script de cliente. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.ScriptResourceAttribute> clase es válida sólo cuando se usa en las declaraciones de ensamblado. Usa para habilitar un recurso de script incrustado especificado en un ensamblado. Puede definir el nombre de la biblioteca de scripts incrustados, el nombre del archivo de recursos para la biblioteca de scripts y el nombre que se utiliza en un archivo de script para recuperar los valores de recurso. El <xref:System.Web.UI.ScriptManager> clase utiliza las propiedades de <xref:System.Web.UI.ScriptResourceAttribute> para determinar el nombre de recurso correcto para una biblioteca de scripts. El <xref:System.Web.UI.ScriptResourceAttribute.TypeName%2A> propiedad se utiliza con una clave de recurso para especificar un recurso.  
  
> [!NOTE]
>  La <xref:System.Web.UI.ScriptResourceAttribute> clase puede usarse solo para identificar recursos basados en texto para los archivos JavaScript. Para asociar un archivo de imagen adaptado (binario) a una referencia cultural determinada, considere almacenar únicamente su dirección URL como un recurso localizado, que, a continuación, se resuelva y se cargue en script.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Web.UI.ScriptResourceAttribute> atributo en un archivo de script denominado CheckAnswer.js que usa los recursos de los archivos de recursos VerificationResources. El nombre `Answer` se usa para hacer referencia a estos recursos.  
  
 [!code-csharp[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/AssemblyInfo.cs#3)]
 [!code-vb[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/vb/AssemblyInfo.vb#3)]  
  
 En el ejemplo siguiente se muestra cómo utilizar los recursos de script de cliente. Las claves de recursos (`Correct` y `Incorrect`) tienen el prefijo `Answer` para identificar la definición de recursos de script que contiene los valores.  
  
 [!code-javascript[LocalizingClientResourcesWalkthrough#1](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/CheckAnswer.js#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptResourceAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptResourceAttribute (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scriptName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptResourceAttribute(System::String ^ scriptName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptResourceAttribute : string -&gt; System.Web.UI.ScriptResourceAttribute" Usage="new System.Web.UI.ScriptResourceAttribute scriptName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">Nombre de la biblioteca de scripts.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptResourceAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptResourceAttribute (string scriptName, string stringResourceName, string stringResourceClientTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scriptName, string stringResourceName, string stringResourceClientTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scriptName As String, stringResourceName As String, stringResourceClientTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptResourceAttribute(System::String ^ scriptName, System::String ^ stringResourceName, System::String ^ stringResourceClientTypeName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptResourceAttribute : string * string * string -&gt; System.Web.UI.ScriptResourceAttribute" Usage="new System.Web.UI.ScriptResourceAttribute (scriptName, stringResourceName, stringResourceClientTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="stringResourceName" Type="System.String" />
        <Parameter Name="stringResourceClientTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">Nombre de la biblioteca de scripts.</param>
        <param name="stringResourceName">Nombre del archivo de recursos de la biblioteca de scripts.</param>
        <param name="stringResourceClientTypeName">Nombre del tipo que se va a crear para los valores del archivo de recursos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ScriptResourceAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ScriptResourceAttribute.%23ctor%2A> método se denomina normalmente mediante el uso de la <xref:System.Web.UI.ScriptResourceAttribute> atributo como un atributo de ensamblado en el archivo AssemblyInfo de la aplicación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="scriptName" />, <paramref name="scriptResourceName" /> o <paramref name="typeName" /> es <see langword="null" /> o una cadena vacía ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptName">
      <MemberSignature Language="C#" Value="public string ScriptName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptResourceAttribute.ScriptName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScriptName : string" Usage="System.Web.UI.ScriptResourceAttribute.ScriptName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la biblioteca de scripts.</summary>
        <value>Nombre de la biblioteca de scripts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Web.UI.ScriptResourceAttribute> atributo en un archivo de script denominado CheckAnswer.js que usa los recursos de los archivos de recursos VerificationResources. El nombre `Answer` se usa para hacer referencia a estos recursos. En este ejemplo, el <xref:System.Web.UI.ScriptResourceAttribute.ScriptName%2A> propiedad devuelve "LocalizingResources.CheckAnswer.js".  
  
 [!code-csharp[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/AssemblyInfo.cs#3)]
 [!code-vb[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/vb/AssemblyInfo.vb#3)]  
  
 En el ejemplo siguiente se muestra cómo utilizar los recursos de script de cliente. Las claves de recursos (`Correct` y `Incorrect`) tienen el prefijo `Answer` para identificar la definición de recursos de script que contiene los valores.  
  
 [!code-javascript[LocalizingClientResourcesWalkthrough#1](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/CheckAnswer.js#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptResourceName">
      <MemberSignature Language="C#" Value="public string ScriptResourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptResourceAttribute.ScriptResourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScriptResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptResourceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScriptResourceName : string" Usage="System.Web.UI.ScriptResourceAttribute.ScriptResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Use StringResourceName instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del archivo de recursos de la biblioteca de scripts.</summary>
        <value>Nombre del archivo de recursos de la biblioteca de scripts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Web.UI.ScriptResourceAttribute> atributo en un archivo de script denominado CheckAnswer.js que usa los recursos de los archivos de recursos VerificationResources. El nombre `Answer` se usa para hacer referencia a estos recursos. En este ejemplo, el <xref:System.Web.UI.ScriptResourceAttribute.ScriptResourceName%2A> propiedad devuelve "LocalizingResources.VerificationResources". La extensión de nombre de archivo no se incluye al definir la <xref:System.Web.UI.ScriptResourceAttribute.ScriptResourceName%2A>.  
  
 [!code-csharp[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/AssemblyInfo.cs#3)]
 [!code-vb[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/vb/AssemblyInfo.vb#3)]  
  
 En el ejemplo siguiente se muestra cómo utilizar los recursos de script de cliente. Las claves de recursos (`Correct` y `Incorrect`) tienen el prefijo `Answer` para identificar la definición de recursos de script que contiene los valores.  
  
 [!code-javascript[LocalizingClientResourcesWalkthrough#1](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/CheckAnswer.js#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringResourceClientTypeName">
      <MemberSignature Language="C#" Value="public string StringResourceClientTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringResourceClientTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptResourceAttribute.StringResourceClientTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StringResourceClientTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringResourceClientTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StringResourceClientTypeName : string" Usage="System.Web.UI.ScriptResourceAttribute.StringResourceClientTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre tipo de cliente que se va a crear para los valores del archivo de recursos.</summary>
        <value>Nombre del tipo de cliente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringResourceName">
      <MemberSignature Language="C#" Value="public string StringResourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptResourceAttribute.StringResourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StringResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringResourceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StringResourceName : string" Usage="System.Web.UI.ScriptResourceAttribute.StringResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del archivo de recursos de la biblioteca de scripts.</summary>
        <value>Nombre del archivo de recursos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptResourceAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Web.UI.ScriptResourceAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Use StringResourceClientTypeName instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre que se utiliza al recuperar los valores del archivo de recursos.</summary>
        <value>El nombre que se usa en el script de cliente al recuperar los valores en el archivo de recursos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ScriptResourceAttribute.TypeName%2A> propiedad contiene el valor que se usa para recuperar recursos localizados en el script de cliente. El script de cliente debe incluir el <xref:System.Web.UI.ScriptResourceAttribute.TypeName%2A> valor y el nombre de clave para el recurso que se va a localizar.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un <xref:System.Web.UI.ScriptResourceAttribute> atributo en un archivo de script denominado CheckAnswer.js que usa los recursos de los archivos de recursos VerificationResources. El nombre `Answer` se usa para hacer referencia a estos recursos. En este ejemplo, el <xref:System.Web.UI.ScriptResourceAttribute.TypeName%2A> propiedad devuelve "Respuesta".  
  
 [!code-csharp[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/AssemblyInfo.cs#3)]
 [!code-vb[LocalizingClientResourcesWalkthrough#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/vb/AssemblyInfo.vb#3)]  
  
 En el ejemplo siguiente se muestra cómo utilizar los recursos de script de cliente. Las claves de recursos (`Correct` y `Incorrect`) tienen el prefijo `Answer` para identificar la definición de recursos de script que contiene los valores.  
  
 [!code-javascript[LocalizingClientResourcesWalkthrough#1](~/samples/snippets/csharp/VS_Snippets_Atlas/LocalizingClientResourcesWalkthrough/cs/CheckAnswer.js#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>