<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fd9f5f59442c7630b462fbf485465dfc7c41206" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa un origen de datos abstracto al que se enlazan controles con enlace a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET admite una arquitectura de enlace de datos de control que permite a los controles de servidor Web enlazar a datos de una manera coherente. Controles de servidor Web que se enlazan a datos se denominan controles enlazados a datos y las clases que facilitan este enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: una base de datos relacional, un archivo, una secuencia, un objeto comercial y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, sin tener en cuenta el origen o el formato de los datos subyacentes.  
  
 Implementa el <xref:System.Web.UI.IDataSource> interfaz si desea implementar su propio control de origen de datos ASP.NET personalizado.  
  
 Cualquier clase que implemente la <xref:System.Web.UI.IDataSource> interfaz es un control de origen de datos. El <xref:System.Web.UI.IDataSource> interfaz actúa como la base para el origen de datos ASP.NET todos los controles y define uno de los conceptos básicos de la arquitectura de enlace de datos con sus dos métodos: el <xref:System.Web.UI.IDataSource.GetView%2A> método y <xref:System.Web.UI.IDataSource.GetViewNames%2A> método. Este concepto es que todos los controles de origen de datos compatible con una o más vistas con nombre en sus datos. El objeto de vista del origen de datos es similar a la <xref:System.Data.DataView> abstracción en el <xref:System.Data> espacio de nombres: personalizar un enlazable a datos, vista de datos para ordenar, filtrar y otras operaciones de datos que define la vista. En esencia, un origen de datos de control no hace nada más que recuperar vistas de datos.  
  
 Un control de origen de datos puede tener uno o varios objetos de vista del origen de datos asociados. Algunos datos del origen de los controles, los que representan bases de datos relacionales como incluidos <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.AccessDataSource>, sólo admiten una vista. Otros datos del origen de controles, incluyendo controles de origen de datos jerárquicos como <xref:System.Web.UI.WebControls.SiteMapDataSource>, admiten muchas vistas. La vista del origen de datos define las funciones de un origen de datos y las operaciones que admite.  
  
 En resumen, los controles de origen de datos implementan el <xref:System.Web.UI.IDataSource> interfaz, ser compatible con uno o más denominado vistas en los datos que representan y siempre admiten la recuperación de datos desde el origen de datos que representan. Controles de origen de datos siempre recuperan datos a petición, como cuando `DataBind` se llama en un control enlazado a datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase puede implementar los métodos definidos por el <xref:System.Web.UI.IDataSource> interfaz para proporcionar datos a controles enlazados a datos. El control de origen de datos en este ejemplo actúa como un origen de datos en un archivo de valores separados por comas y puede utilizar cualquier control enlazado a datos para mostrar los datos de archivo de valores separados por comas. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando un control de origen de datos ha cambiado de alguna manera que afecta a los controles enlazados a datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IDataSource.DataSourceChanged> evento se produce cuando ha cambiado las propiedades de un control enlazado a datos o los datos subyacentes de alguna manera que afecta a los enlaces de datos entre un control enlazado a datos y sus datos. Por ejemplo, el evento se produce si un archivo de nombre de propiedad, como el <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> propiedad, se cambia en un control de origen de datos basados en archivos.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre de la vista que se va a recuperar.</param>
        <summary>Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.</summary>
        <returns>Devuelve el objeto <see cref="T:System.Web.UI.DataSourceView" /> con nombre asociado al objeto <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clases de control de origen de datos pueden admitir una o varias vistas en sus datos subyacentes. Estas vistas están representadas por instancias de la <xref:System.Web.UI.DataSourceView> clase. La vista del origen de datos define las funciones de un control de origen de datos y realiza todo el trabajo necesario para recuperar datos desde el almacén de datos subyacente y realizar operaciones como la ordenación, inserción, eliminación y actualización.  
  
 Control de código fuente de datos, las clases que implementan la <xref:System.Web.UI.IDataSource> interfaz implemente el <xref:System.Web.UI.IDataSource.GetView%2A> método devuelva un valor fuertemente tipado ver objetos asociados a la clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase de control de origen de datos que implementa el <xref:System.Web.UI.IDataSource> implementa la interfaz la <xref:System.Web.UI.IDataSource.GetView%2A> método, que devuelve una instancia fuertemente tipada de la <xref:System.Web.UI.DataSourceView> clase. Dado que el control de origen de datos admite sólo una vista, se omite el nombre y devuelve una vista denominada con el nombre de vista predeterminado. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una colección de nombres que representa la lista de objetos de vista asociados a la interfaz <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <returns>Una interfaz <see cref="T:System.Collections.ICollection" /> que contiene los nombres de las vistas asociadas a la interfaz <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clases de control de origen de datos pueden admitir uno o más vistas con nombre en sus datos subyacentes. El <xref:System.Web.UI.IDataSource.GetViewNames%2A> método devuelve una colección de nombres de vista asociado actualmente a la instancia del control de origen de datos. Los autores de llamadas pueden recorrer en iteración la colección de nombres de vista y recuperar individuales <xref:System.Web.UI.DataSourceView> objetos que tienen la <xref:System.Web.UI.IDataSource.GetView%2A> método.  
  
 Control de código fuente de datos, las clases que implementan la <xref:System.Web.UI.IDataSource> interfaz implemente el <xref:System.Web.UI.IDataSource.GetViewNames%2A> método para devolver una colección de nombres que representa el origen de datos permite ver objetos asociados actualmente a la clase de control de origen de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo un control de origen de datos que implementa el <xref:System.Web.UI.IDataSource> implementa la interfaz la <xref:System.Web.UI.IDataSource.GetViewNames%2A> método, que devuelve un <xref:System.Collections.ICollection> colección de nombres. Dado que el origen de datos admite sólo una vista, el método devuelve una colección de un elemento con el nombre predeterminado de la vista. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>