<Type Name="IPostBackDataHandler" FullName="System.Web.UI.IPostBackDataHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1863cf81a8f8f8aec117073c8635084664e2a3f0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type IPostBackDataHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los métodos que los controles de servidor ASP.NET deben implementar para cargar automáticamente datos devueltos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe implementar la <xref:System.Web.UI.IPostBackDataHandler> al crear un control de servidor que necesita para analizar los datos de formulario que se devuelva al servidor por el cliente de la interfaz. El contrato que define esta interfaz permite que un control de servidor para determinar si se debe modificar su estado como resultado de la devolución de datos y para generar los eventos adecuados. Para obtener más información, consulte [control de eventos de servidor en páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un control de servidor de cuadro de texto personalizado que implementa el <xref:System.Web.UI.IPostBackDataHandler> interfaz. El <xref:System.Web.UI.WebControls.TextBox.Text%2A> propiedad se cambia como resultado de la devolución de datos y el control de servidor genera un <xref:System.Web.UI.WebControls.TextBox.TextChanged> evento una vez cargados los datos de postback.  
  
 [!code-csharp[Classic IPostBackDataHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="public bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="iPostBackDataHandler.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control.</param>
        <param name="postCollection">Colección de todos los valores de nombre entrantes.</param>
        <summary>Cuando se implementa mediante una clase, se procesan los datos devueltos para un control de servidor ASP.NET.</summary>
        <returns>
          <see langword="true" /> si el estado del control del servidor cambió a consecuencia del postback; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El marco de páginas ASP.NET realiza un seguimiento de todos los controles de servidor que devuelven `true` a esta llamada de método y, a continuación, invoca el <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> método en esos controles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un control de servidor que implementa una versión de la <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> método.  
  
 [!code-csharp[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="public void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit" Usage="iPostBackDataHandler.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa mediante una clase, indica al control de servidor que notifique a la aplicación ASP.NET que el estado del control ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> método provoca los eventos de cambio para el control de servidor que implementa el <xref:System.Web.UI.IPostBackDataHandler> interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo puede implementar un control de servidor el <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> método.  
  
 [!code-csharp[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>