<Type Name="IAttributeAccessor" FullName="System.Web.UI.IAttributeAccessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3c4e2da84677c69b2968ecf09b71f41d2a6a5fe" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64062717" /></Metadata><TypeSignature Language="C#" Value="public interface IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type IAttributeAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los métodos que utilizan los controles de servidor ASP.NET para proporcionar acceso mediante programación a cualquier atributo declarado en la etiqueta de apertura de un control de servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si creas un control de servidor personalizado que herede de la <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, o <xref:System.Web.UI.WebControls.ListItem> (clase), .NET Framework proporciona automáticamente acceso mediante programación a los atributos porque cada una de estas clases implementan la <xref:System.Web.UI.IAttributeAccessor> interfaz.  
  
 Si creas un control de servidor personalizado que no hereda de una de estas clases y permita que el acceso mediante programación a los atributos que no se corresponden con las propiedades del control fuertemente tipado, asegúrese de implementar el <xref:System.Web.UI.IAttributeAccessor> interfaz.  
  
   
  
## Examples  
 [!code-csharp[IAttributeAccessor_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#1)]
 [!code-vb[IAttributeAccessor_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string" Usage="iAttributeAccessor.GetAttribute key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.String" /> que representa el nombre del atributo del control de servidor.</param>
        <summary>Cuando se implementa mediante una clase, recupera la propiedad de atributo especificada desde el control de servidor.</summary>
        <returns>Valor del atributo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de la <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> método.  
  
 [!code-csharp[IAttributeAccessor_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#3)]
 [!code-vb[IAttributeAccessor_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit" Usage="iAttributeAccessor.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del atributo que se va a establecer.</param>
        <param name="value">Valor asignado al atributo.</param>
        <summary>Cuando se implementa mediante una clase, designa un atributo y un valor que se asignarán al control de servidor ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra una posible implementación de la <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> método.  
  
 [!code-csharp[IAttributeAccessor_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#2)]
 [!code-vb[IAttributeAccessor_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>