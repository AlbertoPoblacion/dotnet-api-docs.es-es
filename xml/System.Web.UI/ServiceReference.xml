<Type Name="ServiceReference" FullName="System.Web.UI.ServiceReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9182e0544183cc8ac752fa280684c3b012b33db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ServiceReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceReference" />
  <TypeSignature Language="F#" Value="type ServiceReference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registra un servicio Web para su uso en una página web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para llamar a métodos de servicio Web de ECMAScript (JavaScript), debe incluir una referencia de servicio en la página ASP.NET y aplicar el <xref:System.Web.Script.Services.ScriptServiceAttribute> atributo a la definición de clase de servicio Web. Si se incluye una referencia de servicio a un servicio Web en el <xref:System.Web.UI.ScriptManager> o <xref:System.Web.UI.ScriptManagerProxy> control dentro de la página ASP.NET, se crearán instancias de objetos en el Explorador de JavaScript.  
  
 Los objetos proxy se usará para hacer lo siguiente:  
  
-   Realizar solicitudes asincrónicas en JavaScript a los métodos de servicio Web  
  
-   Inicializar instancias de proxy de tipos de datos del servidor, en particular para su uso como parámetros de entrada para invocar métodos Web.  
  
> [!NOTE]
>  El <xref:System.Web.UI.ServiceReference> control solo puede usarse para los servicios en el mismo dominio.  
  
 Puede definir la ubicación del servicio Web mediante declaración agregando un `<asp:ServiceReference>` elemento a la `<Services>` elemento dentro de la `<asp:ScriptManager>` elemento en la página y, a continuación, configuración su <xref:System.Web.UI.ServiceReference.Path%2A> de atributo, como se muestra en el ejemplo siguiente.  
  
```  
<asp:ScriptManager runat="server" ID="scriptManager">  
  <Services>  
    <asp:ServiceReference Path="~/WebServices/SimpleWebService.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 Puede usar el <xref:System.Web.UI.ServiceReference.InlineScript%2A> propiedad para indicar si la secuencia de comandos de generación de proxy se incluye en la página como un bloque de script en línea o se obtiene mediante una solicitud independiente.  
  
 Puede agregar mediante programación un <xref:System.Web.UI.ServiceReference> objeto a través de la <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=nameWithType> o <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=nameWithType> colección utilizando la <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método de la <xref:System.Web.UI.ServiceReferenceCollection> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo agregar una referencia a un servicio Web en el marcado de la página para llamar a los métodos de servicio Web desde un script.  
  
 [!code-aspx-csharp[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/CS/Default.aspx#5)]
 [!code-aspx-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/VB/Default.aspx#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ServiceReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ServiceReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ServiceReference : string -&gt; System.Web.UI.ServiceReference" Usage="new System.Web.UI.ServiceReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ubicación del servicio Web.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ServiceReference" /> con una ruta de acceso especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyScript">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyScript(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyScript(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyScript (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Control <see cref="T:System.Web.UI.ScriptManager" /> en la página.</param>
        <param name="containingControl">Un objeto <see cref="T:System.Web.UI.Control" />.</param>
        <summary>Proporciona un script de proxy de un objeto <see cref="T:System.Web.UI.ServiceReference" /> derivado que se puede invalidar como una personalización.</summary>
        <returns>Script de proxy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `containingControl` parámetro es el <xref:System.Web.UI.ScriptManager> objeto o <xref:System.Web.UI.ScriptManagerProxy> objeto en el que el <xref:System.Web.UI.ServiceReference> se define el objeto. Se debe usar como base para la resolución de dirección URL relativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyUrl">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyUrl(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyUrl(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyUrl (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Control <see cref="T:System.Web.UI.ScriptManager" /> en la página.</param>
        <param name="containingControl">Un objeto <see cref="T:System.Web.UI.Control" />.</param>
        <summary>Proporciona una dirección URL de proxy de un objeto <see cref="T:System.Web.UI.ServiceReference" /> derivado que se puede invalidar como una personalización.</summary>
        <returns>Dirección URL de proxy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `containingControl` parámetro es el <xref:System.Web.UI.ScriptManager> objeto o <xref:System.Web.UI.ScriptManagerProxy> objeto en el que el <xref:System.Web.UI.ServiceReference> objeto se define y debe usarse como punto de partida para la resolución de dirección URL relativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="public virtual bool InlineScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InlineScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InlineScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InlineScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InlineScript : bool with get, set" Usage="System.Web.UI.ServiceReference.InlineScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el script de generación de los proxy está insertado en la página como bloque de scripts alineado o se obtiene mediante una solicitud independiente.</summary>
        <value>Es <see langword="true" /> si el script de generación de los proxy está insertado como bloque de scripts alineado en la página; es <see langword="false" /> si se obtiene el script de generación de los proxy mediante una solicitud independiente. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.ServiceReference.InlineScript%2A> no se ha declarado la propiedad, el valor predeterminado es `false`.  
  
 Cuando <xref:System.Web.UI.ServiceReference.InlineScript%2A> se establece en `false`, se descarga la secuencia de comandos para generar los proxy de ECMAScript (JavaScript) como un archivo de script independiente mediante una solicitud adicional al servidor. Si utiliza el almacenamiento en caché de explorador, esta opción es útil cuando varias páginas Web usan la misma referencia de servicio.  
  
 Cuando <xref:System.Web.UI.ServiceReference.InlineScript%2A> se establece en `true`, la generación de proxy se incluye como un bloque de script en línea en la página de script. Esto puede mejorar el rendimiento del servidor al reducir el número de solicitudes de red, especialmente si hay demasiadas referencias de servicio en la página y otras páginas no hacen referencia a los mismos servicios. Además, el <xref:System.Web.UI.ServiceReference.Path%2A> propiedad debe establecerse en una ruta de acceso relativa al <xref:System.Web.UI.ServiceReference.InlineScript%2A> está establecido en `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.ServiceReference.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso del servicio Web al que se ha hecho referencia.</summary>
        <value>Ruta de acceso del servicio Web al que se ha hecho referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ServiceReference.Path%2A> propiedad puede señalar locales sólo a servicios Web. En otras palabras, esta propiedad solo puede apuntar a servicios Web en el mismo dominio que la aplicación Web ASP.NET habilitada para AJAX. <xref:System.Web.UI.ServiceReference.Path%2A> puede ser una ruta de acceso relativa, relativa a la aplicación, dominio relativa o absoluta.  
  
 Si el <xref:System.Web.UI.ServiceReference.InlineScript%2A> propiedad está establecida en `true`, a continuación, debe usar una ruta de acceso relativa que apunte a la misma aplicación Web que la página que contiene el <xref:System.Web.UI.ServiceReference> instancia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el valor de la propiedad <see cref="P:System.Web.UI.ServiceReference.Path" /> o el nombre de tipo.</summary>
        <returns>Es el valor de la propiedad <see cref="P:System.Web.UI.ServiceReference.Path" />, si se define; de lo contrario, es el valor de la propiedad <see cref="P:System.Reflection.MemberInfo.Name" /> de la clase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>