<Type Name="UpdateProgress" FullName="System.Web.UI.UpdateProgress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c794b7f29789a8275b27c16294e90ed218caf9a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateProgress : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateProgress extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdateProgress" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateProgress&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateProgress : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("AssociatedUpdatePanelID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdateProgressDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdateProgress.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona comentarios visuales en el explorador cuando se actualiza el contenido de uno o más controles <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Asociar UpdateProgress a un Control UpdatePanel](#associating_an_updateprogress_with_an_updatepanel_control)  
  
-   [Especificar el contenido del Control UpdateProgress](#specifying_the_content_of_the_updateprogress_control)  
  
-   [Incluir controles UpdateProgress en la página](#putting_updateprogress_controls_on_the_page)  
  
-   [Personalizar cuándo se muestran los controles UpdateProgress](#customizing_when_updateprogress_controls_are_displayed)  
  
-   [Aplicar estilos CSS](#applying_styles)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.UpdateProgress> control le permite proporcionar comentarios sobre el progreso de la representación parcial de página. Para las devoluciones de datos o representación de página inicial, <xref:System.Web.UI.UpdateProgress> no se muestra el contenido del control.  
  
 La página puede contener varios <xref:System.Web.UI.UpdateProgress> controles. Cada uno de ellos puede ser asociado con otro <xref:System.Web.UI.UpdatePanel> control. Como alternativa, puede usar uno <xref:System.Web.UI.UpdateProgress> controlar y asociarlo con todos los <xref:System.Web.UI.UpdatePanel> controles en la página.  
  
 El <xref:System.Web.UI.UpdateProgress> control representa un `div` elemento que es mostrar u ocultar en función de dónde se origina una devolución de datos y si el <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad de la <xref:System.Web.UI.UpdateProgress> se establece el control.  
  
<a name="associating_an_updateprogress_with_an_updatepanel_control"></a>   
## <a name="associating-an-updateprogress-with-an-updatepanel-control"></a>Asociar UpdateProgress a un Control UpdatePanel  
 Asociar <xref:System.Web.UI.UpdateProgress> controla con una <xref:System.Web.UI.UpdatePanel> control estableciendo la <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad de la <xref:System.Web.UI.UpdateProgress> control. Cuando un evento de postback se origina desde dentro de un <xref:System.Web.UI.UpdatePanel> controlar asociada ninguna <xref:System.Web.UI.UpdateProgress> se muestran los controles. Si no establece la <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad, el <xref:System.Web.UI.UpdateProgress> control muestra el progreso de cualquier devolución de datos asincrónica que se origina desde dentro de cualquiera <xref:System.Web.UI.UpdatePanel> control. También se muestra para todos los controles que son desencadenadores para los paneles.  
  
 El <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad tiene el siguiente efecto <xref:System.Web.UI.UpdateProgress> controlan el comportamiento:  
  
-   Cuando el <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad no está establecida, el <xref:System.Web.UI.UpdateProgress> control se muestra para las devoluciones de datos siguientes:  
  
    -   Las devoluciones de datos que se originan dentro de cualquiera <xref:System.Web.UI.UpdatePanel> control.  
  
    -   Las devoluciones de datos que se originan desde los controles que son los desencadenadores asincrónicos para cualquier <xref:System.Web.UI.UpdatePanel> control.  
  
-   Cuando el <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad está establecida en un <xref:System.Web.UI.UpdatePanel> control de Id., el <xref:System.Web.UI.UpdateProgress> control se muestra para las devoluciones de datos que se originan dentro de los asociados <xref:System.Web.UI.UpdatePanel> control.  
  
 Si el <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad se establece en un control que no existe, el <xref:System.Web.UI.UpdateProgress> nunca se mostrará el control.  
  
 Si el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad de la <xref:System.Web.UI.UpdatePanel> controles se establece en `false` y una devolución de datos se origina en dentro de un <xref:System.Web.UI.UpdatePanel> controlar asociada ninguna <xref:System.Web.UI.UpdateProgress> controles seguirán mostrándose.  
  
<a name="specifying_the_content_of_the_updateprogress_control"></a>   
## <a name="specifying-the-content-of-the-updateprogress-control"></a>Especificar el contenido del Control UpdateProgress  
 Use la <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propiedad para especificar el mensaje que se muestra por un <xref:System.Web.UI.UpdateProgress> control. Si el <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propiedad está vacía, no se mostrará nada cuando el <xref:System.Web.UI.UpdateProgress> se muestra el control.  
  
 La plantilla puede contener HTML y marcado. Por ejemplo, puede mostrar una imagen animada que notifica al usuario que se está procesando la devolución de datos. También puede mostrar un botón que el usuario puede hacer clic para detener la actualización parcial de página. Además, puede evitar que todas las otras devoluciones de datos mientras está en curso. En el ejemplo siguiente se muestra el script de cliente que puede usar para realizar estas tareas.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress4#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress4/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress4#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress4/VB/default.aspx#1)]  
  
 Puede utilizar el código de ejemplo estableciendo el `onClick` atributo de un `HtmlButton` control "AbortPostBack ()". Para obtener más información, vea el método y la propiedad de la clase.  
  
<a name="putting_updateprogress_controls_on_the_page"></a>   
## <a name="putting-updateprogress-controls-on-the-page"></a>Incluir controles UpdateProgress en la página  
 <xref:System.Web.UI.UpdateProgress> los controles pueden encontrarse dentro o fuera de otros <xref:System.Web.UI.UpdatePanel> controles. La presentación de la <xref:System.Web.UI.UpdateProgress> plantilla del control no dependen del lugar donde el <xref:System.Web.UI.UpdateProgress> control se encuentra. En un anidada <xref:System.Web.UI.UpdatePanel> control, que es un panel secundarios dentro de un panel primario. En ese caso, una devolución de datos que se origina desde dentro del panel secundario hace que todos <xref:System.Web.UI.UpdateProgress> controles asociados con los paneles secundario y el panel principal que se mostrará. Si se origina una devolución de datos en un control secundario inmediato del panel primario, sólo el <xref:System.Web.UI.UpdateProgress> se muestran los controles que están asociados con el panel primario.  
  
<a name="customizing_when_updateprogress_controls_are_displayed"></a>   
## <a name="customizing-when-updateprogress-controls-are-displayed"></a>Personalizar cuándo se muestran los controles UpdateProgress  
 De forma predeterminada, el <xref:System.Web.UI.UpdateProgress> control espera 0,5 segundos (500 milisegundos) antes de mostrar su contenido. Esto ayuda a evitar que el control parpadee si una devolución de datos asincrónica es muy rápida. Puede especificar el retraso estableciendo la <xref:System.Web.UI.UpdateProgress.DisplayAfter%2A> propiedad.  
  
 Si necesita un control más preciso sobre cuándo un <xref:System.Web.UI.UpdateProgress> se muestra el control, puede proporcionar el script de cliente para la y eventos de la clase. En el `beginRequest` controlador de eventos, puede mostrar el elemento DOM que representa el <xref:System.Web.UI.UpdateProgress> control. En el `endRequest` controlador de eventos, puede ocultarla.  
  
 Debe proporcionar el script de cliente para mostrar un <xref:System.Web.UI.UpdateProgress> controlar cuando un destino <xref:System.Web.UI.UpdatePanel> control se actualiza en las siguientes circunstancias:  
  
-   Cuando se registra una devolución de datos de un control como desencadenador postback asincrónico para el panel y hay un <xref:System.Web.UI.UpdateProgress> control en la página. Sin embargo, la <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad no está establecida en Id. del panel  
  
-   Cuando se registran las devoluciones de datos desde los controles como controles de postback asincrónicos mediante el <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método de la <xref:System.Web.UI.ScriptManager> control.  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Aplicar estilos CSS  
 El <xref:System.Web.UI.UpdateProgress> control acepta atributos expando. Esto permite establecer una clase CSS en los HTMLelements que representan los controles. Por ejemplo, podría crear el marcado que se muestra en el ejemplo siguiente:  
  
```  
<asp:UpdateProgress runat="server" class="myStyle">  
</asp: UpdateProgress>   
```  
  
 El marcado en el ejemplo anterior representa HTML similar al siguiente cuando se ejecuta la página:  
  
```  
<div id="ctl00_MainContent_UpdateProgress1" class="myStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:UpdateProgress  
    AssociatedUpdatePanelID="string"  
    DisplayAfter="integer"  
    DynamicLayout="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <ProgressTemplate>  
            <!-- child controls -->  
        </ProgressTemplate>  
</asp:UpdateProgress>  
```  
  
   
  
## Examples  
 Los ejemplos siguientes muestran distintas formas de utilizar el <xref:System.Web.UI.UpdateProgress> control para mostrar el progreso durante los postbacks asincrónicos.  
  
 En el ejemplo siguiente se muestra una <xref:System.Web.UI.UpdateProgress> control que muestra el estado del progreso de dos <xref:System.Web.UI.UpdatePanel> controles.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress1#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress1/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress1#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress1/VB/default.aspx#1)]  
  
 En el ejemplo siguiente se muestra dos <xref:System.Web.UI.UpdateProgress> controles. Cada control muestra el estado de progreso de un asociado <xref:System.Web.UI.UpdatePanel> control.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress2#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress2/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress2#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress2/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdateProgress();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea un <xref:System.Web.UI.UpdateProgress> controlar dinámicamente, crear una plantilla personalizada que hereda de la <xref:System.Web.UI.ITemplate> control. Especificar el marcado en el <xref:System.Web.UI.ITemplate.InstantiateIn%2A> método y, después, establezca el <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propiedad de creados dinámicamente <xref:System.Web.UI.UpdateProgress> control a una nueva instancia de la plantilla personalizada. Cuando creas <xref:System.Web.UI.UpdateProgress> controla dinámicamente, debe hacerlo durante o antes de la <xref:System.Web.UI.Control.PreRender> eventos de la página. Si crea el <xref:System.Web.UI.UpdateProgress> control más adelante en el ciclo de vida de la página, progreso no se muestra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedUpdatePanelID">
      <MemberSignature Language="C#" Value="public string AssociatedUpdatePanelID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedUpdatePanelID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID" />
      <MemberSignature Language="VB.NET" Value="Public Property AssociatedUpdatePanelID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssociatedUpdatePanelID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.UpdatePanel))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador del control <see cref="T:System.Web.UI.UpdatePanel" /> para el que muestra el estado el control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Identificador del <see cref="T:System.Web.UI.UpdatePanel" /> asociado. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado es una cadena vacía, lo que significa que la <xref:System.Web.UI.UpdateProgress> no está asociado con un determinado control <xref:System.Web.UI.UpdatePanel> control. Por lo tanto, postbacks asincrónicos que se originan desde dentro de cualquiera <xref:System.Web.UI.UpdatePanel> control o las devoluciones de datos desde los controles que son los desencadenadores para averiguar la causa del panel la <xref:System.Web.UI.UpdateProgress> control para mostrar su <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> contenido.  
  
 Puede establecer el <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propiedad a los controles en el mismo contenedor de nomenclatura, en un contenedor de nomenclatura primario o en la página.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los atributos de hoja de estilos en cascada (CSS) del control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Nombres del atributo CSS.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.ControlCollection" /> que representa los controles secundarios del control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Colección de controles secundarios del control <see cref="T:System.Web.UI.UpdateProgress" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se llama para crear los controles secundarios que contiene el control <see cref="T:System.Web.UI.UpdateProgress" /> como paso previo a la devolución de datos o representación.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enlaza un origen de datos al control <see cref="T:System.Web.UI.UpdateProgress" /> y todos sus controles secundarios.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAfter">
      <MemberSignature Language="C#" Value="public int DisplayAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.DisplayAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisplayAfter { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor en milisegundos antes de que se muestre el control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Entero que representa el número de milisegundos antes de que se muestre la plantilla de progreso del control <see cref="T:System.Web.UI.UpdateProgress" />. El valor predeterminado es 500 milisegundos (0,5 segundos).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Web.UI.UpdateProgress.DisplayAfter" /> es menor que cero.</exception>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DynamicLayout">
      <MemberSignature Language="C#" Value="public bool DynamicLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.DynamicLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determina si se representa la plantilla de progreso dinámicamente.</summary>
        <value>Es <see langword="true" /> si se representa la plantilla de progreso dinámicamente; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propiedad determina si se asigna espacio para el contenido de la plantilla de progreso en la página solo cuando sea necesario.  
  
 Cuando el <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propiedad es `true`, no se asigna espacio para el contenido de la plantilla de progreso cuando la página se representa por primera vez. En su lugar, la página cambia dinámicamente para mostrar el contenido cuando sea necesario. En el `style` propiedad de la `div` elemento que contiene la plantilla de progreso del marcado representado, el `display` atributo está establecido en `none`.  
  
 Cuando el <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propiedad es `false`, se asigna espacio para el contenido de la plantilla de progreso cuando se representa la página por primera vez y el <xref:System.Web.UI.UpdateProgress> contenido del control físicamente forma parte del diseño de página. En el `style` propiedad de la `div` elemento que contiene la plantilla de progreso del marcado representado, el `display` atributo está establecido en `block`y el `visibility` atributo está establecido inicialmente en `hidden`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.UpdateProgress/&lt;GetScriptDescriptors&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una lista de componentes, comportamientos y controles de cliente necesarios para la funcionalidad del cliente del control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <returns>Colección <see cref="T:System.Collections.IEnumerable" /> que contiene objetos <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdateProgress> control requiere que la biblioteca de cliente de Microsoft Ajax Library. Esta clase de cliente está registrada en el <xref:System.Web.UI.UpdateProgress.GetScriptDescriptors%2A> método y <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A>, <xref:System.Web.UI.UpdateProgress.DisplayAfter%2A>, y <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> valores de propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.UpdateProgress/&lt;GetScriptReferences&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una lista de dependencias de la biblioteca de scripts de cliente del control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <returns>Colección <see cref="T:System.Collections.IEnumerable" /> que contiene objetos <see cref="T:System.Web.UI.ScriptReference" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdateProgress> control no tiene ningún scriptdependencies de servidor.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ProgressTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ProgressTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ProgressTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que define el contenido del control <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Instancia de <see cref="T:System.Web.UI.ITemplate" /> que define el contenido del control <see cref="T:System.Web.UI.UpdateProgress" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La plantilla debe estar definida. En caso contrario, se produce una excepción durante la <xref:System.Web.UI.UpdateProgress> del control `Init` eventos. Puede especificar el <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propiedad mediante declaración agregando marcado para la `ProgressTemplate` elemento. Si no hay ningún tipo de marcado en el `ProgressTemplate` elemento, no se mostrará los <xref:System.Web.UI.UpdateProgress> control.  
  
 Si va a crear <xref:System.Web.UI.UpdateProgress> controla de forma dinámica, puede crear una plantilla personalizada que hereda de la <xref:System.Web.UI.ITemplate> control. Especificar el marcado en el <xref:System.Web.UI.ITemplate.InstantiateIn%2A> método y, después, establezca el <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propiedad de creados dinámicamente <xref:System.Web.UI.UpdateProgress> control a una nueva instancia de la plantilla personalizada. Si crea <xref:System.Web.UI.UpdateProgress> controles dinámicamente, hacerlo durante o antes de la <xref:System.Web.UI.Control.PreRender> eventos de la página. Si crea el <xref:System.Web.UI.UpdateProgress> control más adelante en el ciclo de vida de la página, progreso no se muestra.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto que representa el flujo de salida para representar el contenido HTML.</param>
        <summary>Escribe el contenido representado del control <see cref="T:System.Web.UI.UpdateProgress" /> en el explorador con el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> proporcionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdateProgress.Render%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdateProgress> control.  
  
 El <xref:System.Web.UI.UpdateProgress.Render%2A> método escribe el contenido representado de la <xref:System.Web.UI.UpdateProgress> control en el explorador utilizando proporcionado <xref:System.Web.UI.HtmlTextWriter> objeto. Cuando se reemplaza la <xref:System.Web.UI.UpdateProgress.Render%2A> método en una clase derivada, llame a la clase base <xref:System.Web.UI.UpdateProgress.Render%2A> método para que los controles secundarios de la <xref:System.Web.UI.UpdateProgress> se representan el control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del atributo que se va a devolver.</param>
        <summary>Devuelve un atributo de un control web utilizando el nombre especificado.</summary>
        <returns>El valor del atributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdateProgress> se convierte en una interfaz <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del atributo que se va a establecer.</param>
        <param name="value">Valor del atributo que se debe establecer.</param>
        <summary>Establece el valor del atributo de control de usuario especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdateProgress> se convierte en una interfaz <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />.</summary>
        <returns>Una colección de objetos <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdateProgress> se convierte en una interfaz <xref:System.Web.UI.IScriptControl>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />.</summary>
        <returns>Una colección de objetos <see cref="T:System.Web.UI.ScriptReference" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdateProgress> se convierte en una interfaz <xref:System.Web.UI.IScriptControl>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />
      </Docs>
    </Member>
  </Members>
</Type>