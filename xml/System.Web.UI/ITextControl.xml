<Type Name="ITextControl" FullName="System.Web.UI.ITextControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dea52ef851585bebde804a51491a4517886f59c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30611519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ITextControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define la interfaz que implementa un control para obtener o establecer su contenido de texto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ITextControl> interfaz define el <xref:System.Web.UI.ITextControl.Text%2A> implementa un control para permitir la obtención de propiedad o valor de su contenido de texto. El <xref:System.Web.UI.ITextControl.Text%2A> propiedad puede establecerse mediante programación o a través de usuario de entrada.  
  
> [!CAUTION]
>  Un control que implementa esta interfaz se puede utilizar para mostrar proporcionados por el usuario. Antes de mostrar proporcionados por el usuario, la entrada debe comprobarse para script de cliente malintencionado, como secuencias de comandos ejecutables o instrucciones SQL. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Controles de servidor de validación también se proporcionan para evaluar proporcionados por el usuario. Para obtener más información, consulte [sintaxis de Control de servidor de validación](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un control personalizado que implementa el <xref:System.Web.UI.ITextControl> interfaz. Un valor predeterminado se asigna a la <xref:System.Web.UI.ITextControl.Text%2A> propiedad si `null` se pasa a la propiedad.  
  
 [!code-csharp[System.Web.UI.ITextControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ITextControl/CS/CustomTextControl.cs#1)]
 [!code-vb[System.Web.UI.ITextControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ITextControl/VB/CustomTextControl.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ITextControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el contenido de texto de un control.</summary>
        <value>Contenido de texto de un control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ITextControl.Text%2A> propiedad puede establecerse mediante programación o a través de usuario de entrada.  
  
> [!CAUTION]
>  Un control que implementa esta interfaz se puede utilizar para mostrar proporcionados por el usuario. Antes de mostrar proporcionados por el usuario, la entrada debe comprobarse para script de cliente malintencionado, como secuencias de comandos ejecutables o instrucciones SQL. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Controles de servidor de validación también se proporcionan para evaluar proporcionados por el usuario. Para obtener más información, consulte [sintaxis de Control de servidor de validación](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un control personalizado que implementa el <xref:System.Web.UI.ITextControl> interfaz. Un valor predeterminado se asigna a la <xref:System.Web.UI.ITextControl.Text%2A> propiedad si `null` se pasa a la propiedad.  
  
 [!code-csharp[System.Web.UI.ITextControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ITextControl/CS/CustomTextControl.cs#1)]
 [!code-vb[System.Web.UI.ITextControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ITextControl/VB/CustomTextControl.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>