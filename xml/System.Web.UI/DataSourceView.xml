<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c05e8cfd4479d12c271478c40b9933048c4266c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37589318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sirve de clase base para todas las clases de vista de origen de datos, que definen las funciones de los controles de origen de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET es compatible con una arquitectura de enlace de datos que permite a los controles de servidor Web enlazar a datos de una manera coherente. Controles de servidor Web que se enlazan a datos se conocen como controles enlazados a datos y las clases que facilitan este enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: una base de datos relacional, un archivo, una secuencia, un objeto de negocios y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, independientemente del origen o el formato de los datos subyacentes.  
  
 Utilice los controles de origen de datos que se proporcionan con ASP.NET, incluidos <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, y <xref:System.Web.UI.WebControls.XmlDataSource>, para realizar la mayoría de las tareas de desarrollo de Web. Utilizar la base de <xref:System.Web.UI.DataSourceControl> y <xref:System.Web.UI.DataSourceView> cuando desee implementar sus propios datos personalizados que las clases de control de código fuente.  
  
 Puede pensar en un control de origen de datos como la combinación de la <xref:System.Web.UI.IDataSource> objeto y sus listas de datos, denominado vistas del origen de datos asociadas. Cada lista de los datos se representa mediante un <xref:System.Web.UI.DataSourceView> objeto. La <xref:System.Web.UI.DataSourceView> clase es la clase base para todas las vistas del origen de datos, o las listas de datos, asociados a los controles de origen de datos. Vistas del origen de datos definen las capacidades de un control de origen de datos. Dado que el almacenamiento de datos subyacente contiene una o varias listas de datos, un control de origen de datos siempre está asociado con una o varias vistas del origen de datos con nombre. El control de origen de datos utiliza el <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> vistas actualmente asociadas con el control de origen de datos del origen de método para enumerar los datos y el <xref:System.Web.UI.DataSourceControl.GetView%2A> método para recuperar una instancia de la vista del origen de datos específico por nombre.  
  
 Todos los <xref:System.Web.UI.DataSourceView> objetos admiten la recuperación de datos desde el origen de datos subyacente mediante la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Todas las vistas, opcionalmente, admiten un conjunto básico de operaciones, incluidas las operaciones como <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, y <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Un control enlazado a datos puede detectar las capacidades de un control de origen de datos mediante la recuperación de un origen de datos asociado ver utilizando la <xref:System.Web.UI.DataSourceControl.GetView%2A> y <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> métodos y consultando la vista en tiempo de diseño o tiempo de ejecución.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo extender el <xref:System.Web.UI.DataSourceView> clase para crear una clase de vista fuertemente tipada para un control de origen de datos. El `CsVDataSourceView` clase define las funciones de la `CsvDataSource` control de origen de datos y proporciona una implementación para los controles enlazados a datos usar datos almacenados en archivos de valores separados por comas (.csv). Para obtener más información sobre la `CsvDataSource` del origen de datos de control, vea el <xref:System.Web.UI.DataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Control de origen de datos al que está asociado el objeto <see cref="T:System.Web.UI.DataSourceView" />.</param>
        <param name="viewName">Nombre del objeto <see cref="T:System.Web.UI.DataSourceView" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> es <see langword="null" />.  \- o bien - <paramref name="viewName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la operación <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación de la clase base devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.CanDelete%2A> propiedad no sólo refleja una función de control de origen de datos, sino también si es actualmente adecuado realizar una operación. Por ejemplo, aunque ver un origen de datos admite la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operación en general, si no se establece una propiedad obligatoria u otros datos, el <xref:System.Web.UI.DataSourceView.CanDelete%2A> propiedad devuelve `false`, como una operación de eliminación produciría un error.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.DataSourceView.CanDelete%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método en una clase que extiende el <xref:System.Web.UI.DataSourceView> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">Nombre del comando.</param>
        <summary>Determina si se puede ejecutar el comando especificado.</summary>
        <returns>Es <see langword="true" /> si puede ejecutarse el comando; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la operación <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación de la clase base devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.CanInsert%2A> propiedad no sólo refleja una función de control de origen de datos, sino también si es actualmente adecuado realizar una operación. Por ejemplo, aunque un control de origen de datos admite la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operación, si el comando Insertar necesaria o algún otro dato no se establece, el <xref:System.Web.UI.DataSourceView.CanInsert%2A> propiedad devuelve `false`, como una operación de inserción produciría un error.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.DataSourceView.CanInsert%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método en una clase que extiende el <xref:System.Web.UI.DataSourceView> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la paginación de los datos recuperados por el método <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación de la clase base devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control enlazado a datos puede solicitar la paginación agregando el <xref:System.Web.UI.DataSourceCapabilities.Page> campo el <xref:System.Web.UI.DataSourceSelectArguments> objeto pasa a la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Si un control enlazado a datos solicita la paginación, pero la <xref:System.Web.UI.DataSourceView.CanPage%2A> propiedad devuelve `false`, la vista del origen de datos produce una excepción.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la recuperación del número total de filas de datos, en lugar de los propios datos.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación de la clase base devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control enlazado a datos puede solicitar un recuento de filas total agregando el <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> campo el <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> objeto pasa a la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Si un control enlazado a datos solicita un número total de filas, pero el <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> propiedad devuelve `false`, la vista del origen de datos produce una excepción.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la vista ordenada en el origen de datos subyacente.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación predeterminada devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede solicitar la ordenación mediante la adición de un control enlazado a datos la <xref:System.Web.UI.DataSourceCapabilities.Sort> campo el <xref:System.Web.UI.DataSourceSelectArguments> objeto pasa a la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Si un enlace de datos controla las solicitudes de ordenación, pero la <xref:System.Web.UI.DataSourceView.CanSort%2A> propiedad devuelve `false`, la vista del origen de datos produce una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.DataSourceView.CanSort%2A> propiedad en una clase que extiende el <xref:System.Web.UI.DataSourceView> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.DataSourceView" /> asociado al objeto <see cref="T:System.Web.UI.DataSourceControl" /> actual admite la operación <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>Es <see langword="true" /> si se admite la operación; en caso contrario, es <see langword="false" />. La implementación predeterminada devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propiedad no sólo refleja una función de control de origen de datos, sino también si es actualmente adecuado realizar una operación. Por ejemplo, aunque un control enlazado a datos es compatible con la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operación, si no se establece un comando de actualización necesaria u otros datos, el <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propiedad devuelve `false`, como una operación de actualización produciría un error.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método en una clase que extiende el <xref:System.Web.UI.DataSourceView> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando la vista de origen de datos ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El cambio a la vista del origen de datos podría ser debido a un cambio en los valores de sus propiedades o a un cambio en los datos debido a una operación de datos realizada por la vista del origen de datos.  
  
 Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Interfaz <see cref="T:System.Collections.IDictionary" /> de claves de objetos o filas que se va a eliminar mediante la operación de <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores originales.</param>
        <param name="callback">Delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> que se utiliza para notificar a un control enlazado a datos la finalización de la operación asincrónica.</param>
        <summary>Realiza una operación de eliminación asincrónica en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.Delete%2A> método es la interfaz de eliminación asincrónica de datos para todos los objetos de vista de origen de datos. El <xref:System.Web.UI.DataSourceView.Delete%2A> llamadas al método el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> mediante cualquiera de método `keys` y `oldValues` valores de parámetro proporcionados. El `callback` parámetro es un delegado que un control enlazado a datos que se pasa al origen de datos control de vista, que se usa para notificar a los datos enlazados cuando la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> ha completado la operación. El método usa los parámetros de la <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para devolver el número de registros afectados y cualquier <xref:System.Exception> excepción producida por el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> proporcionado es <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de delegados de controladores de eventos de la vista de origen de datos.</summary>
        <value>Lista de delegados de controladores de eventos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es de tipo <xref:System.ComponentModel.EventHandlerList>, que utiliza un algoritmo de búsqueda lineal para buscar entradas en la lista de delegados. Un algoritmo de búsqueda lineal es ineficaz cuando se trabaja con un gran número de entradas. Por lo tanto, si tiene una lista extensa, buscar entradas con esta propiedad será lentas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ejecuta el comando especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">Nombre del comando.</param>
        <param name="keys">Diccionario de claves de objeto o de claves de fila sobre las que se va actuar.</param>
        <param name="values">Diccionario de pares de nombre-valor que representan elementos de datos y sus valores.</param>
        <summary>Ejecuta el comando especificado.</summary>
        <returns>Número de elementos afectados por la operación.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">Nombre del comando.</param>
        <param name="keys">Diccionario de claves de objeto o de claves de fila sobre las que se va actuar.</param>
        <param name="values">Diccionario de pares de nombre-valor que representan elementos de datos y sus valores.</param>
        <param name="callback">Un objeto <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />.</param>
        <summary>Ejecuta el comando especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no devuelve ningún valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Interfaz <see cref="T:System.Collections.IDictionary" /> de claves de objetos o filas que se va a eliminar mediante la operación de <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores originales.</param>
        <summary>Realiza una operación de eliminación en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <returns>Número de elementos que se eliminaron del espacio de almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles enlazados a datos pueden determinar si el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operación es compatible con un control de origen de datos mediante la recuperación de la <xref:System.Web.UI.DataSourceView> objeto utilizando el <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> método y comprobación de la <xref:System.Web.UI.DataSourceView.CanDelete%2A> propiedad.  
  
 El `keys` parámetro representa las claves de objetos o filas de los datos que se va a eliminar. Orígenes de datos que representan datos relacionales, como el <xref:System.Web.UI.WebControls.SqlDataSource> (control), el `keys` parámetro es una colección de claves principales de base de datos. En otros escenarios, el `keys` es una colección de pares nombre/valor de parámetro y se utiliza para filtrar una lista de datos. Se eliminan los datos que coinciden con un par nombre/valor.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceView> implementación predeterminada de la clase consiste en iniciar un <xref:System.NotSupportedException> excepción. Si extiende el <xref:System.Web.UI.DataSourceView> clase, invalide el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método si su clase admite la eliminación desde el almacenamiento de datos subyacente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase que extiende el <xref:System.Web.UI.DataSourceView> clase puede invalidar el <xref:System.Web.UI.DataSourceView.CanDelete%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El objeto <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> no admite la operación de <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor utilizada durante una operación de inserción.</param>
        <summary>Realiza una operación de inserción en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <returns>Número de elementos que se insertaron en el espacio de almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles enlazados a datos pueden determinar si el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operación es compatible con un control de origen de datos mediante la recuperación de la <xref:System.Web.UI.DataSourceView> objeto utilizando el <xref:System.Web.UI.DataSourceControl.GetView%2A> método y comprobación de la <xref:System.Web.UI.DataSourceView.CanInsert%2A> propiedad.  
  
 El `values` parámetro es un conjunto de pares nombre/valor que representa las columnas de datos o los campos y valores correspondientes para insertar.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceView> implementación predeterminada de la clase consiste en iniciar un <xref:System.NotSupportedException> excepción. Si extiende el <xref:System.Web.UI.DataSourceView> clase, invalide el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método si su clase admite la inserción en el almacenamiento de datos subyacente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase que extiende el <xref:System.Web.UI.DataSourceView> clase puede invalidar el <xref:System.Web.UI.DataSourceView.CanInsert%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El objeto <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> no admite la operación de <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Objeto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> que se utiliza para solicitar operaciones en los datos después de la recuperación de datos básicos.</param>
        <summary>Obtiene una lista de datos del espacio de almacenamiento de datos subyacente.</summary>
        <returns>Lista <see cref="T:System.Collections.IEnumerable" /> de datos del espacio de almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método se llama para recuperar datos de almacén de datos subyacente y devolverlo como una <xref:System.Collections.IEnumerable> objeto. Todos los controles de origen de datos admiten la recuperación de datos de su almacenamiento de datos subyacente, incluso si no se admiten otras operaciones como la inserción y ordenación. Dado que un control enlazado a datos puede solicitar una lista de datos en cualquier momento como resultado de una <xref:System.Web.UI.IDataSource.DataSourceChanged> eventos o un <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> llamada al método, la recuperación de datos debe realizarse bajo demanda.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método en una clase que extiende el <xref:System.Web.UI.DataSourceView> clase. El `CsvDataSourceView` abre un archivo de valores separados por comas (.csv), línea por línea analiza y crea un <xref:System.Data.DataTable> objeto y un <xref:System.Data.DataView> objeto para contener los datos en memoria. Por último, una expresión de ordenación se aplica si se proporciona una forma el <xref:System.Web.UI.DataSourceSelectArguments> objeto y el <xref:System.Data.DataView> objeto se devuelve como un <xref:System.Collections.IEnumerable> instancia. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Interfaz <see cref="T:System.Collections.IDictionary" /> de claves de objetos o filas que se va a actualizar mediante la operación de actualización.</param>
        <param name="values">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores nuevos.</param>
        <param name="oldValues">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores originales.</param>
        <summary>Realiza una operación de actualización en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <returns>Número de elementos que se actualizaron en el espacio de almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles enlazados a datos pueden determinar si el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operación es compatible con un control de origen de datos mediante el uso de la <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> método para recuperar el <xref:System.Web.UI.DataSourceView> objeto y comprobar el valor de la <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propiedad.  
  
 El `keys` parámetro representa las claves de objetos o filas de los datos que se va a actualizar. Orígenes de datos que representan datos relacionales, como el <xref:System.Web.UI.WebControls.SqlDataSource> (control), el `keys` parámetro es una colección de claves principales de base de datos. En otros escenarios, el `keys` es una colección de pares nombre/valor de parámetro y se utiliza para filtrar una lista de datos. Los datos que coinciden con un par nombre/valor se actualizan con los valores encontrados en el `values` parámetro, que es un conjunto de pares nombre/valor que representa los nuevos valores para los campos existentes o las columnas.  
  
> [!NOTE]
>  El <xref:System.Web.UI.DataSourceView> implementación predeterminada de la clase consiste en iniciar un <xref:System.NotSupportedException> excepción. Si extiende el <xref:System.Web.UI.DataSourceView> clase, invalide el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método si su clase admite la actualización de datos en el almacenamiento de datos subyacente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo una clase que extiende el <xref:System.Web.UI.DataSourceView> clase puede invalidar el <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propiedad y el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.DataSourceView> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El objeto <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> no admite la operación de <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor utilizada durante una operación de inserción.</param>
        <param name="callback">Delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> que se utiliza para notificar a un control enlazado a datos la finalización de la operación asincrónica.</param>
        <summary>Realiza una operación de inserción asincrónica en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.Insert%2A> método es la interfaz de inserción de datos asincrónico para todos los objetos de vista de origen de datos. El <xref:System.Web.UI.DataSourceView.Insert%2A> llamadas al método el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> mediante cualquiera de método `values` proporcionado. El `callback` parámetro es un delegado que un control enlazado a datos que se pasa al origen de datos control de vista, que se usa para notificar a los datos enlazados cuando la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> ha completado la operación. El método usa los parámetros de la <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para devolver el número de registros afectados y cualquier <xref:System.Exception> excepción producida por el <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> llamada al método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> proporcionado es <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la vista de datos de origen.</summary>
        <value>Nombre del objeto <see cref="T:System.Web.UI.DataSourceView" />, en caso de que tenga un nombre. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> método notifica a un control enlazado a datos que el origen de datos subyacente ha cambiado y que el control debe volver a enlazar y realizar cualquier trabajo necesario. Normalmente, el <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> método se llama cuando ha cambiado una propiedad de la vista del origen de datos.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Uno de los valores de <see cref="T:System.Web.UI.DataSourceCapabilities" /> que se compara con las funciones que admite la vista.</param>
        <summary>El método <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> llama a este método para comparar las funciones solicitadas para una operación de <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> con las funciones que admite la vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> método se utiliza la vista del origen de datos para examinar cada una de las funciones solicitadas por un control enlazado a datos, representado por el <xref:System.Web.UI.DataSourceSelectArguments> objeto pasa a la <xref:System.Web.UI.DataSourceView.Select%2A> método y a las funciones compatibles con los datos de comparación vista del origen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La vista de origen de datos no admite la función de origen de datos especificada.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">Objeto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> que se utiliza para solicitar operaciones en los datos después de la recuperación de datos básicos.</param>
        <param name="callback">Delegado <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> que se utiliza para notificar a un control enlazado a datos la finalización de la operación asincrónica.</param>
        <summary>Obtiene, de forma asincrónica, una lista de datos del espacio de almacenamiento de datos subyacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.Select%2A> método es la interfaz de la recuperación de datos asincrónico para todos los objetos de vista de origen de datos. El <xref:System.Web.UI.DataSourceView.Select%2A> llamadas al método el <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método, pasando cualquier <xref:System.Web.UI.DataSourceSelectArguments> proporcionado. El `callback` parámetro es un delegado que un control enlazado a datos que se pasa al origen de datos control de vista, que se usa para notificar a los datos enlazados cuando la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> ha completado la operación. Los datos devueltos por la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> llamada se devuelve en el parámetro de la <xref:System.Web.UI.DataSourceViewSelectCallback> delegar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El delegado <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> proporcionado es <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Interfaz <see cref="T:System.Collections.IDictionary" /> de claves de objetos o filas que se va a actualizar mediante la operación de actualización.</param>
        <param name="values">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores nuevos.</param>
        <param name="oldValues">Interfaz <see cref="T:System.Collections.IDictionary" /> de pares de nombre/valor que representan los elementos de datos y sus valores originales.</param>
        <param name="callback">Delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> que se utiliza para notificar a un control enlazado a datos la finalización de la operación asincrónica.</param>
        <summary>Realiza una operación de actualización asincrónica en la lista de datos que el objeto <see cref="T:System.Web.UI.DataSourceView" /> representa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataSourceView.Update%2A> método es la interfaz de modificación de datos asincrónico para todos los objetos de vista de origen de datos. El <xref:System.Web.UI.DataSourceView.Update%2A> llamadas al método el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> mediante cualquiera de método `keys`, `values`, y `oldValues` valores de parámetro proporcionados. El `callback` parámetro es un delegado que un control enlazado a datos que se pasa al origen de datos control de vista, que se usa para notificar a los datos enlazados cuando la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> ha completado la operación. El método usa los parámetros de la <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para devolver el número de registros afectados y cualquier <xref:System.Exception> excepción producida por el <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> llamar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El delegado <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> proporcionado es <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>