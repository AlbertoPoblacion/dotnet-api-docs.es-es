<Type Name="CssStyleCollection" FullName="System.Web.UI.CssStyleCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e90799a79be682940c01982e05bf53f0f88688a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990504" /></Metadata><TypeSignature Language="C#" Value="public sealed class CssStyleCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CssStyleCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.CssStyleCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CssStyleCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class CssStyleCollection sealed" />
  <TypeSignature Language="F#" Value="type CssStyleCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene los atributos de estilo en línea de las hojas de estilos en cascada (CSS) HTML para un control de servidor HTML especificado. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estilos declarados para un determinado control de servidor HTML se agregan a la colección cuando se analiza la página de formularios Web Forms contenedora. Analiza automáticamente y expone las propiedades CSS a través de una API de modelo de diccionario. Se puede manipular cualquier propiedad CSS en un control de servidor a través de la <xref:System.Web.UI.HtmlControls.HtmlControl.Style%2A> propiedad. Simplemente utilice clave y valor de la propiedad de CSS de la colección indizada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se recorre el <xref:System.Web.UI.CssStyleCollection> de objeto para un <xref:System.Web.UI.HtmlControls.HtmlInputText> control de servidor. El <xref:System.Web.UI.CssStyleCollection.Keys%2A> propiedad se utiliza para determinar qué atributos de estilo se han declarado en el control de servidor y, a continuación, enlaza el atributo nombres de y los valores para un <xref:System.Web.UI.WebControls.DataList> objeto en la página de formularios Web Forms.  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento de estilo al objeto <see cref="T:System.Web.UI.CssStyleCollection" /> de un control.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="cssStyleCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del nuevo atributo de estilo que se va a agregar a la colección.</param>
        <param name="value">Valor del atributo de estilo que se va a agregar a la colección.</param>
        <summary>Agrega un elemento de estilo al objeto <see cref="T:System.Web.UI.CssStyleCollection" /> de un control utilizando el par de nombre y valor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no existe en el elemento de estilo para agregar la <xref:System.Web.UI.HtmlTextWriterStyle> enumeración, utilice la sobrecarga de la <xref:System.Web.UI.CssStyleCollection.Add%2A> método que toma un <xref:System.Web.UI.HtmlTextWriterStyle> parámetro porque está fuertemente tipada. Esto significa que se incluirán los elementos que se agregan al ver los elementos con el descriptor de acceso get de la <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar las dos sobrecargas de la <xref:System.Web.UI.CssStyleCollection.Add%2A> método para agregar una hoja de estilos en cascada a un <xref:System.Web.UI.HtmlControls.HtmlSelect>, <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>y un <xref:System.Web.UI.WebControls.Label> controlar mediante programación.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> es <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="cssStyleCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Valor de enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> que se va a agregar a la colección.</param>
        <param name="value">Valor del atributo de estilo que se va a agregar a la colección.</param>
        <summary>Agrega un elemento de estilo a la colección <see cref="T:System.Web.UI.CssStyleCollection" /> de un control utilizando el valor de enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado y el valor correspondiente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no existe en el elemento de estilo para agregar la <xref:System.Web.UI.HtmlTextWriterStyle> enumeración, utilícelo <xref:System.Web.UI.CssStyleCollection.Add%2A> sobrecarga de la <xref:System.Web.UI.CssStyleCollection.Add%2A> método en lugar de la sobrecarga que no tome un <xref:System.Web.UI.HtmlTextWriterStyle> parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar las dos sobrecargas de la <xref:System.Web.UI.CssStyleCollection.Add%2A> método para agregar una hoja de estilos en cascada a un <xref:System.Web.UI.HtmlControls.HtmlSelect>, <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>y un <xref:System.Web.UI.WebControls.Label> controlar mediante programación.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cssStyleCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los elementos de estilo del objeto <see cref="T:System.Web.UI.CssStyleCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.CssStyleCollection.Clear%2A> método para eliminar mediante programación CSS todos los estilos de un <xref:System.Web.UI.HtmlControls.HtmlSelect> control.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.CssStyleCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de elementos del objeto <see cref="T:System.Web.UI.CssStyleCollection" />.</summary>
        <value>Número de elementos del objeto <see cref="T:System.Web.UI.CssStyleCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un `CountStyleFunc` función que obtiene el valor actual de la <xref:System.Web.UI.CssStyleCollection.Count%2A> propiedad para un <xref:System.Web.UI.HtmlControls.HtmlInputText> control de servidor y se muestra en una página ASP.NET.  
  
 [!code-aspx-csharp[CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CssStyleCollection/CS/cssstylecollection_4.cs.aspx#1)]
 [!code-aspx-vb[CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CssStyleCollection/VB/cssstylecollection_4.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece un valor de hojas de estilo en cascada para el control de servidor HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.CssStyleCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Índice del atributo de las hojas de estilo en cascada.</param>
        <summary>Obtiene o establece un valor de hojas de estilo en cascada especificado para el control de servidor HTML.</summary>
        <value>El valor de <paramref name="key" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad para devolver el valor de un estilo que se establece en un <xref:System.Web.UI.HtmlControls.HtmlInputText> control.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[System.Web.UI.HtmlTextWriterStyle key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(valuetype System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::Web::UI::HtmlTextWriterStyle] { System::String ^ get(System::Web::UI::HtmlTextWriterStyle key); void set(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Web.UI.HtmlTextWriterStyle) : string with get, set" Usage="System.Web.UI.CssStyleCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">Una clase <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</param>
        <summary>Obtiene o establece un valor <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado para el control de servidor HTML.</summary>
        <value>El valor <paramref name="key" />; en caso contrario, <see langword="null" />, si el parámetro <paramref name="key" /> no está en la colección del control de servidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estilo de elementos que se agregan mediante programación a un <xref:System.Web.UI.CssStyleCollection> colección para un control con el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad o el <xref:System.Web.UI.CssStyleCollection.Add%2A> método que toma un <xref:System.Web.UI.HtmlTextWriterStyle> valor de enumeración como entrada se incluyen en el recuento de elementos de estilo Devuelve con el <xref:System.Web.UI.CssStyleCollection.Count%2A> propiedad y se incluyen con el literal de cadena que se devuelve con el <xref:System.Web.UI.CssStyleCollection.Value%2A> propiedad. Estos atributos están fuertemente tipados. Si existe el atributo de hoja de estilos en cascada que desea agregar a un control de servidor en el <xref:System.Web.UI.HtmlTextWriterStyle> enumeración, utilice estos métodos fuertemente tipados. Si el atributo que desea agregar no existe en el <xref:System.Web.UI.HtmlTextWriterStyle> enumeración, utilice el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad o el <xref:System.Web.UI.CssStyleCollection.Add%2A> método.  
  
 Intentando obtener acceso a un <xref:System.Web.UI.HtmlTextWriterStyle> valor de enumeración en el <xref:System.Web.UI.CssStyleCollection> de un control que no se ha agregado o tener acceso a un atributo CSS que se ha agregado con el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad o el <xref:System.Web.UI.CssStyleCollection.Add%2A> método, devuelve `null` utilizando el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.UI.CssStyleCollection.Item%2A> propiedad para devolver el valor de un estilo que se establece en un <xref:System.Web.UI.HtmlControls.HtmlInputText> control.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.CssStyleCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de claves de todos los estilos en el objeto <see cref="T:System.Web.UI.CssStyleCollection" /> para un control de servidor HTML específico.</summary>
        <value>Colección de claves contenida en el objeto <see cref="T:System.Web.UI.CssStyleCollection" /> para el control de servidor HTML especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recorrer en iteración el <xref:System.Web.UI.CssStyleCollection> colección para un <xref:System.Web.UI.HtmlControls.HtmlInputText> control de servidor. El <xref:System.Web.UI.CssStyleCollection.Keys%2A> propiedad se utiliza para determinar qué atributo de estilo se ha declarado en el control de servidor y enlaza los nombres de atributos y valores para un <xref:System.Web.UI.WebControls.DataList> objeto en la página de formularios Web Forms.  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quita un elemento de estilo del objeto <see cref="T:System.Web.UI.CssStyleCollection" /> de un control.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="cssStyleCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Literal de cadena de estilo que se va a quitar.</param>
        <summary>Quita un elemento de estilo del objeto <see cref="T:System.Web.UI.CssStyleCollection" /> de un control mediante la clave de estilo especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.CssStyleCollection.Remove%2A> método para eliminar mediante programación un CSS de estilo de un <xref:System.Web.UI.HtmlControls.HtmlSelect> control.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="cssStyleCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">El valor de enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> que se va a quitar.</param>
        <summary>Quita un elemento de estilo de la colección <see cref="T:System.Web.UI.CssStyleCollection" /> de un control mediante el valor de enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.CssStyleCollection.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del atributo <see langword="style" /> del control de servidor HTML.</summary>
        <value>Literal de cadena de estilo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.CssStyleCollection.Value%2A> propiedad para mostrar el atributo de estilo de un <xref:System.Web.UI.HtmlControls.HtmlSelect> controlar cuando el usuario hace clic en un botón de envío.  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Item" />
      </Docs>
    </Member>
  </Members>
</Type>