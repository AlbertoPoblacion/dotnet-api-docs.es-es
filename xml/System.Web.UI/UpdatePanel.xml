<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="408ee6868cabe5710de38771644ba2d12c62470d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610819" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite que secciones de una página se representen parcialmente sin un postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Actualizando contenido de UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Uso de UpdatePanel](#updatepanel_usage)  
  
-   [Aplicar estilos](#applying_styles)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 <xref:System.Web.UI.UpdatePanel> los controles son una parte fundamental de la funcionalidad de AJAX de ASP.NET. Se usan con el <xref:System.Web.UI.ScriptManager> control para habilitar la representación parcial de página. Representación parcial de página reduce la necesidad de postbacks sincrónicos y actualizaciones de página completa cuando solo parte de la página tiene que actualizarse. Representación parcial de página mejora la experiencia del usuario porque reduce el parpadeo de la pantalla que se produce durante un postback de página completa y mejora la interactividad de páginas Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Actualizando contenido de UpdatePanel  
 Cuando se habilita la representación parcial de página, un control puede realizar una devolución de datos que actualiza la página entera o una devolución de datos asincrónica que actualiza el contenido de uno o varios <xref:System.Web.UI.UpdatePanel> controles. Si un control produce un postback asincrónico y las actualizaciones de un <xref:System.Web.UI.UpdatePanel> control depende de lo siguiente:  
  
-   Si el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad de la <xref:System.Web.UI.UpdatePanel> control se establece en <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, el <xref:System.Web.UI.UpdatePanel> contenido del control se actualiza en cada devolución de datos que se origina en la página. Esto incluye asincrónicas de los controles que están dentro de otras <xref:System.Web.UI.UpdatePanel> controles y las devoluciones de datos desde los controles que no están dentro <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Si el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, el <xref:System.Web.UI.UpdatePanel> contenido del control se actualiza en las siguientes circunstancias:  
  
    -   Cuando se llama a la <xref:System.Web.UI.UpdatePanel.Update%2A> método de la <xref:System.Web.UI.UpdatePanel> controlar explícitamente.  
  
    -   Cuando el <xref:System.Web.UI.UpdatePanel> control está anidado dentro de otro <xref:System.Web.UI.UpdatePanel> se actualiza el control y el panel principal.  
  
    -   Cuando se produjo una devolución de datos con un control que se define como un desencadenador mediante la `Triggers` propiedad de la <xref:System.Web.UI.UpdatePanel> control. En este escenario, el control activa explícitamente una actualización del contenido del panel. El control puede ser dentro o fuera del <xref:System.Web.UI.UpdatePanel> control que está asociado el desencadenador.  
  
    -   Cuando el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad está establecida en `true` y un control secundario de la <xref:System.Web.UI.UpdatePanel> control provoca una devolución de datos. De controles secundarios anidados <xref:System.Web.UI.UpdatePanel> controles no se realiza una actualización a la externa <xref:System.Web.UI.UpdatePanel> controlar a menos que se definan explícitamente como desencadenadores.  
  
 La combinación de configuración de la <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad a `false` y la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad <xref:System.Web.UI.UpdatePanelUpdateMode.Always> no está permitido y se iniciará una excepción.  
  
 Cuando el <xref:System.Web.UI.UpdatePanel> control realiza una solicitud post asincrónica, agrega un encabezado HTTP personalizado. Algunos proxies quitan este encabezado HTTP personalizado. Si esto ocurre, el servidor controla la solicitud como una devolución de datos normal, lo que provoca un error de cliente. Para resolver este problema, inserte un campo de formulario personalizado cuando realice envíos asincrónicos. A continuación, compruebe el encabezado o el campo de formulario personalizada en código del servidor.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Uso de UpdatePanel  
 Puede usar varios <xref:System.Web.UI.UpdatePanel> controles actualizar diferentes regiones de página por separado. Cuando la página que contiene uno o varios <xref:System.Web.UI.UpdatePanel> controles se representa por primera vez, todo el contenido de todos los <xref:System.Web.UI.UpdatePanel> controles se representan y se envía al explorador. En posteriores postbacks asincrónicos, el contenido de cada <xref:System.Web.UI.UpdatePanel> control podría no actualizarse según la configuración del panel y en la lógica de cliente o servidor para paneles individuales.  
  
 También puede usar <xref:System.Web.UI.UpdatePanel> controles en los escenarios siguientes:  
  
-   En los controles de usuario.  
  
-   En las páginas maestras y de contenido.  
  
-   Anidar dentro de otras <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Interior con plantilla controles como el <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.Repeater> controles.  
  
 <xref:System.Web.UI.UpdatePanel> pueden agregarse controles mediante declaración o mediante programación.  
  
 Puede agregar un <xref:System.Web.UI.UpdatePanel> control mediante programación, pero no se puede agregar desencadenadores mediante programación. Para crear un comportamiento similar al desencadenador, puede registrar un control en la página como un control de postback asincrónico. Para ello, al llamar a la <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método de la <xref:System.Web.UI.ScriptManager> control. A continuación, puede crear un controlador de eventos que se ejecuta en respuesta a la devolución de datos asincrónica y en el controlador, llamada la <xref:System.Web.UI.UpdatePanel.Update%2A> método de la <xref:System.Web.UI.UpdatePanel> control.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Aplicar estilos  
 El <xref:System.Web.UI.UpdatePanel> control acepta atributos expando. Esto le permite establecer una clase CSS para el HTMLelements que representan los controles. Por ejemplo, podría crear el marcado que se muestra en el ejemplo siguiente:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 El marcado en el ejemplo anterior representa HTML similar al siguiente cuando se ejecuta la página:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Los ejemplos siguientes muestran diferentes usos de la <xref:System.Web.UI.UpdatePanel> control.  
  
 **Controles en un Control UpdatePanel**  
  
 En el ejemplo siguiente se muestra cómo colocar controles dentro de un <xref:System.Web.UI.UpdatePanel> control para reducir el parpadeo de la pantalla cuando se registra en el servidor. En este ejemplo, un <xref:System.Web.UI.WebControls.Calendar> y un <xref:System.Web.UI.WebControls.DropDownList> control están dentro de un <xref:System.Web.UI.UpdatePanel> control. De forma predeterminada, el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad es <xref:System.Web.UI.UpdatePanelUpdateMode.Always> y <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad es `true`. Por lo tanto, los controles secundarios del panel de provocan un postback asincrónico.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Escenario principal-detalle con controles UpdatePanel**  
  
 En el ejemplo siguiente, un <xref:System.Web.UI.UpdatePanel> control se utiliza en un escenario principal-detalle que muestra los pedidos y detalles de pedido de la base de datos Northwind. Una <xref:System.Web.UI.UpdatePanel> control contiene el <xref:System.Web.UI.WebControls.GridView> control que muestra una lista de pedidos. Un segundo <xref:System.Web.UI.UpdatePanel> control contiene un <xref:System.Web.UI.WebControls.DetailsView> control que muestra los detalles de un pedido. Cuando se selecciona un pedido de la primera tabla, se muestran detalles sobre dicho pedido en la segunda tabla. La segunda tabla se actualiza de forma asincrónica en función de la selección de la primera tabla. Las operaciones de ordenación y la paginación en la tabla de resumen de pedidos también producen actualizaciones parciales.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Si coloca un <xref:System.Web.UI.WebControls.GridView> control dentro de un <xref:System.Web.UI.UpdatePanel> configuración de control, el <xref:System.Web.UI.WebControls.GridView> del control <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> propiedad `true` no se admite. Sin embargo, dado que el <xref:System.Web.UI.UpdatePanel> control admite asincrónicas, cualquier devolución de datos que cambian el <xref:System.Web.UI.WebControls.GridView> control dentro de un <xref:System.Web.UI.UpdatePanel> control producir el mismo comportamiento que ordenar y paginar las devoluciones de llamada.  
  
 **Uso de una plantilla de un Control UpdatePanel**  
  
 En el ejemplo siguiente, un <xref:System.Web.UI.UpdatePanel> control se utiliza en la plantilla de elemento de un <xref:System.Web.UI.WebControls.GridView> control. <xref:System.Web.UI.UpdatePanel> controles en cada fila de datos se generan automáticamente. Cada fila <xref:System.Web.UI.UpdatePanel> control contiene un <xref:System.Web.UI.WebControls.Label> control para mostrar la cantidad del elemento en esa fila y un <xref:System.Web.UI.WebControls.Button> control para reducir y aumentar la cantidad.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para inicializar una nueva instancia de la <xref:System.Web.UI.UpdatePanel> clase. Para agregar dinámicamente un <xref:System.Web.UI.UpdatePanel> el control a una página, cree un nuevo <xref:System.Web.UI.UpdatePanel> de instancia y, a continuación, agregar controles secundarios al objeto de control que se expone mediante la instancia <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear dinámicamente una <xref:System.Web.UI.UpdatePanel> de control y agregarlo a una página. Al hacer clic en el botón dentro de la <xref:System.Web.UI.UpdatePanel> (control), el mensaje se actualiza con la fecha y hora. Los controles secundarios se agregan mediante el <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de atributos de hoja de estilos en cascada (CSS) del control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Nombres de las reglas de estilo CSS de la colección de atributos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.Attributes%2A> propiedad contiene una colección de atributos de estilo CSS que se puede usar en la envolvente `div` elemento de la <xref:System.Web.UI.UpdatePanel> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los postbacks de los controles secundarios inmediatos de un control <see cref="T:System.Web.UI.UpdatePanel" /> actualizan el contenido del panel.</summary>
        <value>
          Es <see langword="true" /> si los postbacks de los controles secundarios inmediatos del control <see cref="T:System.Web.UI.UpdatePanel" /> actualizan el contenido del panel; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad `true` si desea que las devoluciones de datos desde los controles secundarios inmediatos de la <xref:System.Web.UI.UpdatePanel> control para producir una actualización del contenido del panel. De controles secundarios anidados <xref:System.Web.UI.UpdatePanel> controles no provocará una actualización del elemento primario <xref:System.Web.UI.UpdatePanel> contenido del control a menos que llame a la <xref:System.Web.UI.UpdatePanel.Update%2A> método explícitamente o defina los controles secundarios como desencadenadores.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Always> y el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad está establecida en `false`, un <xref:System.InvalidOperationException> se produce una excepción durante la <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> método. No se permite esta combinación de propiedades para el <xref:System.Web.UI.UpdatePanel> control.  
  
 Un escenario donde puede establecer <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> a `false` es cuando se tienen dos <xref:System.Web.UI.UpdatePanel> controles y desea que una devolución de datos desde el primer panel para actualizar el contenido del segundo panel pero no para actualizar su propio contenido. Por ejemplo, el primer panel puede ser una lista de productos que desea comprar y el segundo panel podría ser un carro de la compra.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que define el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Instancia de <see cref="T:System.Web.UI.ITemplate" /> que define el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propiedad contiene el contenido que aparece dentro de un <xref:System.Web.UI.UpdatePanel> controlar cuando se representa. Puede crear contenido de la plantilla mediante declaración o mediante programación. La plantilla de contenido de un <xref:System.Web.UI.UpdatePanel> control es una plantilla de instancia única. Por lo tanto, las propiedades de los controles que contiene pueden tener acceso directamente en la página sin utilizar el <xref:System.Web.UI.Page.FindControl%2A> método. Para obtener más información, consulte el <xref:System.Web.UI.TemplateInstanceAttribute> general sobre la clase.  
  
 Para agregar elementos a la <xref:System.Web.UI.UpdatePanel> controlar mediante declaración, agregue un `<ContentTemplate>` elemento entre las etiquetas apertura y cierre de la <xref:System.Web.UI.UpdatePanel> control. Dentro de la `<ContentTemplate>` etiquetas de elementos, declare otros controles y los elementos HTML.  
  
 Para agregar elementos a la <xref:System.Web.UI.UpdatePanel> controlar dinámicamente, use el <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad, que le permite agregar controles secundarios sin tener que crear una plantilla personalizada que implementa el <xref:System.Web.UI.ITemplate> interfaz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se establece la propiedad <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> del control <see cref="T:System.Web.UI.UpdatePanel" /> una vez creada una instancia de la plantilla o una vez creado el contenedor de plantillas de contenido.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto de control al que puede agregar controles secundarios mediante programación.</summary>
        <value>Objeto <see cref="T:System.Web.UI.Control" /> que define el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad le permite agregar mediante programación controles secundarios a la <xref:System.Web.UI.UpdatePanel> control sin tener que definir una plantilla personalizada que hereda de la <xref:System.Web.UI.ITemplate> interfaz. Si va a agregar contenido a la <xref:System.Web.UI.UpdatePanel> controlar de manera declarativa o a través de un diseñador, debe agregar contenido a la <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propiedad mediante el uso de un `<ContentTemplate>` elemento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar mediante programación el <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad de un <xref:System.Web.UI.UpdatePanel> control. El <xref:System.Web.UI.WebControls.Label.Text%2A> propiedad de un <xref:System.Web.UI.WebControls.Label> control se establece cuando `Button1` se hace clic en.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Web.UI.ControlCollection" /> que contiene los controles secundarios del control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Colección de controles secundarios del control <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.Controls%2A> reemplazado la propiedad de la base de <xref:System.Web.UI.Control> clase y sealed para evitar la derivación adicional. Para agregar controles a la <xref:System.Web.UI.UpdatePanel> control de forma declarativa, cree una `<ContentTemplate>` elemento dentro de la <xref:System.Web.UI.UpdatePanel> marcado del control. Para agregar controles a la <xref:System.Web.UI.UpdatePanel> controlar mediante programación, use la <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se ha llamado al método <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" /> o <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> de la clase <see cref="T:System.Web.UI.ControlCollection" />. Para cambiar el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />, modifique los controles secundarios de la propiedad <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Web.UI.Control" /> que actúa como contenedor de los controles secundarios que definen el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Contenedor <see cref="T:System.Web.UI.Control" /> del contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método está pensado para su uso por los programadores de controles que desean extender el <xref:System.Web.UI.UpdatePanel> control. Por ejemplo, en las clases derivadas, puede proporcionar un control raíz diferente que actúa como contenedor para su <xref:System.Web.UI.UpdatePanel> contenido del control. La implementación predeterminada devuelve un <xref:System.Web.UI.Control> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo invalidar el <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> método en un personalizado <xref:System.Web.UI.UpdatePanel> control para representar siempre la `<fieldset>` y `<legend>` elementos para el contenido del panel. Personalizado <xref:System.Web.UI.UpdatePanel> control define una propiedad pública denominada `GroupingText` que es un literal de cadena en el `<legend>` elemento.  
  
 Un personalizado <xref:System.Web.UI.UpdatePanel> control denominado `CustomUpdatePanel` deriva <xref:System.Web.UI.UpdatePanel> e invalida el <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> método. Coloque el `CustomUpdatePanel` código de origen en la carpeta App_Code del sitio Web de la clase.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Personalizado <xref:System.Web.UI.UpdatePanel> control se utiliza en la página al igual que el <xref:System.Web.UI.UpdatePanel> es el control. En el ejemplo siguiente se muestra una página que contiene la custom <xref:System.Web.UI.UpdatePanel> control.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la colección de todos los controles contenidos en el control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.ControlCollection" /> formado por todos los controles que definen el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> método se utiliza por los programadores de controles.  
  
 Dado que este método está protegido y sellado, es visible para las clases que heredan de la <xref:System.Web.UI.UpdatePanel> clase, pero no se puede invalidar. Este método reemplaza la implementación base para devolver especializada <xref:System.Web.UI.ControlCollection> objeto que produce una <xref:System.InvalidOperationException> cuando el <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, o <xref:System.Web.UI.ControlCollection.RemoveAt%2A> método de la <xref:System.Web.UI.ControlCollection> se invoca la clase. Para cambiar el contenido del control <xref:System.Web.UI.UpdatePanel>, modifique los controles secundarios de la propiedad <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa la colección de desencadenadores del control <see cref="T:System.Web.UI.UpdatePanel" /> si se habilita la representación de página parcial.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está habilitada la representación parcial de página, los desencadenadores que se definen en el <xref:System.Web.UI.UpdatePanel.Triggers%2A> propiedad no se inicializó porque no tienen ningún efecto. El <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> propiedad de la <xref:System.Web.UI.ScriptManager> control obtiene o establece un valor que indica si está habilitada la representación parcial de página. El <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> propiedad de la <xref:System.Web.UI.ScriptManager> control obtiene o establece un valor que indica si se admite la representación parcial de página.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> método, asegúrese de llamar a la clase base para que se registren los desencadenadores si se habilita la representación parcial de página.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se actualiza el control <see cref="T:System.Web.UI.UpdatePanel" /> a consecuencia de un postback asincrónico.</summary>
        <value>
          Es <see langword="true" /> si el control <see cref="T:System.Web.UI.UpdatePanel" /> actual se actualiza como consecuencia de un postback asincrónico; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> propiedad está pensada para su uso por los programadores de controles que desean saber cuándo un <xref:System.Web.UI.UpdatePanel> control se está actualizando como resultado un postback asincrónico. En escenarios de desarrollo de página, use la <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> propiedad para determinar si una página está procesando como resultado un postback asincrónico.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel> del control <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> se crea una instancia de propiedad durante el <xref:System.Web.UI.UpdatePanel.OnInit%2A> método.  
  
 El <xref:System.Web.UI.UpdatePanel.OnInit%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdatePanel> control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se define la propiedad <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> cuando ya se ha creado la propiedad <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />.</exception>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza la <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> método de la clase base para que los delegados registrados puede recibir el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Load" /> del control <see cref="T:System.Web.UI.UpdatePanel" /> e invoca el método <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> cuando no se habilita la representación de página parcial.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Si invalida el <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> método, asegúrese de llamar a la clase base para que los <see cref="E:System.Web.UI.Control.Load" /> se generará el evento.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdatePanel> control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El valor de la propiedad <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> se establece en <see langword="false" /> y el de la propiedad <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" />, en <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Unload" /> base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.OnUnload%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdatePanel> control  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida que representa el contenido HTML.</param>
        <summary>Genera el evento <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.Render%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdatePanel> control.  
  
 El <xref:System.Web.UI.UpdatePanel.Render%2A> método escribe el contenido representado de la <xref:System.Web.UI.UpdatePanel> control en el explorador utilizando proporcionado <xref:System.Web.UI.HtmlTextWriter> objeto. Cuando se reemplaza la <xref:System.Web.UI.UpdatePanel.Render%2A> método en una clase derivada, asegúrese de llamar a la <xref:System.Web.UI.UpdatePanel.Render%2A> método de la base de clase para que los controles secundarios de la <xref:System.Web.UI.UpdatePanel> se representan el control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida que representa el contenido HTML.</param>
        <summary>Genera el evento <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método se usa por los programadores de controles para ampliar la funcionalidad de la <xref:System.Web.UI.UpdatePanel> control.  
  
 El <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método escribe el contenido representado de la <xref:System.Web.UI.UpdatePanel> control en el explorador utilizando proporcionado <xref:System.Web.UI.HtmlTextWriter> objeto. Cuando se reemplaza la <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método en una clase derivada, asegúrese de llamar a la <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método de la base de clase para que los controles secundarios de la <xref:System.Web.UI.UpdatePanel> se representan el control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el contenido de un control <see cref="T:System.Web.UI.UpdatePanel" /> se incluye en un <see langword="&lt;div&gt;" /> HTML o en un elemento de <see langword="&lt;span&gt;" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. El valor predeterminado es <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> para que el contenido del panel se incluya en un elemento <see langword="&lt;div&gt;" /> HTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, el contenido de un <xref:System.Web.UI.UpdatePanel> control se representa dentro de un elemento HTML `<span>` elemento. Si el <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelRenderMode.Block>, se representa dentro de un elemento HTML `<div>` elemento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propiedad mediante declaración. El <xref:System.Web.UI.UpdatePanel> control denominado `UpdatePanel1` se representa en HTML `<span>` elemento. Si el <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propiedad se establece en <xref:System.Web.UI.UpdatePanelRenderMode.Block>, el párrafo resultante parecería inconexo debido a la manera en que el código HTML `<div>` elemento se representa.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se va a actualizar el contenido del control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>
          Es <see langword="true" /> si se va a actualizar el <see cref="T:System.Web.UI.UpdatePanel" /> contenido de control; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> propiedad devuelve `true` si la <xref:System.Web.UI.UpdatePanel.Update%2A> método se llama explícitamente o si la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Esta propiedad está pensada para su uso por los programadores de controles que desean extender el <xref:System.Web.UI.UpdatePanel> control. Por ejemplo, en las clases derivadas, puede proporcionar una lógica adicional para determinar si un <xref:System.Web.UI.UpdatePanel> control debe actualizarse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">El nombre del atributo.</param>
        <summary>Devuelve un atributo de un control web utilizando el nombre especificado.</summary>
        <returns>El valor del atributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdatePanel> se convierte en una interfaz <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nombre del atributo que se va a establecer.</param>
        <param name="value">Valor del atributo que se debe establecer.</param>
        <summary>Establece el valor del atributo del control especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.UpdatePanel> se convierte en una interfaz <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> que contiene los objetos <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> y <see cref="T:System.Web.UI.PostBackTrigger" /> que se registraron mediante declaración para el control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Colección de objetos de tipo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> y <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.UpdatePanel.Triggers%2A> propiedad obtiene una colección de todos los desencadenadores que se han definido para el <xref:System.Web.UI.UpdatePanel> control. (Puede definir desencadenadores mediante declaración utilizando el **UpdatePanelTrigger Editor de la colección** cuadro de diálogo en el diseñador o mediante el uso de la `<Triggers>` elemento de la <xref:System.Web.UI.UpdatePanel> control.) La colección incluye <xref:System.Web.UI.AsyncPostBackTrigger> y <xref:System.Web.UI.PostBackTrigger> objetos.  
  
 Desencadenadores declarativos que se definen en el <xref:System.Web.UI.UpdatePanel.Triggers%2A> colección no se realiza el seguimiento de estado de vista.  
  
 Cuando un control que es un contenedor de nomenclatura se usa como un desencadenador, todos sus controles secundarios que provocan la devolución de datos se comportan como desencadenadores.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera una actualización del contenido de un control <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la página está habilitada para la representación parcial de página, cuando se invoca el <xref:System.Web.UI.UpdatePanel.Update%2A> método, el <xref:System.Web.UI.UpdatePanel> contenido del control se actualiza en el explorador. Llame a la <xref:System.Web.UI.UpdatePanel.Update%2A> método si tiene código de servidor que se debe ejecutar para determinar si un <xref:System.Web.UI.UpdatePanel> control debe actualizarse. Si tiene previsto usar el <xref:System.Web.UI.UpdatePanel.Update%2A> método, Establece la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Si desea que la decisión de actualizar el panel en la lógica del servidor, asegúrese de que el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad es `false` y que ningún desencadenador explícita se define para el panel.  
  
 En un escenario de desarrollo de página típico, si definen los desencadenadores o si el <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad es `true` para el <xref:System.Web.UI.UpdatePanel> (control), el <xref:System.Web.UI.UpdatePanel.Update%2A> método se invoca automáticamente durante el ciclo de vida de la página.  
  
 Si el <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propiedad no está definida para el <xref:System.Web.UI.UpdatePanel> controlar, no se producirá ninguna actualización del panel.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Web.UI.UpdatePanel.Update%2A> método para actualizar el contenido de un <xref:System.Web.UI.UpdatePanel> controlar cuando han transcurrido más de cinco segundos desde la última actualización.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> se establece en <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  
  
 \- o -  
  
 Se llama al método <see cref="M:System.Web.UI.UpdatePanel.Update" /> durante el evento <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> de la página o después de él.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica cuándo se actualiza un control de contenido <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. El valor predeterminado es <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Web.UI.UpdatePanel> control no está dentro de otro <xref:System.Web.UI.UpdatePanel> el panel de control se actualiza según la configuración de la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> y <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedades, junto con la colección de desencadenadores. Cuando un <xref:System.Web.UI.UpdatePanel> control está dentro de otro <xref:System.Web.UI.UpdatePanel> control, el panel secundarios se actualiza automáticamente cuando se actualiza el panel primario.  
  
 El contenido de un <xref:System.Web.UI.UpdatePanel> control se actualiza en las siguientes circunstancias:  
  
-   Si el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, el <xref:System.Web.UI.UpdatePanel> contenido del control se actualiza en cada devolución de datos que se origine en cualquier lugar en la página. Esto incluye asincrónicas de los controles que están dentro de otras <xref:System.Web.UI.UpdatePanel> controles y las devoluciones de datos desde los controles que no están dentro <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Si el <xref:System.Web.UI.UpdatePanel> control está anidado dentro de otro <xref:System.Web.UI.UpdatePanel> control y el panel de actualización primario está actualizado.  
  
-   Si el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, y se produce una de las condiciones siguientes:  
  
    -   Se llama a la <xref:System.Web.UI.UpdatePanel.Update%2A> método de la <xref:System.Web.UI.UpdatePanel> controlar explícitamente.  
  
    -   La devolución de datos se debe a un control que se define como un desencadenador mediante la <xref:System.Web.UI.UpdatePanel.Triggers%2A> propiedad de la <xref:System.Web.UI.UpdatePanel> control. En este escenario, el control activa explícitamente una actualización del contenido del panel. El control puede ser dentro o fuera del <xref:System.Web.UI.UpdatePanel> control que define el desencadenador.  
  
    -   El <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propiedad está establecida en `true` y un control secundario de la <xref:System.Web.UI.UpdatePanel> control provoca una devolución de datos. Un control secundario de un anidados <xref:System.Web.UI.UpdatePanel> control no hace que una actualización de la externa <xref:System.Web.UI.UpdatePanel> controlar a menos que se defina explícitamente como desencadenador.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar la propiedad <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>. El ejemplo declara dos <xref:System.Web.UI.UpdatePanel> controles. En el primer panel, el <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propiedad está establecida en <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. En el panel de la segundo, <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> está establecido en <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Un botón situado fuera de ambos paneles se registra como un control de devolución de datos asincrónico mediante una llamada a la <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método de la <xref:System.Web.UI.ScriptManager> control. En el botón `Click` controlador de eventos, el <xref:System.Web.UI.UpdatePanel.Update%2A> se denomina método del primer panel si han transcurrido más de cinco segundos desde la última actualización. En este escenario, el contenido del panel se actualiza sólo si la última actualización del panel se produjo hace más de cinco segundos. Siempre se actualiza el contenido del segundo panel.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El tipo especificado no es ninguno de los valores de <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>