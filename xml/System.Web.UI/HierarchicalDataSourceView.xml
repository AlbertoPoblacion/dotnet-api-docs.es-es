<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12561da0f0928a79c4ec483ae5b166609f0cb077" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990810" /></Metadata><TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <TypeSignature Language="F#" Value="type HierarchicalDataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una vista de datos en un nodo o colección de nodos en una estructura de datos jerárquica para un control <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET es compatible con una arquitectura de enlace de datos que permite a los controles de servidor Web enlazar a datos y presentarlos de forma coherente. Controles de servidor Web que se enlazan a datos se denominan controles enlazados a datos y las clases que facilitan ese enlace se denominan controles de origen de datos. Controles de origen de datos pueden representar cualquier origen de datos: un archivo, una secuencia, una base de datos relacional, un objeto de negocios y así sucesivamente. Presentar los datos de controles de origen de datos de una manera coherente a los controles enlazados a datos, independientemente del origen o el formato de los datos subyacentes.  
  
 Controles de origen de datos que representan datos jerárquicos derivan de la clase abstracta <xref:System.Web.UI.HierarchicalDataSourceControl> clase. Puede pensar en un control de origen de datos como la combinación de objeto de control de origen de datos y sus vistas asociadas en los datos subyacentes, que están representados por objetos de vista del origen de datos. Controles de origen de datos jerárquicos admiten una vista del origen de datos jerárquicos para cada nivel jerárquico de los datos que representan. Las vistas del origen de datos no tienen nombre, como el <xref:System.Web.UI.DataSourceView> objetos asociados con un <xref:System.Web.UI.DataSourceControl> de control, pero se identifican por su ruta de acceso jerárquica única.  
  
 Vistas del origen de datos definen las capacidades de un control de origen de datos. Todos los objetos de vista de origen de datos, incluidos <xref:System.Web.UI.HierarchicalDataSourceView>, admite la recuperación de datos desde el origen de datos subyacente mediante la <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> método, que recupera una lista jerárquica de datos como un <xref:System.Web.UI.IHierarchicalEnumerable> objeto. Los objetos, opcionalmente, admiten un conjunto básico de funcionalidades, incluidas las operaciones, como la vista del origen de datos de todos los <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>y la ordenación. Un control enlazado a datos puede detectar las capacidades de un control de origen de datos mediante la recuperación de un origen de datos asociado ver mediante el <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> método y consultar la vista en tiempo de diseño o en tiempo de ejecución. <xref:System.Web.UI.HierarchicalDataSourceView> no admite actualmente <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> o <xref:System.Web.UI.DataSourceView.Delete%2A> operaciones.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar una clase de la <xref:System.Web.UI.HierarchicalDataSourceView> clase para recuperar datos de almacenamiento de datos jerárquicos, en este caso, un sistema de archivos. El `FileSystemDataSourceView` clase está fuertemente tipado <xref:System.Web.UI.HierarchicalDataSourceView> instancia que habilita los controles de servidor Web jerárquicos como el <xref:System.Web.UI.WebControls.TreeView> control para enlazar a un `FileSystemDataSource` controlar y mostrar información del sistema de archivos. Por motivos de seguridad, información del sistema de archivos solo se muestra si se está utilizando el control de origen de datos en un host local, escenario autenticado y solo se inicia con el directorio virtual que se encuentra en la página de formularios Web Forms mediante el control de origen de datos. En caso contrario, el `viewPath` parámetro pasado al constructor podría utilizarse para crear una vista basada en la ruta de acceso de sistema de archivo actual. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Al heredar de <see cref="T:System.Web.UI.HierarchicalDataSourceView" />, debe reemplazar el miembro siguiente: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</para></block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HierarchicalDataSourceView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="hierarchicalDataSourceView.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de todos los elementos de datos de la vista.</summary>
        <returns>Colección <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> de elementos de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> método devuelve un <xref:System.Web.UI.IHierarchicalEnumerable> colección de elementos de datos en la vista actual. Puede llamar a la <xref:System.Collections.IEnumerable.GetEnumerator%2A> método para obtener un <xref:System.Collections.IEnumerator> de objetos y recorrer en iteración la colección de elementos de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> método en una clase que deriva el <xref:System.Web.UI.HierarchicalDataSourceView> clase para recuperar jerárquica <xref:System.IO.FileSystemInfo> datos desde un sistema de archivos. Por motivos de seguridad, información del sistema de archivos solo se muestra si se está utilizando el control de origen de datos en un host local, escenario autenticado y solo se inicia con el directorio virtual que se encuentra en la página de formularios Web Forms mediante el control de origen de datos. En caso contrario, el `viewPath` parámetro pasado al constructor del objeto view que podría utilizarse para crear una vista basada en la ruta de acceso de sistema de archivo actual. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.HierarchicalDataSourceControl> clase.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>