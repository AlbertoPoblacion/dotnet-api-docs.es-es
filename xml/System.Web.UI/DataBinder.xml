<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cbe1b56743176cf4a9ddc807dc5fbc78af6e12f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46658520" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona compatibilidad con diseñadores de desarrollo rápido de aplicaciones (RAD) para generar y analizar la sintaxis de expresiones de enlace de datos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar estático sobrecargado <xref:System.Web.UI.DataBinder.Eval%2A> método de esta clase en la sintaxis de enlace de datos en una página Web ASP.NET. Esto proporciona una sintaxis más fácil trabajar con que el enlace de datos estándar. Sin embargo, dado que `DataBinder.Eval` proporciona la conversión automática de tipos, puede dar como resultado un rendimiento más lento.  
  
 Para obtener más información sobre la sintaxis, las expresiones y enlace de datos ASP.NET, vea [enlazar a las bases de datos](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) y [información general sobre las expresiones de enlace de datos](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 A partir de .NET Framework 4.5, puede usar el enlace de modelos para simplificar algunas de las tareas que se tenían que realizar a través del enlace de datos en versiones anteriores. Para una serie de tutoriales sobre el uso de enlace de modelos con formularios Web Forms, consulte [enlace de modelos y formularios Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 En el ejemplo siguiente se usa estático <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> método para rellenar los campos de un <xref:System.Web.UI.WebControls.Repeater> controlar mediante un <xref:System.Collections.ArrayList> de `Product` objetos. El <xref:System.Web.UI.DataBinder.Eval%2A> se pudo aplicar el método con la misma sintaxis, pero no realizaría lo más rápido.  
  
 Este ejemplo usa un personalizado `Product` clase que expone una cadena `Model` propiedad y un valor numérico `UnitPrice` propiedad.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 El código siguiente es personalizado `Product` clase. Este código debe incluirse en un archivo de clase independiente en el directorio App_Code, como Product.cs o Product.vb.  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.DataBinder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si está habilitado el almacenamiento de datos en caché en tiempo de ejecución.</summary>
        <value>Es <see langword="true" /> si se habilita el almacenamiento en caché de la clase <see cref="T:System.Web.UI.DataBinder" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Utiliza la reflexión para analizar y evaluar una expresión de enlace de datos con respecto a un objeto en tiempo de ejecución.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partir de .NET Framework 4.5, puede usar el enlace de modelos para simplificar algunas de las tareas que se tenían que realizar a través del enlace de datos en versiones anteriores. Para una serie de tutoriales sobre el uso de enlace de modelos con formularios Web Forms, consulte [enlace de modelos y formularios Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa la expresión. Éste debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <param name="expression">Ruta de acceso de navegación desde el objeto <c>container</c> hasta el valor de propiedad pública que se va a situar en la propiedad de control enlazado. Debe ser una cadena de nombres de campo o de propiedad separados por puntos, como <c>Tables[0].DefaultView.[0].Price</c> en C# o <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <summary>Evalúa las expresiones de enlace de datos en tiempo de ejecución.</summary>
        <returns>Una instancia de <see cref="T:System.Object" /> resultante de la evaluación de la expresión de enlace de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la `expression` parámetro debe devolver una propiedad pública.  
  
 Este método se llama automáticamente al crear enlaces de datos en un diseñador de rápido de aplicaciones (RAD) de desarrollo como Visual Studio. También se puede utilizar mediante declaración para simplificar la conversión a una cadena de texto. Para ello, usa el `<%#  %>` sintaxis de expresión, como se utiliza en el enlace de datos estándar de ASP.NET.  
  
 Este método es especialmente útil cuando se enlazan datos a controles que están en una lista con plantilla.  
  
> [!NOTE]
>  Dado que este método realiza la evaluación enlazada en tiempo de ejecución, mediante la reflexión en tiempo de ejecución, puede provocar rendimiento considerablemente lenta en comparación con la sintaxis de enlace de datos estándar de ASP.NET.  
  
 Para cualquiera de la lista se controles Web, como <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, o <xref:System.Web.UI.WebControls.Repeater>, `container` debe ser `Container.DataItem`. Si va a enlazar con respecto a la página, `container` debe ser `Page`.  
  
 A partir de .NET Framework 4.5, puede usar el enlace de modelos para simplificar algunas de las tareas que se tenían que realizar a través del enlace de datos en versiones anteriores. Para una serie de tutoriales sobre el uso de enlace de modelos con formularios Web Forms, consulte [enlace de modelos y formularios Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Los ejemplos siguientes muestran cómo usar el `Eval` método para enlazar datos a <xref:System.Web.UI.WebControls.Repeater> control. Requiere una clase de datos con el nombre de producto.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 El archivo de código subyacente carga los datos de prueba y enlaza datos a un <xref:System.Web.UI.WebControls.Repeater> control.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 En la sintaxis declarativa para la <xref:System.Web.UI.WebControls.Repeater> control, usa el <xref:System.Web.UI.DataBinder.Eval%2A> método con `Container.DataItem` para el `container` parámetro.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 O bien, puede llamar a `Eval` funcionar y no incluyen el `container` parámetro.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="expression" /> es <see langword="null" /> o una cadena vacía después de recortar.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa la expresión. Éste debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <param name="expression">Ruta de acceso de navegación desde el objeto <c>container</c> hasta el valor de propiedad pública que se va a situar en la propiedad de control enlazado. Debe ser una cadena de nombres de campo o de propiedad separados por puntos, como <c>Tables[0].DefaultView.[0].Price</c> en C# o <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <param name="format">Cadena de formato de .NET Framework (como las utilizadas por <see cref="M:System.String.Format(System.String,System.Object)" />) que convierte la instancia de <see cref="T:System.Object" /> devuelta por la expresión de enlace de datos en un objeto <see cref="T:System.String" />.</param>
        <summary>Evalúa expresiones de enlace de datos en tiempo de ejecución y da formato de cadena al resultado.</summary>
        <returns>Un objeto <see cref="T:System.String" /> que resulta de evaluar la expresión de enlace de datos y convertirla a un tipo String.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de `expression` debe evaluarse como una propiedad pública.  
  
 Para obtener más información acerca de las cadenas de formato en .NET Framework, vea [aplicar formato a tipos](~/docs/standard/base-types/formatting-types.md).  
  
 Este método se llama automáticamente al crear enlaces de datos en un diseñador de rápido de aplicaciones (RAD) de desarrollo como Visual Studio. También puede usarlo mediante declaración para convertir el <xref:System.Object> resultante de la expresión de enlace de datos a un <xref:System.String>.  Para usar el método de forma declarativa, use el `<%#   %>` sintaxis de expresión, como se utiliza en el enlace de datos estándar de ASP.NET.  
  
 Este método es especialmente útil cuando se enlazan datos a controles que están en una lista con plantilla.  
  
> [!NOTE]
>  Dado que este método realiza la evaluación enlazada en tiempo de ejecución, mediante la reflexión en tiempo de ejecución, puede provocar rendimiento considerablemente lenta en comparación con la sintaxis de enlace de datos estándar de ASP.NET. Use este método con prudencia, especialmente cuando no se requiere la cadena de formato.  
  
 Para cualquiera de la lista se controles Web, como <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, o <xref:System.Web.UI.WebControls.Repeater>, `container` debe ser `Container.DataItem`. Si va a enlazar con respecto a la página, `container` debe ser `Page`.  
  
 A partir de .NET Framework 4.5, puede usar el enlace de modelos para simplificar algunas de las tareas que se tenían que realizar a través del enlace de datos en versiones anteriores. Para una serie de tutoriales sobre el uso de enlace de modelos con formularios Web Forms, consulte [enlace de modelos y formularios Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Los ejemplos siguientes muestran cómo usar el `Eval` método para enlazar datos a <xref:System.Web.UI.WebControls.Repeater> control. Requiere una clase de datos con el nombre de producto.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 El archivo de código subyacente carga los datos de prueba y enlaza datos a un <xref:System.Web.UI.WebControls.Repeater> control.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 En la sintaxis declarativa para la <xref:System.Web.UI.WebControls.Repeater> control, usa el <xref:System.Web.UI.DataBinder.Eval%2A> método con `Container.DataItem` para el `container` parámetro.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 O bien, puede llamar a `Eval` funcionar y no incluyen el `container` parámetro.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Aplicar formato a tipos en .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el elemento de datos declarado de un objeto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa la expresión. Éste debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <summary>Recupera el elemento de datos declarado de un objeto.</summary>
        <returns>Un objeto que representa el elemento de datos declarado del contenedor. Devuelve <see langword="null" /> si no se encuentra ningún elemento de datos o si el contenedor se evalúa como <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método llama a la <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29> método, se omitirá su `foundDataItem` parámetro al devolver el resultado.  
  
 Elemento de datos de un objeto se identifica en uno de dos maneras. Si el objeto contenedor implementa la <xref:System.Web.UI.IDataItemContainer> interfaz, el <xref:System.Web.UI.IDataItemContainer.DataItem%2A> propiedad identifica el elemento de datos y se devuelve su valor. En caso contrario, el método intenta resolver y devolver una propiedad de contenedor denominada "DataItem".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj *  -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa la expresión. Éste debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <param name="foundDataItem">Valor de tipo Boolean que indica si el elemento de datos se resolvió y devolvió correctamente. Este parámetro se pasa sin inicializar.</param>
        <summary>Recupera el elemento de datos declarado de un objeto e indica si se ha realizado correctamente o no.</summary>
        <returns>Un objeto que representa el elemento de datos declarado del contenedor. Devuelve <see langword="null" /> si no se encuentra ningún elemento de datos o si el contenedor se evalúa como <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elemento de datos de un objeto se identifica dos maneras. Si el objeto contenedor implementa la <xref:System.Web.UI.IDataItemContainer> interfaz, el <xref:System.Web.UI.IDataItemContainer.DataItem%2A> propiedad identifica el elemento de datos y se devuelve. En caso contrario, el método intenta resolver y devolver una propiedad de contenedor denominada "DataItem".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el valor de una propiedad indizada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa <c>expr</c>. Debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <param name="expr">Ruta de acceso de navegación desde el objeto <c>container</c> hasta el valor de propiedad pública que se va a situar en la propiedad de control enlazado. Debe ser una cadena de nombres de campo o de propiedad separados por puntos, como <c>Tables[0].DefaultView.[0].Price</c> en C# o <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <summary>Recupera el valor de una propiedad del contenedor y ruta de navegación especificados.</summary>
        <returns>Objeto resultante de la evaluación de la expresión de enlace de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de `expr` debe evaluarse como una propiedad pública.  
  
 Para cualquiera de la lista se controles Web, como <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, o <xref:System.Web.UI.WebControls.Repeater>, `container` debe ser `Container.DataItem`. Si va a enlazar con respecto a la página, `container` debe ser `Page`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> es <see langword="null" />.  
  
\- o - 
 <paramref name="expr" /> es <see langword="null" /> o una cadena vacía ("").</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="expr" /> no es una expresión indizada válida.  
  
\- o - 
 <paramref name="expr" /> no permite el acceso indizado.</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Referencia de objeto con respecto a la que se evalúa la expresión. Debe ser un identificador del objeto válido en el lenguaje especificado de la página.</param>
        <param name="propName">Nombre de la propiedad que contiene el valor que se va a recuperar.</param>
        <param name="format">Cadena que especifica el formato con el que se van a mostrar los resultados.</param>
        <summary>Recupera el valor de la propiedad especificada del contenedor indicado y, a continuación, da formato al resultado.</summary>
        <returns>Valor de la propiedad especificada con el formato establecido por <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> método invoca el <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> método y, a continuación, utiliza el <xref:System.String.Format%2A?displayProperty=nameWithType> método para dar formato al resultado como se especifica en el `format` parámetro. Una cadena de formato de .NET Framework (las utilizadas por como <xref:System.String.Format%2A?displayProperty=nameWithType>) convierte el <xref:System.Object> instancia devuelta por la expresión de enlace de datos a un <xref:System.String> objeto.  
  
 Las excepciones iniciadas para la <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> método se aplica a la <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> método así.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> método declaración para enlazar con un valor indizado.  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el valor de una propiedad.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">El objeto que contiene la propiedad.</param>
        <param name="propName">Nombre de la propiedad que contiene el valor que se va a recuperar.</param>
        <summary>Recupera el valor de la propiedad especificada del objeto indicado.</summary>
        <returns>Valor de la propiedad especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> método se usa para recuperar el valor de una propiedad en un objeto.  
  
   
  
## Examples  
 El ejemplo de <xref:System.Web.UI.DataBinder> muestra el uso de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> es <see langword="null" />.  
  
O bien 
 <paramref name="propName" /> es <see langword="null" /> o una cadena vacía ("").</exception>
        <exception cref="T:System.Web.HttpException">El objeto que hay en <paramref name="container" /> no tiene la propiedad especificada por <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">El objeto que contiene la propiedad.</param>
        <param name="propName">Nombre de la propiedad que contiene el valor que se va a recuperar.</param>
        <param name="format">Cadena que especifica el formato con el que se van a mostrar los resultados.</param>
        <summary>Recupera el valor de la propiedad especificada del objeto indicado y, a continuación, da formato al resultado.</summary>
        <returns>Valor de la propiedad especificada con el formato establecido por <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versión de la <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> método se utiliza para recuperar y dar formato al valor de una propiedad en un objeto.  
  
   
  
## Examples  
 El ejemplo de <xref:System.Web.UI.DataBinder> muestra el uso de este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> es <see langword="null" />.  
  
\- o - 
 <paramref name="propName" /> es <see langword="null" /> o una cadena vacía ("").</exception>
        <exception cref="T:System.Web.HttpException">El objeto que hay en <paramref name="container" /> no tiene la propiedad especificada por <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> que representa el tipo de datos que se va a comprobar.</param>
        <summary>Determina si el tipo de datos especificado se puede enlazar.</summary>
        <returns>
          <see langword="true" /> para los tipos que se pueden enlazar automáticamente a datos en controles; si no, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>