<Type Name="ParseChildrenAttribute" FullName="System.Web.UI.ParseChildrenAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ca36697a28bfed4f2aaf4c302dc84b471f33ff9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55361116" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParseChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParseChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParseChildrenAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParseChildrenAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParseChildrenAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un atributo de metadatos que se puede utilizar cuando se programan controles de servidor ASP.NET. Utilice la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" /> para indicar cómo el analizador de la página debería tratar el contenido anidado dentro de una etiqueta de control de servidor declarada en una página. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ParseChildrenAttribute> clase le permite especificar la lógica de análisis para un control de servidor personalizado marcando el control de servidor con el <xref:System.Web.UI.ParseChildrenAttribute> atributo de metadatos.  
  
 Marcar el control de servidor con el atributo de metadatos `ParseChildren(true)` el analizador para interpretar los elementos que están dentro de las etiquetas como propiedades del control de servidor. En este escenario, el <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad es `true`.  
  
 Marcar el control de servidor con el atributo de metadatos `ParseChildren(true,"<Default Property>")` establece el <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad en el nombre de la propiedad que se pasa en el atributo.  
  
 Marcar el control de servidor con el atributo de metadatos `ParseChildren(false)`, el valor predeterminado, indica al analizador para interpretar los elementos que están dentro de las etiquetas del control de servidor como contenido que se va a analizar con un asociado <xref:System.Web.UI.ControlBuilder> es decir, como controles. En este escenario, el <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad es `false`.  
  
 Para obtener información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 El ejemplo de código en esta sección contiene dos partes. El primer ejemplo de código muestra cómo establecer las propiedades de la <xref:System.Web.UI.ParseChildrenAttribute> clase. El segundo ejemplo de código muestra cómo usar las clases en una página ASP.NET.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.ParseChildrenAttribute> objeto de un control de servidor personalizado denominado `CollectionPropertyControl`. El <xref:System.Web.UI.ParseChildrenAttribute> establece la <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad `true` y el <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad a la `Employee` clase.  
  
 [!code-csharp[ParseChildrenAttribute_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar el `CollectionPropertyControl` y `Employee` clases en una página ASP.NET. Las instancias de la `Employee` clase se agregan de forma declarativa.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">Extender metadatos mediante atributos</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una nueva instancia de la <xref:System.Web.UI.ParseChildrenAttribute> se crea una clase con el <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad establecida en `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childrenAsProperties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">Es <see langword="true" /> para analizar los elementos como propiedades del control de servidor; en caso contrario, es <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" /> utilizando la propiedad <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> para determinar si se analizan los elementos contenidos dentro de un control de servidor como propiedades del control de servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `childrenAsProperties` es `false`, se analizan los elementos que están dentro del control de servidor como un control. `false` es el valor predeterminado para <xref:System.Web.UI.ParseChildrenAttribute>.  
  
   
  
## Examples  
 El ejemplo de código en esta sección contiene dos partes. El primer ejemplo de código muestra cómo establecer las propiedades de la <xref:System.Web.UI.ParseChildrenAttribute> clase. El segundo ejemplo de código muestra cómo usar las clases en una página ASP.NET.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.ParseChildrenAttribute> objeto para un control de servidor personalizado denominado `CollectionPropertyControl`. Cuando el <xref:System.Web.UI.ParseChildrenAttribute> se declara antes de la clase que define `CollectionPropertyControl`, el <xref:System.Web.UI.ParseChildrenAttribute> establece la <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad `true`.  
  
 [!code-csharp[ParseChildrenAttribute_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar el `CollectionPropertyControl` y `Employee` clases en una página ASP.NET. Una instancia de la `Employee` clase se agrega de forma declarativa y otro se agrega mediante programación.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (Type childControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type childControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childControlType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(Type ^ childControlType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : Type -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childControlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childControlType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="childControlType">Tipo de control que se va a analizar como una propiedad.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" /> utilizando la propiedad <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" /> para determinar qué elementos contenidos dentro de un control de servidor se analizan como controles.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="childControlType" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties, string defaultProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties, string defaultProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean, defaultProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties, System::String ^ defaultProperty);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool * string -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute (childrenAsProperties, defaultProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
        <Parameter Name="defaultProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">Es <see langword="true" /> para analizar los elementos como propiedades del control de servidor; en caso contrario, es <see langword="false" />.</param>
        <param name="defaultProperty">Cadena que define la propiedad de una colección del control de servidor en la que se analiza el contenido anidado de manera predeterminada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" /> con los parámetros <paramref name="childrenAsProperties" /> y <paramref name="defaultProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `childrenAsProperties` es `false`, se analizan los elementos como controles.  
  
   
  
## Examples  
 El ejemplo de código en esta sección contiene dos partes. El primer ejemplo de código muestra cómo establecer las propiedades de la <xref:System.Web.UI.ParseChildrenAttribute> clase. El segundo ejemplo de código muestra cómo usar las clases en una página ASP.NET.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.ParseChildrenAttribute> objeto de un control de servidor personalizado denominado `CollectionPropertyControl`. El <xref:System.Web.UI.ParseChildrenAttribute> establece la <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad `true` y el <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad a la `Employee` clase.  
  
 [!code-csharp[ParseChildrenAttribute_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#2)]
 [!code-vb[ParseChildrenAttribute_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#2)]  
  
 En el ejemplo de código siguiente se muestra cómo usar el `CollectionPropertyControl` y `Employee` clases en una página ASP.NET.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ChildControlType">
      <MemberSignature Language="C#" Value="public Type ChildControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ChildControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ChildControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlType : Type" Usage="System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica el tipo permitido de un control.</summary>
        <value>Tipo de control. De manera predeterminada, es <see cref="T:System.Web.UI.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el tipo de control permitido es `null`, es decir que no se ha especificado, el tipo de valor predeterminado, que es un <xref:System.Web.UI.Control?displayProperty=nameWithType> control, se devuelve.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo consultar el <xref:System.Web.UI.ParseChildrenAttribute.ChildControlType%2A> propiedad. Para obtener definiciones de la `CollectionPropertyControl` y `Employee` clases que se usan en este ejemplo de código, consulte <xref:System.Web.UI.ParseChildrenAttribute.%23ctor%2A>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsProperties">
      <MemberSignature Language="C#" Value="public bool ChildrenAsProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsProperties : bool with get, set" Usage="System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se analizan como propiedades los elementos contenidos dentro de un control de servidor.</summary>
        <value>Es <see langword="true" /> para analizar los elementos como propiedades; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad está establecida en `false`, se analizan los elementos que están dentro de un control de servidor como un control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo consultar el <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> propiedad. Para obtener definiciones de la `CollectionPropertyControl` y `Employee` clases que se usan en este ejemplo de código, consulte <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Web.UI.ParseChildrenAttribute" /> actual se ha invocado con <paramref name="childrenAsProperties" /> establecido en <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define el valor predeterminado de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado para el <xref:System.Web.UI.ParseChildrenAttribute.Default> campo es `false`, lo que significa que no se analizan los elementos como propiedades del control de servidor.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultProperty">
      <MemberSignature Language="C#" Value="public string DefaultProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProperty As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProperty { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProperty : string with get, set" Usage="System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la propiedad predeterminada del control de servidor en el que se analizan los elementos.</summary>
        <value>Nombre de la propiedad de colección predeterminada del control de servidor en el que se analizan los elementos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad se usa solo si se pasa una cadena a la <xref:System.Web.UI.ParseChildrenAttribute> constructor. Cuando el <xref:System.Web.UI.ParseChildrenAttribute> se crea una clase, el <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad define la propiedad predeterminada para el control de servidor que se está analizando.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo consultar el <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> propiedad. Para obtener definiciones de la `CollectionPropertyControl` y `Employee` clases que se usan en este ejemplo de código, consulte <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Web.UI.ParseChildrenAttribute" /> actual se ha invocado con <paramref name="childrenAsProperties" /> establecido en <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="parseChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
        <summary>Determina si el objeto especificado es igual al objeto actual.</summary>
        <returns><see langword="true" /> si <paramref name="obj" /> es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="parseChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sirve como función hash para el objeto <see cref="T:System.Web.UI.ParseChildrenAttribute" />.</summary>
        <returns>Código hash para el objeto <see cref="T:System.Web.UI.ParseChildrenAttribute" /> actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="parseChildrenAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un valor que indica si el valor de la instancia actual de la clase <see cref="T:System.Web.UI.ParseChildrenAttribute" /> es el valor predeterminado de la clase derivada.</summary>
        <returns>Es <see langword="true" /> si el valor <see cref="T:System.Web.UI.ParseChildrenAttribute" /> actual es la instancia predeterminada; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado para el <xref:System.Web.UI.ParseChildrenAttribute> clase es el <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> campo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo consultar el <xref:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute%2A> propiedad. Para obtener definiciones de la `CollectionPropertyControl` y `Employee` clases que se usan en este ejemplo de código, consulte <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsChildren">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsChildren" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsChildren As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsChildren;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsChildren : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica que el contenido anidado contenido dentro del control de servidor se analiza como controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> se denomina campo, el contenido anidado que se encuentran en el control de servidor no se analizan como propiedades; en su lugar, se analiza como un control.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsProperties">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsProperties" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsProperties As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsProperties;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsProperties : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica que el contenido anidado contenido dentro de un control de servidor se analiza como propiedades del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.ParseChildrenAttribute.ParseAsProperties> se denomina campo, el contenido anidado contenido dentro de un control de servidor se analiza como propiedades.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      </Docs>
    </Member>
  </Members>
</Type>