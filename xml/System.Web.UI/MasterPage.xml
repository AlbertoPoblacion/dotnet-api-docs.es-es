<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f66788b22ce04066d7fdd71498dfc5175b73889d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57953481" /></Metadata><TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <TypeSignature Language="F#" Value="type MasterPage = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Actúa como contenedor de plantillas y combinación de páginas que están formadas sólo por controles <see cref="T:System.Web.UI.WebControls.Content" /> y sus controles secundarios respectivos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una página maestra funciona como un contenedor de plantillas y página de combinación de páginas de contenido de la aplicación Web ASP.NET. Páginas maestras proporcionan una manera cómoda de compartir la estructura y el contenido en un conjunto de páginas de contenido. Utilice marcadores de posición de contenido para definir las secciones de la página maestra para reemplazar el contenido de las páginas de contenido.  
  
 Cuando se usa una página maestra y las páginas de contenido relacionadas, agregue las etiquetas de documento XHTML necesarias (como `html`, `head`, y `body`) solo a la página maestra y ya no lo está, cree los demás archivos .aspx (páginas ASP.NET) como Web independiente páginas. Las páginas de contenido definen el contenido se va a insertar en los marcadores de posición en la página maestra.  
  
 Cuando se realiza una solicitud HTTP para una página en tiempo de ejecución, la página maestra y las páginas de contenido se combinan en una sola clase con el mismo nombre que las páginas de contenido. El resultado compilado, combinada clase se deriva de la <xref:System.Web.UI.Page> clase.  
  
 Una página principal puede contener marcado directo y controles de servidor, así como los controles del contenedor. Todos los elementos que se colocan en la página maestra fuera de un <xref:System.Web.UI.WebControls.ContentPlaceHolder> control se representa en todas las páginas que resultan de la combinación de la página maestra y las páginas de contenido.  
  
 Cada página de contenido que está relacionado con la página maestra debe hacer referencia a la página maestra en un `MasterPageFile` atributo de su directiva. Contenido de las páginas pueden contener sólo un `@ Page` directiva y uno o más <xref:System.Web.UI.WebControls.Content> controles. Todos los controles de texto, marcado y servidor de la página deben colocarse en <xref:System.Web.UI.WebControls.Content> controles. Identifica el <xref:System.Web.UI.WebControls.ContentPlaceHolder> de un patrón de control de página que un <xref:System.Web.UI.WebControls.Content> está asociado el control estableciendo la <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> propiedad de la <xref:System.Web.UI.WebControls.Content> control.  
  
 En tiempo de ejecución, el contenido dinámico de cada <xref:System.Web.UI.WebControls.Content> control en la página solicitada se combina con la página maestra en la ubicación exacta de relacionado <xref:System.Web.UI.WebControls.ContentPlaceHolder> control. Cualquier otro marcado y controles en la página maestra no se ven afectados. Controladores de eventos pueden definirse en la clase principal y en la página de contenido. Para obtener más información, consulte [eventos en el maestro de ASP.NET y páginas de contenido](https://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd).  
  
 La <xref:System.Web.UI.MasterPage> clase está asociada a los archivos que tienen una extensión. master. Estos archivos se compilan en tiempo de ejecución como <xref:System.Web.UI.MasterPage> objetos y se almacenan en caché en memoria del servidor.  
  
 La página maestra está disponible para la página de contenido a través de la <xref:System.Web.UI.Page.Master%2A> propiedad de la base de <xref:System.Web.UI.Page> clase. El <xref:System.Web.UI.Page.Master%2A> propiedad devuelve la instancia de la página maestra; sin embargo, se ha escrito como base <xref:System.Web.UI.MasterPage> clase. Para los controles de acceso, propiedades y funciones de la página maestra, el <xref:System.Web.UI.Page.Master%2A> propiedad se puede convertir en un <xref:System.Web.UI.MasterPage> objeto. El nombre de clase de la página principal se define utilizando el `ClassName` atributo de la directiva.  
  
> [!NOTE]
>  Los archivos con extensiones. master no se sirven a un explorador.  
  
 Las directivas que son válidas en una página principal son los mismos que los que están disponibles en un <xref:System.Web.UI.UserControl> objeto. Pueden incluir los siguientes atributos:  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 Las directivas de página maestra no reemplazan las directivas de páginas de contenido individuales.  
  
 Páginas maestras con mayor frecuencia se crean mediante declaración. Si desea crear una página maestra mediante programación, que se derivan directamente de la <xref:System.Web.UI.MasterPage> clase. Además de extender el <xref:System.Web.UI.MasterPage> (clase), debe crear el archivo .master para mostrar visualmente la interfaz de usuario (UI) que está asociada con las clases que se han invocado en el archivo de origen.  
  
> [!NOTE]
>  Cuando se crea una página maestra al crear su propia clase primero, debe incluir todos los espacios de nombres que son necesarios para las clases que se usan por la página.  
  
 Para obtener más información acerca de las páginas maestras, vea [páginas maestras en ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
   
  
## Examples  
 Esta sección contiene cuatro ejemplos de código:  
  
-   El primer ejemplo de código muestra cómo crear una página maestra mediante declaración.  
  
-   El segundo ejemplo de código representa la página de contenido que está asociada a la página maestra que se creó en el primer ejemplo de código.  
  
-   El tercer ejemplo de código muestra cómo agregar una propiedad a una página maestra.  
  
-   El cuarto ejemplo de código muestra cómo usar una página de contenido para tener acceso a una propiedad pública en la página maestra.  
  
 El ejemplo siguiente muestra cómo crear una página maestra mediante declaración y cómo agregar algún contenido mediante una página de contenido. La primera página Web es la página .master denominada `MasterPageSample_1.master`.  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 El ejemplo siguiente representa la página de contenido que está asociada con `MasterPageSample_1.master`. Contiene un <xref:System.Web.UI.WebControls.Content> controlar e identifica el <xref:System.Web.UI.WebControls.ContentPlaceHolder> control que está asociado el contenido utilizando la <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> propiedad.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 El ejemplo siguiente muestra cómo agregar una propiedad a una página maestra. El `ClassName` atributo se utiliza para el nombre de la página maestra.  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 El ejemplo siguiente muestra cómo usar una página de contenido para acceder a la propiedad pública `SiteName` en la página maestra en el ejemplo de código anterior.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET Master Pages Overview</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Páginas maestras anidadas</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.UI.MasterPage" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">Nombre único para <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <param name="template"><see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <summary>Agrega un control <see cref="T:System.Web.UI.WebControls.Content" /> al diccionario <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pueden agregar las clases derivadas de página maestra <xref:System.Web.UI.WebControls.Content> controles a la <xref:System.Web.UI.MasterPage.ContentTemplates%2A> diccionario utilizando la <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> método. Los tipos derivados no suele invalidar la <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ya existe un control <see cref="T:System.Web.UI.WebControls.Content" /> con el mismo nombre en el diccionario <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />.</exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentPlaceHolders : System.Collections.IList" Usage="System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de controles <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> utilizados en la página maestra para definir las distintas áreas de contenido.</summary>
        <value><see cref="T:System.Collections.IList" /> de controles <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> utilizados en la página maestra como marcadores de posición de los controles <see cref="T:System.Web.UI.WebControls.Content" /> ubicados en las páginas de contenido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derivado de acceso de las clases de página maestra el <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> propiedad a la lista actual <xref:System.Web.UI.WebControls.ContentPlaceHolder> controles contenidos en el maestro. Los tipos derivados no suele invalidar la <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplates : System.Collections.IDictionary" Usage="System.Web.UI.MasterPage.ContentTemplates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de controles de contenido asociados a la página maestra.</summary>
        <value><see cref="T:System.Collections.IList" /> de controles de contenido asociados a la página maestra.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derivado de acceso de las clases de página maestra el <xref:System.Web.UI.MasterPage.ContentTemplates%2A> propiedad que recupere actual <xref:System.Web.UI.WebControls.Content> controles, como se define en las páginas de contenido asociadas. Los tipos derivados no suele invalidar la <xref:System.Web.UI.MasterPage.ContentTemplates%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.InstantiateInContentPlaceHolder : System.Web.UI.Control * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.InstantiateInContentPlaceHolder (contentPlaceHolder, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">Control que representa el contenedor del contenido.</param>
        <param name="template">Instancia <see cref="T:System.Web.UI.WebControls.Content" /> que se va a usar. </param>
        <summary>Proporciona un método para establecer la control de plantilla actual en una página que posee la página maestra.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.MasterPage.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la página maestra que es el elemento principal de la página maestra actual cuando hay páginas maestras anidadas.</summary>
        <value>Página maestra que es el elemento principal de la página maestra actual; en caso contrario, <see langword="null" />, si la página maestra actual no tiene elemento principal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.MasterPage.Master%2A> propiedad es de solo lectura, porque no se puede generar jerarquías de páginas maestras en tiempo de ejecución.  
  
   
  
## Examples  
 Esta sección contiene tres ejemplos de código. El primer ejemplo de código muestra cómo crear una página maestra anidada`.` el segundo ejemplo de código muestra cómo hacer referencia a la página maestra que se creó en el primer ejemplo de código. El tercer ejemplo de código muestra cómo usar una página de contenido para hacer referencia a la página maestra que se creó en el segundo ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo crear una página maestra anidada y representa la página maestra principal denominada `ParentMasterPage_1`.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar una página maestra anidada denominada `ChildMasterPage_1` que hace referencia a la página maestra que se creó en el ejemplo de código anterior.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar una página de contenido denominada `ContentPage` que hace referencia a la `ChildMasterPage_1` que se creó en el ejemplo de código anterior.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Páginas maestras anidadas</related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.MasterPage.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la página maestra que tiene el contenido actual.</summary>
        <value>Nombre de la página maestra que es el elemento principal de la página maestra actual; en caso contrario, <see langword="null" />, si la página maestra actual no tiene elemento principal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esta sección contiene tres ejemplos de código. El primer ejemplo de código muestra cómo crear una página maestra anidada`.` el segundo ejemplo de código muestra cómo hacer referencia a la página maestra que se creó en el primer ejemplo de código. El tercer ejemplo de código muestra cómo usar una página de contenido para hacer referencia a la página maestra que se creó en el segundo ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo crear una página maestra anidada y representa la página maestra principal denominada `ParentMasterPage_1`.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar una página maestra anidada denominada `ChildMasterPage_1` que hace referencia a la página maestra que se creó en el ejemplo de código anterior.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar una página de contenido denominada `ContentPage` que hace referencia a la `ChildMasterPage_1` que se creó en el ejemplo de código anterior.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.MasterPage.MasterPageFile" /> sólo se puede establecer en el evento <see cref="E:System.Web.UI.Page.PreInit" />, o antes de que se produzca.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Páginas maestras anidadas</related>
      </Docs>
    </Member>
  </Members>
</Type>