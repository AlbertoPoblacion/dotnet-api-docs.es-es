<Type Name="IStopListeningRegisteredObject" FullName="System.Web.Hosting.IStopListeningRegisteredObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04ed9a8c880a05fbc4cbd9fa2b5311a32a841c40" />
    <Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51689758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStopListeningRegisteredObject : System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStopListeningRegisteredObject implements class System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IStopListeningRegisteredObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStopListeningRegisteredObject&#xA;Implements IRegisteredObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStopListeningRegisteredObject : System::Web::Hosting::IRegisteredObject" />
  <TypeSignature Language="F#" Value="type IStopListeningRegisteredObject = interface&#xA;    interface IRegisteredObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IRegisteredObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Realiza escuchas de las notificaciones de <c>GL_STOP_LISTENING</c> desde IIS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede implementar la <xref:System.Web.Hosting.IStopListeningRegisteredObject> interfaz pasando un objeto a la <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> método. Busca el objeto pasado `GL_STOP_LISTENING` notificaciones desde IIS. Se puede llamar a esta implementación cuando ASP.NET recibe un `GL_STOP_LISTENING` recibir una notificación de IIS, lo cual indica que IIS ya no está atendiendo las solicitudes nuevo para esta aplicación. El servidor web puede permitir que las solicitudes que están en curso para ejecutar hasta su finalización. Si su aplicación procesa solicitudes de ejecución prolongada, podría tener la aplicación escuchar para que estas notificaciones IIS dejando correctamente la solicitud. El <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método contrasta con la <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> método, que señala el cierre de la aplicación inmediato.  
  
 ]]></format>
    </remarks>
    <threadsafe>Los miembros de instancia de este tipo no se garantiza que es seguro para subprocesos. El <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> método puede llamarse en cualquier momento, incluso durante una llamada a otro método (como <see cref="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />) se está ejecutando en este mismo objeto o mientras que las llamadas a otros objetos <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> métodos se ejecutan. Dado que la ejecución de estos métodos es multiproceso, hay un intervalo en el que el <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> es posible que se llama al método incluso después de llamar a <see cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" /> se ha completado.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopListening();" />
      <MemberSignature Language="F#" Value="abstract member StopListening : unit -&gt; unit" Usage="iStopListeningRegisteredObject.StopListening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene la escucha de nuevas solicitudes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método se admite solo cuando el modo integrado de IIS. El tiempo de ejecución ASP.NET no garantiza que el <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método nunca se activará.  
  
 El <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método no debe producir excepciones, en caso contrario, el comportamiento es indefinido y es probable que se va a terminar el proceso. Además, para evitar la creación de los interbloqueos, el <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método no debe bloquear la ejecución.  
  
> [!IMPORTANT]
>  En muchas aplicaciones el <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método puede ejecutar al mismo tiempo que el <xref:System.AppDomain.Unload%2A> método.  Si <xref:System.AppDomain> unload se produce, la <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> método se pueda anular forzosamente antes de que finalice la ejecución.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>