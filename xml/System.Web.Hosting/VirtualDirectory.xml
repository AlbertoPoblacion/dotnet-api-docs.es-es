<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fb6bfb5f5a6da4228a1ee602397a9072b07377b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un objeto de directorio en un archivo virtual o un espacio de recursos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Hosting.VirtualDirectory> clase es la clase base para los objetos que representan los directorios de un sistema de archivos virtual. Normalmente, se implementaría un descendiente de la <xref:System.Web.Hosting.VirtualDirectory> clase para cada <xref:System.Web.Hosting.VirtualPathProvider> clase descendiente en la aplicación Web.  
  
   
  
## Examples  
 El ejemplo de código siguiente es un <xref:System.Web.Hosting.VirtualDirectory> implementación de la clase que devuelve información del directorio virtual almacenada en un <xref:System.Data.DataSet> objeto. Este código funciona con los ejemplos de código para el <xref:System.Web.Hosting.VirtualPathProvider> y <xref:System.Web.Hosting.VirtualFile> clases para proporcionar recursos virtuales de datos de un almacén que se cargan en un <xref:System.Data.DataSet> objeto. Para obtener instrucciones completas para compilar y ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.Hosting.VirtualPathProvider> Introducción a la clase.  
  
 Este ejemplo tiene dos partes: la <xref:System.Web.Hosting.VirtualDirectory> la implementación de clase y el archivo de datos XML que se usan para rellenar el <xref:System.Data.DataSet> objeto.  
  
 El primer ejemplo de código es una implementación de la <xref:System.Web.Hosting.VirtualDirectory> clase. En el constructor utiliza un método en un personalizado <xref:System.Web.Hosting.VirtualPathProvider> objeto que se va a devolver un <xref:System.Data.DataSet> objeto. A continuación, busca el <xref:System.Data.DataSet> objeto que se va a recuperar la información de directorio asociada a la ruta de acceso virtual proporcionada.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 El segundo ejemplo es el archivo de datos XML utilizado para rellenar el <xref:System.Data.DataSet> objeto devuelto por la opción de instalación <xref:System.Web.Hosting.VirtualPathProvider> objeto. Estos datos XML se usan para mostrar el uso del <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, y <xref:System.Web.Hosting.VirtualDirectory> clases para recuperar datos de datos externos y no está diseñada para representar un almacén de datos de calidad de producción.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Al heredar de la <see cref="T:System.Web.Hosting.VirtualDirectory" /> (clase), es necesario reemplazar el <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, y <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> propiedades para devolver un objeto que implementa el <see cref="T:System.Collections.IEnumerable" /> interfaz.  
  
 Si la estructura de directorio virtual contiene un número moderado a grande de recursos virtuales, debe tener cuidado para minimizar los recursos del sistema utilizados al enumerar el directorio virtual mediante una llamada a la <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, o <see cref="P:System.Web.Hosting.VirtualDirectory.Files" />propiedades.</para>
    </block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ruta de acceso virtual al recurso representado por esta instancia.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Hosting.VirtualDirectory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente es una implementación de la <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> constructor al que se recupera información de archivo virtual de un <xref:System.Data.DataSet> objeto proporcionado por un personalizado <xref:System.Web.Hosting.VirtualPathProvider> objeto. Incluye el `GetData` método usado para rellenar el <xref:System.Web.Hosting.VirtualDirectory> instancia. Para el código completo necesario para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.Hosting.VirtualDirectory> Introducción a la clase.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de archivos y subdirectorios contenidos en este directorio virtual.</summary>
        <value>Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene objetos <see cref="T:System.Web.Hosting.VirtualFile" /> y <see cref="T:System.Web.Hosting.VirtualDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Hosting.VirtualDirectory.Children%2A> propiedad contiene <xref:System.Web.Hosting.VirtualFile> y <xref:System.Web.Hosting.VirtualDirectory> objetos que representan los archivos y directorios contenidos en este directorio virtual. Para devolver sólo los <xref:System.Web.Hosting.VirtualFile> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Files%2A> propiedad. Para devolver sólo los <xref:System.Web.Hosting.VirtualDirectory> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si la estructura de directorio virtual contiene un número moderado a grande de recursos virtuales, también debe tener cuidado para minimizar los recursos del sistema utilizados enumerando el directorio virtual.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de todos los subdirectorios contenidos en este directorio.</summary>
        <value>Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene objetos <see cref="T:System.Web.Hosting.VirtualDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> propiedad contiene <xref:System.Web.Hosting.VirtualDirectory> objetos que representan los directorios contenidos en este directorio virtual. Para devolver el <xref:System.Web.Hosting.VirtualFile> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Files%2A> propiedad. Para devolverlos <xref:System.Web.Hosting.VirtualFile> y <xref:System.Web.Hosting.VirtualDirectory> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Children%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si la estructura de directorio virtual contiene un número moderado a grande de recursos virtuales, también debe tener cuidado para minimizar los recursos del sistema utilizados enumerando el directorio virtual.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de todos los archivos contenidos en este directorio.</summary>
        <value>Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerable" /> que contiene objetos <see cref="T:System.Web.Hosting.VirtualFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Hosting.VirtualDirectory.Files%2A> propiedad contiene <xref:System.Web.Hosting.VirtualFile> objetos que representan los archivos contenidos en este directorio virtual. Para devolver el <xref:System.Web.Hosting.VirtualDirectory> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> propiedad. Para devolverlos <xref:System.Web.Hosting.VirtualFile> y <xref:System.Web.Hosting.VirtualDirectory> objetos, utilice el <xref:System.Web.Hosting.VirtualDirectory.Children%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si la estructura de directorio virtual contiene un número moderado a grande de recursos virtuales, también debe tener cuidado para minimizar los recursos del sistema utilizados enumerando el directorio virtual.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica que éste es un recurso virtual que se debería tratar como un directorio.</summary>
        <value>Siempre es <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>