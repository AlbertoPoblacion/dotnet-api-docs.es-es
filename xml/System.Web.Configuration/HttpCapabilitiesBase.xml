<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbdc988a845e79426d5bd3539076d71e70191be8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37607839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2fd62-101">Provides access to detailed information about the capabilities of the client's browser.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2fd62-101">Provides access to detailed information about the capabilities of the client's browser.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> es la clase base desde el que el <xref:System.Web.HttpBrowserCapabilities> se deriva la clase.</span><span class="sxs-lookup"><span data-stu-id="2fd62-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="2fd62-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> ofrece un gran número de propiedades de solo lectura que proporcionan acceso con seguridad de tipos al diccionario de funciones del explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="2fd62-104">Puede tener acceso a la <xref:System.Web.HttpBrowserCapabilities> clase a través de la <xref:System.Web.HttpRequest.Browser%2A> propiedad que se expone mediante ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fd62-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-105">El ejemplo siguiente muestra cómo obtener acceso a información sobre el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-107">Gets a value indicating whether the browser supports ActiveX controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-107">Gets a value indicating whether the browser supports ActiveX controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-108">
            <see langword="true" /> Si el explorador admite controles ActiveX; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-108">
              <see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-109">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-110">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="2fd62-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-111">Returns the collection of available control adapters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-111">Returns the collection of available control adapters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-112">La colección de adaptadores de control registrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-112">The collection of registered control adapters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="2fd62-113">The name of the browser to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-113">The name of the browser to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-116">
            <see langword="true" /> Si el explorador es AOL; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-116">
              <see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-117">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-117">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-118">En el ejemplo de código siguiente se muestra cómo determinar si el explorador es AOL.</span><span class="sxs-lookup"><span data-stu-id="2fd62-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-120">
            <see langword="true" /> Si el explorador admite la reproducción de sonidos de fondo; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-120">
              <see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-121">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-122">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite la reproducción de sonidos de fondo.</span><span class="sxs-lookup"><span data-stu-id="2fd62-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-123">Gets a value indicating whether the browser is a beta version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-123">Gets a value indicating whether the browser is a beta version.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-124">
            <see langword="true" /> Si el explorador es una versión beta. en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-124">
              <see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-125">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-126">Exploradores de la versión beta pueden tener un comportamiento impredecible.</span><span class="sxs-lookup"><span data-stu-id="2fd62-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-127">En el ejemplo de código siguiente se muestra cómo determinar si el explorador es una versión beta.</span><span class="sxs-lookup"><span data-stu-id="2fd62-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-129">El contenido del encabezado de la solicitud <see langword="User-Agent" /> enviado por el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-130">El ejemplo de código siguiente muestra cómo determinar la `User-Agent` encabezado de solicitud enviado por el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-132">La <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> objeto para el explorador actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-134">Un <see cref="T:System.Collections.ArrayList" /> de los exploradores en el <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> diccionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-136">
            <see langword="true" /> Si el explorador admite barajas que contengan varios formularios; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-136">
              <see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-137">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-137">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-138">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="2fd62-139">Si es true, el adaptador puede mostrar varios formularios de la misma página como cartas de una sola baraja, siempre que sea posible.</span><span class="sxs-lookup"><span data-stu-id="2fd62-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-140">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite barajas que contengan varios formularios, como cartas independientes.</span><span class="sxs-lookup"><span data-stu-id="2fd62-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-142">
            <see langword="true" /> Si el dispositivo del explorador es capaz de iniciar una llamada de voz; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-142">
              <see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-143">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-144">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-145">El ejemplo de código siguiente muestra cómo determinar si el dispositivo del explorador es capaz de iniciar una llamada de voz.</span><span class="sxs-lookup"><span data-stu-id="2fd62-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-147">
            <see langword="true" /> Si el explorador admite contenido de página después HTML <see langword="&lt;select&gt;" /> o <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-147">
              <see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-148">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-149">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-150">El ejemplo de código siguiente muestra cómo determinar si el explorador admite contenido de página después HTML `<select>` o `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-152">
            <see langword="true" /> Si el explorador admite HTML vacía <see langword="&lt;select&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-152">
              <see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-153">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-153">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-154">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML vacía `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-156">
            <see langword="true" /> Si el explorador admite WML <see langword="&lt;input&gt;" /> y <see langword="&lt;select&gt;" /> elementos juntos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-156">
              <see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-157">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-157">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-158">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-159">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML `<input>` y `<select>` elementos juntos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-161">
            <see langword="true" /> Si el explorador admite WML <see langword="&lt;option&gt;" /> elementos que especifican ambos <see langword="onpick" /> y <see langword="value" /> atributos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-161">
              <see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-162">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-162">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-163">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-164">Si `false`, `onpick` valores aparecen como hipervínculos y `value` atributos requieren un `<do>` (elemento) para la devolución de datos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-165">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML `<option>` elementos que especifican ambos `onpick` y `value` atributos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-167">
            <see langword="true" /> Si el explorador admite WML <see langword="&lt;onevent&gt;" /> y <see langword="&lt;prev&gt;" /> que coexistan en la misma carta WML; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-167">
              <see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-168">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-168">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-169">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-170">Si `false`, WML `<onevent>` y `<prev>` que coexistan en la misma carta WML no se procesará correctamente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-171">El ejemplo de código siguiente muestra cómo determinar si el explorador admite WML `<onevent>` y `<prev>` que coexistan en la misma carta WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-172">Gets a value indicating whether the browser supports WML cards for postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-172">Gets a value indicating whether the browser supports WML cards for postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-173">
            <see langword="true" /> Si el explorador admite tarjetas WML para postback; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-173">
              <see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-174">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-175">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> propiedad se aplica solo a los exploradores de dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="2fd62-176">Si `false`, postback tarjetas no se representarán correctamente mediante el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-177">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite tarjetas WML para postback.</span><span class="sxs-lookup"><span data-stu-id="2fd62-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-179">
            <see langword="true" /> Si el explorador admite WML <see langword="&lt;setvar&gt;" /> elementos con un <see langword="value" /> atributo de <see langword="0" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-179">
              <see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-180">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-180">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-181">El <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-182">Si `false`, HTML `<setvar>` elementos con un `value` atributo de `0` no se mostrarán correctamente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-183">El ejemplo de código siguiente muestra cómo determinar si el explorador admite WML `<setvar>` elementos con un `value` atributo igual a 0.</span><span class="sxs-lookup"><span data-stu-id="2fd62-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-185">
            <see langword="true" /> Si el explorador admite el envío de correo electrónico mediante el HTML <see langword="&lt;mailto&gt;" /> (elemento) para mostrar las direcciones electrónicas; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-185">
              <see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-186">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-186">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-187">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el envío de correo electrónico mediante el HTML `<mailto>` (elemento) para mostrar las direcciones electrónicas.</span><span class="sxs-lookup"><span data-stu-id="2fd62-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-188">Used internally to get the defined capabilities of the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-188">Used internally to get the defined capabilities of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-189">Funcionalidades definidas del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-189">The defined capabilities of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-191">
            <see langword="true" /> Si el explorador admite CDF; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-191">
              <see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-192">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-192">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-193">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite CDF.</span><span class="sxs-lookup"><span data-stu-id="2fd62-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-194">Gets the version of the .NET Framework that is installed on the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-194">Gets the version of the .NET Framework that is installed on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-195">Common language runtime <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-195">The common language runtime <see cref="T:System.Version" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-196">El <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propiedad solo se admite cuando el explorador es Internet Explorer 5.0 y versiones posteriores.</span><span class="sxs-lookup"><span data-stu-id="2fd62-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="2fd62-197">Si no está instalada .NET Framework en el cliente, devuelve el valor de los elementos de versión es `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="2fd62-198">Si más de una versión de .NET Framework está instalada en el cliente, el <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propiedad devuelve la versión más reciente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-199">Gets a value indicating whether the browser supports cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-199">Gets a value indicating whether the browser supports cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-200">
            <see langword="true" /> Si el explorador admite cookies; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-200">
              <see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-201">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-201">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-202">El <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propiedad indica si la aplicación de explorador admite cookies.</span><span class="sxs-lookup"><span data-stu-id="2fd62-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="2fd62-203">Si el usuario ha deshabilitado las cookies en su aplicación, el <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propiedad no se verán afectada.</span><span class="sxs-lookup"><span data-stu-id="2fd62-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-204">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite cookies.</span><span class="sxs-lookup"><span data-stu-id="2fd62-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-205">Gets a value indicating whether the browser is a search engine Web crawler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-205">Gets a value indicating whether the browser is a search engine Web crawler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-206">
            <see langword="true" /> Si el explorador es un motor de búsqueda; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-206">
              <see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-207">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-207">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-208">En el ejemplo de código siguiente se muestra cómo determinar si el cliente es un motor de búsqueda rastreador de Web.</span><span class="sxs-lookup"><span data-stu-id="2fd62-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="2fd62-209">
            <see cref="T:System.IO.TextWriter" /> to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-209">
              <see cref="T:System.IO.TextWriter" /> to be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="2fd62-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-213">Returns the maximum number of Submit buttons that are allowed for a form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-213">Returns the maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-214">El número máximo de botones Enviar que se permiten en un formulario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-214">The maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-215">El <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> propiedad principalmente representa el número de teclas programables que están disponibles en un dispositivo móvil compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="2fd62-216">Páginas de formularios Web Forms para dispositivos móviles pueden contener un <xref:System.Web.UI.MobileControls.SelectionList> objeto y más de uno <xref:System.Web.UI.MobileControls.Command> control.</span><span class="sxs-lookup"><span data-stu-id="2fd62-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="2fd62-217">El <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> le permite elegir cuál de los <xref:System.Web.UI.MobileControls.Command> controles deben asignarse a una tecla programable en dispositivos que tienen varias teclas programables.</span><span class="sxs-lookup"><span data-stu-id="2fd62-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-218">Used internally to disable use of an optimized cache key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-218">Used internally to disable use of an optimized cache key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-219">Gets the version number of ECMAScript that the browser supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-219">Gets the version number of ECMAScript that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-220">El número de versión de ECMAScript que admite el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-220">The version number of ECMAScript that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-221">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite un número de versión principal de ECMAScript mayor que 1.</span><span class="sxs-lookup"><span data-stu-id="2fd62-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-222">Gets a value indicating whether the browser supports HTML frames.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-222">Gets a value indicating whether the browser supports HTML frames.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-223">
            <see langword="true" /> Si el explorador admite marcos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-223">
              <see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-224">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-225">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite marcos HTML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-225">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-226">Gets the major version number of the wireless gateway used to access the server, if known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-226">Gets the major version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-227">El número de versión principal de la puerta de enlace inalámbrica que se usa para acceder al servidor, si se conoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-227">The major version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="2fd62-228">De manera predeterminada, es <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-228">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="2fd62-229">The major version number of the wireless gateway cannot be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-229">The major version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-230">Gets the minor version number of the wireless gateway used to access the server, if known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-230">Gets the minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-231">El número de versión secundaria de la puerta de enlace inalámbrica que se usa para acceder al servidor, si se conoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-231">The minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="2fd62-232">De manera predeterminada, es <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-232">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="2fd62-233">The minor version number of the wireless gateway cannot be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-233">The minor version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-234">Gets the version of the wireless gateway used to access the server, if known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-234">Gets the version of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-235">El número de versión de la puerta de enlace inalámbrica que se usa para acceder al servidor, si se conoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-235">The version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="2fd62-236">De manera predeterminada, es <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-236">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-237">El ejemplo de código siguiente muestra cómo determinar si la puerta de enlace es un `UP` puerta de enlace.</span><span class="sxs-lookup"><span data-stu-id="2fd62-237">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-238">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-238">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-239">An array of <see cref="T:System.Version" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-239">An array of <see cref="T:System.Version" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-240">El <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> método solo se admite cuando el explorador es Internet Explorer 5.0 o posterior.</span><span class="sxs-lookup"><span data-stu-id="2fd62-240">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="2fd62-241">Si common language runtime no está instalado en el cliente, la propiedad devuelve una matriz que contiene una sola <xref:System.Version> objeto con los valores 0, 0, -1, -1.</span><span class="sxs-lookup"><span data-stu-id="2fd62-241">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey">
          <span data-ttu-id="2fd62-242">The name of the configuration section that configures browser capabilities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-242">The name of the configuration section that configures browser capabilities.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="2fd62-243">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-243">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-244">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-244">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-245">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-245">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-246">Gets a value indicating whether the browser has a dedicated **Back** button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-246">Gets a value indicating whether the browser has a dedicated **Back** button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-247">
            <see langword="true" /> Si el explorador tiene una dedicado ** atrás ** botón; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-247">
              <see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-248">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-248">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-249">Si `false`, un control de vínculo podría ser necesario cuando un **volver** botón no está disponible.</span><span class="sxs-lookup"><span data-stu-id="2fd62-249">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-250">El ejemplo de código siguiente muestra cómo determinar si el explorador tiene una dedicado **volver** botón.</span><span class="sxs-lookup"><span data-stu-id="2fd62-250">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-251">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-251">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-252">
            <see langword="true" /> Si la barra de desplazamiento de un elemento HTML <see langword="&lt;select multiple&gt;" /> elemento con un <see langword="align" /> valor del atributo <see langword="right" /> se oculta al representarse; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-252">
              <see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-253">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-254">En el ejemplo de código siguiente se muestra cómo determinar si el explorador oculta la barra de desplazamiento para los elementos de selección múltiple alineado a la derecha.</span><span class="sxs-lookup"><span data-stu-id="2fd62-254">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-255">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-255">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-256">El nombre de clase completo de la <see cref="T:System.Web.UI.HtmlTextWriter" /> a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-256">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-257">Gets the internal identifier of the browser as specified in the browser definition file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-257">Gets the internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-258">Identificador interno del explorador según se especifica en el archivo de definición de explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-258">Internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-259">Used internally to initialize an internal set of values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-259">Used internally to initialize an internal set of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-260">Returns the type of input supported by browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-260">Returns the type of input supported by browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-261">El tipo de entrada que admite el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-261">The type of input supported by browser.</span>
          </span>
          <span data-ttu-id="2fd62-262">El valor predeterminado es <c>telephoneKeypad</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-262">The default is <c>telephoneKeypad</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-263">Valores devueltos posibles son:</span><span class="sxs-lookup"><span data-stu-id="2fd62-263">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-264">En el ejemplo de código siguiente se muestra cómo determinar el tipo de entrada compatibles.</span><span class="sxs-lookup"><span data-stu-id="2fd62-264">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="2fd62-265">The specified browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-265">The specified browser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-266">Gets a value indicating whether the client browser is the same as the specified browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-266">Gets a value indicating whether the client browser is the same as the specified browser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-267">
            <see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-267">
              <see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-268">The default is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-268">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-269">El <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> método también devuelve `true` si hereda de la definición de explorador del cliente desde el explorador especificado.</span><span class="sxs-lookup"><span data-stu-id="2fd62-269">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-270">Gets a value indicating whether the browser has a color display.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-270">Gets a value indicating whether the browser has a color display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-271">
            <see langword="true" /> Si el explorador tiene una pantalla a color; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-271">
              <see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-272">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-272">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-273">El ejemplo de código siguiente se muestra si el explorador del cliente admite color.</span><span class="sxs-lookup"><span data-stu-id="2fd62-273">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="2fd62-274">El valor devuelto puede utilizarse para determinar la imagen adecuada para enviar al explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-274">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-275">Gets a value indicating whether the browser is a recognized mobile device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-275">Gets a value indicating whether the browser is a recognized mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-276">
            <see langword="true" /> Si el explorador es un dispositivo móvil reconocido; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-276">
              <see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-277">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-277">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-278">En el ejemplo de código siguiente se muestra cómo determinar si el explorador es un dispositivo móvil.</span><span class="sxs-lookup"><span data-stu-id="2fd62-278">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2fd62-279">The name of the browser capability to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-279">The name of the browser capability to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-280">Gets the value of the specified browser capability.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-280">Gets the value of the specified browser capability.</span>
          </span>
          <span data-ttu-id="2fd62-281">In C#, this property is the indexer for the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-281">In C#, this property is the indexer for the class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-282">Funcionalidad del explorador con el nombre de clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-282">The browser capability with the specified key name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-283">En JScript, puede usar las propiedades indizadas predeterminadas definidas por un tipo, pero no se puede definir explícitamente su propio.</span><span class="sxs-lookup"><span data-stu-id="2fd62-283">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="2fd62-284">Sin embargo, si la `expando` atributo en una clase proporciona automáticamente una propiedad indizada predeterminada cuyo tipo de `Object` y un tipo de índice `String`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-284">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-285">Gets a value indicating whether the browser supports Java.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-285">Gets a value indicating whether the browser supports Java.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-286">
            <see langword="true" /> Si el explorador admite Java; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-286">
              <see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-287">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-287">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-288">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite Java.</span><span class="sxs-lookup"><span data-stu-id="2fd62-288">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-289">Gets a value indicating whether the browser supports JavaScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-289">Gets a value indicating whether the browser supports JavaScript.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-290">
            <see langword="true" /> Si el explorador admite JavaScript; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-290">
              <see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-291">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-291">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-292">Si el explorador admite JavaScript pero está deshabilitado el scripting a través de una configuración de seguridad, el <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> propiedad devolverá `true` pero no se ejecutará el script en el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-292">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-293">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite JavaScript.</span><span class="sxs-lookup"><span data-stu-id="2fd62-293">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-294">Gets the JScript version that the browser supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-294">Gets the JScript version that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-295">El <see cref="T:System.Version" /> de JScript que admite el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-295">The <see cref="T:System.Version" /> of JScript that the browser supports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-296">Gets the major (integer) version number of the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-296">Gets the major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-297">Número de versión principal del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-297">The major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-298">El ejemplo de código siguiente agrega a los principales y el número de valores secundario (entero y decimal) de la versión del explorador y el resultado se envía al explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-298">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="2fd62-299">The major version value is not an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-299">The major version value is not an integer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-300">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-300">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-301">La longitud máxima en caracteres para el <see langword="href" /> atributo HTML <see langword="&lt;a&gt;" /> elemento (delimitador).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-301">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-302">Gets the maximum length of the page, in bytes, which the browser can display.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-302">Gets the maximum length of the page, in bytes, which the browser can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-303">La longitud máxima de la página, en bytes, que puede mostrar el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-303">The maximum length of the page, in bytes, which the browser can display.</span>
          </span>
          <span data-ttu-id="2fd62-304">El valor predeterminado es <c>2000</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-304">The default is <c>2000</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-305">Procesamiento por parte de una puerta de enlace intermedia puede cambiar el número de bytes que llega al explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-305">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="2fd62-306">ASP.NET no impone este límite de tamaño de página.</span><span class="sxs-lookup"><span data-stu-id="2fd62-306">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="2fd62-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> es especialmente útil cuando se trabaja con exploradores de cliente móvil.</span><span class="sxs-lookup"><span data-stu-id="2fd62-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-308">Returns the maximum length of the text that a soft-key label can display.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-308">Returns the maximum length of the text that a soft-key label can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-309">Longitud máxima del texto que una etiqueta de tecla contextual puede mostrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-309">The maximum length of the text that a soft-key label can display.</span>
          </span>
          <span data-ttu-id="2fd62-310">De manera predeterminada, es <see langword="5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-310">The default is <see langword="5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-311">El <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-311">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-312">En el ejemplo de código siguiente se muestra cómo determinar la longitud máxima de la etiqueta de tecla programable para el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-312">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-313">Gets the minor (that is, decimal) version number of the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-313">Gets the minor (that is, decimal) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-314">Número de versión secundaria del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-314">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-315">En el ejemplo de código siguiente se devuelve la versión secundaria del explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-315">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="2fd62-316">The minor version number in the header is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-316">The minor version number in the header is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-317">Gets the minor (decimal) version number of the browser as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-317">Gets the minor (decimal) version number of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-318">Número de versión secundaria del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-318">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-319">Returns the name of the manufacturer of a mobile device, if known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-319">Returns the name of the manufacturer of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-320">Nombre del fabricante de un dispositivo móvil, si se conoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-320">The name of the manufacturer of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="2fd62-321">De manera predeterminada, es <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-321">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-322">Gets the model name of a mobile device, if known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-322">Gets the model name of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-323">Nombre de modelo de un dispositivo móvil, si se conoce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-323">The model name of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="2fd62-324">De manera predeterminada, es <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-324">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-325">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-325">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-326">El número de la versión de MSHTML DOM que admite el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-326">The number of the MSHTML DOM version that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-327">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite una versión principal de MSHTML DOM mayor que 1.</span><span class="sxs-lookup"><span data-stu-id="2fd62-327">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-328">Returns the number of soft keys on a mobile device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-328">Returns the number of soft keys on a mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-329">El número de teclas programables que se admiten en un dispositivo móvil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-329">The number of soft keys supported on a mobile device.</span>
          </span>
          <span data-ttu-id="2fd62-330">De manera predeterminada, es <see langword="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-330">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-331">El <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-331">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-332">Teclas programables son teclas especiales que la aplicación normalmente puede asignar a las tareas personalizadas.</span><span class="sxs-lookup"><span data-stu-id="2fd62-332">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="2fd62-333">Texto de-clave "débil" se muestra en la pantalla en las esquinas inferior izquierda e inferior derecha.</span><span class="sxs-lookup"><span data-stu-id="2fd62-333">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-334">Gets the name of the platform that the client uses, if it is known.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-334">Gets the name of the platform that the client uses, if it is known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-335">El sistema operativo que utiliza el cliente, si se sabe, en caso contrario, el valor se establece en <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-335">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-336">Algunos de los valores posibles para el <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> propiedad son los siguientes:</span><span class="sxs-lookup"><span data-stu-id="2fd62-336">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="2fd62-337">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="2fd62-337">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="2fd62-338">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="2fd62-338">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="2fd62-339">`WinNT` (todas las demás versiones de Windows NT)</span><span class="sxs-lookup"><span data-stu-id="2fd62-339">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-340">En el ejemplo de código siguiente se muestra cómo determinar si el explorador se está ejecutando en la plataforma Windows NT.</span><span class="sxs-lookup"><span data-stu-id="2fd62-340">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-341">Returns the MIME type of the type of image content typically preferred by the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-341">Returns the MIME type of the type of image content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-342">El tipo MIME del tipo de contenido de imagen que suele preferida el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-342">The MIME type of the type of image content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="2fd62-343">De manera predeterminada, es <see langword="image/gif" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-343">The default is <see langword="image/gif" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-344">En el ejemplo de código siguiente se muestra cómo determinar el tipo de imagen que suele preferida un explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-344">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-345">Returns the MIME type of the type of content typically preferred by the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-345">Returns the MIME type of the type of content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-346">El tipo MIME del tipo de contenido que suele preferida el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-346">The MIME type of the type of content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="2fd62-347">De manera predeterminada, es <see langword="text/html" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-347">The default is <see langword="text/html" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-348">En el ejemplo de código siguiente se muestra cómo determinar el tipo MIME que suele preferido el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-348">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-349">Gets the general name for the type of content that the browser prefers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-349">Gets the general name for the type of content that the browser prefers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-350">
            <see langword="html32" /> o <see langword="chtml10" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-350">
              <see langword="html32" /> or <see langword="chtml10" />.</span>
          </span>
          <span data-ttu-id="2fd62-351">De manera predeterminada, es <see langword="html32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-351">The default is <see langword="html32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-352">En el ejemplo de código siguiente se muestra cómo determinar el tipo de contenido que prefiere el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-352">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-353">Gets the request encoding preferred by the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-353">Gets the request encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-354">Codificación de solicitud preferida del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-354">The request encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-355">Gets the response encoding preferred by the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-355">Gets the response encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-356">Codificación de respuesta preferida del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-356">The response encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-357">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-357">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-358">
            <see langword="true" /> Si el explorador representa un salto de línea antes de <see langword="&lt;select&gt;" /> o <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-358">
              <see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-359">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-360">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-360">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-361">Si `true`, contenido siguiente `<select>` o `<input>` elementos se colocarán automáticamente en una nueva línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-361">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-362">El ejemplo de código siguiente muestra cómo determinar si el explorador representa un salto de línea antes de `<select>` o `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-362">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-363">Gets a value indicating whether the browser renders a line break after list-item elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-363">Gets a value indicating whether the browser renders a line break after list-item elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-364">
            <see langword="true" /> Si el explorador representa un salto de línea después de elementos de lista; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-364">
              <see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-365">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-365">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-366">Si `true`, el contenido siguiente de elementos de lista se colocará automáticamente en una nueva línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-366">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-367">En el ejemplo de código siguiente se muestra cómo determinar si el explorador representa un salto de línea después de elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="2fd62-367">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-368">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-368">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-369">
            <see langword="true" /> Si el explorador representa un salto de línea después de una HTML independiente <see langword="&lt;a&gt;" /> elemento (delimitador); en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-369">
              <see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-370">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-370">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-371">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-371">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-372">Si `true`, contenido que siga a una HTML independiente `<a>` elemento (delimitador) se colocará automáticamente en una nueva línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-372">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-373">El ejemplo de código siguiente muestra cómo determinar si el explorador representa un salto de línea después de una etiqueta independiente `<a>` elemento (delimitador).</span><span class="sxs-lookup"><span data-stu-id="2fd62-373">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-374">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-374">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-375">
            <see langword="true" /> Si el explorador representa un salto de línea después de un elemento HTML <see langword="&lt;input&gt;" /> elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-375">
              <see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-376">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-376">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-377">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-377">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-378">Si `true`, contenido que siga a un elemento HTML `<input>` elemento se colocará automáticamente en una nueva línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-378">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-379">El ejemplo de código siguiente muestra cómo determinar si el explorador representa un salto de línea después de un elemento HTML `<input>` elemento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-379">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-380">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-380">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-381">
            <see langword="true" /> Si el explorador del dispositivo móvil representa una WML <see langword="do" />-en función de aceptación de formularios construcción como un botón insertado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-381">
              <see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-382">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-382">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-383">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-383">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-384">El ejemplo de código siguiente muestra cómo determinar si el explorador representa un WML `do`-basándose construcción como un botón insertado de aceptación de formularios.</span><span class="sxs-lookup"><span data-stu-id="2fd62-384">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-385">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-385">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-386">
            <see langword="true" /> Si el explorador representa WML <see langword="&lt;select&gt;" /> elementos como tarjetas de menú; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-386">
              <see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-387">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-387">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-388">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> propiedad solo se aplica a dispositivos móviles compatibles con WML.</span><span class="sxs-lookup"><span data-stu-id="2fd62-388">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-389">El ejemplo de código siguiente muestra cómo determinar si el explorador representa WML `<select>` elementos como tarjetas de menú.</span><span class="sxs-lookup"><span data-stu-id="2fd62-389">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-390">Used internally to produce a meta-tag required by some browsers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-390">Used internally to produce a meta-tag required by some browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-391">Una etiqueta de meta que precisan algunos exploradores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-391">A meta-tag required by some browsers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-392">Pensado sólo para uso interno.</span><span class="sxs-lookup"><span data-stu-id="2fd62-392">Intended for internal use only.</span></span> <span data-ttu-id="2fd62-393">Algunos exploradores requieren una etiqueta meta similar al siguiente para el explorador se presenten correctamente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-393">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-394">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-394">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-395">
            <see langword="true" /> Si el explorador requiere que los dos puntos en los valores de atributo de elemento se sustituyan por un carácter diferente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-395">
              <see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-396">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-396">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-397">Algunos exploradores no reconocen los dos puntos en los valores de atributo del elemento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-397">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="2fd62-398">Si `true`, un carácter diferente se sustituyen en la representación y se devolverá en los datos de postback.</span><span class="sxs-lookup"><span data-stu-id="2fd62-398">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-399">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere dos puntos en los valores de atributo de elemento se sustituyan por un carácter diferente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-399">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-400">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-400">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-401">
            <see langword="true" /> Si el explorador requiere un elemento HTML <see langword="&lt;meta&gt;" /> (elemento) para que la <see langword="content-type" /> atributo está especificado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-401">
              <see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-402">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-403">Si `true`, adaptadores de control de servidor insertan la siguiente etiqueta en el código HTML `<head>` elemento de una página Web:</span><span class="sxs-lookup"><span data-stu-id="2fd62-403">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="2fd62-404">En este ejemplo, `CONTENT` es el valor devuelto por la <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> propiedad, y `charset` es la codificación de caracteres utilizada.</span><span class="sxs-lookup"><span data-stu-id="2fd62-404">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-405">El ejemplo de código siguiente muestra cómo determinar si el explorador requiere un elemento HTML `<meta>` (elemento) para que el `content-type` se especifica el atributo.</span><span class="sxs-lookup"><span data-stu-id="2fd62-405">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-406">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-406">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-407">
            <see langword="true" /> Si el explorador requiere que el estado de control se mantenga en las sesiones; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-407">
              <see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-408">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-408">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-409">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere que el estado de control se mantenga en las sesiones.</span><span class="sxs-lookup"><span data-stu-id="2fd62-409">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-410">Gets a value indicating whether the browser requires a double-byte character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-410">Gets a value indicating whether the browser requires a double-byte character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-411">
            <see langword="true" /> Si el explorador requiere un juego de caracteres de doble byte; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-411">
              <see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-412">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-412">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-413">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere un juego de caracteres de doble byte.</span><span class="sxs-lookup"><span data-stu-id="2fd62-413">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-414">Gets a value indicating whether the browser requires nonstandard error messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-414">Gets a value indicating whether the browser requires nonstandard error messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-415">
            <see langword="true" /> Si el explorador requiere mensajes de error no estándar; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-415">
              <see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-416">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-417">Si `true`, el explorador no representará correctamente los mensajes de error HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fd62-417">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="2fd62-418">Para corregir este problema, los adaptadores de control de servidor generan una página de error personalizada para el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-418">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-419">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere mensajes de error no estándar.</span><span class="sxs-lookup"><span data-stu-id="2fd62-419">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-420">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-420">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-421">
            <see langword="true" /> Si el explorador requiere que el primer elemento en el cuerpo de una página Web sea un elemento HTML <see langword="BR" /> elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-421">
              <see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-422">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-422">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-423">Si `true`, adaptadores de control de servidor insertan adicional `<br>` elemento inmediatamente después de la `<body>` etiqueta en una página Web.</span><span class="sxs-lookup"><span data-stu-id="2fd62-423">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-424">El ejemplo de código siguiente muestra cómo determinar si el explorador requiere que el primer elemento en el cuerpo de una página Web sea un elemento HTML `<br>` elemento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-424">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-425">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-425">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-426">
            <see langword="true" /> Si el explorador no es compatible con HTML <see langword="&lt;br&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-426">
              <see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-427">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-427">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-428">Si `true`, el explorador no representará correctamente las páginas que contienen el código HTML `<br>` elemento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-428">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-429">El ejemplo de código siguiente muestra cómo determinar si el explorador no admite HTML `<br>` elementos que se va a dar formato a los saltos de línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-429">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-430">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-430">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-431">
            <see langword="true" /> Si el explorador requiere que las páginas contengan un formulario de tamaño optimizado de etiquetas de lenguaje de marcado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-431">
              <see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-432">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-432">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-433">Si `true`, adaptadores de control de servidor generan resultados mínimos para reducir el tamaño de la página resultante.</span><span class="sxs-lookup"><span data-stu-id="2fd62-433">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd62-434">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> propiedad devuelve `true` para los exploradores compatibles con i-mode.</span><span class="sxs-lookup"><span data-stu-id="2fd62-434">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-435">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere que las páginas contengan un formulario de tamaño optimizado de etiquetas de lenguaje de marcado.</span><span class="sxs-lookup"><span data-stu-id="2fd62-435">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-436">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-436">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-437">
            <see langword="true" /> Si el explorador admite el marcado telefónico basado en texto sin formato solamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-437">
              <see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-438">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-438">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-439">El <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> propiedad se aplica solo a los exploradores para el que el <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-439">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-440">El siguiente ejemplo de código muestra cómo determinar si el explorador admite el marcado telefónico basado en texto sin formato, o si requiere un marcado especial.</span><span class="sxs-lookup"><span data-stu-id="2fd62-440">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-441">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-441">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-442">
            <see langword="true" /> Si el explorador requiere <see langword="VIEWSTATE" /> valores especialmente codificado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-442">
              <see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-443">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-443">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-444">HTTP es un protocolo sin estado, y `VIEWSTATE` es un mecanismo que se usa para conservar los cambios del cliente en varias solicitudes.</span><span class="sxs-lookup"><span data-stu-id="2fd62-444">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="2fd62-445">Cada control en una página Web contiene un <xref:System.Web.UI.Control.ViewState%2A> propiedad, que representa la acumulación de los cambios realizados por el cliente.</span><span class="sxs-lookup"><span data-stu-id="2fd62-445">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="2fd62-446">En una página de formularios Web Forms, estos cambios se codifican en los datos de postback como el `value` de HTML `<input>` elemento con un `type` atributo de `hidden`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-446">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="2fd62-447">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="2fd62-447">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Si `true`no alfabéticos caracteres en el `VIEWSTATE` valor no se enviará correctamente por el explorador, ni por una puerta de enlace intermedia. <span data-ttu-id="2fd62-449">Para corregir este problema, los adaptadores de control de servidor reemplazar los caracteres no alfabéticos en el `VIEWSTATE` valor con los que no requieran codificación en las solicitudes HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fd62-449">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-450">El ejemplo de código siguiente muestra cómo determinar si el explorador requiere `VIEWSTATE` se codifiquen los valores.</span><span class="sxs-lookup"><span data-stu-id="2fd62-450">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-451">Gets a value indicating whether the browser requires unique form-action URLs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-451">Gets a value indicating whether the browser requires unique form-action URLs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-452">
            <see langword="true" /> Si el explorador requiere direcciones URL de acción de formulario únicas; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-452">
              <see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-453">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-453">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-454">Una HTML que se hace referencia automáticamente `<form>` elemento es aquél para el que el `action` atributo especifica su propia dirección URL.</span><span class="sxs-lookup"><span data-stu-id="2fd62-454">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="2fd62-455">Si `true`, que se hace referencia automáticamente formularios no devuelven los resultados correctos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-455">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="2fd62-456">Esto es debido al almacenamiento en caché mediante el explorador o una puerta de enlace intermedia.</span><span class="sxs-lookup"><span data-stu-id="2fd62-456">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="2fd62-457">Para corregir este problema, los adaptadores de control de servidor anexar una cadena de consulta predeterminada (`__ufps=``uniquefilepathsuffix`) en los valores de dirección URL de acción de formulario de los formularios que hacen referencia.</span><span class="sxs-lookup"><span data-stu-id="2fd62-457">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-458">En el ejemplo de código siguiente se muestra cómo determinar si el explorador requiere direcciones URL de acción de formulario únicas.</span><span class="sxs-lookup"><span data-stu-id="2fd62-458">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-459">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-459">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-460">
            <see langword="true" /> Si el explorador requiere único <see langword="name" /> los valores de varias HTML del atributo <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-460">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-461">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-461">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-462">El ejemplo de código siguiente muestra cómo determinar si el explorador requiere único `NAME` los valores de varias HTML del atributo `<input type="checkbox">` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-462">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-463">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-463">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-464">
            <see langword="true" /> Si el explorador requiere único <see langword="name" /> los valores de varias HTML del atributo <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-464">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-465">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-465">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-466">El ejemplo de código siguiente muestra cómo determinar si el explorador requiere único `name` los valores de varias HTML del atributo `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-466">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-467">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-467">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-468">
            <see langword="true" /> Si los datos de postback enviados por el explorador <see langword="UrlEncoded" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-468">
              <see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-469">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-469">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-470">El ejemplo de código siguiente muestra cómo determinar si el explorador `UrlEncodes` datos de postback.</span><span class="sxs-lookup"><span data-stu-id="2fd62-470">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-471">Returns the depth of the display, in bits per pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-471">Returns the depth of the display, in bits per pixel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-472">Profundidad de la pantalla, en bits por píxel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-472">The depth of the display, in bits per pixel.</span>
          </span>
          <span data-ttu-id="2fd62-473">De manera predeterminada, es <see langword="1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-473">The default is <see langword="1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-474">Returns the approximate height of the display, in character lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-474">Returns the approximate height of the display, in character lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-475">Alto aproximado de la pantalla, en líneas de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-475">The approximate height of the display, in character lines.</span>
          </span>
          <span data-ttu-id="2fd62-476">De manera predeterminada, es <see langword="6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-476">The default is <see langword="6" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-477">El valor devuelto se puede derivar del tamaño de carácter supuesto y el tamaño de píxel de pantalla real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-477">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="2fd62-478">El algoritmo para determinar el alto utiliza una combinación de los tamaños de fuente predeterminados (de un archivo .config), tamaños específicos del explorador (de nuevo, desde un archivo .config) y encabezados explícitos enviados por el explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-478">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="2fd62-479">Algunos exploradores pueden basarse en los valores predeterminados internos, que sólo una aproximación del alto real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-479">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-480">Returns the approximate width of the display, in characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-480">Returns the approximate width of the display, in characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-481">Ancho aproximado de la presentación, en caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-481">The approximate width of the display, in characters.</span>
          </span>
          <span data-ttu-id="2fd62-482">De manera predeterminada, es <see langword="12" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-482">The default is <see langword="12" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-483">El valor devuelto se puede derivar del tamaño de carácter supuesto y el tamaño de píxel de pantalla real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-483">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="2fd62-484">El algoritmo para determinar el ancho utiliza una combinación de los tamaños de fuente predeterminados (de un archivo .config), tamaños específicos del dispositivo (de nuevo, desde un archivo .config) y encabezados explícitos enviados por los dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-484">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="2fd62-485">Estos valores no son necesariamente exactos (especialmente para las fuentes de ancho variable, estos valores son aproximados).</span><span class="sxs-lookup"><span data-stu-id="2fd62-485">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="2fd62-486">Algunos dispositivos pueden basarse en los valores predeterminados internos, que sólo una aproximación el ancho real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-486">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-487">Returns the approximate height of the display, in pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-487">Returns the approximate height of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-488">Alto aproximado de la pantalla, en píxeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-488">The approximate height of the display, in pixels.</span>
          </span>
          <span data-ttu-id="2fd62-489">De manera predeterminada, es <see langword="72" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-489">The default is <see langword="72" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-490">El valor devuelto se puede derivar del tamaño de carácter supuesto y alto del carácter.</span><span class="sxs-lookup"><span data-stu-id="2fd62-490">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="2fd62-491">El algoritmo para determinar el alto de píxel utiliza una combinación de los tamaños de fuente predeterminados (de un archivo .config), tamaños específicos del dispositivo (de nuevo, desde un archivo .config) y encabezados explícitos enviados por los dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-491">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="2fd62-492">Estos valores no son necesariamente exactos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-492">These values are not necessarily exact.</span></span> <span data-ttu-id="2fd62-493">Algunos dispositivos pueden basarse en los valores predeterminados internos, que sólo una aproximación del alto real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-493">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-494">Returns the approximate width of the display, in pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-494">Returns the approximate width of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-495">Ancho aproximado de la pantalla, en píxeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-495">The approximate width of the display, in pixels.</span>
          </span>
          <span data-ttu-id="2fd62-496">De manera predeterminada, es <see langword="96" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-496">The default is <see langword="96" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-497">El valor devuelto se puede derivar del tamaño de carácter supuesto y ancho de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2fd62-497">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="2fd62-498">El algoritmo para determinar el ancho de píxel utiliza una combinación de los tamaños de fuente predeterminados (de un archivo .config), tamaños específicos del dispositivo (de nuevo, desde un archivo .config) y encabezados explícitos enviados por los dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-498">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="2fd62-499">Estos valores no son necesariamente exactos (especialmente para las fuentes de ancho variable, estos valores son aproximados).</span><span class="sxs-lookup"><span data-stu-id="2fd62-499">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="2fd62-500">Algunos dispositivos pueden basarse en los valores predeterminados internos, que sólo una aproximación el ancho real.</span><span class="sxs-lookup"><span data-stu-id="2fd62-500">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-501">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-501">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-502">
            <see langword="true" /> Si el explorador admite el <see langword="accesskey" /> atributo HTML <see langword="&lt;a&gt;" /> (delimitador) y <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-502">
              <see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-503">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-503">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-504">El `accesskey` atributo amplía el control de formularios y vínculos en una página Web para plataformas móviles y accesibles mediante la asignación de una tecla programable u otro controlador en el dispositivo para interactuar con HTML `<a>` (delimitador) y `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-504">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-505">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `accesskey` atributo HTML `<a>` (delimitador) y `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-505">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-506">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-506">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-507">
            <see langword="true" /> Si el explorador admite el <see langword="bgcolor" /> atributo del código HTML <see langword="&lt;body&gt;" /> elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-507">
              <see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-508">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-508">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-509">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `bgcolor` atributo del código HTML `<body>` elemento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-509">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-510">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-510">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-511">
            <see langword="true" /> Si el explorador admite HTML <see langword="&lt;b&gt;" /> elementos que se va a dar formato al texto en negrita; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-511">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-512">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-512">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-513">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML `<b>` elementos que se va a dar formato al texto en negrita.</span><span class="sxs-lookup"><span data-stu-id="2fd62-513">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-514">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-514">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-515">
            <see langword="true" /> Si el explorador admite el <see langword="cache-control" /> valor para el <see langword="http-equiv" /> atributo HTML <see langword="&lt;meta&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-515">
              <see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-516">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-516">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-517">El `cache-control` valor para el `http-equiv` atributo HTML `<meta>` elementos permiten un control de cliente de almacenamiento en caché de descarga de contenido, que incluye las páginas Web.</span><span class="sxs-lookup"><span data-stu-id="2fd62-517">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="2fd62-518">El siguiente fragmento de HTML muestra un ejemplo:</span><span class="sxs-lookup"><span data-stu-id="2fd62-518">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="2fd62-519">Si `true`, la inclusión de esta etiqueta en el `<head>` debe exigir que el explorador para volver a cargar el contenido del servidor de elemento de una página Web.</span><span class="sxs-lookup"><span data-stu-id="2fd62-519">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="2fd62-520">Si `false`, adaptadores de control de servidor anexar una cadena de consulta predeterminada (`__ufps=``uniquefilepathsuffix`) en los valores de dirección URL de vínculo que ya no tiene uno.</span><span class="sxs-lookup"><span data-stu-id="2fd62-520">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="2fd62-521">Esto obliga al explorador para volver a cargarlo desde el servidor.</span><span class="sxs-lookup"><span data-stu-id="2fd62-521">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="2fd62-522">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> propiedad también se aplica a la forma de encabezado HTTP equivalente:</span><span class="sxs-lookup"><span data-stu-id="2fd62-522">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-523">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `cache-control` valor para el `http-equiv` atributo HTML `<meta>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-523">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-524">Gets a value indicating whether the browser supports callback scripts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-524">Gets a value indicating whether the browser supports callback scripts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-525">
            <see langword="true" /> Si el explorador admite scripts de devolución de llamada; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-525">
              <see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-526">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-527">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite scripts de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2fd62-527">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-528">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-528">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-529">
            <see langword="true" /> Si el explorador admite CSS; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-529">
              <see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-530">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-531">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite CSS.</span><span class="sxs-lookup"><span data-stu-id="2fd62-531">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-532">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-532">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-533">
            <see langword="true" /> Si el explorador admite el <see langword="align" /> atributo HTML <see langword="&lt;div&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-533">
              <see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-534">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-534">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-535">HTML `<div>` elementos se utilizan para agrupar varios elementos HTML para que los estilos CSS pueden aplicarse a ellos como un todo.</span><span class="sxs-lookup"><span data-stu-id="2fd62-535">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="2fd62-536">El `align` atributo establece la alineación horizontal de un `<div>` grupo en una página Web.</span><span class="sxs-lookup"><span data-stu-id="2fd62-536">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-537">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `align` atributo HTML `<div>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-537">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-538">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-538">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-539">
            <see langword="true" /> Si el explorador admite el <see langword="nowrap" /> atributo HTML <see langword="&lt;div&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-539">
              <see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-540">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-540">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-541">HTML `<div>` elementos se utilizan para agrupar varios elementos HTML para que los estilos CSS pueden aplicarse a ellos como un todo.</span><span class="sxs-lookup"><span data-stu-id="2fd62-541">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="2fd62-542">El `nowrap` atributo especifica que los elementos incluidos en el `<div>` grupo debe permanecer adyacente entre sí sin ajustar a una nueva línea.</span><span class="sxs-lookup"><span data-stu-id="2fd62-542">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-543">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `nowrap` atributo HTML `<div>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-543">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-544">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-544">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-545">
            <see langword="true" /> Si el explorador admite vacío (<see langword="null" />) cadenas en valores de cookie; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-545">
              <see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-546">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-546">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-547">El ejemplo de código siguiente muestra cómo determinar si el explorador admite vacío (`null`) cadenas en valores de cookie.</span><span class="sxs-lookup"><span data-stu-id="2fd62-547">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-548">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-548">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-549">
            <see langword="true" /> Si el explorador admite el <see langword="color" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-549">
              <see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-550">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-550">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-551">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `color` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-551">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-552">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-552">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-553">
            <see langword="true" /> Si el explorador admite el <see langword="name" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-553">
              <see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-554">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-554">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-555">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `name` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-555">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-556">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-556">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-557">
            <see langword="true" /> Si el explorador admite el <see langword="size" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-557">
              <see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-558">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-558">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-559">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `size` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-559">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-560">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-560">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-561">
            <see langword="true" /> Si el explorador admite el uso de una imagen personalizada en lugar de un botón de envío de formulario estándar; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-561">
              <see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-562">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-562">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-563">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite el uso de una imagen personalizada en lugar de un botón de envío de formulario estándar.</span><span class="sxs-lookup"><span data-stu-id="2fd62-563">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-564">Gets a value indicating whether the browser supports i-mode symbols.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-564">Gets a value indicating whether the browser supports i-mode symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-565">
            <see langword="true" /> Si el explorador admite símbolos i-mode; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-565">
              <see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-566">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-566">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-567">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propiedad aplica solo a i-modo compatible con dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-567">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="2fd62-568">Establezca los símbolos de imagen específicos de i-Phone para exploradores compatibles con i-mode utilizando la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fd62-568">Set i-Phone–specific picture symbols for i-mode–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-569">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite los símbolos i-mode.</span><span class="sxs-lookup"><span data-stu-id="2fd62-569">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-570">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-570">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-571">
            <see langword="true" /> Si el explorador admite el <see langword="istyle" /> atributo HTML <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-571">
              <see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-572">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-572">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-573">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propiedad aplica solo a i-modo compatible con dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-573">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="2fd62-574">El `istyle` atributo se usa para establecer el estilo de un campo de entrada de texto de entrada en los exploradores compatibles con i-mode.</span><span class="sxs-lookup"><span data-stu-id="2fd62-574">The `istyle` attribute is used for setting the input style of a text-input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-575">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `istyle` atributo HTML `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-575">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-576">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-576">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-577">
            <see langword="true" /> Si el explorador admite el <see langword="mode" /> atributo HTML <see langword="&lt;input&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-577">
              <see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-578">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-578">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-579">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propiedad aplica solo a i-modo compatible con dispositivos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-579">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="2fd62-580">El `MODE` atributo se usa para establecer el modo de entrada de un campo de entrada de texto en exploradores compatibles con i-mode.</span><span class="sxs-lookup"><span data-stu-id="2fd62-580">The `MODE` attribute is used for setting the input mode of a text input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-581">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `mode` atributo HTML `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-581">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-582">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-582">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-583">
            <see langword="true" /> Si el explorador admite HTML <see langword="&lt;i&gt;" /> elementos que se va a dar formato a texto en cursiva; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-583">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-584">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-584">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-585">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML `<i>` elementos que se va a dar formato al texto en cursiva.</span><span class="sxs-lookup"><span data-stu-id="2fd62-585">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-586">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-586">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-587">
            <see langword="true" /> Si el explorador admite atributos multimedios J-Phone; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-587">
              <see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-588">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-588">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-589">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> propiedad solo se aplica a dispositivos móviles compatibles con J-Phone.</span><span class="sxs-lookup"><span data-stu-id="2fd62-589">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-590">J-Phone es una especificación de lenguaje de marcado, basada en HTML, para los exploradores compatibles con J-Phone.</span><span class="sxs-lookup"><span data-stu-id="2fd62-590">J-Phone is a markup language specification, based on HTML, for J-Phone–compatible browsers.</span></span> <span data-ttu-id="2fd62-591">Si `true`, el explorador admite atributos adicionales para HTML `<a>` (delimitador) y `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-591">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="2fd62-592">Los atributos adicionales admitidos son los siguientes:</span><span class="sxs-lookup"><span data-stu-id="2fd62-592">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-593">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite atributos multimedia J-Phone.</span><span class="sxs-lookup"><span data-stu-id="2fd62-593">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-594">Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-594">Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-595">
            <see langword="true" /> Si el explorador admite símbolos de imagen específicos de J-Phone; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-595">
              <see langword="true" /> if the browser supports J-Phone–specific picture symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-596">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-596">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-597">El <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> propiedad solo se aplica a dispositivos móviles compatibles con J-Phone.</span><span class="sxs-lookup"><span data-stu-id="2fd62-597">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="2fd62-598">Establezca los símbolos de imagen específicos de J-Phone para los exploradores compatibles con J-Phone utilizando la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fd62-598">Set J-Phone–specific picture symbols for J-Phone–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-599">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite símbolos de imagen específicos de J-Phone.</span><span class="sxs-lookup"><span data-stu-id="2fd62-599">The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-600">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-600">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-601">
            <see langword="true" /> Si el explorador admite una cadena de consulta en el <see langword="action" /> valor de atributo de HTML <see langword="&lt;form&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-601">
              <see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-602">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-602">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-603">Si `false`, se envían parámetros de cadena de consulta, en los datos de postback, como HTML `<input>` elementos con el `type` atributos establecidos en `hidden`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-603">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-604">El ejemplo de código siguiente muestra cómo determinar si el explorador admite una cadena de consulta en el valor de la `action` atributo HTML `<form>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-604">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-605">Gets a value indicating whether the browser supports cookies on redirection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-605">Gets a value indicating whether the browser supports cookies on redirection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-606">
            <see langword="true" /> Si el explorador admite cookies en el redireccionamiento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-606">
              <see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-607">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-608">Con la seguridad. Browser 4.1 o UP. Explorador 3.2, la <xref:System.Web.HttpResponse.Redirect%2A> método se comporta como si el valor de la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> propiedad de la <xref:System.Web.HttpBrowserCapabilities> objeto es `false`, a menos que el <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> propiedad en el <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> sección del archivo Web.config se ha establecido explícitamente a `true`.</span><span class="sxs-lookup"><span data-stu-id="2fd62-608">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="2fd62-609">En ASP.NET 1.1, las opciones para esta configuración eran `true` o `false`, pero con ASP.NET 2.0, se expanden las opciones, y <xref:System.Web.HttpCookieMode.AutoDetect> es ahora la configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2fd62-609">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="2fd62-610">Si la aplicación Web tiene el `cookieless` atributo de la `<sessionState>` sección en el archivo Web.config establecida en un valor booleano, <xref:System.Web.HttpResponse.Redirect%2A> debería funcionar según lo esperado para estos exploradores.</span><span class="sxs-lookup"><span data-stu-id="2fd62-610">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-611">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite cookies en el redireccionamiento.</span><span class="sxs-lookup"><span data-stu-id="2fd62-611">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-612">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-612">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-613">
            <see langword="true" /> Si el explorador admite el <see langword="multiple" /> atributo HTML <see langword="&lt;select&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-613">
              <see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-614">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-614">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-615">El ejemplo de código siguiente muestra cómo determinar si el explorador admite el `multiple` atributo HTML `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-615">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-616">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-616">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-617">
            <see langword="true" /> Si la desactivación de una HTML activado <see langword="&lt;input type=checkbox&gt;" /> elemento se refleja en los datos de postback; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-617">
              <see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-618">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-618">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-619">Si `false`, el valor de la `checked` atributo HTML `<input type=checkbox>` se omite los elementos de datos de postback.</span><span class="sxs-lookup"><span data-stu-id="2fd62-619">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-620">El ejemplo de código siguiente muestra cómo determinar si la desactivación de una HTML activado `<input type=checkbox>` elemento se refleja en los datos de postback.</span><span class="sxs-lookup"><span data-stu-id="2fd62-620">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-621">Gets a value indicating whether the browser supports receiving XML over HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-621">Gets a value indicating whether the browser supports receiving XML over HTTP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-622">
            <see langword="true" /> Si el explorador admite la recepción de XML sobre HTTP; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-622">
              <see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-623">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-623">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-624">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite la recepción de XML sobre HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fd62-624">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" />
        <Parameter Name="filter2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter1">
          <span data-ttu-id="2fd62-625">The first filter to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-625">The first filter to compare.</span>
          </span>
        </param>
        <param name="filter2">
          <span data-ttu-id="2fd62-626">The second filter to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-626">The second filter to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-627">Used internally to compare filters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-627">Used internally to compare filters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-628">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-628">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterName">
          <span data-ttu-id="2fd62-629">The filter to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-629">The filter to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fd62-630">Used internally to evaluate a filter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-630">Used internally to evaluate a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fd62-631">
            <see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-631">
              <see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-632">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-632">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-633">
            <see langword="true" /> Si el explorador admite HTML <see langword="&lt;table&gt;" /> elementos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-633">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-634">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-634">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-635">El ejemplo de código siguiente muestra cómo determinar si el explorador admite HTML `<table>` elementos.</span><span class="sxs-lookup"><span data-stu-id="2fd62-635">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-636">Used internally to get the type of the object that is used to write tags for the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-636">Used internally to get the type of the object that is used to write tags for the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-637">El <see cref="T:System.Type" /> del objeto que se usa para escribir etiquetas para el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-637">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="2fd62-638">There is a parse error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-638">There is a parse error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-639">Gets the name and major (integer) version number of the browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-639">Gets the name and major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-640">Nombre y número de versión principal del explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-640">The name and major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-641">En el ejemplo de código siguiente se muestra cómo determinar si el explorador es Internet Explorer versión 6.</span><span class="sxs-lookup"><span data-stu-id="2fd62-641">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-642">Used internally to get a value indicating whether to use an optimized cache key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-642">Used internally to get a value indicating whether to use an optimized cache key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-643">
            <see langword="true" /> Para usar una clave de caché optimizada; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-643">
              <see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-644">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-644">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-645">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-645">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-646">
            <see langword="true" /> Si el explorador admite VBScript; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-646">
              <see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-647">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-647">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-648">En el ejemplo de código siguiente se muestra cómo determinar si el explorador admite VBScript.</span><span class="sxs-lookup"><span data-stu-id="2fd62-648">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-649">Gets the full version number (integer and decimal) of the browser as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-649">Gets the full version number (integer and decimal) of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-650">Número de versión completo del explorador como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-650">The full version number of the browser as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd62-651">El <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propiedad devuelve una cadena.</span><span class="sxs-lookup"><span data-stu-id="2fd62-651">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="2fd62-652">En algunos escenarios, la <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propiedad podría contener caracteres de letras, como en el caso de un explorador o dispositivo cliente que es una versión beta, como "7.0b".</span><span class="sxs-lookup"><span data-stu-id="2fd62-652">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="2fd62-653">Para obtener correctamente la versión como un tipo de datos que se puede usar en una comparación numérica, concatenar el <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> y <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> los valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="2fd62-653">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd62-654">El ejemplo de código siguiente muestra cómo determinar la <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> del explorador.</span><span class="sxs-lookup"><span data-stu-id="2fd62-654">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="2fd62-655">El <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> propiedad y <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> se concatenan propiedad y el resultado se usa para determinar si la versión del explorador es mayor que 5.01.</span><span class="sxs-lookup"><span data-stu-id="2fd62-655">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-656">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-656">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-657">Número de la versión del DOM XML de W3C que admite el explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-657">The number of the W3C XML DOM version number that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-658">En el ejemplo de código siguiente se muestra cómo determinar si la versión del explorador DOM de W3C XML es mayor que 1.</span><span class="sxs-lookup"><span data-stu-id="2fd62-658">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-659">Gets a value indicating whether the client is a Win16-based computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-659">Gets a value indicating whether the client is a Win16-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-660">
            <see langword="true" /> Si el explorador se ejecuta en un equipo basado en Win16; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-660">
              <see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-661">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-661">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-662">En el ejemplo de código siguiente se muestra cómo determinar si el explorador se está ejecutando en un equipo basado en Win16.</span><span class="sxs-lookup"><span data-stu-id="2fd62-662">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fd62-663">Gets a value indicating whether the client is a Win32-based computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-663">Gets a value indicating whether the client is a Win32-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fd62-664">
            <see langword="true" /> Si el cliente es un equipo basado en Win32; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-664">
              <see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2fd62-665">De manera predeterminada, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fd62-665">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fd62-666">En el ejemplo de código siguiente se muestra cómo determinar si el cliente es un equipo basado en Win32.</span><span class="sxs-lookup"><span data-stu-id="2fd62-666">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>