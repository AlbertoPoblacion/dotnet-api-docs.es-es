<Type Name="RoleManagerSection" FullName="System.Web.Configuration.RoleManagerSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b447232600887a73517e8aa1eb1f261769ea4ce0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55409762" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoleManagerSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoleManagerSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.RoleManagerSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleManagerSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleManagerSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type RoleManagerSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define valores de configuración que se utilizan por compatibilidad con la infraestructura de administración de roles de aplicaciones Web. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection> clase proporciona una manera de obtener acceso mediante programación y modificar el contenido de la `roleManager` sección del archivo de configuración.  
  
   
  
## Examples  
 En esta sección se proporciona dos ejemplos de código. La primera muestra cómo especificar mediante declaración los valores para varias propiedades de la <xref:System.Web.Configuration.RoleManagerSection> clase. El segundo ejemplo muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection> tipo.  
  
 El siguiente ejemplo de archivo de configuración muestra cómo especificar mediante declaración los valores para varias propiedades de la <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
```  
<system.web>  
  <roleManager   
    enabled="false"   
    cacheRolesInCookie="false"   
    cookieName=".ASPXROLES" cookieTimeout="30"  
    cookiePath="/" cookieRequireSSL="false"  
    cookieSlidingExpiration="true" createPersistentCookie="false"  
    cookieProtection="All"   
    defaultProvider="AspNetSqlRoleProvider"  
    maxCachedResults="25"  >  
    <providers>  
      <add   
        name="AspNetSqlRoleProvider"  
        connectionStringName="LocalSqlServer"   
        applicationName="/"  
        type="System.Web.Security.SqlRoleProvider, System.Web,  
          Version=2.0.3600.0, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a" />  
      <add   
        name="AspNetWindowsTokenRoleProvider"   
        applicationName="/"  
        type="System.Web.Security.WindowsTokenRoleProvider, System.Web,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
    </providers>  
  </roleManager>  
</system.web>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection> tipo.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#1)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Security.RoleManagerModule" />
    <altmember cref="T:System.Web.Security.Roles" />
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleManagerSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.RoleManagerSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleManagerSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Configuration.RoleManagerSection" /> utilizando las opciones predeterminadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor no está pensado para utilizarse directamente desde el código. Lo llama el sistema de configuración de ASP.NET. Obtener una instancia de la <xref:System.Web.Configuration.RoleManagerSection> clase utilizando el <xref:System.Configuration.Configuration.GetSection%2A> método.  
  
 En la tabla siguiente se muestra la configuración predeterminada que se usa para el <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor.  
  
|Propiedad.|Valor predeterminado|  
|--------------|-------------------|  
|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|".ASPXROLES"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|"/"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, en minutos|  
|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|"AspNetSqlRoleProvider"|  
|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|Una cadena vacía ("")|  
|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public bool CacheRolesInCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheRolesInCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cacheRolesInCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los roles del usuario actual se almacenan en memoria caché en una cookie.</summary>
        <value><see langword="true" /> si los roles del usuario actual se almacenan en memoria caché en una cookie; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> propiedad devuelve un valor booleano que indica si está habilitado el almacenamiento de la cookie de nombres de función.  
  
 Cuando el <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> propiedad está establecida en `true` en el archivo de configuración, la información de rol para cada usuario se almacena en una cookie en el cliente. Cuando la administración de funciones se comprueba para determinar si un usuario está en un rol determinado, se comprueba la cookie de roles antes de llamar al proveedor de funciones para comprobar la lista de roles en el origen de datos. La cookie se actualiza dinámicamente en el cliente para almacenar en caché los nombres de función recientemente validados.  
  
 Puede mejorar la confiabilidad de los nombres de función que se almacenan en caché en una cookie mediante la especificación de un <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> propiedad cuando se configura el `roleManager` sección del archivo de configuración. El valor predeterminado <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> propiedad es `All`, que cifra los nombres de rol en la cookie y valida que el contenido de la cookie no ha sido alterado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#2)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la cookie utilizada para almacenar en memoria caché los nombres de rol.</summary>
        <value>El nombre de la cookie utilizado para almacenar en memoria caché los nombres de rol. El valor predeterminado es ".ASPXROLES".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> propiedad devuelve el nombre de la cookie que se usa para la memoria caché los nombres de rol. Puede especificar el nombre de la cookie donde se almacenan en caché de roles para su aplicación estableciendo el `cookieName` atributo en el archivo Web.config de la aplicación ASP.NET. Esto es útil cuando desea identificar de forma exclusiva una cookie para la aplicación o cuando una cookie se comparte entre varias aplicaciones.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#3)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookiePath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso virtual de la cookie utilizada para almacenar en memoria caché los nombres de rol.</summary>
        <value>La ruta de acceso de la cookie utilizada para almacenar los roles de rol. El valor predeterminado es "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar la ruta de acceso de la cookie donde están almacenados los nombres de rol para su aplicación estableciendo el `cookiePath` atributo en el archivo Web.config de la aplicación ASP.NET. El <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> propiedad devuelve el valor de la `cookiePath` atributo desde el archivo Web.config. La ruta de acceso distingue mayúsculas de minúsculas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#4)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.CookieProtection CookieProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.CookieProtection CookieProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieProtection As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::CookieProtection CookieProtection { System::Web::Security::CookieProtection get(); void set(System::Web::Security::CookieProtection value); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtection : System.Web.Security.CookieProtection with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieProtection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de seguridad utilizada para proteger la cookie que almacena en memoria caché los nombres de rol.</summary>
        <value>El tipo de protección de seguridad utilizado dentro de la cookie donde se almacenan en memoria caché los nombres de rol. De manera predeterminada, es <see langword="All" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> propiedad describe cómo se almacena de forma segura información en una cookie. Puede especificar el tipo de seguridad de la cookie donde se almacenan en caché de roles para su aplicación estableciendo el `cookieProtection` atributo en el archivo Web.config de la aplicación ASP.NET. El `cookieProtection` atributo toma un <xref:System.Web.Security.CookieProtection> valor de enumeración de `All`, `Encryption`, `None`, o `Validation`. De manera predeterminada, es `All`. Asegúrese de usar el valor predeterminado para el <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> propiedad si desea que la validación de datos y cifrado para ayudar a proteger la cookie. Para mejorar la protección de la cookie, también puede establecer el <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> propiedad `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#5)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.CookieProtection" />
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public bool CookieRequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieRequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieRequireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cookie utilizada para almacenar en memoria caché los nombres del rol exige una conexión de Secure Sockets Layer (SSL) para ser devuelto al servidor.</summary>
        <value><see langword="true" /> si se necesita una conexión SSL para devolver al servidor la cookie donde se almacenan en memoria caché los nombres de rol; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar si se requiere SSL para devolver la cookie de nombres de rol al servidor estableciendo el `cookieRequireSSL` atributo en el archivo Web.config de la aplicación ASP.NET.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#6)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Cookie.Secure" />
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool CookieSlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieSlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSlidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cookie utilizada para almacenar en memoria caché los nombres de rol se restablecerá periódicamente.</summary>
        <value><see langword="true" /> si la fecha y hora de expiración de la cookie se restablecerán periódicamente; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar si la cookie que se usa para la memoria caché los nombres de rol es periódicamente restablecer o caducada en un momento fijo en el tiempo mediante el uso de la `cookieSlidingExpiration` atributo en el archivo Web.config de la aplicación ASP.NET. Si `true`, la expiración de la cookie se establece inicialmente en la fecha y hora actual más el <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> propiedad en cuestión de minutos. Mientras el usuario sigue usando activamente la aplicación ASP.NET, la fecha de expiración y la hora de la cookie se actualizan automáticamente, si hay menos de la mitad de la <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> restantes. De manera predeterminada, es `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#7)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CookieTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CookieTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de minutos antes de que expire la cookie utilizada para almacenar en memoria caché los nombres de rol.</summary>
        <value><see cref="T:System.TimeSpan" /> que es el número de minutos antes de que expire la cookie utilizada para almacenar en memoria caché los nombres de rol. El valor predeterminado es 30, en minutos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> propiedad establece un valor que especifica el número de minutos antes de que expire la cookie de nombres de rol. El valor predeterminado es de 30 minutos. Si el <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> propiedad es `false`, el <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> se omite.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#8)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public bool CreatePersistentCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreatePersistentCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("createPersistentCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si se utiliza una cookie basada en sesión o una cookie persistente para almacenar en memoria caché los nombres de rol.</summary>
        <value><see langword="true" /> para hacer la cookie de nombres de rol persistente entre sesiones del explorador; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> propiedad indica si la cookie que se usa para la memoria caché los nombres de rol debe ser una cookie basada en sesión, lo que significa que la cookie se perderán cuando se cierra el explorador, o una cookie persistente, lo que significa que está disponible a través de la cookie sesiones del explorador. El valor predeterminado es `false`, lo que indica que una cookie de sesión se usa para almacenar en caché los nombres de rol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#9)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProvider : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del proveedor predeterminado utilizado para administrar los roles.</summary>
        <value>Nombre de un proveedor de <see cref="P:System.Web.Configuration.RoleManagerSection.Providers" />. El valor predeterminado es "AspNetSqlRoleProvider".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> propiedad debe coincidir con un valor con nombre en el `providers` subsección de la `roleManager` sección de un archivo de configuración. Una cadena vacía ("") no es un valor válido para el <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#10)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.RoleManagerSection.Providers" />
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del dominio asociado con la cookie utilizada para almacenar en memoria caché los nombres de rol.</summary>
        <value><see cref="P:System.Web.HttpCookie.Domain" /> de la cookie utilizada para almacenar en memoria caché los nombres de rol. El valor predeterminado es una cadena vacía (<see langword="&quot;&quot;" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> propiedad se establece en la configuración de una aplicación ASP.NET mediante el `domain` atributo de la `roleManager` elemento de configuración. Si se especifica ningún valor en la configuración para el `domain` atributo, el <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> propiedad devuelve `null` y el rol de los nombres de los valores predeterminados de dominio de cookie al comportamiento de la <xref:System.Web.HttpCookie.Domain%2A> propiedad. El valor predeterminado es una cadena vacía.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se habilita el rol de administración de características de ASP.NET.</summary>
        <value><see langword="true" /> si se habilita el rol de administración de características de ASP.NET; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> propiedad devuelve un valor booleano que indica si la función de administración de ASP.NET puede tener acceso en tiempo de ejecución.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#12)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public int MaxCachedResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedResults { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int with get, set" Usage="System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxCachedResults", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número máximo de roles que ASP.NET almacena en memoria caché en la cookie de roles.</summary>
        <value>Un valor que indica el número máximo de roles que ASP.NET almacena en memoria caché en la cookie de roles. El valor predeterminado es 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Roles.MaxCachedResults%2A> propiedad devuelve un entero que indica el número máximo de roles que ASP.NET almacena en caché en la cookie de roles. El valor predeterminado es 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Security.Roles.CacheRolesInCookie" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Configuration.ProviderSettingsCollection" /> de elementos <see cref="T:System.Configuration.ProviderSettings" />.</summary>
        <value>Objeto <see cref="T:System.Configuration.ProviderSettingsCollection" /> que contiene las configuraciones de proveedor definidas dentro de la subsección <see langword="providers" /> de la sección <see langword="roleManager" /> del archivo de configuración.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proveedores de administración de roles son componentes que proporcionan acceso a los tipos de roles para un sitio. Puede especificar proveedores de administración de roles en el `providers` subsección de la `roleManager` sección de un archivo de configuración.  
  
 El <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> propiedad especifica el proveedor que se usa de forma predeterminada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Configuration.RoleManagerSection.Providers%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Configuration.RoleManagerSection> clase.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#13)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>