<Type Name="LowerCaseStringConverter" FullName="System.Web.Configuration.LowerCaseStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd5c041fbbe1b24fd2d5b7f1ba30fbf9634c4a23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LowerCaseStringConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.LowerCaseStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LowerCaseStringConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LowerCaseStringConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona la compatibilidad para convertir un objeto a una cadena en minúsculas. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Configuration.LowerCaseStringConverter> clase permite que un objeto se convierta en una cadena en minúsculas. Esta clase también proporciona soporte técnico para comprobar que se puede convertir un tipo de objeto a una cadena en minúsculas antes de la conversión se realiza.  
  
 Los métodos de <xref:System.Web.Configuration.LowerCaseStringConverter> toman como parámetro un objeto que implementa el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz. Esta interfaz proporciona información contextual sobre un componente. Normalmente, esta interfaz se utiliza en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño. El <xref:System.ComponentModel.ITypeDescriptorContext> se usa normalmente en la conversión de tipos.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LowerCaseStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LowerCaseStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Web.Configuration.LowerCaseStringConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.Configuration.LowerCaseStringConverter.%23ctor%2A> constructor.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#2)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="type">Tipo de objeto que se va a convertir.</param>
        <summary>Determina si un objeto se puede convertir a una cadena en minúsculas según los parámetros especificados.</summary>
        <returns>
          <see langword="true" /> si los parámetros describen un objeto que se puede convertir a un objeto de cadena en minúsculas; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método utiliza un objeto que implementa el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz como el `ctx` parámetro. Esta interfaz proporciona información contextual sobre un componente. Normalmente, esta interfaz se utiliza en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño. El <xref:System.ComponentModel.ITypeDescriptorContext> se usa normalmente en la conversión de tipos. Invalide este método en una clase derivada si se requiere un comportamiento personalizado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#3)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="type">Tipo de objeto que se va a convertir.</param>
        <summary>Determina si un objeto se puede convertir a una cadena en minúsculas según los parámetros especificados.</summary>
        <returns>
          <see langword="true" /> si los parámetros describen un objeto que se puede convertir a un objeto de cadena en minúsculas; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método utiliza un objeto que implementa el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz como el `ctx` parámetro. Esta interfaz proporciona información contextual sobre un componente. Normalmente, esta interfaz se utiliza en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño. El <xref:System.ComponentModel.ITypeDescriptorContext> se usa normalmente en la conversión de tipos. Invalide este método en una clase derivada si se requiere un comportamiento personalizado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#4)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="ci">Objeto que implementa la clase <see cref="T:System.Globalization.CultureInfo" />.</param>
        <param name="data">Objeto que se va a convertir.</param>
        <summary>Convierte un objeto de su valor original a una cadena en minúsculas según los parámetros especificados.</summary>
        <returns>Objeto de cadena en minúsculas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método utiliza un objeto que implementa el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz como el `ctx` parámetro. Esta interfaz proporciona información contextual sobre un componente. Normalmente, esta interfaz se utiliza en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño. El <xref:System.ComponentModel.ITypeDescriptorContext> se usa normalmente en la conversión de tipos. La `ci` objeto parameter proporciona la información relacionada con la referencia cultural. La `data` objeto parameter actúa como el objeto que se va a convertir y el objeto resultante una vez completado el método. Invalide este método en una clase derivada si se requiere un comportamiento personalizado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#5)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objeto que implementa la interfaz <see cref="T:System.ComponentModel.ITypeDescriptorContext" />.</param>
        <param name="ci">Objeto que implementa la clase <see cref="T:System.Globalization.CultureInfo" />.</param>
        <param name="value">Objeto que se va a convertir.</param>
        <param name="type">Tipo de objeto que se va a convertir.</param>
        <summary>Convierte un objeto a una cadena en minúsculas según los parámetros especificados.</summary>
        <returns>Objeto de cadena en minúsculas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método utiliza un objeto que implementa el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz como el `ctx` parámetro. Esta interfaz proporciona información contextual sobre un componente. Normalmente, esta interfaz se utiliza en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño. El <xref:System.ComponentModel.ITypeDescriptorContext> se usa normalmente en la conversión de tipos. La `ci` objeto parameter proporciona la información relacionada con la referencia cultural. La `value` objeto actúa como el objeto que se va a convertir y el objeto resultante una vez completado el método. Invalide este método en una clase derivada si se requiere un comportamiento personalizado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#6)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>