<Type Name="XhtmlConformanceSection" FullName="System.Web.Configuration.XhtmlConformanceSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e5c3876f57e9937318faff31065579d695346c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30536419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XhtmlConformanceSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XhtmlConformanceSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.XhtmlConformanceSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XhtmlConformanceSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XhtmlConformanceSection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configura la sección <see langword="xhtmlConformance" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.Web.Configuration.XhtmlConformanceSection> permite obtener acceso y modificar mediante programación la sección `xhtmlConformance` de un archivo de configuración.  
  
> [!NOTE]
>  ASP.NET permite crear páginas Web que son compatibles con los estándares XHTML 1.1. Para obtener más información sobre el estándar XHTML 1.1, vea el sitio de W3C. De forma predeterminada, cuando se trabaja con exploradores que admiten HTML 4.0 o posterior, páginas y controles ASP.NET representan el marcado que es compatible con el estándar XHTML 1.0 Transitional. Sin embargo, en algunas circunstancias, no es conveniente que ASP.NET para representar el marcado XHTML. Esto ocurre normalmente cuando tiene páginas existentes que se basan en etiquetas o atributos que normalmente estaría prohibidos por XHTML.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Solo los cambios de representación que es probables que interrumpir las aplicaciones existentes se revierten a su comportamiento anterior. No hay ningún mecanismo para revertir todos los cambios realizados para cumplir con la especificación de XHTML.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlConformanceSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.XhtmlConformanceSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlConformanceSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Configuration.XhtmlConformanceSection" /> con los parámetros predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Configuration.XhtmlConformanceSection.%23ctor%2A> constructor no está pensado para utilizarse directamente desde el código. Se llama por el sistema de configuración de ASP.NET. Obtener una instancia de la <xref:System.Web.Configuration.XhtmlConformanceSection> clase utilizando el <xref:System.Configuration.Configuration.GetSection%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.XhtmlConformanceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.XhtmlConformanceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.XhtmlConformanceSection.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As XhtmlConformanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::XhtmlConformanceMode Mode { System::Web::Configuration::XhtmlConformanceMode get(); void set(System::Web::Configuration::XhtmlConformanceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.XhtmlConformanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la propiedad <see cref="P:System.Web.Configuration.XhtmlConformanceSection.Mode" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.Configuration.XhtmlConformanceMode" />. El valor predeterminado es <see cref="F:System.Web.Configuration.XhtmlConformanceMode.Transitional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, cuando se trabaja con exploradores que admiten HTML 4.0 o posterior, páginas y controles ASP.NET representan el marcado que es compatible con el estándar XHTML 1.0 Transitional. Sin embargo, en algunas circunstancias, no es conveniente que ASP.NET para representar el marcado XHTML. Esto ocurre normalmente cuando tiene páginas existentes que se basan en etiquetas o atributos que normalmente estaría prohibidos por XHTML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.XhtmlConformanceSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>