<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c0145-101">Proporciona información contextual sobre el activador que se desencadenó.</span><span class="sxs-lookup"><span data-stu-id="c0145-101">Provides contextual information about the trigger that was fired.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0145-102">La información contextual proporcionada incluye el tipo de acción que provocó la activación del desencadenador, las columnas que se modificaron en una operación de actualización, y, en el caso de una definición de datos desencadenador DDL (lenguaje), una estructura XML EventData (vea "Referencia de Transact-SQL" en los libros SQL Server en línea) que describe la operación de desencadenamiento.</span><span class="sxs-lookup"><span data-stu-id="c0145-102">The contextual information provided includes the type of action that caused the trigger to fire, which columns were modified in an UPDATE operation, and, in the case of a data definition language (DDL) trigger, an XML EventData structure (see "Transact-SQL Reference" in SQL Server Books Online) that describes the triggering operation.</span></span>  
  
 <span data-ttu-id="c0145-103">Una instancia de <xref:Microsoft.SqlServer.Server.SqlTriggerContext> está disponible en la <xref:Microsoft.SqlServer.Server.SqlContext> (clase), cuando se ejecuta el código dentro de un desencadenador a través de la <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c0145-103">An instance of <xref:Microsoft.SqlServer.Server.SqlTriggerContext> is available from the <xref:Microsoft.SqlServer.Server.SqlContext> class, when the code is running inside a trigger through the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0145-104">El ejemplo siguiente muestra un <xref:Microsoft.SqlServer.Server.SqlTriggerContext> objeto que se usa para determinar si un <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> se produjo la acción.</span><span class="sxs-lookup"><span data-stu-id="c0145-104">The following example shows a <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object being used to determine if an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> action occurred.</span></span> <span data-ttu-id="c0145-105">Si se inserta una fila en la `user`de la tabla, el nombre de usuario y el nombre real se recuperan de la fila insertada y, a continuación, se agregan a la **UserNameAudit** tabla.</span><span class="sxs-lookup"><span data-stu-id="c0145-105">If a row was inserted into the `user`'s table, the user name and real name are retrieved from the inserted row and then added to the **UserNameAudit** table.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0145-106">Obtiene el número de columnas que contiene la tabla de datos enlazada al activador.</span><span class="sxs-lookup"><span data-stu-id="c0145-106">Gets the number of columns contained by the data table bound to the trigger.</span></span> <span data-ttu-id="c0145-107">Esta propiedad es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="c0145-107">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="c0145-108">Un entero que indica el número de columnas que contiene la tabla de datos enlazada al activador.</span><span class="sxs-lookup"><span data-stu-id="c0145-108">The number of columns contained by the data table bound to the trigger, as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0145-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> propiedad es útil para determinar el ordinal máximo que <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> permite la invocación de un desencadenador dado.</span><span class="sxs-lookup"><span data-stu-id="c0145-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> property is useful to determine the maximum ordinal that <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> allows for a given trigger invocation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0145-110">Obtiene los datos de evento específicos de la acción que desencadenó el activador.</span><span class="sxs-lookup"><span data-stu-id="c0145-110">Gets the event data specific to the action that fired the trigger.</span></span></summary>
        <value><span data-ttu-id="c0145-111">Los datos de evento específicos de la acción que desencadenó el activador como <see cref="T:System.Data.SqlTypes.SqlXml" /> si hay más información disponible; en caso contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0145-111">The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; <see langword="null" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0145-112">Esta información está disponible para los desencadenadores (DDL) de lenguaje de definición de datos.</span><span class="sxs-lookup"><span data-stu-id="c0145-112">This information is available for data definition language (DDL) triggers.</span></span> <span data-ttu-id="c0145-113">No hay información disponible a través de esta propiedad para los desencadenadores de lenguaje (DML) de manipulación de datos.</span><span class="sxs-lookup"><span data-stu-id="c0145-113">No information is available through this property for data manipulation language (DML) triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal"><span data-ttu-id="c0145-114">Ordinal basado en cero de la columna.</span><span class="sxs-lookup"><span data-stu-id="c0145-114">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="c0145-115">Devuelve <see langword="true" /> si una columna se ve afectada por una instrucción INSERT o UPDATE.</span><span class="sxs-lookup"><span data-stu-id="c0145-115">Returns <see langword="true" /> if a column was affected by an INSERT or UPDATE statement.</span></span></summary>
        <returns>
          <span data-ttu-id="c0145-116">Es <see langword="true" /> si la columna se ve afectada por una operación INSERT o UPDATE.</span><span class="sxs-lookup"><span data-stu-id="c0145-116"><see langword="true" /> if the column was affected by an INSERT or UPDATE operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0145-117">Se invoca en el contexto de un activador donde el valor de la propiedad <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> no es <see langword="Insert" /> ni <see langword="Update" />.</span><span class="sxs-lookup"><span data-stu-id="c0145-117">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not <see langword="Insert" /> or <see langword="Update" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0145-118">Indica qué acción desencadenó el activador.</span><span class="sxs-lookup"><span data-stu-id="c0145-118">Indicates what action fired the trigger.</span></span></summary>
        <value><span data-ttu-id="c0145-119">La acción que desencadenó el activador, como <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span><span class="sxs-lookup"><span data-stu-id="c0145-119">The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0145-120">En el ejemplo siguiente se muestra un desencadenador de auditoría.</span><span class="sxs-lookup"><span data-stu-id="c0145-120">The following example shows an auditing trigger.</span></span> <span data-ttu-id="c0145-121">Si un <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> o <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> se produjo la acción, se recuperan las filas afectadas de las tablas INSERTED y DELETED.</span><span class="sxs-lookup"><span data-stu-id="c0145-121">If an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> or <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> action occurred, the affected rows are retrieved from the INSERTED and DELETED tables.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>