<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="1ed68-101">Lo utilizan <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> y <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> para indicar el formato de serialización de un tipo definido por el usuario (UDT) o agregado.</span><span class="sxs-lookup"><span data-stu-id="1ed68-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed68-102">Lo utilizan <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> y <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> para indicar el formato de serialización de un tipo definido por el usuario (UDT) o agregado.</span><span class="sxs-lookup"><span data-stu-id="1ed68-102">Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed68-103">El siguiente ejemplo se muestra la `UserDefinedType` atributos del UDT punto.</span><span class="sxs-lookup"><span data-stu-id="1ed68-103">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="1ed68-104">El UDT está ordenado por bytes, se denomina "Punto", tiene un método de validación denominado "ValidatePoint" y utiliza el formato de serialización nativa.</span><span class="sxs-lookup"><span data-stu-id="1ed68-104">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1ed68-105">El formato de serialización <see langword="Native" /> utiliza un algoritmo muy simple que permite SQL Server almacenar en disco una representación eficaz del UDT.</span><span class="sxs-lookup"><span data-stu-id="1ed68-105">The <see langword="Native" /> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span></span> <span data-ttu-id="1ed68-106">Los tipos marcados para la serialización <see langword="Native" /> solo pueden tener como miembros tipos de valor ("structs" en Microsoft Visual C# y estructuras en Microsoft Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="1ed68-106">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span></span> <span data-ttu-id="1ed68-107">Los miembros de los tipos de referencia (como clases en Visual C# y Visual Basic), ya sean definidos por el usuario o existentes en Framework (como <see cref="T:System.String" />), no se admiten.</span><span class="sxs-lookup"><span data-stu-id="1ed68-107">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed68-108">Los requisitos para este formato son:</span><span class="sxs-lookup"><span data-stu-id="1ed68-108">The requirements for this format are:</span></span>  
  
-   <span data-ttu-id="1ed68-109">El `StructLayout.LayoutKindSequential` atributo se debe aplicar al agregado o UDT si se ha definido en una clase y no en una estructura.</span><span class="sxs-lookup"><span data-stu-id="1ed68-109">The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="1ed68-110">Esto controla el diseño físico de los campos de datos y se utiliza para obligar a los miembros que se disponen secuencialmente en el orden en que aparecen.</span><span class="sxs-lookup"><span data-stu-id="1ed68-110">This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="1ed68-111">SQL Server utiliza este atributo para determinar el orden de los campos para los UDT con varios campos.</span><span class="sxs-lookup"><span data-stu-id="1ed68-111">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>  
  
-   <span data-ttu-id="1ed68-112">El tipo debe contener al menos un miembro (los valores serializados no pueden ser cero bytes de tamaño).</span><span class="sxs-lookup"><span data-stu-id="1ed68-112">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
-   <span data-ttu-id="1ed68-113">Todos los campos del agregado deben ser *bits/bytes*, es decir, deben tener una representación común en la memoria administrada y no administrada y no requieren un tratamiento especial por el serializador de interoperabilidad.</span><span class="sxs-lookup"><span data-stu-id="1ed68-113">All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
-   <span data-ttu-id="1ed68-114">Todos los campos del UDT deben ser de uno de los siguientes tipos que se pueden serializar: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, u otros tipos de valor definidos por el usuario que contienen campos de uno de estos tipos.</span><span class="sxs-lookup"><span data-stu-id="1ed68-114">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  
  
-   <span data-ttu-id="1ed68-115">El agregado no debe especificar un valor para `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="1ed68-115">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
-   <span data-ttu-id="1ed68-116">El agregado no debe tener ningún campo [NonSerialized].</span><span class="sxs-lookup"><span data-stu-id="1ed68-116">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
-   <span data-ttu-id="1ed68-117">Campos no deben estar marcados como un diseño explícito (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span><span class="sxs-lookup"><span data-stu-id="1ed68-117">Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1ed68-118">Se desconoce el formato de serialización.</span><span class="sxs-lookup"><span data-stu-id="1ed68-118">The serialization format is unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1ed68-119">El formato de serialización <see langword="UserDefined" /> otorga al desarrollador pleno control sobre el formato binario a través del método <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> y del método <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</span><span class="sxs-lookup"><span data-stu-id="1ed68-119">The <see langword="UserDefined" /> serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed68-120">El agregado debe especificar un valor para `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="1ed68-120">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
 <span data-ttu-id="1ed68-121">Especifique el <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> la propiedad de atributo.</span><span class="sxs-lookup"><span data-stu-id="1ed68-121">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property.</span></span> <span data-ttu-id="1ed68-122">El valor predeterminado es false.</span><span class="sxs-lookup"><span data-stu-id="1ed68-122">The default value is false.</span></span>  
  
 <span data-ttu-id="1ed68-123">Si se omite cualquier campo de la <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> o <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> métodos, el estado de ese campo no está serializado.</span><span class="sxs-lookup"><span data-stu-id="1ed68-123">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>