<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdaea72a401dc0cc4feb93c1c0d35596b66b010f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46594952" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Lo utilizan <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> y <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> para indicar el formato de serialización de un tipo definido por el usuario (UDT) o agregado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo utilizan <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> y <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> para indicar el formato de serialización de un tipo definido por el usuario (UDT) o agregado.  
  
   
  
## Examples  
 El ejemplo siguiente se muestra el `UserDefinedType` atributo del punto de UDT.  El UDT es el orden de bytes, se denomina "Punto", tiene un método de validación denominado "ValidatePoint" y usa el formato de serialización nativa.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>El formato de serialización <see langword="Native" /> utiliza un algoritmo muy simple que permite SQL Server almacenar en disco una representación eficaz del UDT. Los tipos marcados para la serialización <see langword="Native" /> solo pueden tener como miembros tipos de valor ("structs" en Microsoft Visual C# y estructuras en Microsoft Visual Basic .NET). Los miembros de los tipos de referencia (como clases en Visual C# y Visual Basic), ya sean definidos por el usuario o existentes en Framework (como <see cref="T:System.String" />), no se admiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Son los requisitos para este formato:  
  
-   El `StructLayout.LayoutKindSequential` atributo debe aplicarse al agregado o UDT si está definido en una clase y no en una estructura. Esto controla el diseño físico de los campos de datos y se usa para imponer a los miembros que se disponen secuencialmente en el orden en que aparecen. SQL Server usa este atributo para determinar el orden de campo para los UDT con varios campos.  
  
-   El tipo debe contener al menos un miembro (los valores serializados no pueden ser cero bytes de tamaño).  
  
-   Todos los campos del agregado deben ser *bits/bytes*, es decir, que deben tener una representación común en la memoria administrada y y no requieren un tratamiento especial por el serializador de interoperabilidad.  
  
-   Todos los campos del UDT deben ser de uno de los siguientes tipos que se pueden serializar: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, u otros tipos de valor definidos por el usuario que contienen campos de uno de estos tipos.  
  
-   El agregado no debe especificar un valor para `MaxByteSize`.  
  
-   El agregado no debe tener ningún campo [NonSerialized].  
  
-   Los campos no deben marcarse como un diseño explícito (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Se desconoce el formato de serialización.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>El formato de serialización <see langword="UserDefined" /> otorga al desarrollador pleno control sobre el formato binario a través del método <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> y del método <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El agregado debe especificar un valor para `MaxByteSize`.  
  
 Especifique el <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> propiedad de atributo. El valor predeterminado es false.  
  
 Si se omite cualquier campo en el <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> o <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> métodos, el estado de ese campo no está serializado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>