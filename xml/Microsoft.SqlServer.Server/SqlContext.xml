<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50b9aa3506602f76059bc392b34ddefa0c71ba17" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52599128" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una abstracción del contexto del llamador, que proporciona acceso a los objetos <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> y <see cref="T:System.Security.Principal.WindowsIdentity" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.SqlServer.Server.SqlContext> objeto puede utilizarse para obtener el contexto del activador (para ejecutar código en un desencadenador) y el objeto de canalización (si está disponible, como en los procedimientos almacenados). También puede utilizarse para obtener un <xref:System.Security.Principal.WindowsIdentity> objeto que representa la identidad de Microsoft Windows del cliente que realiza la llamada, si el cliente se autentica con el servidor mediante la autenticación integrada.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un nuevo <xref:Microsoft.SqlServer.Server.SqlDataRecord> y su <xref:Microsoft.SqlServer.Server.SqlMetaData>. En el ejemplo, a continuación, marca el principio de un conjunto de resultados mediante el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envía los registros con datos de ejemplo al cliente utilizando el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método y marca el final del resultado se establece con el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica si el código de llamada se ejecuta en SQL Server y si se puede tener acceso a la conexión de contexto.</summary>
        <value>Es <see langword="True" /> si está disponible la conexión de contexto y se puede obtener acceso a los otros miembros de <see cref="T:Microsoft.SqlServer.Server.SqlContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta propiedad devuelve false, todos los demás <xref:Microsoft.SqlServer.Server.SqlContext> los miembros de producir una <xref:System.InvalidOperationException> si usa.  
  
 Si esta propiedad devuelve false, cualquier intento de abrir un objeto de conexión que tiene "conexión de contexto = true" en la cadena de conexión se produce un error.  
  
 Esta propiedad es de sólo lectura.  
  
 Al utilizar ADO.NET para el acceso a datos, si un fragmento de código se puede ejecutar dentro de SQL Server (mediante la integración con common language runtime) y fuera de SQL Server, esta propiedad puede usarse para comprobar si la conexión de contexto está disponible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de canalización que permite al llamador devolver al cliente los conjuntos de resultados, mensajes y los resultados de la ejecución de comandos.</summary>
        <value>Una instancia de <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> si hay una canalización disponible, o bien, <see langword="null" /> si se invoca en un contexto donde no está disponible ninguna canalización (por ejemplo, en una función definida por el usuario).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se invoca desde fuera de SQL Server, un <xref:System.NotSupportedException> se produce.  
  
 Esta propiedad es de sólo lectura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el contexto del activador para proporcionarle al llamador información sobre la causa del desencadenamiento del activador y un mapa de las columnas actualizadas.</summary>
        <value>Una instancia de <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> si hay un contexto de activador disponible, o bien, <see langword="null" /> si la llamada se realiza fuera de una invocación del activador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:Microsoft.SqlServer.Server.SqlTriggerContext> objeto sólo se puede recuperar desde dentro de un desencadenador en tiempo de ejecución de lenguaje común.  
  
 Si el <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> propiedad se obtiene acceso desde fuera de SQL Server, un <xref:System.NotSupportedException> se produce.  
  
 Esta propiedad es de sólo lectura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identidad en Microsoft Windows del llamador.</summary>
        <value>Una instancia de <see cref="T:System.Security.Principal.WindowsIdentity" /> que representa la identidad en Windows del llamador, o bien, <see langword="null" /> si el cliente se autenticó utilizando la autenticación de SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Código de Common language runtime (CLR) en SQL Server siempre se invoca en el contexto de la cuenta de proceso. Si es necesario para el código realizar una acción mediante la identidad del usuario que realiza la llamada en lugar de la identidad del proceso de SQL Server, se debe obtener un token de suplantación a través de esta propiedad. Después de obtener el objeto <xref:System.Security.Principal.WindowsIdentity>, las personas que llaman pueden suplantar a la cuenta de cliente y realizar acciones en su nombre.  
  
 Si se invoca desde fuera de SQL Server, un <xref:System.NotSupportedException> se produce.  
  
 Sólo los ensamblados marcados con permisos `EXTERNAL_ACCESS` o `UNSAFE` pueden tener acceso a esta propiedad.  
  
 Esta propiedad es de sólo lectura.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo obtener la identidad de Windows del cliente que realiza la llamada y suplantar al cliente.
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>