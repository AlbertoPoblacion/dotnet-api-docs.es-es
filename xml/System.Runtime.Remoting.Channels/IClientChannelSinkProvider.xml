<Type Name="IClientChannelSinkProvider" FullName="System.Runtime.Remoting.Channels.IClientChannelSinkProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bd7a2f648fe377dd92ff9b68dd1ddac86741156" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30485869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IClientChannelSinkProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannelSinkProvider" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientChannelSinkProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientChannelSinkProvider" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crea receptores de canal de cliente para el canal de cliente a través del que circulan los mensajes de comunicación remota.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Receptores de canal se conectan a un canal de cliente a través de implementaciones de la <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interfaz. Todos los canales de cliente de acceso remoto proporcionan constructores que toman un <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> como un parámetro.  
  
 Los proveedores de receptores de canal se almacenan en una cadena y el usuario es responsable de encadenar todos los proveedores de receptores de canal antes de pasar el externo al constructor del canal. <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> Proporciona una propiedad denominada <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> para este propósito.  
  
 Cuando se especifican varios proveedores de receptores de canal en un archivo de configuración, la infraestructura de comunicación remota los encadenará entre sí en el orden en que se encuentran en el archivo de configuración. Los proveedores de receptores de canal se creará cuando se crea el canal durante la <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> llamar.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de esta interfaz.  
  
 [!code-cpp[Remoting_Sinks#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/clientsink.cpp#30)]
 [!code-csharp[Remoting_Sinks#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/clientsink.cs#30)]  
  
 Consulte la <xref:System.Runtime.Remoting.Channels.IClientChannelSink> documentación para obtener un ejemplo de la implementación de receptor de cliente correspondiente de la interfaz.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IClientChannelSink CreateSink (System.Runtime.Remoting.Channels.IChannelSender channel, string url, object remoteChannelData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Channels.IClientChannelSink CreateSink(class System.Runtime.Remoting.Channels.IChannelSender channel, string url, object remoteChannelData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSink (channel As IChannelSender, url As String, remoteChannelData As Object) As IClientChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Channels::IClientChannelSink ^ CreateSink(System::Runtime::Remoting::Channels::IChannelSender ^ channel, System::String ^ url, System::Object ^ remoteChannelData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IClientChannelSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.Runtime.Remoting.Channels.IChannelSender" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Canal para el que se va a construir la cadena de receptores actual.</param>
        <param name="url">Dirección URL del objeto con el que se va a establecer la conexión. Este parámetro puede ser <see langword="null" /> si la conexión se basa íntegramente en la información que contiene el parámetro <c>remoteChannelData</c>.</param>
        <param name="remoteChannelData">Objeto de datos de canal que describe un canal del servidor remoto.</param>
        <summary>Crea una cadena de receptores.</summary>
        <returns>El primer receptor de la cadena de receptores de canal recién formado o <see langword="null" />, que indica que este proveedor no proporcionará o no proporciona ninguna conexión de este extremo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> se llama al método, crea su propio receptor de canal, reenvía el <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> llamada al siguiente proveedor de receptor de la cadena (si hay alguno) y se asegura de que el siguiente receptor y el actual están vinculados entre sí.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de este método.  
  
 [!code-cpp[Remoting_Sinks#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/clientsink.cpp#33)]
 [!code-csharp[Remoting_Sinks#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/clientsink.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">El llamador inmediato no tiene permisos de infraestructura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para trabajar con código de infraestructura. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IClientChannelSinkProvider Next { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IClientChannelSinkProvider Next" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next" />
      <MemberSignature Language="VB.NET" Value="Public Property Next As IClientChannelSinkProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ Next { System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ get(); void set(System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IClientChannelSinkProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el siguiente proveedor de receptor en la cadena de proveedores de receptores del canal.</summary>
        <value>Siguiente proveedor de receptor en la cadena de proveedores de receptores de canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de esta propiedad.  
  
 [!code-cpp[Remoting_Sinks#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/clientsink.cpp#32)]
 [!code-csharp[Remoting_Sinks#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/clientsink.cs#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">El llamador inmediato no tiene permisos de infraestructura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para trabajar con código de infraestructura. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>