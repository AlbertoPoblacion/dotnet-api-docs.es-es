<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bfcd14c2e4ff1bfb8ae45a2fe60991f1590c260" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63959633" /></Metadata><TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Describe una interfaz <see cref="T:Microsoft.Build.Framework.ITaskFactory" /> extendida que debe implementar una instancia del generador de tareas.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">El host de registro del generador de tareas va a registrar los mensajes del contexto de la tarea.</param>
        <param name="taskIdentityParameters">Parámetros especiales que el generador de tareas puede usar para modificar la forma en que ejecuta las tareas, como el tiempo de ejecución y la arquitectura.</param>
        <summary>Cree una instancia de la tarea que se va a usar, con un conjunto opcional de parámetros “especiales” establecidos en la llamada de tareas individuales utilizando los parámetros predeterminados de la tarea MSBuildRuntime y MSBuildArchitecture. MSBuild proporciona una implementación de esta interfaz, TaskHostFactory, que usa "MSBuildRuntime", con los valores "CLR2", "CLR4", "CurrentRuntime" y "*" (Cualquiera); y "MSBuildArchitecture", con los valores "x86", "x64", "CurrentArchitecture" y "\*" (Cualquiera). Un implementador de ITaskFactory2 puede elegir estos valores predefinidos de MSBuildRuntime y de MSBuildArchitecture, o puede especificar valores nuevos para estos parámetros.</summary>
        <returns>Tarea generada, o <c>null</c> si la tarea no se ha podido crear.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un generador de tareas implementa ITaskFactory2, MSBuild llamará a este método en lugar de ITaskFactory.CreateTask.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Nombre de la tarea.</param>
        <param name="factoryIdentityParameters">Parámetros especiales que el generador de tareas puede usar para modificar la forma en que ejecuta las tareas, como el tiempo de ejecución y la arquitectura. La clave es el nombre del parámetro y el valor es el valor del parámetro. Es el conjunto de parámetros que se estableció en UsingTask mediante, por ejemplo, los parámetros Runtime y Architecture de UsingTask.</param>
        <param name="parameterGroup">Grupo de parámetros.</param>
        <param name="taskBody">Cuerpo de la tarea.</param>
        <param name="taskFactoryLoggingHost">Host de registro del generador de tareas.</param>
        <summary>Inicializa este generador para crear instancias de tareas con un bloque de tarea alineada determinada y un conjunto de parámetros UsingTask. MSBuild proporciona una implementación de esta interfaz, TaskHostFactory, que usa "Runtime", con los valores "CLR2", "CLR4", "CurrentRuntime" y "*" (Cualquiera); y "Architecture", con los valores "x86", "x64", "CurrentArchitecture" y "\*" (Cualquiera). Un implementador de ITaskFactory2 puede elegir estos valores predefinidos de Runtime y de Architecture, o puede especificar valores nuevos para estos parámetros.</summary>
        <returns>Valor que indica si la inicialización se realizó correctamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor de MSBuild va a llamar a este elemento para inicializar el generador. De este modo, el generador debería inicializarse lo suficiente como para que se le pueda preguntar si puede crear o no nombres de tarea. Si un generador de tareas implementa ITaskFactory2, este método Initialize se llamará en lugar de ITaskFactory.Initialize.  
  
 TaskFactoryLoggingHost registrará los mensajes en el contexto del destino donde se utiliza en primer lugar la tarea.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>