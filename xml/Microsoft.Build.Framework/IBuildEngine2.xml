<Type Name="IBuildEngine2" FullName="Microsoft.Build.Framework.IBuildEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d36c351aed56634c876eca3268f4080c2e10fd2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30330669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine2 : Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine2 implements class Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine2&#xA;Implements IBuildEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine2 : Microsoft::Build::Framework::IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Permite a los autores de tareas usar un subconjunto de la funcionalidad del motor de MSBuild.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Build.Framework.IBuildEngine2> extiende <xref:Microsoft.Build.Framework.IBuildEngine>, lo que le permite compilar varios archivos de proyecto en paralelo en sistemas que contiene varios procesadores o procesadores con varios núcleos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFile">
      <MemberSignature Language="C#" Value="public bool BuildProjectFile (string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFile(string projectFileName, string[] targetNames, class System.Collections.IDictionary globalProperties, class System.Collections.IDictionary targetOutputs, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFile (projectFileName As String, targetNames As String(), globalProperties As IDictionary, targetOutputs As IDictionary, toolsVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFile(System::String ^ projectFileName, cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ globalProperties, System::Collections::IDictionary ^ targetOutputs, System::String ^ toolsVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName">Nombre del archivo de proyecto que se va a compilar.</param>
        <param name="targetNames">Nombres del destino en el proyecto que se va a compilar. Separe varios destinos con un punto y coma (;). Se aceptan valores <see langword="Null" />.</param>
        <param name="globalProperties">
          <see cref="T:System.Collections.IDictionary" /> de propiedades globales adicionales que se van a aplicar al proyecto. La clave y el valor deben ser datos de tipo <see langword="String" />.</param>
        <param name="targetOutputs">Resultados de cada destino especificado. Se aceptan valores <see langword="Null" />.</param>
        <param name="toolsVersion">Valor predeterminado = "3.5". Especifica la versión del conjunto de herramientas que debe usarse para la compilación. Se aceptan valores <see langword="Null" />.</param>
        <summary>Inicia la compilación de un archivo de proyecto. Si la compilación se realiza correctamente, se devuelven los resultados de los destinos especificados, si existen.</summary>
        <returns>
          Es <see langword="true" /> si la compilación se ha realizado correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se especifica ningún destino, [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] genera los destinos predeterminados del proyecto.  
  
 Resultados de destino se devuelven como <xref:Microsoft.Build.Framework.ITaskItem> matrices indizados por nombre de destino.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public bool BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), targetOutputsPerProject As IDictionary(), toolsVersion As String(), useResultsCache As Boolean, unloadProjectsOnCompletion As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::IDictionary ^&gt; ^ targetOutputsPerProject, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="targetOutputsPerProject" Type="System.Collections.IDictionary[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="useResultsCache" Type="System.Boolean" />
        <Parameter Name="unloadProjectsOnCompletion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">Nombres de los archivos del proyecto que se van a compilar.</param>
        <param name="targetNames">Nombres de los destinos del proyecto que se van a compilar. Separe varios destinos con un punto y coma (;). Se aceptan valores <see langword="Null" />.</param>
        <param name="globalProperties">
          <see cref="T:System.Collections.IDictionary" /> de propiedades globales adicionales que se van a aplicar al proyecto. La clave y el valor deben ser datos de tipo <see langword="String" />. Las entradas de una matriz pueden ser <see langword="null" />.</param>
        <param name="targetOutputsPerProject">Resultados de cada destino especificado. Se aceptan valores <see langword="Null" />.</param>
        <param name="toolsVersion">Valor predeterminado = "3.5". Especifica la versión del conjunto de herramientas que debe usarse para la compilación. Se aceptan valores <see langword="Null" />.</param>
        <param name="useResultsCache">Si es <see langword="true" />, la operación sólo se ejecutará si la memoria caché aún no contiene el resultado. Tras la operación, el resultado se almacenará en la memoria caché.</param>
        <param name="unloadProjectsOnCompletion">Si es <see langword="true" /> el proyecto se descargará una vez completada la operación.</param>
        <summary>Permite que las tareas inicien compilaciones paralelas de los archivos de proyecto especificados en sistemas con varios procesadores o procesadores de varios núcleos. Si las compilaciones se realizan correctamente, se devuelven los resultados de los destinos especificados, si existen.</summary>
        <returns>
          Es <see langword="True" /> si la compilación se realizó correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ambos `targetNames` y `targetOutputs` Aceptar `null` valores. Si no se especifica ningún destino, se generan los destinos predeterminados. Resultados de destino se devuelven como <xref:Microsoft.Build.Framework.ITaskItem> matrices indizados por nombre de destino.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunningMultipleNodes">
      <MemberSignature Language="C#" Value="public bool IsRunningMultipleNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunningMultipleNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunningMultipleNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunningMultipleNodes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un valor que indica si el sistema se ejecuta en modo multiprocesador o de procesador único.</summary>
        <value>
          Devuelve <see langword="true" /> si el sistema se ejecuta en modo multiprocesador; de lo contrario, devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor de compilación está en modo de monoprocesador (`IsRunningMultipleNodes` = `false`) cuando se inicializa con el número de CPU igual a 1 y el motor de compilación no es un motor secundario. El motor de compilación está en modo de varios procesador (`IsRunningMultipleNodes` = `true`) cuando se inicializa con un número de CPU mayor que 1, o cuando el motor de compilación es un motor secundario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>