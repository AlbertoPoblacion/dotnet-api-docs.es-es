<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f649b391903f2bb1a09092568b00a0d61d647d4a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36365141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene una colección de enlaces y objetos <see cref="T:System.Windows.Controls.ValidationRule" /> que se usan para validar un objeto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Data.BindingGroup> crea una relación entre varios enlaces, que se pueden validar y actualizar juntos. Por ejemplo, suponga que una aplicación solicita al usuario que escriba una dirección. A continuación, la aplicación rellena un objeto de tipo `Address`, que tiene las propiedades, `Street`, `City`, `ZipCode`, y `Country`, con los valores que el usuario especificado. La aplicación tiene un panel que contiene cuatro <xref:System.Windows.Controls.TextBox> controles, cada uno de los cuales está enlazados a una de las propiedades del objeto de datos. Puede usar un <xref:System.Windows.Controls.ValidationRule> en un <xref:System.Windows.Data.BindingGroup> para validar la `Address` objeto. Si los enlaces a participar en la misma <xref:System.Windows.Data.BindingGroup>, puede asegurarse de que el código postal es válido para el país de la dirección.  
  
 Establece el <xref:System.Windows.FrameworkElement.BindingGroup%2A> propiedad <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>. Los elementos secundarios heredan la <xref:System.Windows.Data.BindingGroup> de sus elementos principales, al igual que con cualquier otra propiedad heredable. Un enlace en un elemento descendiente se agrega a un <xref:System.Windows.Data.BindingGroup> si se produce una de las situaciones siguientes:  
  
-   El origen del enlace y la <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento que tiene el <xref:System.Windows.Data.BindingGroup> son el mismo objeto y la <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> no se establece la propiedad.  
  
-   El <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propiedad del enlace es igual a la <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> y no se establece explícitamente en `null`.  
  
 En el ejemplo de la dirección, suponga que la <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Controls.Panel> se establece en el objeto del tipo `Address`. El enlace para cada <xref:System.Windows.Controls.TextBox> se agrega a la <xref:System.Windows.Data.BindingGroup> del panel.  
  
 Agregar <xref:System.Windows.Controls.ValidationRule> objetos a un <xref:System.Windows.Data.BindingGroup>. El <xref:System.Windows.Data.BindingGroup> se pasa como primer parámetro de la <xref:System.Windows.Controls.ValidationRule.Validate%2A> método cuando el <xref:System.Windows.Controls.ValidationRule> se ejecuta. Puede usar el <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> o <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> método en el que <xref:System.Windows.Data.BindingGroup> para obtener los valores propuestos del objeto y el <xref:System.Windows.Data.BindingGroup.Items%2A> propiedad para obtener los orígenes de los enlaces.  
  
 Un <xref:System.Windows.Data.BindingGroup> actualiza los orígenes del enlace al mismo tiempo en lugar de cada enlace que se va a actualizar de forma independiente. Cuando se llama a uno de los métodos para validar los datos (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), el enlace para cada <xref:System.Windows.Controls.TextBox> en el ejemplo se valida y se podrían actualizar. Cuando un enlace es parte de un <xref:System.Windows.Data.BindingGroup>, el origen del enlace no se actualiza hasta que se llama <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> en el <xref:System.Windows.Data.BindingGroup>, a menos que establezca explícitamente la <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propiedad.  
  
   
  
## Examples  
 Los ejemplos siguientes crean una aplicación que pide al usuario que escriba la descripción y el precio de un artículo y la fecha en que expira la oferta. La aplicación muestra la información actual para el elemento situado debajo del formulario. El usuario puede enviar o cancelar los cambios.  
  
 La aplicación hace lo siguiente para conseguir este comportamiento.  
  
-   Crea un <xref:System.Windows.Data.BindingGroup> y agrega la raíz <xref:System.Windows.Controls.StackPanel> cuando crea el [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de la aplicación.  
  
-   Llamadas <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, y <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> en la lógica de la aplicación para habilitar la reversión de cambios.  
  
-   Llamadas <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> en un <xref:System.Windows.Controls.ValidationRule.Validate%2A> método para obtener la entrada del usuario y, a continuación, compruebe que un elemento más de 100 dólares está disponible al menos siete días.  
  
 En el ejemplo siguiente se crea el [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de la aplicación. La raíz <xref:System.Windows.Controls.StackPanel> tiene un <xref:System.Windows.Data.BindingGroup> que contiene un <xref:System.Windows.Controls.ValidationRule> que valida el elemento, como se describió anteriormente. Los objetos de enlace en el `Price` propiedad y el `OfferExpires` parte de la propiedad se convierten en de la <xref:System.Windows.Data.BindingGroup> y cada enlace tiene un <xref:System.Windows.Controls.ValidationRule> para asegurarse de que precio y la fecha, respectivamente, son valores válidos. Las reglas de validación para las propiedades individuales se ejecutan antes de la <xref:System.Windows.Controls.ValidationRule> en el <xref:System.Windows.Data.BindingGroup>.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 En el ejemplo siguiente se muestra los controladores de eventos de la aplicación. Cuando el usuario hace clic en el botón Enviar, la aplicación llama a <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> para ejecutar cada una <xref:System.Windows.Controls.ValidationRule> que está asociada la <xref:System.Windows.Data.BindingGroup>. Si cada <xref:System.Windows.Controls.ValidationRule> se realiza correctamente, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> guarda los valores en el objeto y finaliza la transacción de edición. Si <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> es correcta, la aplicación comienza otra transacción de edición. Cuando un <xref:System.Windows.Controls.ValidationRule> se produce un error, el <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento se produce porque la aplicación establecer <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> a `true` en la <xref:System.Windows.Data.BindingGroup> (en el ejemplo anterior). `ItemError` Controla el <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> eventos y muestra información sobre el error de validación para el usuario. En el ejemplo también controla la <xref:System.Windows.FrameworkElement.Loaded> eventos para el <xref:System.Windows.Controls.StackPanel> y <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos para el **cancelar** botón.  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 En el ejemplo siguiente se muestra la opción de instalación <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, que se agregó a la <xref:System.Windows.Data.BindingGroup> en el primer ejemplo. El <xref:System.Windows.Controls.ValidationRule> utiliza la <xref:System.Windows.Data.BindingGroup> en su <xref:System.Windows.Controls.ValidationRule.Validate%2A> método para obtener los valores que el usuario ha especificado en el formulario y comprueba que, si un elemento es supera los 100 dólares, estará disponible al menos siete días.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comienza una transacción de edición en los orígenes del <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los orígenes en el <xref:System.Windows.Data.BindingGroup> admite descartar los cambios pendientes, puede llamar a <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> para comenzar la transacción de edición, llame a <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> para guardar los cambios pendientes, llame a <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> para descartar los cambios pendientes.  
  
 Para cada objeto de <xref:System.Windows.Data.BindingGroup.Items%2A> que implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> llamadas <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> cuando se carga una ventana para comenzar la transacción de edición.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Windows.Data.BindingExpression" /> que contiene información para cada enlace del objeto <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Colección de objetos <see cref="T:System.Windows.Data.BindingExpression" /> que contiene información para cada enlace del objeto <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Data.BindingExpression> pertenece a un <xref:System.Windows.Data.BindingGroup> si se produce uno de los siguientes casos:  
  
-   El origen del enlace y la <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento que tiene el <xref:System.Windows.Data.BindingGroup> son el mismo objeto y la <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> no se ha establecido.  
  
-   El <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propiedad del enlace y la <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> se establecen en el mismo valor distinto de null y el <xref:System.Windows.Data.BindingGroup> pertenece a un elemento primario del elemento de destino del enlace.  
  
-   Agrega un <xref:System.Windows.Data.BindingExpression> a <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finaliza la transacción de edición y descarta los cambios pendientes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método hace que los orígenes descartar los cambios pendientes, si un objeto de origen es capaz de hacerlo y finalizar la transacción de edición. A continuación, el método actualiza las propiedades de destino con los valores de origen guardados.  
  
 Para cada objeto de <xref:System.Windows.Data.BindingGroup.Items%2A> que implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> llamadas <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> para descartar los cambios pendientes y, a continuación, llama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> para preparar el origen que se vuelva a editado.  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si cada origen del enlace puede descartar los cambios pendientes y restaurar los valores originales.</summary>
        <value>Es <see langword="true" /> si cada origen del enlace puede descartar los cambios pendientes y restaurar los valores originales; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un origen puede descartar los cambios pendientes si implementa <xref:System.ComponentModel.IEditableObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ejecuta todos los objetos <see cref="T:System.Windows.Controls.ValidationRule" /> y actualiza los orígenes de enlace si todas las reglas de validación se ejecutan correctamente.</summary>
        <returns>Es <see langword="true" /> si <see cref="T:System.Windows.Controls.ValidationRule" /> se ejecuta correctamente y los valores se confirman en los orígenes; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cada <xref:System.Windows.Controls.ValidationRule> se realiza correctamente, este método hace que los orígenes confirmar los cambios pendientes y de finalización de la transacción de edición, si un objeto de origen es capaz de hacerlo.  
  
 Para cada objeto de <xref:System.Windows.Data.BindingGroup.Items%2A> que implementa <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> llamadas <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> para guardar los cambios pendientes y, a continuación, llama <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> para preparar el origen que se vuelva a editado.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que contiene la propiedad especificada.</param>
        <param name="propertyName">Propiedad cuyo valor propuesto se va a obtener.</param>
        <summary>Devuelve el valor propuesto para la propiedad y elemento especificados.</summary>
        <returns>Valor de propiedad propuesto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método en el <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> método para obtener el valor que se confirmen en el origen. El tipo del valor devuelto depende de la fase en la que el <xref:System.Windows.Controls.ValidationRule> se produce. Por ejemplo, si un <xref:System.Windows.Controls.TextBox> están enlazado a datos a una propiedad de tipo entero y la <xref:System.Windows.Controls.ValidationRule> que llama <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> tiene su <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> establecido en <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, el método devuelve una cadena. Si el <xref:System.Windows.Controls.ValidationRule> tiene su <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> establecido en <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, el método devuelve cualquier tipo devuelto por el convertidor del enlace. En este ejemplo, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> normalmente devuelve un entero.  
  
   
  
## Examples  
 En el siguiente ejemplo es parte de una aplicación que pide al usuario que especifique a varios clientes y asigne a un representante de ventas a cada cliente. La aplicación comprueba que el representante de ventas y el cliente pertenecen a la misma región. El ejemplo se muestra la <xref:System.Windows.Controls.ValidationRule.Validate%2A> método, que usa el <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> método para obtener los valores que el cliente ha especificado.  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay un enlace para el elemento y la propiedad especificados.</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">El valor de la propiedad especificada no está disponible, debido a un error de conversión o a que se produjo un error en una regla de validación anterior.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el <see cref="T:System.Windows.Data.BindingGroup" /> tiene una regla de validación que da error.</summary>
        <value>
          <see langword="true" /> si el <see cref="T:System.Windows.Data.BindingGroup" /> tiene una regla de validación que da error; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Windows.Data.BindingGroup" /> contiene un valor propuesto que no se ha escrito en el origen.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Data.BindingGroup" /> contiene un valor propuesto que no se ha escrito en el origen; si no, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los orígenes que usan los objetos de enlace de <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Orígenes que usan los objetos de enlace de <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada objeto que se usa como un origen se agrega a la <xref:System.Windows.Data.BindingGroup.Items%2A> propiedad una vez, incluso si el objeto se usa como el origen de varios enlaces. A menudo, hay un solo elemento en <xref:System.Windows.Data.BindingGroup.Items%2A>, que es el objeto que es el <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento que se usa el <xref:System.Windows.Data.BindingGroup>. Es posible que un <xref:System.Windows.Data.BindingGroup> tener varios orígenes, sin embargo. Por ejemplo, si los objetos de enlace comparten el mismo <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> , pero usar objetos de origen diferentes, cada objeto que se usa como origen se encuentra en <xref:System.Windows.Data.BindingGroup.Items%2A>.  
  
 También puede haber varios objetos en <xref:System.Windows.Data.BindingGroup.Items%2A> si la ruta de acceso de un enlace que se resuelve en una propiedad anidada del origen. Por ejemplo, suponga que un <xref:System.Windows.Controls.TextBox> enlace del control es una parte de un <xref:System.Windows.Data.BindingGroup> y su <xref:System.Windows.FrameworkElement.DataContext%2A> es un `Customer` objeto, que tiene una propiedad de tipo `Address`. Si el <xref:System.Windows.Data.Binding.Path%2A> de la <xref:System.Windows.Data.Binding> es el `Address.ZipCode` propiedad, el `Address` se agrega a la <xref:System.Windows.Data.BindingGroup.Items%2A> propiedad.  
  
   
  
## Examples  
 Los ejemplos siguientes forman parte de una aplicación que comprueba si el usuario ha establecido las propiedades de dos objetos en los mismos valores. El primer ejemplo crea dos <xref:System.Windows.Controls.TextBox> controles, cada uno de los cuales son datos enlazados a un origen diferente. El enlace del primer <xref:System.Windows.Controls.TextBox> obtiene su origen, `object1`, desde el <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Controls.TextBox> elemento primario del control (el <xref:System.Windows.Controls.StackPanel>). En la segunda <xref:System.Windows.Controls.TextBox>, el origen del enlace se establece en `object2`. El ejemplo también crea un <xref:System.Windows.Controls.Label> que muestra los errores de validación.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 El siguiente ejemplo se muestra el <xref:System.Windows.Controls.ValidationRule> que utiliza el ejemplo anterior. En el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método, el ejemplo obtiene cada objeto de origen de la <xref:System.Windows.Data.BindingGroup> y comprueba si las propiedades de los objetos son iguales.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre que identifica el objeto <see cref="T:System.Windows.Data.BindingGroup" />, que se puede usar para incluir y excluir los objetos de enlace de <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Nombre que identifica <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Data.BindingGroup.Name%2A> es `null`, enlaces que tengan un origen que sea el mismo objeto que la <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento que tiene el <xref:System.Windows.Data.BindingGroup> participar en la <xref:System.Windows.Data.BindingGroup>.  
  
 Puede incluir enlaces que tengan un origen que sea diferente de la <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento primario que tiene el <xref:System.Windows.Data.BindingGroup> estableciendo <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> y <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propiedad de un enlace en el mismo valor. Se pueden excluir los enlaces que tienen el mismo origen como <xref:System.Windows.FrameworkElement.DataContext%2A> del elemento primario que tiene el <xref:System.Windows.Data.BindingGroup> estableciendo <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> y <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> propiedad de un enlace en valores diferentes.  
  
   
  
## Examples  
 Los ejemplos siguientes forman parte de una aplicación que comprueba si el usuario ha establecido las propiedades de dos objetos en los mismos valores. El primer ejemplo crea dos <xref:System.Windows.Controls.TextBox> controles, cada uno de los cuales son datos enlazados a un origen diferente. El enlace del primer <xref:System.Windows.Controls.TextBox> forma parte de la <xref:System.Windows.Data.BindingGroup> porque el <xref:System.Windows.Controls.TextBox> hereda el <xref:System.Windows.FrameworkElement.DataContext%2A> y <xref:System.Windows.Data.BindingGroup> de su elemento primario <xref:System.Windows.Controls.StackPanel>.  
  
 El enlace en la segunda <xref:System.Windows.Controls.TextBox> forma parte de la <xref:System.Windows.Data.BindingGroup> porque el <xref:System.Windows.Data.BindingGroup.Name%2A> de la <xref:System.Windows.Data.BindingGroup> y <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> de la <xref:System.Windows.Data.Binding> están establecidos en `bindingGroup`.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 El siguiente ejemplo se muestra el <xref:System.Windows.Controls.ValidationRule> que utiliza el ejemplo anterior. En el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método, el ejemplo obtiene cada objeto de origen de la <xref:System.Windows.Data.BindingGroup> y comprueba si las propiedades de los objetos son iguales.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si el evento <see cref="E:System.Windows.Controls.Validation.Error" /> se provoca cuando cambia el estado de <see cref="T:System.Windows.Controls.ValidationRule" />.</summary>
        <value>Es <see langword="true" /> si el evento <see cref="E:System.Windows.Controls.Validation.Error" /> se provoca cuando cambia el estado de <see cref="T:System.Windows.Controls.ValidationRule" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> se produce el evento adjunto en el elemento que tiene el <xref:System.Windows.Data.BindingGroup>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.Data.BindingGroup> y establece <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> a `true` para que la aplicación puede controlar la <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> eventos cuando un <xref:System.Windows.Controls.ValidationRule> se produce un error.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 El siguiente ejemplo se controla el <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto al que está asignado este <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>El objeto al que este <see cref="T:System.Windows.Data.BindingGroup" /> está asignado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Windows.Data.BindingGroup" /> reutiliza los valores de destino que no se han confirmado en el origen.</summary>
        <value>Es <see langword="true" /> si <see cref="T:System.Windows.Data.BindingGroup" /> reutiliza los valores de destino que no se han confirmado en el origen; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor propuesto es un valor que se ha modificado en el destino de un enlace, pero no se ha confirmado en el origen. Por ejemplo, suponga que hay un enlace bidireccional en un <xref:System.Windows.Controls.TextBox> y <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propiedad está establecida en <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>. Si el usuario cambia el valor de la <xref:System.Windows.Controls.TextBox>, el valor propuesto es el valor que se encuentra en la <xref:System.Windows.Controls.TextBox> antes de que se compromete a origen.  
  
 Cuando <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> es `true`, el <xref:System.Windows.Data.BindingGroup> usa el valor propuesto cuando un enlace deja BindingGroup y otro enlace con el mismo origen une a BindingGroup.  Por ejemplo, suponga que una aplicación permite a un usuario editar varios campos y actualizar el objeto de origen, haga clic en un botón. Cuando no se está editando un campo, la aplicación lo muestra en un <xref:System.Windows.Controls.TextBlock>. Cuando el usuario empieza a editar un campo, la aplicación reemplaza la <xref:System.Windows.Controls.TextBlock> con un <xref:System.Windows.Controls.TextBox>. Cuando el usuario finaliza la edición de ese campo, la aplicación reemplaza la <xref:System.Windows.Controls.TextBox> con un <xref:System.Windows.Controls.TextBlock>. Dado que el origen no se actualiza hasta que el usuario hace clic en el botón, debe haber una manera para que la <xref:System.Windows.Controls.TextBlock> para mostrar el valor propuesto. Estableciendo <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> a `true`, la aplicación mostrará los cambios del usuario a un campo aunque no se ha actualizado el origen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">Objeto que contiene la propiedad especificada.</param>
        <param name="propertyName">Propiedad cuyo valor propuesto se va a obtener.</param>
        <param name="value">El resultado que devuelva este método contendrá un objeto que representará el valor de propiedad propuesto. Este parámetro se pasa sin inicializar.</param>
        <summary>Intenta obtener el valor propuesto para la propiedad y elemento especificados.</summary>
        <returns>Es <see langword="true" /> si el valor es el valor propuesto para la propiedad especificada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Devuelve `false` si no hay un enlace para el elemento especificado y la propiedad o si el valor de la propiedad especificada no está disponible, debido a un error de conversión o debido a un error de una regla de validación anterior.  
  
 Utilice este método en el <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> método para obtener el valor que se confirmen en el origen. El tipo `value` depende de la fase en la que el <xref:System.Windows.Controls.ValidationRule> se produce. Por ejemplo, si un <xref:System.Windows.Controls.TextBox> está enlazado a una propiedad de tipo entero, datos `value` es una cadena si el <xref:System.Windows.Controls.ValidationRule> que llama <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> tiene su <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> establecido en <xref:System.Windows.Controls.ValidationStep.RawProposedValue>. Si el <xref:System.Windows.Controls.ValidationRule> tiene su <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> establecido en <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, el tipo de `value` es cualquier tipo devuelto por el convertidor del enlace. En este ejemplo, `value` suele ser un número entero.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un personalizado <xref:System.Windows.Controls.ValidationRule> denominado `ValidateDateAndPrice`. En el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método, en el ejemplo se usa el <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> método y el <xref:System.Windows.Data.BindingGroup.Items%2A> propiedad que se va a obtener los valores especificados en el formulario por el usuario. A continuación, en el ejemplo se comprueba que, si un elemento es supera los 100 dólares, estará disponible al menos siete días. Este ejemplo forma parte de un ejemplo más extenso en el <xref:System.Windows.Data.BindingGroup> (clase)  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ejecuta el convertidor en el enlace y los objetos <see cref="T:System.Windows.Controls.ValidationRule" /> que tienen la propiedad <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> establecida en <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> o <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> y guarda los valores de los destinos en los objetos de origen si todas las reglas de validación se ejecutan correctamente.</summary>
        <returns>Es <see langword="true" /> si todas las reglas de validación se ejecutan correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método actualiza el origen si cada <xref:System.Windows.Controls.ValidationRule> se realiza correctamente, pero no hace que los orígenes confirmar los cambios pendientes y de finalización de la transacción de edición. Es decir, si el objeto de origen implementa <xref:System.ComponentModel.IEditableObject>. Llamar a este método no hace que <xref:System.ComponentModel.IEditableObject.EndEdit%2A> para llamarlo. Use la <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> método tenga los orígenes de confirmar los cambios pendientes.  
  
   
  
## Examples  
 En el siguiente ejemplo es parte de una aplicación que pide al usuario que especifique a varios clientes y asigne a un representante de ventas a cada cliente. La aplicación comprueba que el representante de ventas y el cliente pertenecen a la misma región. El ejemplo se llama <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> para validar los enlaces y guardar los valores en el origen si todas las reglas de validación se realiza correctamente.  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a incluir el objeto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
        <value>Es <see langword="true" /> si se va a incluir el objeto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> es `true`, el enlace busca e informa de errores que se producen por un origen de datos que implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ejecuta el convertidor en el enlace y los objetos <see cref="T:System.Windows.Controls.ValidationRule" /> que tienen la propiedad <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> establecida en <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> o <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</summary>
        <returns>Es <see langword="true" /> si las reglas de validación se ejecutan correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los orígenes no se actualizan cuando se llama a este método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Windows.Controls.ValidationError" /> que ha hecho que <see cref="T:System.Windows.Data.BindingGroup" /> no sea válido.</summary>
        <value>Colección de objetos <see cref="T:System.Windows.Controls.ValidationError" /> que ha hecho que <see cref="T:System.Windows.Data.BindingGroup" /> no sea válido.  El valor es <see langword="null" /> si no hay ningún error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Windows.Controls.ValidationRule" /> que validan los objetos de origen de <see cref="T:System.Windows.Data.BindingGroup" />.</summary>
        <value>Colección de objetos <see cref="T:System.Windows.Controls.ValidationRule" /> que validan los objetos de origen de <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Windows.Controls.ValidationRule> se agrega a un <xref:System.Windows.Data.BindingGroup>, <xref:System.Windows.Data.BindingGroup> se pasa como el primer parámetro de la <xref:System.Windows.Controls.ValidationRule.Validate%2A> método. Puede obtener los valores propuestos del objeto mediante el <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> o <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> método. Puede obtener los objetos que son los orígenes de los enlaces de la <xref:System.Windows.Data.BindingGroup.Items%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se agrega la opción de instalación <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, a la <xref:System.Windows.Data.BindingGroup>.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 En el ejemplo siguiente se muestra la clase `ValidateDateAndPrice`. El <xref:System.Windows.Controls.ValidationRule.Validate%2A> método usa la <xref:System.Windows.Data.BindingGroup> para obtener los valores que el usuario ha especificado en el formulario y comprueba que, si un elemento es supera los 100 dólares, estará disponible al menos siete días.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>