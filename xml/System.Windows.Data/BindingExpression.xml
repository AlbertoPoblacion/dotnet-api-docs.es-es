<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fea4e6dbea6033b76ee98df8b9b14a76125994d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30626749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Contiene información sobre una sola instancia de un <see cref="T:System.Windows.Data.Binding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Data.Binding> clase es la clase de alto nivel para la declaración de un enlace. La <xref:System.Windows.Data.BindingExpression> clase es el objeto subyacente que mantiene la conexión entre el origen de enlace y el destino de enlace. A <xref:System.Windows.Data.Binding> contiene toda la información que se pueden compartir entre varios <xref:System.Windows.Data.BindingExpression> objetos. A <xref:System.Windows.Data.BindingExpression> es una expresión de instancia que no se puede compartir y que contiene toda la información de instancia sobre la <xref:System.Windows.Data.Binding>.  
  
 Por ejemplo, considere lo siguiente, donde `myDataObject` es una instancia de la `MyData` (clase), `myBinding` es el origen <xref:System.Windows.Data.Binding> objeto, y `MyData` clase es una clase definida que contiene una propiedad de cadena denominada `MyDataProperty`. Este ejemplo enlaza el contenido de texto `mytext`, que es una instancia de <xref:System.Windows.Controls.TextBlock>a `MyDataProperty`.  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 Puede usar el mismo `myBinding` objeto para crear otros enlaces. Por ejemplo, puede usar el `myBinding` objeto que se va a enlazar el contenido de texto de una casilla de verificación para `MyDataProperty`. En ese caso, habrá dos instancias de <xref:System.Windows.Data.BindingExpression> que comparten el `myBinding` objeto.  
  
 Puede obtener un <xref:System.Windows.Data.BindingExpression> objeto mediante el uso de la <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> método o la <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> método en un objeto enlazado a datos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de origen de enlace que <see cref="T:System.Windows.Data.BindingExpression" /> usa.</summary>
        <value>Obtiene el objeto de origen de enlace que <see cref="T:System.Windows.Data.BindingExpression" /> usa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra la implementación de un <xref:System.Windows.Controls.Primitives.ButtonBase.Click> controlador de eventos que utiliza la <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> método para obtener el <xref:System.Windows.Data.BindingExpression> y, a continuación, llama a la <xref:System.Windows.Data.BindingExpression.DataItem%2A> propiedad que se va a obtener acceso al objeto de origen de enlace.  
  
 El <xref:System.Windows.Controls.TextBlock> `SavingsText` es el objeto de destino de enlace y su <xref:System.Windows.Controls.TextBlock.Text%2A> es la propiedad de destino de enlace.  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el objeto <see cref="T:System.Windows.Data.Binding" /> de la clase <see cref="T:System.Windows.Data.BindingExpression" /> actual.</summary>
        <value>Objeto <see cref="T:System.Windows.Data.Binding" /> de la expresión de enlace actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de origen de enlace para este <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Objeto del origen del enlace para este <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la propiedad de origen de enlace para esta <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Nombre del la propiedad de origen de enlace para este <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método. Sólo reconoce los objetos del administrador de tipo <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
        <param name="sender">Objeto que originó el evento.</param>
        <param name="e">Datos de evento</param>
        <summary>Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</summary>
        <returns>
          Es <see langword="true" /> si el agente de escucha controló el evento; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envía el valor del destino de enlace actual a la propiedad de origen de enlace de los enlaces <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> o <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no hace nada cuando el <xref:System.Windows.Data.Binding.Mode%2A> del enlace no es <xref:System.Windows.Data.BindingMode.TwoWay> o <xref:System.Windows.Data.BindingMode.OneWayToSource>.  
  
 Si el <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> se establece el valor de su enlace en <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, debe llamar a la <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> método o los cambios no se propagarán en el origen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El enlace se ha desasociado de su destino.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fuerza una transferencia de datos desde la propiedad de origen del enlace hasta la propiedad de destino del enlace.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método permite forzar a una transferencia de datos de la propiedad de origen a la propiedad de destino. Si el objeto de origen implementa un mecanismo de notificación de cambio de propiedad apropiado como <xref:System.ComponentModel.INotifyPropertyChanged>, producen automáticamente las actualizaciones de destino. Sin embargo, tiene la opción de utilizar este método para actualizar la propiedad de destino explícitamente en casos donde el objeto de origen no proporcionan la notificaciones adecuadas de cambio de propiedad. También puede usar este método si la aplicación necesita actualizar las propiedades de destino periódicamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El enlace se ha desasociado de su destino.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>