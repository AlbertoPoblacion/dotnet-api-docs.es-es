<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6a921dc7e65c07f67917cc3cc0c05d494cf8c56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629779" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementa una extensión de marcado que describe la ubicación del origen del enlace con respecto a la posición de destino del enlace.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una de las formas de especificar un origen de enlace consiste en usar el <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> propiedad. Este es el tipo de propiedad de esa propiedad. <xref:System.Windows.Data.RelativeSource> al mismo tiempo es una implementación de extensión de marcado y un objeto de datos. Cuando la extensión devuelve a sí mismo (vea <xref:System.Windows.Data.RelativeSource.ProvideValue%2A>), la información relevante está contenida en los datos. El propósito principal de la extensión de marcado es permitir una sintaxis de constructor de argumento variable en forma de atributo, para que la <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> modo pueden definir en línea con los dos argumentos adicionales para el tipo de antecesor y el nivel que los otros modos no requieren.  
  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
## Examples  
 En el ejemplo siguiente se muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que envía un mensaje de error de validación. Mediante el <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedad, el valor del método establecedor enlaza al contenido del error del elemento actual <xref:System.Windows.Controls.TextBox> (el <xref:System.Windows.Controls.TextBox> utilizando el estilo). Para obtener más información sobre este ejemplo, vea [Cómo: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 El siguiente ejemplo se muestra la <xref:System.Windows.Style> definición de un control personalizado denominado `NumericUpDown`. El <xref:System.Windows.Controls.TextBlock.Text%2A> propiedad de la <xref:System.Windows.Controls.TextBlock> está enlazado a la `Value` del objeto que es el `TemplatedParent`, que es el `NumericUpDown` control que este <xref:System.Windows.Style> se aplica en este caso.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Para obtener un ejemplo completo, vea [NumericUpDown (Control) personalizada con tema y un ejemplo de compatibilidad de automatización de interfaz de usuario](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 La siguiente devuelve el segundo <xref:System.Windows.Controls.ItemsControl> encontrado en la ruta de acceso hacia arriba a partir del elemento de destino del enlace.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.RelativeSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.RelativeSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">Uno de los valores de <see cref="T:System.Windows.Data.RelativeSourceMode" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.RelativeSource" /> con un modo inicial.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">Uno de los valores de <see cref="T:System.Windows.Data.RelativeSourceMode" />. Para que esta firma sea relevante, debe ser <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</param>
        <param name="ancestorType">
          <see cref="T:System.Type" /> del antecesor que se va a buscar.</param>
        <param name="ancestorLevel">La posición ordinal del antecesor deseado entre todos los antecesores del tipo especificado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.RelativeSource" /> con un modo inicial y tres calificadores de recorrido de árbol para buscar el origen relativo deseado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` y `ancestorLevel` no tienen ninguna importancia si se proporcionan como parámetros para un `mode` distinto de <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>. No utilizar esta firma para los demás <xref:System.Windows.Data.RelativeSourceMode> valores.  
  
   
  
## Examples  
 La siguiente devuelve el segundo <xref:System.Windows.Controls.ItemsControl> encontrado en la ruta de acceso hacia arriba a partir del elemento de destino del enlace.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nivel del antecesor que se va a buscar, en el modo <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />. Use 1 para indicar el más próximo al elemento de destino de enlace.</summary>
        <value>Nivel del antecesor. Use 1 para indicar el más próximo al elemento de destino de enlace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Data.RelativeSource.Mode%2A> propiedad no se establece explícitamente, establecer el <xref:System.Windows.Data.RelativeSource.AncestorType%2A> o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propiedad bloqueará implícitamente el <xref:System.Windows.Data.RelativeSource.Mode%2A> valor de propiedad <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 La siguiente devuelve el segundo <xref:System.Windows.Controls.ItemsControl> encontrado en la ruta de acceso hacia arriba a partir del elemento de destino del enlace.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de antecesor que se va a buscar.</summary>
        <value>Tipo de antecesor. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Data.RelativeSource.Mode%2A> propiedad no se establece explícitamente, establecer el <xref:System.Windows.Data.RelativeSource.AncestorType%2A> o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propiedad bloqueará implícitamente el <xref:System.Windows.Data.RelativeSource.Mode%2A> valor de propiedad <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 La siguiente devuelve el segundo <xref:System.Windows.Controls.ItemsControl> encontrado en la ruta de acceso hacia arriba a partir del elemento de destino del enlace.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.RelativeSource" /> no está en el modo de <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor <see cref="T:System.Windows.Data.RelativeSourceMode" /> que describe la ubicación del origen de enlace con respecto a la posición del destino de enlace.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Data.RelativeSourceMode" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es de solo lectura después de la inicialización. Si esta propiedad no se establece explícitamente, al establecer el <xref:System.Windows.Data.RelativeSource.AncestorType%2A> o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> y <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propiedades, bloqueará implícitamente el valor de esta propiedad para <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Esta propiedad es inmutable después de la inicialización. En lugar de cambiar la propiedad <see cref="P:System.Windows.Data.RelativeSource.Mode" /> en esta instancia, cree una nueva clase <see cref="T:System.Windows.Data.RelativeSource" /> o utilice una instancia estática diferente.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor estático que se usa para devolver el objeto <see cref="T:System.Windows.Data.RelativeSource" /> construído para el modo <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" />.</summary>
        <value>Clase <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tres de los cuatro <xref:System.Windows.Data.RelativeSourceMode> valores, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, o <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, puede generar un <xref:System.Windows.Data.RelativeSource> que es totalmente estática, que contiene ningún valor privado único. Todos los usos de la propiedad estática pueden compartir el mismo objeto, lo que elimina la necesidad de asignar objetos independientes para cada usuario. Por lo tanto, mediante la propiedad estática reduce el uso de memoria.  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Objeto que puede proporcionar servicios para la extensión de marcado. En esta implementación, el valor de este parámetro puede ser <see langword="null" />.</param>
        <summary>Devuelve un objeto que se debe establecer como el valor en la propiedad del objeto de destino para esta extensión de marcado. Para <see cref="T:System.Windows.Data.RelativeSource" />, éste es otro objeto <see cref="T:System.Windows.Data.RelativeSource" />, utilizando el origen adecuado del modo especificado.</summary>
        <returns>Otro objeto <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> al mismo tiempo es una implementación de extensión de marcado y un objeto de datos. Cuando la extensión devuelve a sí mismo, la información relevante está contenida en los datos. El propósito principal de la extensión de marcado es permitir una sintaxis de constructor de argumento variable en forma de atributo para que la <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> modo puede ser definida insertada, con los dos argumentos adicionales para el tipo de antecesor y el nivel que los otros modos no requieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor estático que se usa para devolver el objeto <see cref="T:System.Windows.Data.RelativeSource" /> construído para el modo <see cref="F:System.Windows.Data.RelativeSourceMode.Self" />.</summary>
        <value>Clase <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tres de los cuatro <xref:System.Windows.Data.RelativeSourceMode> valores, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, o <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, puede generar un <xref:System.Windows.Data.RelativeSource> que es totalmente estática, que contiene ningún valor privado único. Todos los usos de la propiedad estática pueden compartir el mismo objeto, lo que elimina la necesidad de asignar objetos independientes para cada usuario. Por lo tanto, mediante la propiedad estática reduce el uso de memoria.  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que envía un mensaje de error de validación. El valor del método establecedor enlaza al contenido del error del elemento actual <xref:System.Windows.Controls.TextBox> (la <xref:System.Windows.Controls.TextBox> utilizando el estilo) mediante el <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedad. Vea [Cómo: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md) para obtener más información sobre este ejemplo.  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si la propiedad <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propiedad no tiene un valor predeterminado simple. Este método indica si la propiedad ha cambiado respecto de su valor predeterminado. Normalmente se invoca este método si está desarrollando o un diseñador para el <xref:System.Windows.Data.RelativeSource> o desarrollar su propio control que incorpore el <xref:System.Windows.Data.RelativeSource>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si la propiedad <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.Data.RelativeSource.AncestorType%2A> propiedad no tiene un valor predeterminado simple. Este método indica si la propiedad ha cambiado respecto de su valor predeterminado. Normalmente se invoca este método si está desarrollando o un diseñador para el <xref:System.Windows.Data.RelativeSource> o desarrollar su propio control que incorpore el <xref:System.Windows.Data.RelativeSource>.  
  
 Para obtener más información, consulte [definir valores predeterminados con los métodos ShouldSerialize y Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor estático que se usa para devolver el objeto <see cref="T:System.Windows.Data.RelativeSource" /> construído para el modo <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" />.</summary>
        <value>Clase <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tres de los cuatro <xref:System.Windows.Data.RelativeSourceMode> valores, <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, o <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, puede generar un <xref:System.Windows.Data.RelativeSource> que es totalmente estática, que contiene ningún valor privado único. Todos los usos de la propiedad estática pueden compartir el mismo objeto, lo que elimina la necesidad de asignar objetos independientes para cada usuario. Por lo tanto, mediante la propiedad estática reduce el uso de memoria.  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 El siguiente ejemplo se muestra la <xref:System.Windows.Style> definición de un control personalizado denominado `NumericUpDown`. El <xref:System.Windows.Controls.TextBlock.Text%2A> propiedad de la <xref:System.Windows.Controls.TextBlock> está enlazado a la `Value` del objeto que es el `TemplatedParent`, que es el `NumericUpDown` control que este <xref:System.Windows.Style> se aplica en este caso.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Para obtener un ejemplo completo, vea [NumericUpDown (Control) personalizada con tema y un ejemplo de compatibilidad de automatización de interfaz de usuario](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>