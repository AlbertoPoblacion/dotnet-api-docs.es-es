<Type Name="CompositeCollection" FullName="System.Windows.Data.CompositeCollection">
  <TypeSignature Language="C#" Value="public class CompositeCollection : System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.ICollectionViewFactory, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.ICollectionViewFactory, class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.CompositeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeCollection&#xA;Implements ICollectionViewFactory, IList, INotifyCollectionChanged, IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeCollection : System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::ICollectionViewFactory, System::Windows::IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b9ef-101">Permite que varias colecciones y elementos se muestren como una única lista.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-101">Enables multiple collections and items to be displayed as a single list.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9ef-102"><xref:System.Windows.Data.CompositeCollection> puede contener elementos como cadenas, objetos, [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] nodos, elementos, así como otras colecciones.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-102"><xref:System.Windows.Data.CompositeCollection> can contain items such as strings, objects, [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] nodes, elements, as well as other collections.</span></span> <span data-ttu-id="9b9ef-103">Un <xref:System.Windows.Controls.ItemsControl> utiliza los datos en el <xref:System.Windows.Data.CompositeCollection> para generar su contenido según su <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-103">An <xref:System.Windows.Controls.ItemsControl> uses the data in the <xref:System.Windows.Data.CompositeCollection> to generate its content according to its <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>.</span></span> <span data-ttu-id="9b9ef-104">Para obtener más información sobre el uso de <xref:System.Windows.Controls.ItemsControl> objetos que se va a enlazar a colecciones, vea la sección enlazar a colecciones de la [información general sobre el enlace de datos](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9b9ef-104">For more information about using <xref:System.Windows.Controls.ItemsControl> objects to bind to collections, see the Binding to Collections section of the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.CollectionContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b9ef-105">Crea una nueva instancia de la clase <see cref="T:System.Windows.Data.CompositeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-105">Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9ef-106">Crea una nueva instancia de la clase <see cref="T:System.Windows.Data.CompositeCollection" /> que está vacía y tiene una capacidad inicial predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-106">Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has default initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeCollection(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="9b9ef-107">Número de elementos que la nueva lista es inicialmente capaz de almacenar.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-107">The number of items that the new list is initially capable of storing.</span></span></param>
        <summary><span data-ttu-id="9b9ef-108">Crea una nueva instancia de la clase <see cref="T:System.Windows.Data.CompositeCollection" /> que está vacía y tiene una capacidad inicial predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-108">Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection" /> class that is empty and has a specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (newItem As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="9b9ef-109">Nuevo elemento que se va a agregar a la colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-109">New item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="9b9ef-110">Agrega el elemento especificado a esta colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-110">Adds the specified item to this collection.</span></span></summary>
        <returns><span data-ttu-id="9b9ef-111">Índice de base cero donde se agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-111">Zero-based index where the new item is added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9ef-112">Borra la colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-112">Clears the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9ef-113">Este método restablece la colección para que esté vacía.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-113">This method resets the collection to be empty.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="protected event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.CompositeCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Event CollectionChanged As NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-114">Se produce cuando la colección cambia, ya sea agregando o quitando un elemento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-114">Occurs when the collection changes, either by adding or removing an item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object containItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object containItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (containItem As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ containItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="containItem"><span data-ttu-id="9b9ef-115">Elemento que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-115">The item to check.</span></span></param>
        <summary><span data-ttu-id="9b9ef-116">Comprueba si hay un elemento determinado en esta colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-116">Checks to see if a given item is in this collection.</span></span></summary>
        <returns>
          <span data-ttu-id="9b9ef-117"><see langword="true" /> si la colección contiene el elemento determinado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-117"><see langword="true" /> if the collection contains the given item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9b9ef-118">Matriz que es el destino de la operación de copia.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-118">The array that is the destination of the copy operation.</span></span></param>
        <param name="index"><span data-ttu-id="9b9ef-119">Índice de base cero de la matriz de destino donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-119">Zero-based index in the target array at which the copying starts.</span></span></param>
        <summary><span data-ttu-id="9b9ef-120">Realiza una copia superficial de las referencias a objetos de esta colección en la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-120">Makes a shallow copy of object references from this collection to the given array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-121">Obtiene el número de elementos almacenados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-121">Gets the number of items stored in this collection.</span></span></summary>
        <value><span data-ttu-id="9b9ef-122">Número de elementos almacenados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-122">The number of items stored in this collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b9ef-123">Un <xref:System.Windows.Data.CollectionContainer> recuentos de objetos como 1 elemento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-123">A <xref:System.Windows.Data.CollectionContainer> object counts as 1 item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object indexItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object indexItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (indexItem As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ indexItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="indexItem"><span data-ttu-id="9b9ef-124">Elemento cuyo índice se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-124">The item to retrieve the index for.</span></span></param>
        <summary><span data-ttu-id="9b9ef-125">Devuelve el índice de esta colección donde se encuentra el elemento determinado.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-125">Returns the index in this collection where the given item is found.</span></span></summary>
        <returns><span data-ttu-id="9b9ef-126">Si el elemento aparece en la colección, es el índice de base cero de la colección en la que se encuentra ese elemento; de lo contrario, es <c>-1</c>.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-126">If the item appears in the collection, then the zero-based index in the collection where the given item is found; otherwise, <c>-1</c>.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int insertIndex, object insertItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 insertIndex, object insertItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (insertIndex As Integer, insertItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int insertIndex, System::Object ^ insertItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertIndex" Type="System.Int32" />
        <Parameter Name="insertItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="insertIndex"><span data-ttu-id="9b9ef-127">Índice en el que insertar un elemento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-127">The index to insert the item at.</span></span></param>
        <param name="insertItem"><span data-ttu-id="9b9ef-128">Referencia del elemento que se agrega a la colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-128">The item reference to add to the collection.</span></span></param>
        <summary><span data-ttu-id="9b9ef-129">Inserta un elemento en el índice determinado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-129">Inserts an item in the collection at a given index.</span></span> <span data-ttu-id="9b9ef-130">Todos los elementos después de la posición determinada se mueven un lugar hacia abajo.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-130">All items after the given position are moved down by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b9ef-131">Si el índice está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-131">If index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int itemIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(itemIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int itemIndex); void set(int itemIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="9b9ef-132">Desplazamiento de base cero del elemento que se va a recuperar o reemplazar.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-132">The zero-based offset of the item to retrieve or replace.</span></span></param>
        <summary><span data-ttu-id="9b9ef-133">Propiedad de indizador que recupera o reemplaza el elemento en el desplazamiento de base cero determinado en la colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-133">Indexer property that retrieves or replaces the item at the given zero-based offset in the collection.</span></span></summary>
        <value><span data-ttu-id="9b9ef-134">Elemento en el desplazamiento de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-134">The item at the specified zero-based offset.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b9ef-135">Si el índice está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-135">If the index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="protected virtual bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="9b9ef-136">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-136">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span> <span data-ttu-id="9b9ef-137">Sólo reconoce los objetos del administrador de tipo <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-137">This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span></span></param>
        <param name="sender"><span data-ttu-id="9b9ef-138">Objeto que originó el evento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-138">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="9b9ef-139">Datos de evento</span><span class="sxs-lookup"><span data-stu-id="9b9ef-139">Event data.</span></span></param>
        <summary><span data-ttu-id="9b9ef-140">Controla los eventos desde la tabla de eventos centralizada.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-140">Handles events from the centralized event table.</span></span></summary>
        <returns>
          <span data-ttu-id="9b9ef-141">Es <see langword="true" /> si el agente de escucha controló el evento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-141"><see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object removeItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object removeItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (removeItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ removeItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="removeItem"><span data-ttu-id="9b9ef-142">Elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-142">The item to remove.</span></span></param>
        <summary><span data-ttu-id="9b9ef-143">Quita la referencia del elemento determinado de esta colección.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-143">Removes the given item reference from the collection.</span></span> <span data-ttu-id="9b9ef-144">Todos los elementos restantes se mueven un lugar hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-144">All remaining items move up by one.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int removeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 removeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (removeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int removeIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="removeIndex"><span data-ttu-id="9b9ef-145">Índice en el que se quita un elemento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-145">The index at which to remove an item.</span></span></param>
        <summary><span data-ttu-id="9b9ef-146">Quita un elemento de la colección en el índice determinado.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-146">Removes an item from the collection at the given index.</span></span> <span data-ttu-id="9b9ef-147">Todos los elementos restantes se mueven un lugar hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-147">All remaining items move up by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b9ef-148">Si el índice está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-148">If index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-149">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-149">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value><span data-ttu-id="9b9ef-150">Es true si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-150">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-151">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-151">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value><span data-ttu-id="9b9ef-152">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-152">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9ef-153">Devuelve un enumerador.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-153">Returns an enumerator.</span></span></summary>
        <returns><span data-ttu-id="9b9ef-154">Objeto IEnumerator.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-154">An IEnumerator object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-155">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-155">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value>
          <span data-ttu-id="9b9ef-156">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-156"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b9ef-157">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-157">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value>
          <span data-ttu-id="9b9ef-158">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-158"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICollectionViewFactory.CreateView">
      <MemberSignature Language="C#" Value="System.ComponentModel.ICollectionView ICollectionViewFactory.CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.ICollectionView System.ComponentModel.ICollectionViewFactory.CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView" />
      <MemberSignature Language="VB.NET" Value="Function CreateView () As ICollectionView Implements ICollectionViewFactory.CreateView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::ICollectionView ^ System.ComponentModel.ICollectionViewFactory.CreateView() = System::ComponentModel::ICollectionViewFactory::CreateView;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICollectionView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b9ef-159">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-159">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="9b9ef-160">La vista creada.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-160">The view created.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="9b9ef-161">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-161">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span> <span data-ttu-id="9b9ef-162">Sólo reconoce los objetos del administrador de tipo <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-162">This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span></span></param>
        <param name="sender"><span data-ttu-id="9b9ef-163">Objeto que originó el evento.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-163">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="9b9ef-164">Datos de evento</span><span class="sxs-lookup"><span data-stu-id="9b9ef-164">Event data.</span></span></param>
        <summary><span data-ttu-id="9b9ef-165">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-165">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns>
          <span data-ttu-id="9b9ef-166">Es <see langword="true" /> si el agente de escucha controló el evento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b9ef-166"><see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>