<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c87b457b9813b8095dda8febd9d517d539c53035" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48684773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso de alto nivel a la definición de un enlace, que conecta las propiedades de objetos de destino de enlace (normalmente, elementos WPF) y cualquier origen de datos (por ejemplo, una base de datos, un archivo XML o cualquier objeto que contenga datos).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El enlace de datos [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] proporciona una manera sencilla y coherente para que las aplicaciones presenten datos e interactúen con ellos. Enlace de datos le permite sincronizar los valores de las propiedades de dos objetos diferentes.  
  
 Para establecer un enlace, use el <xref:System.Windows.Data.Binding> clase o una de las otras clases que heredan <xref:System.Windows.Data.BindingBase>. Independientemente del objeto que va a enlazar y la naturaleza del origen de datos, cada enlace sigue el modelo que se muestra en la ilustración siguiente.  
  
 ![Diagrama de enlace de datos básico](~/add/media/databindingmostbasic.png "diagrama de enlace de datos básico")  
  
 La ilustración muestra los conceptos básicos siguientes [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] conceptos de enlace de datos.  
  
-   Normalmente, cada enlace tiene estos cuatro componentes: un objeto de destino de enlace, una propiedad de destino, un origen de enlace y un <xref:System.Windows.Data.Binding.Path%2A> en el valor en el origen de enlace para usar. Por ejemplo, si desea enlazar el contenido de un <xref:System.Windows.Controls.TextBox> a la propiedad de nombre de un objeto Employee, el objeto de destino es el <xref:System.Windows.Controls.TextBox>, la propiedad de destino es el <xref:System.Windows.Controls.TextBox.Text%2A> propiedad, el valor que se usa es el nombre y el objeto de origen es el empleado objeto.  
  
-   La propiedad de destino debe ser una propiedad de dependencia. Esto también significa que no se puede enlazar un campo. Mayoría de las propiedades de <xref:System.Windows.UIElement> objetos son las propiedades de dependencia y la mayoría de las propiedades de dependencia, excepto las de solo lectura, admite el enlace de datos de forma predeterminada. (Solo <xref:System.Windows.DependencyObject> tipos pueden definir las propiedades de dependencia y todos <xref:System.Windows.UIElement> objetos se derivan de <xref:System.Windows.DependencyObject>.)  
  
-   Aunque no se especifica en la ilustración, hay que destacar que el objeto de origen de enlace no está restringido a ser un objeto [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] personalizado. El enlace de datos de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] admite datos en forma de objetos [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] y [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]. Para proporcionar algunos ejemplos, el origen de enlace puede ser un <xref:System.Windows.UIElement>, cualquier objeto de lista, un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objeto que está asociado con [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] datos o servicios Web o un objeto XmlNode que contiene su [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] datos.  
  
 Use el <xref:System.Windows.Data.Binding.Mode%2A> propiedad para especificar la dirección del flujo de datos. Para detectar los cambios del origen en los enlaces unidireccionales o bidireccionales, el origen debe implementar un mecanismo de notificación de cambio de propiedad adecuado, como <xref:System.ComponentModel.INotifyPropertyChanged>. Para obtener un ejemplo, vea [Cómo: implementar la notificación de cambio de propiedad](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md). El <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propiedad especifica el tiempo de las actualizaciones del origen. Para obtener más información, consulte "Conceptos básicos de enlace de datos" en [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *declaration*  
 Cero o más cláusulas de asignación de atributos separadas por comas (,). Para obtener más información, consulte [extensión de marcado de enlace](~/docs/framework/wpf/advanced/binding-markup-extension.md) o [información general de declaraciones de enlace](~/docs/framework/wpf/data/binding-declarations-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.Binding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.Binding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="P:System.Windows.Data.Binding.Path" /> inicial para el enlace.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.Binding" /> con una ruta de acceso inicial.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha el evento.</param>
        <param name="handler">Controlador que se va a agregar.</param>
        <summary>Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de eventos adjuntos en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha el evento.</param>
        <param name="handler">Controlador que se va a agregar.</param>
        <summary>Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de eventos adjuntos en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los datos opacos que se han pasado al distribuidor de datos asincrónicos.</summary>
        <value>Datos que se han pasado al distribuidor de datos asincrónicos.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe evaluar la propiedad <see cref="P:System.Windows.Data.Binding.Path" /> en relación con el elemento de datos o el objeto <see cref="T:System.Windows.Data.DataSourceProvider" />.</summary>
        <value>Es <see langword="false" /> para evaluar la ruta de acceso en relación con el elemento de datos en sí; de lo contrario, es <see langword="true" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento normal (cuando esta propiedad es `false`) incluye un tratamiento especial para <xref:System.Windows.Data.DataSourceProvider> objetos. En este caso, el motor de enlace se evalúa como el <xref:System.Windows.Data.Binding.Path%2A> en relación con el objeto obtenido de la <xref:System.Windows.Data.DataSourceProvider.Data%2A> propiedad. Además, el enlace escucha el <xref:System.Windows.Data.DataSourceProvider.DataChanged> eventos y reacciona en consecuencia. Establecer esta propiedad en `true` invalida este comportamiento y proporciona el acceso de enlace a propiedades de la <xref:System.Windows.Data.DataSourceProvider> propio objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el convertidor que se va a utilizar.</summary>
        <value>Valor de tipo <see cref="T:System.Windows.Data.IValueConverter" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un enlace utiliza implícitamente un convertidor predeterminado que intenta realizar una conversión de tipos entre el valor de origen y el valor de destino. Si no se puede realizar una conversión, el convertidor predeterminado devuelve `null`.  
  
 Si desea asociar un convertidor personalizado con un enlace, debe crear una clase que implementa el <xref:System.Windows.Data.IValueConverter> interfaz y proporcionar implementaciones para el <xref:System.Windows.Data.IValueConverter.Convert%2A> y <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> métodos. Convertidores de valores pueden cambiar los datos de un tipo a otro, traducir entre detalles culturales como los juegos de caracteres o modificar otros aspectos de su presentación. Para obtener ejemplos de escenarios típicos de conversión, vea "Conversión de datos" en el [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *myConverter*  
 Referencia de recurso a una clase que implementa el <xref:System.Windows.Data.IValueConverter> interfaz, que incluye implementaciones de la <xref:System.Windows.Data.IValueConverter.Convert%2A> y <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> métodos. Para hacer referencia a un convertidor de valores, use el [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la referencia cultural en la que se evaluará el convertidor.</summary>
        <value>El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no establece esta propiedad, el motor de enlace utiliza la `Language` propiedad del objeto de destino de enlace. En [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] esto tiene como valor predeterminado "en-US" o hereda el valor del elemento raíz (o cualquier elemento) de la página, si se ha establecido explícitamente.  
  
 Para obtener información acerca de la conversión de datos, vea la sección de conversión de datos en el [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el parámetro que se va a pasar a la propiedad <see cref="P:System.Windows.Data.Binding.Converter" />.</summary>
        <value>Parámetro que se va a pasar a la propiedad <see cref="P:System.Windows.Data.Binding.Converter" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Windows.Data.Binding.ConverterParameter%2A> propiedad para especificar cómo se convierte un objeto.  Esta propiedad pasa información adicional a un convertidor que usa en un enlace.  Cuando se especifica un <xref:System.Windows.Data.Binding.ConverterParameter%2A>, el valor se pasa a la <xref:System.Windows.Data.IValueConverter.Convert%2A> y <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> métodos como la `parameter` parámetro.  
  
 Para obtener un ejemplo, vea [Cómo: generar un valor que se basa en una lista de elementos enlazados](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md). Ese ejemplo muestra una implementación de un <xref:System.Windows.Data.IMultiValueConverter> pero todavía se aplica el uso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se utiliza como un valor devuelto para indicar al motor de enlace que no realice ninguna acción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede devolver una propiedad de origen de enlace o un convertidor de <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> para indicar al motor de enlace no realizar ninguna acción. Por ejemplo, para indicar al motor de enlace no transfiere un valor para el destino de enlace, no se mueva al siguiente <xref:System.Windows.Data.Binding> en un <xref:System.Windows.Data.PriorityBinding>, o no se debe utilizar el `FallBackValue` o valor predeterminado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto del elemento que se va a usar como objeto de origen de enlace.</summary>
        <value>El valor de la <see langword="Name" /> propiedad o [x: Name Directive](~/docs/framework/xaml-services/x-name-directive.md) del elemento de interés. Puede hacer referencia a elementos de código solo si están registrados en la clase <see cref="T:System.Windows.NameScope" /> correspondiente a través de <see langword="RegisterName" />. Para obtener más información, consulte [ámbitos de nombres de XAML de WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  
  
El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es útil cuando desea enlazar a la propiedad de otro elemento en la aplicación. Por ejemplo, si desea usar un <xref:System.Windows.Controls.Slider> para controlar la altura de otro control en la aplicación, o si desea enlazar el <xref:System.Windows.Controls.ContentControl.Content%2A> del control a la <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> propiedad de su <xref:System.Windows.Controls.ListBox> control.  
  
 De forma predeterminada, los enlaces heredan el contexto de datos especificado por el `DataContext` propiedad, si se ha establecido uno. Sin embargo, el <xref:System.Windows.Data.Binding.ElementName%2A> propiedad es una de las maneras en que puede establecer explícitamente el origen de un <xref:System.Windows.Data.Binding> e invalidar el contexto de datos heredado. Para obtener más información, consulte [Cómo: especificar el origen de enlace](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  
  
 El <xref:System.Windows.Data.Binding.Source%2A> y <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedades de la <xref:System.Windows.Data.Binding> clase también le permiten establecer el origen del enlace explícitamente. Sin embargo, solo una de las tres propiedades, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, y <xref:System.Windows.Data.Binding.RelativeSource%2A>, debe ser conjunto para cada enlace, o puede producirse un conflicto. Esta propiedad produce una excepción si hay un conflicto de origen de enlace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">Objeto del que se debe obtener información del espacio de nombres.</param>
        <summary>Devuelve un objeto de administrador de espacio de nombres [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] usado por el enlace adjunto al objeto especificado.</summary>
        <returns>Objeto devuelto que se usa para ver los espacios de nombres [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] que están relacionados con el enlace en el elemento de objeto que se ha pasado. Este objeto debe convertirse en <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de la propiedad adjunta para la <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> propiedad adjunta.  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] administradores de espacio de nombres son relevantes sólo si los datos en el enlace proceden de un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] origen de enlace (<xref:System.Windows.Data.XmlDataProvider> objeto).  
  
 Si un administrador de espacio de nombres no se aplicó específicamente en la creación de origen de datos original o llamando posteriormente <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> en el enlace, a continuación, en este método devolverá `null`.  
  
 Este método siempre devolverá `null` si los datos detrás del enlace no están [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="target" /> no puede ser <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se usa como <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> de <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> para indicar que ha cambiado una propiedad de indizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Windows.Data.Binding" /> debe obtener y establecer los valores de forma asincrónica.</summary>
        <value>El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Data.Binding.IsAsync%2A> propiedad cuando la `get` descriptor de acceso de la propiedad de origen de enlace puede tardar mucho tiempo. Un ejemplo es una propiedad de imagen con un `get` descriptor de acceso que se descarga desde la Web. Establecer <xref:System.Windows.Data.Binding.IsAsync%2A> a `true` evita el bloqueo de la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] mientras se realiza la descarga.  
  
 Mientras espera la llegada del valor, el enlace notifica el <xref:System.Windows.Data.BindingBase.FallbackValue%2A>si está disponible, o bien el valor predeterminado del enlace de la propiedad de destino.  
  
 Sin embargo, no debería haber muchos escenarios donde deberá usar el <xref:System.Windows.Data.Binding.IsAsync%2A> propiedad. El [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] directrices recomiendan definir las propiedades que son órdenes de magnitud más lentas de un conjunto de campos. Al crear la clase, considere la posibilidad de controlar las operaciones extremadamente lentas fuera de la `get` descriptor de acceso y almacenamiento en caché el resultado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica la dirección del flujo de datos en el enlace.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Data.BindingMode" />. El valor predeterminado es <see cref="F:System.Windows.Data.BindingMode.Default" />, que devuelve el valor del modo de enlace predeterminada de la propiedad de dependencia de destino. Sin embargo, el valor predeterminado varía para cada propiedad de dependencia. En general, las propiedades de control que puede modificar el usuario, como las de cuadros de texto y casillas, tienen como valor predeterminado enlaces bidireccionales, mientras que la mayoría de las demás propiedades tienen como valor predeterminado enlaces unidireccionales.  
  
Una manera de determinar mediante programación si una propiedad de dependencia se enlaza de forma predeterminada de modo unidireccional o bidireccional es obtener los metadatos de la propiedad mediante <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> y luego comprobar el valor booleano de la propiedad <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para admitir <xref:System.Windows.Data.BindingMode.OneWay> y <xref:System.Windows.Data.BindingMode.TwoWay> enlaces, los datos subyacentes deben implementar <xref:System.ComponentModel.INotifyPropertyChanged>. Para obtener más información, consulte [Cómo: implementar la notificación de cambio de propiedad](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).  
  
 Para <xref:System.Windows.Data.BindingMode.TwoWay> o <xref:System.Windows.Data.BindingMode.OneWayToSource> enlaces, puede controlar las actualizaciones de destino al origen estableciendo el <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> propiedad. Para obtener más información, vea <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.  
  
 Para obtener más información sobre los distintos modos de enlace, consulte [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se produce el evento <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> cuando se transfiere un valor desde el destino de enlace al origen de enlace.</summary>
        <value>
          <see langword="true" /> Si el <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> se debe generar el evento cuando el valor de origen de enlace está actualizado; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se produce el evento <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> cuando un valor se transfiere desde el origen de enlace al destino de enlace.</summary>
        <value>
          <see langword="true" /> Si el <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> se debe generar el evento cuando el valor de destino de enlace está actualizado; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se produce el evento adjunto <see cref="E:System.Windows.Controls.Validation.Error" /> en el objeto enlazado.</summary>
        <value>
          <see langword="true" /> Si el <see cref="E:System.Windows.Controls.Validation.Error" /> evento adjunto debe generarse en el elemento enlazado cuando se produce un error de validación durante las actualizaciones del origen; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el enlace tiene <xref:System.Windows.Data.Binding.ValidationRules%2A> asociado, el motor de enlace comprueba cada regla cada vez que transfiere el valor de propiedad de destino a la propiedad de origen. Si una regla invalida un valor, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> objeto y lo agrega a la <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> colección del objeto enlazado. Cuando el <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> propiedad no está vacía, el <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> propiedad adjunta del objeto se establece en `true`. Si el <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> propiedad de la <xref:System.Windows.Data.Binding> está establecido en `true`, a continuación, el motor de enlace provoca el <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> evento en el objeto adjunto.  
  
 Para obtener una explicación detallada del proceso de validación, vea la sección de validación de datos en el [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso a la propiedad de origen de enlace.</summary>
        <value>Ruta de acceso al origen de enlace. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, cada enlace tiene estos cuatro componentes: un objeto de destino de enlace, una propiedad de destino, un origen de enlace y el valor en el origen de enlace para utilizar una ruta de acceso. Para obtener más información acerca de estos conceptos de enlace de datos, vea [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Use el <xref:System.Windows.Data.Binding.Path%2A> propiedad para especificar el valor de origen que desea enlazar:  
  
-   En el caso más simple, el <xref:System.Windows.Data.Binding.Path%2A> valor de propiedad es el nombre de la propiedad del objeto de origen que se usará para el enlace, tales como `Path=PropertyName`.  
  
-   Las subpropiedades de una propiedad se pueden especificar mediante una sintaxis similar a la que se usa en C#. Por ejemplo, la cláusula `Path=ShoppingCart.Order` define el enlace a la subpropiedad `Order` del objeto o la propiedad `ShoppingCart`.  
  
-   Para enlazar a una propiedad adjunta, coloque paréntesis alrededor de esta propiedad. Por ejemplo, para enlazar a la propiedad adjunta <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, la sintaxis es `Path=(DockPanel.Dock)`.  
  
-   Los indizadores de una propiedad pueden especificarse entre corchetes después del nombre de la propiedad donde se aplica el indizador. Por ejemplo, la cláusula `Path=ShoppingCart[0]` establece el enlace al índice que se corresponde a cómo la indización interna de la propiedad administra la cadena literal "0". También se admiten varios indizadores.  
  
-   Los indizadores y las subpropiedades se pueden combinar en una cláusula `Path`; por ejemplo, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`.  
  
-   Dentro de los indizadores pueden tener varios parámetros de indizador separados por comas (,). El tipo de cada parámetro se puede especificar con paréntesis. Por ejemplo, puede tener `Path="[(sys:Int32)42,(sys:Int32)24]"`, donde `sys` se asigna a la `System` espacio de nombres.  
  
-   Cuando el origen es una vista de colección, se puede especificar el elemento actual con una barra diagonal (/). Por ejemplo, la cláusula `Path=/` establece el enlace al elemento actual en la vista. Cuando el origen es una colección, esta sintaxis especifica el elemento actual de la vista de colección predeterminada.  
  
-   Las barras diagonales y los nombres de propiedad se pueden combinar para recorrer las propiedades que son colecciones. Por ejemplo, `Path=/Offices/ManagerName` especifica el elemento actual de la colección de origen, que contiene un `Offices` propiedad que también es una colección. Su elemento actual es un objeto que contiene un `ManagerName` propiedad.  
  
-   Opcionalmente, una ruta de acceso de punto (.) puede utilizarse para enlazar con el origen actual. Por ejemplo, `Text="{Binding}"` es equivalente a `Text="{Binding Path=.}"`.  
  
 Para obtener información sobre la sintaxis de ruta de acceso, consulte [información general de declaraciones de enlace](~/docs/framework/wpf/data/binding-declarations-overview.md) o [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 Para [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] los enlaces, vea el <xref:System.Windows.Data.Binding.XPath%2A> propiedad.  
  
 Para enlazar a un objeto completo, no es necesario especificar el <xref:System.Windows.Data.Binding.Path%2A> propiedad. Para obtener más información, vea "Especificar la ruta de acceso para el valor" en [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que informa de un mensaje de error de validación. Enlaza el valor del método establecedor para el contenido del elemento actual del error <xref:System.Windows.Controls.TextBox> (el <xref:System.Windows.Controls.TextBox> utilizando el estilo) mediante el <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedad. Para obtener más información sobre este ejemplo, vea [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el origen de enlace especificando su ubicación en relación con la posición del destino de enlace.</summary>
        <value>Un <see cref="T:System.Windows.Data.RelativeSource" /> objeto que especifica la ubicación relativa del origen de enlace para usar. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad normalmente se utiliza para enlazar una propiedad de un objeto a otra propiedad del mismo objeto, o para definir un enlace en un estilo o plantilla.  
  
 De forma predeterminada, los enlaces heredan el contexto de datos especificado por el `DataContext` propiedad, si se ha establecido uno. Sin embargo, el <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedad es una de las maneras en que puede establecer explícitamente el origen de un <xref:System.Windows.Data.Binding> e invalidar el contexto de datos heredado. Para obtener más información, consulte [Cómo: especificar el origen de enlace](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  
  
 El <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> y <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> propiedades también le permiten establecer el origen del enlace explícitamente. Sin embargo, solo una de las tres propiedades, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, y <xref:System.Windows.Data.Binding.RelativeSource%2A>, debe ser conjunto para cada enlace, o puede producirse un conflicto. Esta propiedad produce una excepción si hay un conflicto de origen de enlace.  
  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] información, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
    
## Examples  
 El ejemplo siguiente muestra un desencadenador de estilo que se crea un <xref:System.Windows.Controls.ToolTip> que informa de un mensaje de error de validación. Enlaza el valor del método establecedor para el contenido del elemento actual del error <xref:System.Windows.Controls.TextBox> (el <xref:System.Windows.Controls.TextBox> utilizando el estilo) mediante el <xref:System.Windows.Data.Binding.RelativeSource%2A> propiedad. Para obtener más información sobre este ejemplo, vea [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 Para ver el ejemplo completo, vea [de ejemplo de validación de enlace](http://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha el evento.</param>
        <param name="handler">Controlador que se va a quitar.</param>
        <summary>Quita un controlador del evento adjunto <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de eventos adjuntos en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha el evento.</param>
        <param name="handler">Controlador que se va a quitar.</param>
        <summary>Quita un controlador del evento adjunto <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de eventos adjuntos en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">Objeto del que se debe obtener información del espacio de nombres.</param>
        <param name="value">
          <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a usar para la evaluación de los espacios de nombres en el elemento que se ha pasado.</param>
        <summary>Establece un objeto del administrador de espacios de nombres que usa el enlace adjunto al elemento proporcionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método admite el uso de la propiedad adjunta para la <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> propiedad adjunta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si la propiedad <see cref="P:System.Windows.Data.Binding.Path" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.Data.Binding.Path%2A> propiedad no tiene valor predeterminado es simple. Este método indica si la propiedad ha cambiado desde su valor predeterminado. Este método se suele invocarse si está desarrollando o un diseñador para el <xref:System.Windows.Data.Binding> o desarrollar su propio control que incorpore el <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si la propiedad <see cref="P:System.Windows.Data.Binding.Source" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.Data.Binding.Source%2A> propiedad no tiene valor predeterminado es simple. Este método indica si la propiedad ha cambiado desde su valor predeterminado. Este método se suele invocarse si está desarrollando o un diseñador para el <xref:System.Windows.Data.Binding> o desarrollar su propio control que incorpore el <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si la propiedad <see cref="P:System.Windows.Data.Binding.ValidationRules" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.Data.Binding.ValidationRules%2A> propiedad no tiene valor predeterminado es simple. Este método indica si la propiedad ha cambiado desde su valor predeterminado. Este método se suele invocarse si está desarrollando o un diseñador para el <xref:System.Windows.Data.Binding> o desarrollar su propio control que incorpore el <xref:System.Windows.Data.Binding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto que se va a usar como origen de enlace.</summary>
        <value>Objeto que se va a usar como origen de enlace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, los enlaces heredan el contexto de datos especificado por el `DataContext` propiedad, si se ha establecido uno. Sin embargo, el <xref:System.Windows.Data.Binding.Source%2A> propiedad es una de las maneras en que puede establecer explícitamente el origen de un <xref:System.Windows.Data.Binding> e invalidar el contexto de datos heredado. Si no necesita la funcionalidad de establecimiento de un ámbito en que varias propiedades heredan el mismo contexto de datos, puede usar el <xref:System.Windows.Data.Binding.Source%2A> propiedad en lugar de la `DataContext` propiedad.  
  
 El <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> y <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> propiedades también le permiten establecer el origen del enlace explícitamente. Sin embargo, solo una de las tres propiedades, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, y <xref:System.Windows.Data.Binding.RelativeSource%2A>, debe ser conjunto para cada enlace, o puede producirse un conflicto. Esta propiedad produce una excepción si hay un conflicto de origen de enlace.  
  
 Para borrar esta propiedad, establézcala en <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *object*  
 Un objeto existente. Para hacer referencia a un objeto existente, use el [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)  
  
   
  
## Examples  
 En el ejemplo siguiente se usa un `Person` objeto con una propiedad de cadena denominada `PersonName` que se define en el `SDKSample` espacio de nombres, tal como se muestra en la primera línea resaltada. En la línea resaltada que contiene el `<src>` elemento, crea una instancia de la `Person` objeto con un `PersonName` el valor de propiedad `Joe`. Esto se hace en el `Resources` sección y asigna un `x:Key`.  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 La línea resaltada que contiene el `<TextBlock>` muestra cómo enlazar a la `PersonName` propiedad. Como resultado, el <xref:System.Windows.Controls.TextBlock> control aparece con el valor "Joe".  
  
 En el ejemplo siguiente, la <xref:System.Windows.Data.Binding.Source%2A> valores de la <xref:System.Windows.Data.Binding> objetos se establecen en el `static` propiedad <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 Para obtener el ejemplo completo, vea [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se produce cuando se transfiere un valor desde el destino de enlace al origen de enlace, pero solo para los enlaces con el valor <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> establecido en <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.EventHandler%601>, restringido a <xref:System.Windows.Data.DataTransferEventArgs>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento adjunto <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se produce cuando se transfiere un valor desde el origen de enlace al destino de enlace, pero solo para los enlaces con el valor <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> establecido en <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a>Información sobre eventos enrutados  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|Estrategia de enrutamiento|Propagación|  
|delegado|<xref:System.EventHandler%601>, restringido a <xref:System.Windows.Data.DataTransferEventArgs>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento adjunto <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un controlador que puede usar para ofrecer lógica personalizada para controlar las excepciones que el motor de enlace encuentra durante la actualización del valor del origen de enlace. Esto sólo se aplica si se ha asociado una clase <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> al enlace.</summary>
        <value>Método que ofrece lógica personalizada para controlar las excepciones que el motor de enlace encuentra durante la actualización del valor del origen de enlace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Controls.ExceptionValidationRule> es una regla de validación integrada que comprueba las excepciones producidas durante la actualización de la propiedad de origen de enlace. Si se ha asociado el <xref:System.Windows.Controls.ExceptionValidationRule> con su <xref:System.Windows.Data.Binding> de objeto, puede utilizar esta propiedad para establecer un controlador para proporcionar lógica personalizada para controlar estas excepciones. Si un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> no se especifica en el <xref:System.Windows.Data.Binding>, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> con la excepción y lo agrega a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> colección del elemento enlazado.  
  
   
  
## Examples  
 El <xref:System.Windows.Controls.TextBox.Text%2A> propiedad de los siguientes <xref:System.Windows.Controls.TextBox> está enlazado a una propiedad de origen `Age3` que es de tipo `int`. El <xref:System.Windows.Controls.ExceptionValidationRule> comprueba las excepciones producidas durante la actualización de la propiedad de origen (por ejemplo, cuando el usuario escribe un valor que no se puede convertir en un entero).  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 Puede proporcionar lógica personalizada para controlar las excepciones. El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> propiedad para establecer un <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 El siguiente es un ejemplo de implementación de un <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 El <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> también pueden devolver `null`, la excepción, o un <xref:System.Windows.Controls.ValidationError>. Para obtener más información, vea <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  
  
 Para obtener un ejemplo completo, vea [de ejemplo de validación de enlace](http://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determina los intervalos de las actualizaciones del origen de enlace.</summary>
        <value>Uno de los valores de <see cref="T:System.Windows.Data.UpdateSourceTrigger" />. El valor predeterminado es <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, que devuelve el valor predeterminado <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> valor de la propiedad de dependencia de destino. Sin embargo, el valor predeterminado para la mayoría de las propiedades de dependencia es <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, mientras que el <see cref="P:System.Windows.Controls.TextBox.Text" /> propiedad tiene un valor predeterminado de <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.  
  
Una manera mediante programación para determinar el valor predeterminado <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> valor de una propiedad de dependencia consiste en obtener los metadatos de la propiedad mediante <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> y, a continuación, compruebe el valor de la <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los enlaces que son <xref:System.Windows.Data.BindingMode.TwoWay> o <xref:System.Windows.Data.BindingMode.OneWayToSource> escucharán los cambios en la propiedad de destino y propagarlos en el origen. Esto se conoce como el origen de la actualización. Normalmente, estas actualizaciones se producen cuando cambia la propiedad de destino. Esto es correcto para las casillas de verificación y otros controles sencillos, pero normalmente no es adecuado para los campos de texto. Actualizar después de cada pulsación de tecla puede disminuir el rendimiento y deniega al usuario la oportunidad usual de retroceder y corregir los errores tipográficos antes de confirmar el nuevo valor. Por lo tanto, el valor predeterminado <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> valor de la <xref:System.Windows.Controls.TextBox.Text%2A> propiedad es <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> y no <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  
  
 Si establece la <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> valor <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, debe llamar a la <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> método o los cambios no se propagarán en el origen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a incluir el objeto <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</summary>
        <value>Es <see langword="true" /> si se va a incluir el objeto <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad proporciona una alternativa al uso de la <xref:System.Windows.Controls.DataErrorValidationRule> elemento explícitamente. El <xref:System.Windows.Controls.DataErrorValidationRule> es una regla de validación integradas que se comprueba los errores producidos por el <xref:System.ComponentModel.IDataErrorInfo> implementación del objeto de origen. Si se produce un error, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> con el error y lo agrega a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> colección del elemento enlazado. La falta de un error borra los comentarios de esta validación, a menos que otra regla provoca un problema de validación.  
  
 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> se introdujo en .NET Framework versión 3.5.  Para más información, consulte [Versiones y dependencias de .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Los ejemplos siguientes se usa <xref:System.ComponentModel.IDataErrorInfo> y <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> para validar la entrada del usuario en un <xref:System.Windows.Controls.TextBox>. El primer ejemplo crea un tipo de datos que implementa <xref:System.ComponentModel.IDataErrorInfo> para informar de errores de validación.  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 En el ejemplo siguiente se enlaza el `Age` propiedad a la <xref:System.Windows.Controls.TextBox> y establece <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> a `true` en el <xref:System.Windows.Data.Binding>.  Cuando el usuario escribe un valor no válido, aparece un borde rojo en el <xref:System.Windows.Controls.TextBox> y <xref:System.Windows.Controls.ToolTip> envía el mensaje de error.  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a incluir el objeto <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
        <value>Es <see langword="true" /> si se va a incluir el objeto <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad proporciona una alternativa al uso de la <xref:System.Windows.Controls.ExceptionValidationRule> elemento explícitamente. El <xref:System.Windows.Controls.ExceptionValidationRule> es una regla de validación integrada que comprueba las excepciones que se producen durante la actualización de la propiedad de origen. Si se produce una excepción, el motor de enlace crea un <xref:System.Windows.Controls.ValidationError> con la excepción y lo agrega a la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> colección del elemento enlazado. La falta de un error borra los comentarios de esta validación, a menos que otra regla provoca un problema de validación.  
  
 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> se introdujo en .NET Framework versión 3.5.  Para más información, consulte [Versiones y dependencias de .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Los ejemplos siguientes usan <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> para validar la entrada del usuario en un <xref:System.Windows.Controls.TextBox>. El primer ejemplo crea un tipo de datos que produce una excepción cuando el `Age` propiedad está establecida en una propiedad no válida.  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 En el ejemplo siguiente se enlaza el `Age` propiedad a la <xref:System.Windows.Controls.TextBox> y establece <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> a `true` en el <xref:System.Windows.Data.Binding>. Cuando el usuario escribe un valor no válido, aparece un borde rojo en el <xref:System.Windows.Controls.TextBox> y <xref:System.Windows.Controls.ToolTip> envía el mensaje de error.  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a incluir el objeto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</summary>
        <value>Es <see langword="true" /> si se va a incluir el objeto <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> es `true`, el enlace busca e informa de errores producidos por un origen de datos que implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de reglas que comprueban la validez de la entrada del usuario.</summary>
        <value>Una colección de objetos <see cref="T:System.Windows.Controls.ValidationRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelo de enlace de datos permite asociar <xref:System.Windows.Data.Binding.ValidationRules%2A> con su <xref:System.Windows.Data.Binding> o <xref:System.Windows.Data.MultiBinding> objeto. Puede crear reglas personalizadas derivando de la <xref:System.Windows.Controls.ValidationRule> clase e implementar el <xref:System.Windows.Controls.ValidationRule.Validate%2A> método, o bien puede usar la integrada <xref:System.Windows.Controls.ExceptionValidationRule>, lo que invalida un valor si hay excepciones durante las actualizaciones del origen.  
  
 El motor de enlace comprueba cada <xref:System.Windows.Controls.ValidationRule> asociado con un enlace cada vez que se transfiere un valor de entrada (el valor de propiedad de destino de enlace) a la propiedad de origen de enlace. Para obtener una explicación detallada del proceso de validación, vea la sección de validación de datos en el [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  
  
> [!NOTE]
>  Esta propiedad puede establecerse [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] utilizando la sintaxis de colección que se muestra, o tener acceso al objeto de colección y utilizando sus diversos métodos, como `Add`. La propiedad que se va a obtener acceso al objeto de colección es de solo lectura, mientras que la colección es de lectura y escritura.  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *oneOrMoreValidationRules*  
 Uno o más <xref:System.Windows.Controls.ValidationRule> objetos. Puede usar el <xref:System.Windows.Controls.ExceptionValidationRule> clase o crear reglas personalizadas mediante la creación de subclases del <xref:System.Windows.Controls.ValidationRule> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se usa para realizar en los enlaces XML consultas <see langword="XPath" /> que reconocen el espacio de nombres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad adjunta usa la herencia de valores de propiedad, que reproduce el comportamiento de herencia de espacio de nombres que se encuentra en [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]. Para obtener información detallada, consulte [Herencia de valores de propiedad](~/docs/framework/wpf/advanced/property-value-inheritance.md).  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|Establecen las propiedades de metadatos en `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad adjunta <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una consulta <see langword="XPath" /> que devuelve el valor del origen de enlace [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] que se va a usar.</summary>
        <value>Consulta <see langword="XPath" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el origen de enlace es [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] datos en lugar de un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] objeto, el <xref:System.Windows.Data.Binding.XPath%2A> propiedad se utiliza en lugar de la <xref:System.Windows.Data.Binding.Path%2A> propiedad para indicar la ruta de acceso al valor en el origen de enlace para usar.  
  
 Estableciendo el <xref:System.Windows.Data.Binding.XPath%2A> propiedad, que está creando un `XPath` consulta para seleccionar un nodo o una colección de nodos (<xref:System.Xml.XmlElement?displayProperty=nameWithType> y <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> ambos derivan de <xref:System.Xml.XmlNode?displayProperty=nameWithType>). <xref:System.Xml.XmlNode?displayProperty=nameWithType> es un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] objeto, lo que significa que puede enlazar a sus propiedades mediante el <xref:System.Windows.Data.Binding.Path%2A> propiedad.  
  
 El <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> método controla el `XPath` expresiones a partir de la <xref:System.Windows.Data.Binding.XPath%2A> propiedad. `XPath` no se admiten las funciones. Para `XPath` información de expresión, vea el <xref:System.Xml.XmlNode.SelectNodes%2A> documentación y algunos ejemplos proporcionados en la sección ejemplo.  
  
 Objetos LINQ to XML <xref:System.Xml.Linq.XDocument> y <xref:System.Xml.Linq.XElement> no use `XPath`. Para obtener más información, consulte [Cómo: enlazar a XElement, XDocument o LINQ para resultados de consultas XML](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>