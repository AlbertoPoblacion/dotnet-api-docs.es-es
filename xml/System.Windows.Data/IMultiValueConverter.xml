<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d26497ed73a13364ea1c26a9d7cfe7de2633d82" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37579045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona una forma de aplicar la lógica personalizada a una clase <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para asociar un conversor de con un <xref:System.Windows.Data.MultiBinding>, cree una clase que implementa el <xref:System.Windows.Data.IMultiValueConverter> interfaz y, a continuación, implemente el <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> y <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> métodos.  
  
 Los enlaces individuales de la colección pueden tener sus propios convertidores de valores. Para obtener más información, vea <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Matriz de valores que generan los enlaces de origen en <see cref="T:System.Windows.Data.MultiBinding" />. El valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indica que el enlace de origen no tiene ningún valor que proporcionar para la conversión.</param>
        <param name="targetType">El tipo de la propiedad del destino de enlace.</param>
        <param name="parameter">Parámetro de convertidor que se va a usar.</param>
        <param name="culture">Referencia cultural que se va a usar en el convertidor.</param>
        <summary>Convierte valores de origen a un valor para el destino de enlace. El motor de enlace de datos llama a este método cuando propaga los valores de los enlaces de origen a destino de enlace.</summary>
        <returns>Valor convertido.  
  
Si el método devuelve <see langword="null" />, se usa el valor válido <see langword="null" />.  
  
Un valor devuelto de <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indica que el convertidor no ha producido un valor y que el enlace va a usar <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> si está disponible; de lo contrario, usará el valor predeterminado.  
  
Un valor devuelto de <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indica que el enlace no transfiere el valor ni usa <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> ni el valor predeterminado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor de enlace de datos no detecta excepciones producidas por un convertidor de tipos proporcionada por el usuario. Cualquier excepción producida por el <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> método o excepciones no detectadas producidas por los métodos que el <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> llamadas a métodos, se tratan como errores de tiempo de ejecución. Controlar problemas anticipados devolviendo <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Valor que genera el destino de enlace.</param>
        <param name="targetTypes">Matriz de tipos a los que se convertirá. La longitud de la matriz indica el número y los tipos de valores que se sugiere que el método devuelva.</param>
        <param name="parameter">Parámetro de convertidor que se va a usar.</param>
        <param name="culture">Referencia cultural que se va a usar en el convertidor.</param>
        <summary>Convierte un valor de destino de enlace en valores de enlace de origen.</summary>
        <returns>Matriz de valores que se han convertido del valor de destino de nuevo a los valores de origen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si hay más valores devueltos que hay enlaces en el <xref:System.Windows.Data.MultiBinding>, se omiten los valores devueltos adicionales. Si hay más enlaces de origen que hay valores devueltos, los enlaces de origen restantes no tiene ningún valor establecido en ellos. No se comprueban los tipos de valores devueltos con `targetTypes`; los valores se establecen directamente en los enlaces de origen.  
  
 Devolver <xref:System.Windows.Data.Binding.DoNothing> en posición `i` para indicar que no hay valor debe establecerse en el enlace de origen en el índice `i`.  
  
 Devolver <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> en la posición `i` para indicar que el convertidor no puede proporcionar un valor para el enlace de origen en el índice `i`, y que ningún valor que se va a establecer en él.  
  
 Devolver `null` para indicar que el convertidor no puede realizar la conversión o que no admita la conversión en esta dirección.  
  
 El motor de enlace de datos no detecta excepciones producidas por un convertidor de tipos proporcionada por el usuario. Cualquier excepción producida por el <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> método o cualquiera no se detecta las excepciones producidas por los métodos que el <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> llamadas al método se tratan como errores de tiempo de ejecución. Controlar problemas anticipados devolviendo `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>