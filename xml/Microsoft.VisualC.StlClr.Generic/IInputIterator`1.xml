<Type Name="IInputIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4155fffbff3bbac88ae827393fc0514634af3603" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30344869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInputIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInputIterator`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBaseIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputIterator(Of TValue)&#xA;Implements IBaseIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IInputIterator : Microsoft::VisualC::StlClr::Generic::IBaseIterator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary>Interfaz de un iterador que se utiliza para leer una secuencia desde un contenedor sólo en la dirección de avance. El elemento al que apunta el iterador se puede leer sólo una vez y no se puede modificar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="equal_to">
      <MemberSignature Language="C#" Value="public bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; A_0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool equal_to(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_to (A_0 As IInputIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool equal_to(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="A_0">Objeto <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> que se va a comparar con el objeto <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> actual.</param>
        <summary>Determina si los dos objetos <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> son iguales.</summary>
        <returns>
          <see langword="true" /> si el iterador actual y el especificado son equivalentes; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>