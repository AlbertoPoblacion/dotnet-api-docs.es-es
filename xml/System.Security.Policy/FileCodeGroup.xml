<Type Name="FileCodeGroup" FullName="System.Security.Policy.FileCodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21bc0f6a411ef037d021b57e50074c70f142466e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.FileCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Concede permiso para manipular archivos ubicados en los ensamblados de código con objeto de codificar ensamblados que cumplen la condición de pertenencia. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de código son los bloques de creación de directiva de seguridad de acceso de código. Cada nivel de directiva consta de un grupo de código raíz que puede tener grupos de código secundarios. Cada grupo de código secundario puede tener sus propios grupos de código secundarios; Este comportamiento se extiende a cualquier número de niveles, que forman un árbol. Cada grupo de código tiene una condición de pertenencia que determina si un ensamblado dado pertenece a él basándose en la evidencia de ese ensamblado. Sólo los grupos de código cuyas condiciones de pertenencia coinciden con un ensamblado dado y sus grupos de código secundarios aplican directivas.  
  
 <xref:System.Security.Policy.FileCodeGroup> tiene la misma semántica de coincidencia secundaria <xref:System.Security.Policy.UnionCodeGroup>. Sin embargo, <xref:System.Security.Policy.FileCodeGroup> devuelve un conjunto que contiene un calculado dinámicamente de permisos <xref:System.Security.Permissions.FileIOPermission> que conceda acceso a los archivos en el directorio desde el que se ejecuta el código; <xref:System.Security.Policy.UnionCodeGroup> sólo devuelve un conjunto de permisos estáticos. El tipo de acceso otorgado al archivo se pasa como parámetro al constructor.  
  
 Este grupo de código sólo coincide con los ensamblados que se ejecutan mediante un protocolo de archivo, es decir, los ensamblados que tienen direcciones URL que apuntan a un archivo o una ruta de acceso UNC.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el uso de los miembros de la <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#1)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Permissions.FileIOPermissionAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, valuetype System.Security.Permissions.FileIOPermissionAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition, access As FileIOPermissionAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition, System::Security::Permissions::FileIOPermissionAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">Condición de pertenencia que comprueba la evidencia para determinar si este grupo de código aplica la directiva.</param>
        <param name="access">Uno de los valores de <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />. Este valor se utiliza para construir el objeto <see cref="T:System.Security.Permissions.FileIOPermission" /> al que se otorga permiso.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Policy.FileCodeGroup" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea un grupo de código básico. Se pueden agregar grupos de código secundarios con el <xref:System.Security.Policy.CodeGroup.AddChild%2A> método.  
  
 <xref:System.Security.Policy.FileCodeGroup> Devuelve un conjunto que contiene un calculado dinámicamente de permisos <xref:System.Security.Permissions.FileIOPermission> que conceda acceso a los archivos en el directorio desde el que se ejecuta el código. El tipo de acceso concedido viene determinado por la `access` parámetro.  
  
   
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.%23ctor%2A> constructor. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#2)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="membershipCondition" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El tipo del parámetro <paramref name="membershipCondition" /> no es válido.  
  
 O bien  
  
 El tipo del parámetro <paramref name="access" /> no es válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.AttributeString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AttributeString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una representación en forma de cadena de los atributos de la instrucción de directiva del grupo de código.</summary>
        <value>Siempre es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.FileCodeGroup> No utilice <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A>, por lo que esta propiedad es siempre `null`.  
  
   
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A> propiedad que se va a obtener los atributos para el grupo de código. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#5)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una copia profunda del código de grupo actual.</summary>
        <returns>Una copia equivalente del grupo de código actual que incluye sus condiciones de pertenencia y los grupos de código secundarios.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método realiza una copia en profundidad del grupo de código, por lo que también se realizan copias de todos los objetos que contiene el grupo de código.  
  
   
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.Copy%2A> método para crear una copia en profundidad del grupo de código. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#18)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#18)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateXml (element As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateXml(System::Security::SecurityElement ^ element, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Grupo de código que se va a comparar con el grupo de código actual.</param>
        <summary>Determina si el grupo de código especificado es equivalente al grupo de código actual.</summary>
        <returns>
          <see langword="true" /> si el grupo de código especificado es equivalente al grupo de código actual; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.Equals%2A> método para determinar si dos grupos de código son iguales. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#20)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#20)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el código hash del grupo de código actual.</summary>
        <returns>Código hash del grupo de código actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.GetHashCode%2A> método para obtener el código hash del grupo de código actual. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#14)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#14)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la lógica de combinación.</summary>
        <value>La cadena "Unión".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.MergeLogic%2A> propiedad que se va a obtener la lógica de combinación para este grupo de código. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#15)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#15)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ParseXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PermissionSetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del conjunto de permisos con nombre del grupo de código.</summary>
        <value>La concatenación de la cadena "Mismo directorio FileIO - " y el tipo de acceso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.PermissionSetName%2A> propiedad para obtener el nombre de los permisos con nombre establecido para el grupo de código. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#13)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#13)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Prueba del ensamblado.</param>
        <summary>Resuelve la directiva del grupo de código y sus descendientes para un conjunto de pruebas.</summary>
        <returns>Instrucción de directiva que contiene los permisos concedidos por el grupo de código con atributos opcionales, o <see langword="null" /> si el grupo de código no se aplica (la prueba especificada no cumple la condición de pertenencia).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dada la evidencia de un ensamblado que se va a cargar, este método se evalúa como el grupo de código comprobando en primer lugar la condición de pertenencia con la evidencia especificada. Si se encuentra una coincidencia, este método devuelve una instrucción de directiva para el grupo de código, incluida la evaluación de los grupos de código secundarios.  
  
 El sistema de seguridad de .NET Framework usa <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> en los niveles de directiva para determinar qué permisos se conceden al código cargado desde el código y las instrucciones de directiva resultante de solicitud en el ensamblado.  
  
 <xref:System.Security.Policy.FileCodeGroup> utiliza la semántica de unión y crea un conjunto de permisos en función de la <xref:System.Security.Policy.Url> especificado por `evidence`.  
  
   
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> método para resolver la directiva para el grupo de código. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#19)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#19)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Policy.PolicyException">La directiva actual es <see langword="null" />.  
  
 O bien  
  
 Más de un grupo de código (incluido el grupo de código principal y todos los grupos de código secundarios) se ha marcado como <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Prueba del ensamblado.</param>
        <summary>Revuelve los grupos de código coincidentes.</summary>
        <returns>Un objeto <see cref="T:System.Security.Policy.CodeGroup" /> que es el nodo raíz del árbol de grupos de código coincidentes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dada la evidencia de un ensamblado que se va a cargar, este método se evalúa como el grupo de código comprobando en primer lugar la condición de pertenencia con la evidencia especificada. Si se encuentra una coincidencia, este método devuelve un grupo de código raíz. El grupo de código devuelto contiene grupos de código secundarios, lo que a su vez pueden tener grupos de código secundarios según sea necesario para representar el conjunto completo de grupos de código que se corresponden con la evidencia proporcionada.  
  
 <xref:System.Security.Policy.FileCodeGroup> utiliza la semántica de unión y crea un conjunto de permisos en función de la <xref:System.Security.Policy.Url> especificado por `evidence`.  
  
   
  
## Examples  
 El código siguiente muestra el uso de la <xref:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups%2A> método para resolver grupos de código coincidentes. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Policy.FileCodeGroup> clase.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#9)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="evidence" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>