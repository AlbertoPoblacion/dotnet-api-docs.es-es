<Type Name="ApplicationTrustEnumerator" FullName="System.Security.Policy.ApplicationTrustEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59ab8cb6df681b340ec518887a2d4220c23c34b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499539" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationTrustEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.ApplicationTrustEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationTrustEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationTrustEnumerator sealed : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa el enumerador de los objetos <see cref="T:System.Security.Policy.ApplicationTrust" /> en la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los enumeradores sólo permiten la lectura de datos en la colección. Los enumeradores no pueden usarse para modificar la colección subyacente.  
  
 En principio, el enumerador se coloca antes del primer elemento de la colección. El <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> método también devuelve el enumerador a esta posición. En esta posición, al llamar a la <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> propiedad produce una excepción. Por lo tanto, debe llamar a la <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de la <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> propiedad.  
  
 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> o a <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> establece <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> en el siguiente elemento.  
  
 Cuando se pasa el final de la colección, el enumerador se coloca detrás del último elemento de la colección y si se llama al método <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> devuelve `false`. Si la última llamada a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> devuelve `false`, si se llama <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> produce una excepción. Restablecer <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> hasta el primer elemento de la colección, llame a <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> seguido por una llamada a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.  
  
 Un enumerador es válido mientras la colección no cambie. Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> o <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException> excepción. Si la colección se modifica entre llamar a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> y <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> devuelve el elemento al que está establecido actualmente, aunque el enumerador ya haya quedado invalidado.  
  
 El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos. Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción. Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ Current { System::Security::Policy::ApplicationTrust ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> actual de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
        <value>Objeto <see cref="T:System.Security.Policy.ApplicationTrust" /> actual del objeto <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea el enumerador, no apunta a un objeto, por lo que el <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> propiedad no es válida y producirá una excepción si se tiene acceso. Primero debe llamar a la <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> método para colocar el cursor en el primer objeto de la colección.  
  
 Varias llamadas a <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> con ninguna llamada intermedia a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> devolverá el mismo <xref:System.Security.Policy.ApplicationTrust> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se desplaza hasta el siguiente elemento de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
        <returns>
          Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> método inmediatamente devuelve `false` si no hay ningún objeto en la colección.  
  
 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> devolverá `true` hasta que se ha alcanzado el final de la colección. A continuación, devolverá `false` para cada llamada sucesiva. Sin embargo, después de <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> ha devuelto `false`, acceso a la <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> propiedad producirá una excepción.  
  
 Tras su creación, el enumerador se coloca antes del primer <xref:System.Security.Policy.ApplicationTrust> objeto en la colección y la primera llamada a <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> el enumerador se coloca en el primer objeto de la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece el enumerador al principio de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un enumerador se desplaza en una dirección de solo avance. Utilice este método para devolver el enumerador al principio de la colección de <xref:System.Security.Policy.ApplicationTrust> objetos.  
  
 El <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> método coloca el cursor en el primer objeto de la colección. Después de llamar a <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, no es necesario llamar a la <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> método para mover el cursor hacia delante hasta el primer objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Object" /> actual de la colección <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</summary>
        <value>Objeto <see cref="T:System.Object" /> actual del objeto <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No llame a este método; Utilice la <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> propiedad en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>