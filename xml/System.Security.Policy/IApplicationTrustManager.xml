<Type Name="IApplicationTrustManager" FullName="System.Security.Policy.IApplicationTrustManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73af8d88065b80971048a7e4a6683edcb70e80fa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497049" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationTrustManager : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationTrustManager implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.IApplicationTrustManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationTrustManager&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationTrustManager : System::Security::ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Determina si se debería ejecutar una aplicación y qué conjunto de permisos se le debería conceder.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Confiar en administradores deben implementar la <xref:System.Security.Policy.IApplicationTrustManager> interfaz. El host llama el <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> método para determinar si se debería ejecutar una aplicación y qué permisos se deben conceder a la aplicación.  
  
 En el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] y versiones posteriores, hay solo un administrador de confianza, que puede ser una implementación personalizada de la <xref:System.Security.Policy.IApplicationTrustManager> interfaz. La implementación del Administrador de confianza de forma predeterminada, pide al usuario permiso para instalar la aplicación y elevar los permisos concedidos a la aplicación. Otras implementaciones del Administrador de confianza podrían proporcionar experiencias de usuario diferentes. Por ejemplo, una implementación podría comprobar la lista de aplicaciones de confianza en lugar de solicitar dicha información al usuario una empresa.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una implementación simple de <xref:System.Security.Policy.IApplicationTrustManager>.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#1)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.ApplicationTrust DetermineApplicationTrust(class System.ActivationContext activationContext, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::ApplicationTrust ^ DetermineApplicationTrust(ActivationContext ^ activationContext, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">Contexto de activación para la aplicación.</param>
        <param name="context">El contexto del administrador de confianza para la aplicación.</param>
        <summary>Determina si se debería ejecutar una aplicación y qué conjunto de permisos se le debería conceder.</summary>
        <returns>Objeto que contiene decisiones de seguridad sobre la aplicación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> método se llama por el host para determinar si se debería ejecutar una aplicación y qué conjunto de permisos se concedan. <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> Devuelve un <xref:System.Security.Policy.ApplicationTrust> objeto con un <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> conjunto de propiedad que contiene un permiso que representa los permisos que se conceden a cada ensamblado que se ejecuta en el contexto de la aplicación. Los permisos concedidos no se aplican a los ensamblados en la caché global de ensamblados. El <xref:System.Security.Policy.ApplicationTrust> objeto también tiene un <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> propiedad que el Administrador de confianza se establece para indicar si se debe confiar en la aplicación. Si el Administrador de confianza indica que se puede confiar en la aplicación, el host activa la aplicación y sus ensamblados se concede el conjunto de permisos que se proporcionan en el <xref:System.Security.Policy.ApplicationTrust> colección.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una implementación de la <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> método para un administrador de confianza personalizadas. Este ejemplo de código forma parte de un ejemplo más extenso de la <xref:System.Security.Policy.IApplicationTrustManager> interfaz.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#2)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>