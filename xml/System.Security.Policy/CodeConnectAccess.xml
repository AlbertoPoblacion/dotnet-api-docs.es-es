<Type Name="CodeConnectAccess" FullName="System.Security.Policy.CodeConnectAccess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f03f987be5ad4b422bf83b7d389df31427755b31" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37629796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeConnectAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeConnectAccess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.CodeConnectAccess" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeConnectAccess" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeConnectAccess" />
  <TypeSignature Language="F#" Value="type CodeConnectAccess = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the network resource access that is granted to code.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase se utiliza junto con el <xref:System.Security.Policy.NetCodeGroup> clase para controlar cómo ejecutar el código puede conectarlo al sitio se descargó desde. Estas clases proporcionan control mediante programación de la <xref:System.Net.WebPermission> concedida para ejecutar código que controla qué esquemas y puertos que se puede usar el código, obtener acceso a su sitio de origen. Puede especificar pares de esquema y puerto que se permiten según el esquema en la dirección URL donde se origina el código.  
  
 Para crear un <xref:System.Security.Policy.CodeConnectAccess> objeto basado en el esquema de origen, use el <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> método.  
  
 Para crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que puede utilizar cualquier esquema pero está limitado por el puerto, use la <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Security.Policy.NetCodeGroup> de objeto y lo agrega al nivel de directiva de usuario.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConnectAccess (string allowScheme, int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string allowScheme, int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowScheme As String, allowPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConnectAccess(System::String ^ allowScheme, int allowPort);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.CodeConnectAccess : string * int -&gt; System.Security.Policy.CodeConnectAccess" Usage="new System.Security.Policy.CodeConnectAccess (allowScheme, allowPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowScheme" Type="System.String" />
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowScheme">The URI scheme represented by the current instance.</param>
        <param name="allowPort">The port represented by the current instance.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.CodeConnectAccess" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> propiedad se establece mediante la `allowScheme` parámetro. El esquema se convierte a minúsculas. El valor de <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> controla el esquema de la ejecución de código puede usar para conectarse a un recurso de red.  
  
 El <xref:System.Security.Policy.CodeConnectAccess.Port%2A> propiedad se establece mediante la `allowPort` parámetro. El valor de <xref:System.Security.Policy.CodeConnectAccess.Port%2A> controla el puerto que se ejecuta el código puede usar para conectarse a un recurso de red.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que permite descarga código para conectarse a su servidor de origen mediante el protocolo HTTP y el mismo número de puerto se descargó en. Para obtener un ejemplo que muestra cómo utilizar <xref:System.Security.Policy.CodeConnectAccess> objetos para crear un grupo de código y agregar el grupo de código a un nivel de directiva, consulte el <xref:System.Security.Policy.CodeConnectAccess> información general de clases.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowScheme" /> is <see langword="null" />.  -or-  <paramref name="allowScheme" /> is an empty string ("").  -or-  <paramref name="allowScheme" /> contains characters that are not permitted in schemes.  -or-  <paramref name="allowPort" /> is less than 0.  -or-  <paramref name="allowPort" /> is greater than 65,535.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnyScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable AnyScheme : string" Usage="System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the string value that represents the scheme wildcard.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como alternativa a construir un <xref:System.Security.Policy.CodeConnectAccess> objeto con este valor, puede llamar a la <xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A> método para obtener un <xref:System.Security.Policy.CodeConnectAccess> objeto que representa el puerto especificado y cualquier esquema.  
  
 El valor de este campo es "*".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el valor de este campo.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAnySchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAnySchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateAnySchemeAccess(int allowPort);" />
      <MemberSignature Language="F#" Value="static member CreateAnySchemeAccess : int -&gt; System.Security.Policy.CodeConnectAccess" Usage="System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess allowPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">The port represented by the returned instance.</param>
        <summary>Returns a <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance that represents access to the specified port using any scheme.</summary>
        <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance for the specified port.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Policy.CodeConnectAccess> instancia devuelta por este método usa el valor de carácter comodín de esquema <xref:System.Security.Policy.CodeConnectAccess.AnyScheme> ("*") para representar el esquema.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este método. Para obtener un ejemplo que muestra cómo utilizar <xref:System.Security.Policy.CodeConnectAccess> objetos para crear un grupo de código y agregar el grupo de código a un nivel de directiva, consulte el <xref:System.Security.Policy.CodeConnectAccess> información general de clases.  
  
 [!code-cpp[NclCodeGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#5)]
 [!code-csharp[NclCodeGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> is less than 0.  -or-  <paramref name="allowPort" /> is greater than 65,535.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOriginSchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOriginSchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateOriginSchemeAccess(int allowPort);" />
      <MemberSignature Language="F#" Value="static member CreateOriginSchemeAccess : int -&gt; System.Security.Policy.CodeConnectAccess" Usage="System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess allowPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">The port represented by the returned instance.</param>
        <summary>Returns a <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance that represents access to the specified port using the code's scheme of origin.</summary>
        <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance for the specified port.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Policy.CodeConnectAccess> instancia devuelta por este método tiene el valor de esquema <xref:System.Security.Policy.CodeConnectAccess.OriginScheme>. El esquema de origen es el valor de esquema del URI donde se originó el código.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Security.Policy.CodeConnectAccess> objetos para crear un grupo de código y agregar el grupo de código a un nivel de directiva.  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> is less than 0.  -or-  <paramref name="allowPort" /> is greater than 65,535.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultPort">
      <MemberSignature Language="C#" Value="public static readonly int DefaultPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 DefaultPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int DefaultPort;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultPort : int" Usage="System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value used to represent the default port.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que tiene el puerto predeterminado para un esquema especificado, utilice este campo como el `allowPort` parámetro de la <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> constructor.  
  
 El valor de este campo es -3.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que especifica el FTP para el esquema y el puerto predeterminado para FTP.  
  
 [!code-cpp[NclCodeGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#1)]
 [!code-csharp[NclCodeGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="codeConnectAccess.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.CodeConnectAccess" /> object.</param>
        <summary>Returns a value indicating whether two <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects represent the same scheme and port.</summary>
        <returns>
          <see langword="true" /> if the two objects represent the same scheme and port; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos <xref:System.Security.Policy.CodeConnectAccess> objetos son iguales si sus <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> y <xref:System.Security.Policy.CodeConnectAccess.Port%2A> los valores de propiedad son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="codeConnectAccess.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for a particular type.</summary>
        <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="OriginPort">
      <MemberSignature Language="C#" Value="public static readonly int OriginPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 OriginPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int OriginPort;" />
      <MemberSignature Language="F#" Value=" staticval mutable OriginPort : int" Usage="System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value used to represent the port value in the URI where code originated.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que tiene el mismo puerto que el puerto en la evidencia de dirección URL del código que se ejecuta, utilice este campo como el `allowPort` parámetro de la <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> constructor.  
  
 El valor de este campo es -4.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo crear un <xref:System.Security.Policy.CodeConnectAccess> objeto que especifica el puerto de origen y de esquema HTTP.  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string OriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OriginScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable OriginScheme : string" Usage="System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the value used to represent the scheme in the URL where the code originated.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No utilice este campo con el <xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> constructor. En su lugar, use el <xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A> método.  
  
 El valor de este campo es "$origin".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el valor de este campo.  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.Security.Policy.CodeConnectAccess.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the port represented by the current instance.</summary>
        <value>Un <see cref="T:System.Int32" /> valor que identifica un puerto de PC utilizado junto con el <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores de puerto están comprendidos entre 0 y 65.535. El valor del puerto se especifica cuando se crea una instancia de <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI scheme represented by the current instance.</summary>
        <value>Un <see cref="T:System.String" /> que identifica un esquema de URI, convertido a minúsculas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de esquema se especifica cuando se crea una instancia de <xref:System.Security.Policy.CodeConnectAccess>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>