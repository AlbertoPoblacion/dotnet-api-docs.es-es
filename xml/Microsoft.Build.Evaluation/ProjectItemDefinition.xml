<Type Name="ProjectItemDefinition" FullName="Microsoft.Build.Evaluation.ProjectItemDefinition">
  <TypeSignature Language="C#" Value="public class ProjectItemDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItemDefinition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItemDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItemDefinition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItemDefinition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{itemType} #Metadata={MetadataCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b104-101">Representa una definición de elemento evaluada para un tipo de elemento concreto.</span><span class="sxs-lookup"><span data-stu-id="2b104-101">Represents an evaluated item definition for a particular item-type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b104-102">Definiciones de elementos no son los mismos que los elementos.</span><span class="sxs-lookup"><span data-stu-id="2b104-102">Item definitions are not the same as items.</span></span> <span data-ttu-id="2b104-103">Como los elementos, las definiciones de elemento pueden tener metadatos.</span><span class="sxs-lookup"><span data-stu-id="2b104-103">Like items, item definitions can have metadata.</span></span> <span data-ttu-id="2b104-104">Como las propiedades, los nuevos metadatos pueden invalidar los metadatos anteriores con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="2b104-104">Like properties, new metadata can override old metadata with the same name.</span></span>  
  
 <span data-ttu-id="2b104-105">Durante la evaluación, se recopilan todas las definiciones de elemento para un tipo de elemento (suponiendo que sus condiciones son true) para crear un ProjectItemDefinition para cada tipo.</span><span class="sxs-lookup"><span data-stu-id="2b104-105">During evaluation, all the item definitions for an item type are collected together (assuming their conditions are true) to create one ProjectItemDefinition for each type.</span></span> <span data-ttu-id="2b104-106">Por esta razón, una definición de elemento de proyecto puede hacer referencia a más de un elemento de definición de elemento de proyecto.</span><span class="sxs-lookup"><span data-stu-id="2b104-106">For this reason, a project item definition can refer to more than one project item definition element.</span></span> <span data-ttu-id="2b104-107">Los metadatos de una definición de elemento de proyecto, sin embargo, hace referencia a un elemento de metadatos de proyecto único, que se puede agregar, quitar y modificar.</span><span class="sxs-lookup"><span data-stu-id="2b104-107">The metadata within a project item definition, however, refers to a single project metadata element, which can be added, removed, and modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemDefinition`1.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b104-108">Nombre de los metadatos que se van a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2b104-108">The name of the metadata to retrieve.</span></span></param>
        <summary><span data-ttu-id="2b104-109">Obtiene los metadatos con el nombre especificado de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-109">Get any metadata in the item definition with the given name.</span></span></summary>
        <returns><span data-ttu-id="2b104-110">Obtiene los metadatos con el nombre especificado de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-110">Get any metadata in the item definition with the given name.</span></span> <span data-ttu-id="2b104-111">Devuelve null si no existen metadatos con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="2b104-111">Returns null if no metadata exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b104-112">Nombre del elemento cuyo valor de metadatos se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2b104-112">The name of the item whose metadata value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="2b104-113">Obtiene el valor de cualquier metadato del elemento que tenga el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2b104-113">Get the value of any metadata in the item that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="2b104-114">Devuelve el valor de cualquier metadato del elemento que tenga el nombre especificado; de lo contrario, devuelve null.</span><span class="sxs-lookup"><span data-stu-id="2b104-114">Returns the value of any metadata in the item that has the specified name; otherwise returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProjectMetadataParent.ItemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b104-115">Obtiene el tipo de elemento de esta definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-115">Gets the item type of this item definition.</span></span></summary>
        <value><span data-ttu-id="2b104-116">Devuelve el tipo de elemento de esta definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-116">Returns the item type of this item definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b104-117">Obtiene un enumerador de todos los metadatos de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-117">Gets an enumerator over all metadata for the item definition.</span></span></summary>
        <value><span data-ttu-id="2b104-118">Devuelve un enumerador de todos los metadatos de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-118">Returns an enumerator over all metadata for the item definition.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b104-119">Es una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2b104-119">This is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b104-120">Obtiene el número de los metadatos de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-120">Gets the count of the metadata on the item definition.</span></span></summary>
        <value><span data-ttu-id="2b104-121">Devuelve el número de los metadatos de la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-121">Returns the count of the metadata on the item definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProjectMetadataParent.Project</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b104-122">Obtiene el proyecto que contiene esta definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-122">Gets the project that contains this item definition.</span></span></summary>
        <value><span data-ttu-id="2b104-123">Devuelve el proyecto que contiene esta definición de elemento, que nunca es null.</span><span class="sxs-lookup"><span data-stu-id="2b104-123">Returns the project that contains this item definition, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b104-124">Nombre de los metadatos que se van a establecer.</span><span class="sxs-lookup"><span data-stu-id="2b104-124">The name of the metadata to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="2b104-125">Nuevo valor no evaluado de los metadatos.</span><span class="sxs-lookup"><span data-stu-id="2b104-125">The new unevaluated value of the metadata.</span></span></param>
        <summary><span data-ttu-id="2b104-126">Establece el valor de los metadatos especificados en la definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="2b104-126">Sets the value of the given metadata in the item definition.</span></span></summary>
        <returns><span data-ttu-id="2b104-127">Devuelve los metadatos con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2b104-127">Returns the metadata with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b104-128">Se supone que el valor no evaluado contienen secuencias de escape de caracteres según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="2b104-128">The unevaluated value is assumed to contain character escape sequences as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>