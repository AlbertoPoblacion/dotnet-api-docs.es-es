<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e967c-101">Representa los metadatos evaluados en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="e967c-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e967c-102">Nunca se usa para representar metadatos integrados, como % (nombre de archivo).</span><span class="sxs-lookup"><span data-stu-id="e967c-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="e967c-103">Los metadatos siempre se asocia con el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="e967c-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="e967c-104">Los metadatos se encuentra haciendo una <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> o <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="e967c-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-105">Ubicación del atributo Condition.</span><span class="sxs-lookup"><span data-stu-id="e967c-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="e967c-106">Devuelve la ubicación del atributo Condition.</span><span class="sxs-lookup"><span data-stu-id="e967c-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-107">Obtiene el valor de los metadatos evaluados.</span><span class="sxs-lookup"><span data-stu-id="e967c-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="e967c-108">Devuelve el valor de los metadatos evaluados, el cual nunca es null.</span><span class="sxs-lookup"><span data-stu-id="e967c-108">Returns the evaluated metadata value, which is never null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e967c-109">No se puede establecer directamente: se puede establecer solo el valor no evaluado.</span><span class="sxs-lookup"><span data-stu-id="e967c-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-110">Determina si los metadatos proceden de un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="e967c-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="e967c-111">Devuelve true si los metadatos proceden de un archivo importado; de lo contrario, devuelve false.</span><span class="sxs-lookup"><span data-stu-id="e967c-111">Returns true if the metadata originated from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-112">Obtiene el tipo de la definición de elemento o elemento contenedor.</span><span class="sxs-lookup"><span data-stu-id="e967c-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="e967c-113">Devuelve el tipo de la definición de elemento o elemento contenedor.</span><span class="sxs-lookup"><span data-stu-id="e967c-113">Returns the item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-114">Ubicación del elemento.</span><span class="sxs-lookup"><span data-stu-id="e967c-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="e967c-115">Devuelve la ubicación de elemento.</span><span class="sxs-lookup"><span data-stu-id="e967c-115">Returns the element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-116">Obtiene el nombre de los metadatos.</span><span class="sxs-lookup"><span data-stu-id="e967c-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="e967c-117">Devuelve el nombre de los metadatos.</span><span class="sxs-lookup"><span data-stu-id="e967c-117">Returns the name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-118">Obtiene los últimos metadatos (de una definición de elemento o un elemento) reemplazados por estos metadatos durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="e967c-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="e967c-119">Devuelve los últimos metadatos (de una definición de elemento o un elemento) cuyo valor fue reemplazado por estos metadatos durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="e967c-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span></span> <span data-ttu-id="e967c-120">Devuelve null si no se han reemplazado los metadatos.</span><span class="sxs-lookup"><span data-stu-id="e967c-120">Returns null if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e967c-121">Este método busca todos los metadatos con el mismo nombre que se encuentran por encima en el archivo de proyecto lógico y que contiene las definiciones de elemento del mismo tipo de elemento y cuyas condiciones se evalúan como true.</span><span class="sxs-lookup"><span data-stu-id="e967c-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="e967c-122">Si los metadatos está contenido en un elemento, este método busca los metadatos anteriores con el mismo nombre y elemento cuya condición se evalúa como true.</span><span class="sxs-lookup"><span data-stu-id="e967c-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="e967c-123">Definiciones de elemento se buscan antes que los elementos.</span><span class="sxs-lookup"><span data-stu-id="e967c-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="e967c-124">Si no se vuelve a evaluar el proyecto desde la última modificación, este valor puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="e967c-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-125">Obtiene el proyecto que contiene estos metadatos.</span><span class="sxs-lookup"><span data-stu-id="e967c-125">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="e967c-126">Devuelve el proyecto que contiene estos metadatos, el cual nunca es null.</span><span class="sxs-lookup"><span data-stu-id="e967c-126">Returns the project that contains this metadata, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e967c-127">Metadatos del proyecto que se compararán.</span><span class="sxs-lookup"><span data-stu-id="e967c-127">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="e967c-128">Compara los metadatos de este proyecto con los metadatos del proyecto especificado para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="e967c-128">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="e967c-129">Devuelve true si los metadatos de proyecto son iguales; de lo contrario, devuelve false.</span><span class="sxs-lookup"><span data-stu-id="e967c-129">Returns true if the project metadata are equal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-130">Obtiene o establece el valor de los metadatos no evaluados.</span><span class="sxs-lookup"><span data-stu-id="e967c-130">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="e967c-131">Devuelve el valor de los metadatos no evaluados.</span><span class="sxs-lookup"><span data-stu-id="e967c-131">Returns the unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e967c-132">El método Set actualiza el valor no evaluado como el valor evaluado, pero no afecta a nada más en el proyecto hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="e967c-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="e967c-133">Por ejemplo,--si un fragmento de metadatos denominado "m" se modifica en el elemento de tipo "i", no afecta a "j" que se evalúa de "@(j -> '% (m)')" hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="e967c-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="e967c-134">--Si el valor no evaluado de "m" está establecido en algo que modifica la evaluación, por ejemplo, "$(p)", el valor evaluado se establecerá en "$(p)" hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="e967c-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="e967c-135">Al establecer metadatos a través de un <xref:Microsoft.Build.Evaluation.ProjectItem> puede provocar asociado <xref:Microsoft.Build.Construction.ProjectItemElement> va a dividir, si el elemento se originó desde una expresión de elemento de lista, un carácter comodín o punto y coma.</span><span class="sxs-lookup"><span data-stu-id="e967c-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="e967c-136">Dado que implica una intención de solo afectan a un artículo determinado.</span><span class="sxs-lookup"><span data-stu-id="e967c-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="e967c-137">Establecer metadatos a través de ProjectMetadata no produce ninguna división, porque implica una intención de afectar a todos los elementos con subyacente <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="e967c-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="e967c-138">El proyecto que lo contiene se marca como modificada.</span><span class="sxs-lookup"><span data-stu-id="e967c-138">The containing project is marked as modified.</span></span> <span data-ttu-id="e967c-139">Valores no evaluados se supone que contener secuencias de caracteres de escape según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="e967c-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="e967c-140">Este método no puede dejar el proyecto en un mismo estado coherente.</span><span class="sxs-lookup"><span data-stu-id="e967c-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e967c-141">Obtiene el elemento de metadatos de proyecto asociado.</span><span class="sxs-lookup"><span data-stu-id="e967c-141">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="e967c-142">Devuelve el elemento de metadatos de proyecto asociado, el cual nunca puede ser null.</span><span class="sxs-lookup"><span data-stu-id="e967c-142">Returns the associated project metadata element, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>