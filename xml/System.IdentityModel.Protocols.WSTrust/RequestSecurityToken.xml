<Type Name="RequestSecurityToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="725b8644e2d738ef6692d1bcb53b9a29650cb7da" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614534" /></Metadata><TypeSignature Language="C#" Value="public class RequestSecurityToken : System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestSecurityToken extends System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestSecurityToken&#xA;Inherits WSTrustMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestSecurityToken : System::IdentityModel::Protocols::WSTrust::WSTrustMessage" />
  <TypeSignature Language="F#" Value="type RequestSecurityToken = class&#xA;    inherit WSTrustMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Protocols.WSTrust.WSTrustMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento wst:RequestSecurityToken (RST), que se utiliza para solicitar un token de seguridad.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El elemento WST: RequestSecurityToken (mensaje) contiene los parámetros y propiedades que se usan para solicitar un token de seguridad de un servicio de token de seguridad (STS). El mensaje (o elemento) se abrevia como RST. La <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> clase contiene propiedades que representan los elementos de RST. Una RST puede formar una solicitud que se corresponde con ninguno de los enlaces de solicitud definidos por WS-Trust; Por ejemplo, el enlace de emisión, el enlace de renovación, el enlace Validate o el enlace de cancelación. Muchas de las propiedades de la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> clase corresponden a los elementos que están presentes solo en determinados tipos de solicitudes, tal como se define por estos enlaces. Según el tipo de una determinada solicitud <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> representa el objeto o los parámetros presentes en la solicitud específica que representa, algunas propiedades del objeto pueden ser `null`.  
  
 El STS devuelve una respuesta a la solicitud en un mensaje que contiene un elemento WST: RequestSecurityTokenResponse (RSTR). Este mensaje está representado por la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse> clase.  
  
 [!INCLUDE[wif_wstrust_ref](~/includes/wif-wstrust-ref-md.md)]  
  
   
  
## Examples  
 El ejemplo de código que se usa en este tema se toma de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT) e incluye una implementación de un STS pasivo que es capaz de atender un token de SWT. El STS se implementa mediante una clase que se deriva de <xref:System.IdentityModel.SecurityTokenService>. Muchos de los métodos de la <xref:System.IdentityModel.SecurityTokenService> clase que se llaman desde su take de canalización de emisión de tokens un <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> objeto como uno si de sus parámetros. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
 En el siguiente ejemplo de código se muestra la implementación del método <xref:System.IdentityModel.SecurityTokenService.GetScope%2A?displayProperty=nameWithType>. El método toma un <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> como uno de sus parámetros y propiedades de este parámetro se usa para establecer propiedades en el <xref:System.IdentityModel.Scope> objeto devuelto por el método.  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> propiedad y <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> propiedad se inicializan en `null`.  
  
 Este constructor se usa normalmente por el receptor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken requestType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Cadena que contiene el URI del tipo de solicitud.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> con el tipo de solicitud especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> se inicializa en `null`.  
  
 Este constructor se usa normalmente por el remitente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType, string keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType, string keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String, keyType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType, System::String ^ keyType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string * string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken (requestType, keyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="keyType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Cadena que contiene el URI del tipo de solicitud.</param>
        <param name="keyType">Cadena que contiene el URI de tipo clave. Esta debería ser una de las constantes definidas por la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> con el tipo de solicitud especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra el valor inicial de la <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> propiedad para valores específicos de la `keyType` parámetro.  
  
|Parámetro `keyType`|Propiedad<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> |  
|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Asymmetric>|1024|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer>|0|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Symmetric>|256|  
  
 Este constructor se usa normalmente por el remitente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActAs">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ActAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ActAs" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberSignature Language="VB.NET" Value="Public Property ActAs As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ActAs { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActAs : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token de seguridad para la identidad con la que el solicitante está intentando actuar.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que representa la identidad con la que el el solicitante está intentando actuar. Puede ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:ActAs. Este elemento opcional es compatible con escenarios de delegación e indica que el solicitante está realizando la solicitud para que actúe como otra identidad. Este elemento se introdujo en WS-Trust 1.4. Esta propiedad es `null` en las solicitudes que no requieren la delegación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalContext As AdditionalContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ AdditionalContext { System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ get(); void set(System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalContext : System.IdentityModel.Protocols.WSTrust.AdditionalContext with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.AdditionalContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la información de contexto adicional para la solicitud.</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.AdditionalContext" /> que contiene información de contexto adicional para la solicitud. Puede ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento AUTH: additionalcontext. Este elemento opcional proporciona información adicional que puede usar el servicio de token de seguridad (STS) en el proceso de emisión de tokens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement CancelTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement CancelTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ CancelTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token que se cancela en una solicitud de cancelación de WS-Trust.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene el token que se va a cancelar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de un elemento wst:CancelTarget. Este elemento incluye la información sobre el token de cancelación en una solicitud de cancelación de WS-Trust.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As RequestClaimCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ Claims { System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestClaimCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los tipos de notificación solicitados por el cliente (solicitante).</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" /> que contiene las notificaciones solicitadas. El valor predeterminado es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:Claims. Este elemento opcional solicita el conjunto de tipos de notificación concreta solicitada por el cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComputedKeyAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un URI que representa el algoritmo deseado que se va a utilizar cuando las claves calculadas se usen para los tokens emitidos.</summary>
        <value>Cadena que contiene el URI que representa el algoritmo de la clave calculado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el elemento wst:ComputedKeyAlgorithm. Este elemento opcional especifica un URI que representa el algoritmo deseado que se usará cuando las claves calculadas se usan para los tokens emitidos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegatable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Delegatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Delegatable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberSignature Language="VB.NET" Value="Public Property Delegatable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Delegatable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Delegatable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el token emitido se debe marcar como delegable.</summary>
        <value><see langword="true" /> si el token emitido es delegable; si no, <see langword="false" />. Puede ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de la wst: elemento Delegable. Este elemento opcional indica que el token devuelto puede ser delegable a otra entidad. Este elemento se introdujo en WS-Trust 1.4. Esta propiedad se utiliza junto con el <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement DelegateTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement DelegateTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateTo As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ DelegateTo { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DelegateTo : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la identidad en la que debe delegarse el token emitido.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que representa la identidad en la que el token emitido debe ser delegado. Puede ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:DelegateTo. Este elemento opcional indica que el token emitido se delega a la identidad especificada. Este elemento se introdujo en WS-Trust 1.4. Esta propiedad es `null` en las solicitudes que no requieren la delegación. Esta propiedad se utiliza junto con el <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement Encryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement Encryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Encryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ Encryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la información sobre el token y la clave que se van a utilizar al cifrar.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene la información cifrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:Encryption. Este elemento opcional indica que se deben cifrar los secretos devueltos en los tokens de seguridad emitido para el token especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forwardable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Forwardable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Forwardable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberSignature Language="VB.NET" Value="Public Property Forwardable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Forwardable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Forwardable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el token emitido se debe marcar como reenviable.</summary>
        <value><see langword="true" /> si el token emitido es reenviable; si no, <see langword="false" />. Puede ser <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de la wst: elemento Reenviable. Este elemento opcional indica si el token devuelto está enlazado al equipo o el servicio del solicitante (indicado por un `false` valor). Este elemento se introdujo en WS-Trust 1.4. Esta propiedad se utiliza junto con el <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As EndpointReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::EndpointReference ^ Issuer { System::IdentityModel::Protocols::WSTrust::EndpointReference ^ get(); void set(System::IdentityModel::Protocols::WSTrust::EndpointReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Protocols.WSTrust.EndpointReference with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el emisor del token wst:OnBehalfOf.</summary>
        <value><see cref="T:System.ServiceModel.EndpointAddress" /> que contiene la dirección del emisor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:Issuer. Este elemento opcional identifica al emisor del token que se especifica en el elemento WST: onbehalfof.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBehalfOf">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberSignature Language="VB.NET" Value="Public Property OnBehalfOf As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ OnBehalfOf { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnBehalfOf : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token para la identidad en nombre de la que se está realizando la solicitud.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene el token de la identidad para la que se está realizando la solicitud.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento WST: onbehalfof. Este elemento opcional indica que el solicitante está realizando la solicitud en nombre de otra identidad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Participants">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Participants Participants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Participants Participants" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberSignature Language="VB.NET" Value="Public Property Participants As Participants" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Participants ^ Participants { System::IdentityModel::Protocols::WSTrust::Participants ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Participants ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Participants : System.IdentityModel.Protocols.WSTrust.Participants with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Participants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los participantes que están autorizados a utilizar el token emitido.</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.Participants" /> que contiene los participantes autorizados a utilizar el token emitido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento WST: Participants. Este elemento opcional identifica a participantes adicionales que están autorizados a usar el token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProofEncryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ProofEncryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ProofEncryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProofEncryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token que se usará para cifrar el token de prueba.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene el token.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del elemento wst:ProofEncryption. Este elemento opcional contiene el token que se usará para cifrar la clave de prueba.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewing">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Renewing Renewing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Renewing Renewing" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberSignature Language="VB.NET" Value="Public Property Renewing As Renewing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Renewing ^ Renewing { System::IdentityModel::Protocols::WSTrust::Renewing ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Renewing ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renewing : System.IdentityModel.Protocols.WSTrust.Renewing with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Renewing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la semántica de renovación para una solicitud de renovación de WS-Trust.</summary>
        <value>Devuelve un objeto <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> que contiene la semántica de renovación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de la wst: elemento de renovación. Este elemento opcional especifica la semántica de renovación para una solicitud de renovación de WS-Trust.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement RenewTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement RenewTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ RenewTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenewTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token que se renueva en una solicitud de renovación de WS-Trust.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene el token que se va a renovar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de un elemento WST: RenewTarget. Este elemento incluye la información sobre el token que se renueva en una confianza de WS-solicitud de renovación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryParameters">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryParameters As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ SecondaryParameters { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecondaryParameters : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los parámetros para los que el solicitante no es el originador.</summary>
        <value><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que contiene los parámetros secundarios de la solicitud; es decir, parámetros para los que el solicitante no es el originador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de un elemento wst:SecondaryParameters. Este elemento opcional contiene los parámetros para el que el solicitante no es el originador. Un STS puede usar los valores encontrados en este elemento en su directiva.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ValidateTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el token que se valida en una solicitud de validación de WS-Trust.</summary>
        <value><see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> que contiene el token que se va a validar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido de un elemento wst:ValidateTarget. Este elemento incluye la información sobre el token que se valida en un WS-Trust validar la solicitud.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>