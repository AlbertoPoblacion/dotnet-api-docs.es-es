<Type Name="Renewing" FullName="System.IdentityModel.Protocols.WSTrust.Renewing">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87cd781ae399c63ddd609726cd92bf8e3560da2f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36483084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Renewing" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Renewing extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.Renewing" />
  <TypeSignature Language="VB.NET" Value="Public Class Renewing" />
  <TypeSignature Language="C++ CLI" Value="public ref class Renewing" />
  <TypeSignature Language="F#" Value="type Renewing = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento wst:Renewing en una solicitud de renovación de WS-Trust.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este elemento opcional indica al emisor del token que se puede renovar el token solicitado si el atributo permitir es true y que se puede renovar el token después de que expire si el atributo correcto es true. Estos atributos se representan mediante el <xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A> y <xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A> propiedades respectivamente.  
  
 Para obtener más información sobre el elemento que esta clase representa, vea la versión de la especificación de WS-Trust que se aplica a su escenario.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Renewing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Renewing();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /><see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> con los valores de propiedad predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instancia.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal%2A>|`true`|  
|<xref:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration%2A>|`false`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Renewing (bool allowRenewal, bool okForRenewalAfterExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool allowRenewal, bool okForRenewalAfterExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.Renewing.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowRenewal As Boolean, okForRenewalAfterExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Renewing(bool allowRenewal, bool okForRenewalAfterExpiration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.Renewing : bool * bool -&gt; System.IdentityModel.Protocols.WSTrust.Renewing" Usage="new System.IdentityModel.Protocols.WSTrust.Renewing (allowRenewal, okForRenewalAfterExpiration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowRenewal" Type="System.Boolean" />
        <Parameter Name="okForRenewalAfterExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowRenewal">
          <see langword="true" /> si se permite la renovación; si no, <see langword="false" />.</param>
        <param name="okForRenewalAfterExpiration">
          <see langword="true" /> si el token solicitado se puede renovar después de que haya expirado; si no, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /><see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> con los valores especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las propiedades del nuevo <xref:System.IdentityModel.Protocols.WSTrust.Renewing> instancia se establecen según el valor de los parámetros.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRenewal">
      <MemberSignature Language="C#" Value="public bool AllowRenewal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRenewal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRenewal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRenewal : bool with get, set" Usage="System.IdentityModel.Protocols.WSTrust.Renewing.AllowRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el token se puede renovar.</summary>
        <value>
          <see langword="true" /> si se permite la renovación; si no, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del atributo permitir. Este atributo opcional se usa para solicitar un token renovable. El valor predeterminado es `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OkForRenewalAfterExpiration">
      <MemberSignature Language="C#" Value="public bool OkForRenewalAfterExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OkForRenewalAfterExpiration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property OkForRenewalAfterExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OkForRenewalAfterExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OkForRenewalAfterExpiration : bool with get, set" Usage="System.IdentityModel.Protocols.WSTrust.Renewing.OkForRenewalAfterExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el token puede renovarse después de que haya expirado.</summary>
        <value>
          <see langword="true" /> si el token solicitado se puede renovar después de que haya expirado; si no, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa el contenido del atributo Aceptar. Este atributo opcional se utiliza para indicar que es aceptable si la duración solicitada supera el límite del servicio de emisión de un token renovable. Es decir, si `true`, a continuación, se puede renovar el token después de su expiración. El valor predeterminado es `false` por motivos de seguridad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>