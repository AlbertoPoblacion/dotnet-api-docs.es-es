<Type Name="UCOMIEnumMoniker" FullName="System.Runtime.InteropServices.UCOMIEnumMoniker">
  <TypeSignature Language="C#" Value="public interface UCOMIEnumMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIEnumMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIEnumMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIEnumMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIEnumMoniker" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00000102-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a2dec-101">Utilice <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="a2dec-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumMoniker" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dec-102">Para obtener más información sobre la `IEnumMoniker` de la interfaz, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2dec-102">For more information about the `IEnumMoniker` interface, see the MSDN Library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Clone(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppenum As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenum" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenum"><span data-ttu-id="a2dec-103">Si la devolución es correcta, se obtendrá una referencia al enumerador recién creado.</span><span class="sxs-lookup"><span data-stu-id="a2dec-103">On successful return, a reference to the newly created enumerator.</span></span></param>
        <summary><span data-ttu-id="a2dec-104">Crea otro enumerador que contiene el mismo estado de enumeración que el actual.</span><span class="sxs-lookup"><span data-stu-id="a2dec-104">Creates another enumerator that contains the same enumeration state as the current one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dec-105">Para obtener más información sobre `IEnumMoniker::Clone`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2dec-105">For more information about `IEnumMoniker::Clone`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public int Next (int celt, System.Runtime.InteropServices.UCOMIMoniker[] rgelt, out int pceltFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 celt, [out] class System.Runtime.InteropServices.UCOMIMoniker[] rgelt, [out] int32&amp; pceltFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Next(System.Int32,System.Runtime.InteropServices.UCOMIMoniker[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (celt As Integer, rgelt As UCOMIMoniker(), ByRef pceltFetched As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Next(int celt, cli::array &lt;System::Runtime::InteropServices::UCOMIMoniker ^&gt; ^ rgelt, [Runtime::InteropServices::Out] int % pceltFetched);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
        <Parameter Name="rgelt" Type="System.Runtime.InteropServices.UCOMIMoniker[]" />
        <Parameter Name="pceltFetched" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="celt"><span data-ttu-id="a2dec-106">Número de monikers que se van a devolver en <c>rgelt</c>.</span><span class="sxs-lookup"><span data-stu-id="a2dec-106">The number of monikers to return in <c>rgelt</c>.</span></span></param>
        <param name="rgelt"><span data-ttu-id="a2dec-107">Si la devolución es correcta, se obtiene una referencia a los monikers enumerados.</span><span class="sxs-lookup"><span data-stu-id="a2dec-107">On successful return, a reference to the enumerated monikers.</span></span></param>
        <param name="pceltFetched"><span data-ttu-id="a2dec-108">Si la devolución es correcta, se obtiene una referencia al número real de monikers enumerados en <c>rgelt</c>.</span><span class="sxs-lookup"><span data-stu-id="a2dec-108">On successful return, a reference to the actual number of monikers enumerated in <c>rgelt</c>.</span></span></param>
        <summary><span data-ttu-id="a2dec-109">Recupera un número especificado de elementos en la secuencia de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2dec-109">Retrieves a specified number of items in the enumeration sequence.</span></span></summary>
        <returns>
          <span data-ttu-id="a2dec-110">Es <see langword="S_OK" /> si el parámetro <paramref name="pceltFetched" /> es igual al parámetro <paramref name="celt" />; en caso contrario, es <see langword="S_FALSE" />.</span><span class="sxs-lookup"><span data-stu-id="a2dec-110"><see langword="S_OK" /> if the <paramref name="pceltFetched" /> parameter equals the <paramref name="celt" /> parameter; otherwise, <see langword="S_FALSE" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dec-111">Para obtener más información sobre `IEnumMoniker::Next`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2dec-111">For more information about `IEnumMoniker::Next`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public int Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2dec-112">Restablece la secuencia de enumeración al principio.</span><span class="sxs-lookup"><span data-stu-id="a2dec-112">Resets the enumeration sequence to the beginning.</span></span></summary>
        <returns><span data-ttu-id="a2dec-113">HRESULT con el valor <see langword="S_OK" />.</span><span class="sxs-lookup"><span data-stu-id="a2dec-113">An HRESULT with the value <see langword="S_OK" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dec-114">Para obtener más información sobre `IEnumMoniker::Reset`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2dec-114">For more information about `IEnumMoniker::Reset`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public int Skip (int celt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Skip(int32 celt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumMoniker.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (celt As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Skip(int celt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="celt"><span data-ttu-id="a2dec-115">Número de elementos de la enumeración que se van a omitir.</span><span class="sxs-lookup"><span data-stu-id="a2dec-115">The number of elements to skip in the enumeration.</span></span></param>
        <summary><span data-ttu-id="a2dec-116">Omite un número especificado de elementos en la secuencia de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2dec-116">Skips over a specified number of items in the enumeration sequence.</span></span></summary>
        <returns>
          <span data-ttu-id="a2dec-117">Es <see langword="S_OK" /> si el número de elementos omitidos es igual al parámetro <paramref name="celt" />; en caso contrario, es <see langword="S_FALSE" />.</span><span class="sxs-lookup"><span data-stu-id="a2dec-117"><see langword="S_OK" /> if the number of elements skipped equals the <paramref name="celt" /> parameter; otherwise, <see langword="S_FALSE" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dec-118">Para obtener más información sobre `IEnumMoniker::Skip`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2dec-118">For more information about `IEnumMoniker::Skip`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>