<Type Name="ExtensibleClassFactory" FullName="System.Runtime.InteropServices.ExtensibleClassFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c38277b4087f3742cb505d291832a0e3f1b99a8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExtensibleClassFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExtensibleClassFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ExtensibleClassFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExtensibleClassFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensibleClassFactory sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite personalizar objetos administrados que se extienden a partir de objetos no administrados durante su creación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `ExtensibleClassFactory` permite a los usuarios especificar un `delegate` que se llama durante la construcción de un contenedor invocable en tiempo de ejecución (RCW) que proporciona una instancia del objeto COM subyacente. En efecto, la devolución de llamada actúa como generador de clases para el objeto COM ajustado por el contenedor RCW. Sin la devolución de llamada, common language runtime crea el objeto COM subyacente mediante una llamada a `CoCreateInstance`. Esta devolución de llamada proporciona una manera alternativa de activar el objeto subyacente, como con un moniker COM, o proporcionando un objeto singleton. El <xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A> debe llamar al método el `static` inicializador de la clase que extiende el RCW. Devolución de llamada de creación de un único objeto está permitido por tipo de objeto. Cuando se activa el RCW extensible, se registra la devolución de llamada. Cuando el objeto COM subyacente debe crearse, se invoca la devolución de llamada para proporcionar una referencia al objeto. La devolución de llamada debe devolver un `IUnknown` puntero de interfaz para el objeto base.  
  
   
  
## Examples  
 Registra un `delegate` que se llamará cada vez que una instancia de un tipo administrado que se extiende desde un tipo no administrado necesite asignar el objeto no administrado agregado. Esto `delegate` se espera para asignar y agregar el objeto no administrado y se llama en lugar de un `CoCreateInstance`. Esta rutina se debe invocar en el contexto de la `static` inicializador de la clase para la que se realizarán las devoluciones de llamada.  
  
 [!code-cpp[Classic ExtensibleClassFactory Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ExtensibleClassFactory Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/CS/source.cs#1)]
 [!code-vb[Classic ExtensibleClassFactory Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ExtensibleClassFactory Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="RegisterObjectCreationCallback">
      <MemberSignature Language="C#" Value="public static void RegisterObjectCreationCallback (System.Runtime.InteropServices.ObjectCreationDelegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObjectCreationCallback(class System.Runtime.InteropServices.ObjectCreationDelegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObjectCreationCallback (callback As ObjectCreationDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObjectCreationCallback(System::Runtime::InteropServices::ObjectCreationDelegate ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Runtime.InteropServices.ObjectCreationDelegate" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see langword="delegate" /> al que se llama en lugar de <see langword="CoCreateInstance" />.</param>
        <summary>Registra un <see langword="delegate" /> al que se llama cuando una instancia de un tipo administrado que se extienda a partir de un tipo no administrado necesite asignar el objeto no administrado agregado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto `delegate` asigna y agrega el objeto no administrado y se llama en lugar de `CoCreateInstance`. Esto `delegate` debe estar registrado en el contexto de la `static` inicializador de clase para el que se realizarán las devoluciones de llamada.  
  
 Solo una clase en una jerarquía debe registrar un `delegate` devolución de llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>