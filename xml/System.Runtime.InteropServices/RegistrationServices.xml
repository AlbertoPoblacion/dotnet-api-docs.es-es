<Type Name="RegistrationServices" FullName="System.Runtime.InteropServices.RegistrationServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c4a3387b479195534d60b638470c2a154b71f8e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479969" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistrationServices : System.Runtime.InteropServices.IRegistrationServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegistrationServices extends System.Object implements class System.Runtime.InteropServices.IRegistrationServices" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.RegistrationServices" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistrationServices&#xA;Implements IRegistrationServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationServices : System::Runtime::InteropServices::IRegistrationServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.IRegistrationServices</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("475e398f-8afa-43a7-a3be-f4ef8d6787c9")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona un conjunto de servicios para registrar y anular el registro de ensamblados administrados para utilizarlos desde COM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Registro es necesario cuando los clientes COM que se usan los objetos dentro de un ensamblado. El [Regasm.exe (herramienta de registro de ensamblados)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md) y [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] usar métodos expuestos por la <xref:System.Runtime.InteropServices.RegistrationServices> clase para agregar o quitar entradas de registro que habilitan COM para los ensamblados administrados.  
  
 Puede utilizar los métodos siguientes para ayudarle a preparar un archivo de registro:  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly%2A>  
  
-   <xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A>  
  
 Aunque estos métodos ayudan a recopilar la información que se usará en un archivo de registro, no generan realmente un archivo de registro. En su lugar, puede usar el [Regasm.exe (herramienta de registro de ensamblados)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md) herramienta con el `/regfile` opción para realizar esta tarea. <xref:System.Runtime.InteropServices.RegistrationServices> métodos no se pueden exportar y registrar una biblioteca de tipos. Para exportar y registrar una biblioteca de tipos, puede usar el [Regasm.exe (herramienta de registro de ensamblados)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md) herramienta y la [Tlbexp.exe (exportador de la biblioteca de tipos)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) herramienta.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.RegistrationServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedCategoryGuid">
      <MemberSignature Language="C#" Value="public virtual Guid GetManagedCategoryGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetManagedCategoryGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedCategoryGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Guid GetManagedCategoryGuid();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el GUID de la categoría COM que contiene las clases administradas.</summary>
        <returns>GUID de la categoría COM que contiene las clases administradas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgIdForType">
      <MemberSignature Language="C#" Value="public virtual string GetProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetProgIdForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo que se corresponde con el identificador de programa solicitado.</param>
        <summary>Obtiene el identificador de programa COM del tipo especificado.</summary>
        <returns>Identificador de programa del tipo especificado.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegistrableTypesInAssembly">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRegistrableTypesInAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRegistrableTypesInAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">Ensamblado donde se buscan las clases.</param>
        <summary>Recupera una lista de las clases de un ensamblado que se registrarían mediante una llamada a <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" />.</summary>
        <returns>Matriz de <see cref="T:System.Type" /> que contiene una lista de clases de <paramref name="assembly" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="assembly" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public virtual bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterAssembly(class System.Reflection.Assembly assembly, valuetype System.Runtime.InteropServices.AssemblyRegistrationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RegisterAssembly(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::AssemblyRegistrationFlags flags);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.AssemblyRegistrationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">Ensamblado que se va a registrar.</param>
        <param name="flags">Valor de <see cref="T:System.Runtime.InteropServices.AssemblyRegistrationFlags" /> que indica cualquier configuración especial utilizada al registrar <c>assembly</c>.</param>
        <summary>Registra las clases del ensamblado administrado para habilitar la creación desde COM.</summary>
        <returns>
          Es <see langword="true" /> si <paramref name="assembly" /> contiene tipos que se han registrado correctamente; es <see langword="false" /> si el ensamblado contiene tipos que no se pueden seleccionar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `RegisterAssembly` Agrega las entradas del Registro adecuados para los tipos en el ensamblado especificado. Este método también llama a las funciones de registro se encuentran en el ensamblado.  
  
 Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=nameWithType> para obtener un ensamblado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nombre completo de <paramref name="assembly" /> es <see langword="null" />.  
  
 O bien  
  
 Un método marcado con <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> no es <see langword="static" />.  
  
 O bien  
  
 Hay más de un método marcado con <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> en un nivel determinado de la jerarquía.  
  
 O bien  
  
 La firma del método marcado con <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" /> no es válida.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">Una función de registro personalizada definida por el usuario (marcada con el atributo <see cref="T:System.Runtime.InteropServices.ComRegisterFunctionAttribute" />) produce una excepción.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterTypeForComClients">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra el tipo especificado con COM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que usar invocación de plataforma para llamar a la no administrada `CoRegisterClassObject` y `CoDisconnectObject` métodos de registro y anulación del registro de objetos COM no se admite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual void RegisterTypeForComClients (Type type, ref Guid g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterTypeForComClients(class System.Type type, valuetype System.Guid&amp; g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterTypeForComClients(Type ^ type, Guid % g);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="g" Type="System.Guid&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="type">Tipo <see cref="T:System.Type" /> que se va a registrar para utilizarlo desde COM.</param>
        <param name="g">Identificador <see cref="T:System.Guid" /> que se utiliza para registrar el tipo especificado.</param>
        <summary>Registra el tipo especificado con COM utilizando el identificador GUID especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es equivalente a llamar a `CoRegisterClassObject` en COM. El <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A> método no es atómico y puede provocar resultados imprevisibles cuando se utiliza en un contexto multiproceso.  
  
 En la versión 2.0 y versiones posterior, use la <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> método para anular el registro de un tipo en COM.  
  
 Tenga en cuenta que usar invocación de plataforma para llamar a la no administrada `CoRegisterClassObject` y `CoDisconnectObject` métodos de registro y anulación del registro de objetos COM no se admite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">No se puede crear el parámetro <paramref name="type" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual int RegisterTypeForComClients (Type type, System.Runtime.InteropServices.RegistrationClassContext classContext, System.Runtime.InteropServices.RegistrationConnectionType flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RegisterTypeForComClients(class System.Type type, valuetype System.Runtime.InteropServices.RegistrationClassContext classContext, valuetype System.Runtime.InteropServices.RegistrationConnectionType flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int RegisterTypeForComClients(Type ^ type, System::Runtime::InteropServices::RegistrationClassContext classContext, System::Runtime::InteropServices::RegistrationConnectionType flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="classContext" Type="System.Runtime.InteropServices.RegistrationClassContext" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.RegistrationConnectionType" />
      </Parameters>
      <Docs>
        <param name="type">Objeto <see cref="T:System.Type" /> que se va a registrar para utilizarlo desde COM.</param>
        <param name="classContext">Uno de los valores de <see cref="T:System.Runtime.InteropServices.RegistrationClassContext" /> que indica el contexto en el que se ejecutará el código ejecutable.</param>
        <param name="flags">Uno de los valores de <see cref="T:System.Runtime.InteropServices.RegistrationConnectionType" /> que especifica cómo se realizan las conexiones con el objeto de clase.</param>
        <summary>Registra el tipo especificado con COM utilizando el contexto de ejecución especificado y tipo de conexión.</summary>
        <returns>Entero que representa un valor de cookie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es equivalente a llamar a `CoRegisterClassObject` en COM. El <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A> método no es atómico y puede provocar resultados imprevisibles cuando se utiliza en un contexto multiproceso.  
  
 En la versión 2.0 y versiones posterior de .NET Framework, use la <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> método para anular el registro de un tipo en COM.  
  
 Tenga en cuenta que usar invocación de plataforma para llamar a la no administrada `CoRegisterClassObject` y `CoDisconnectObject` métodos de registro y anulación del registro de objetos COM no se admite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">No se puede crear el parámetro <paramref name="type" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="TypeRepresentsComType">
      <MemberSignature Language="C#" Value="public virtual bool TypeRepresentsComType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TypeRepresentsComType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TypeRepresentsComType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo que se va a comprobar si es un tipo COM.</param>
        <summary>Indica si un tipo se ha marcado con <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> o deriva de un tipo marcado con <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> y comparte el mismo GUID que el elemento primario.</summary>
        <returns>
          Es <see langword="true" /> si un tipo se ha marcado con <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> o deriva de un tipo marcado con <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> y comparte el mismo GUID que el elemento primario; de lo contrario es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeRequiresRegistration">
      <MemberSignature Language="C#" Value="public virtual bool TypeRequiresRegistration (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TypeRequiresRegistration(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TypeRequiresRegistration(Type ^ type);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo cuyos requisitos de registro para COM se van a comprobar.</param>
        <summary>Determina si el tipo especificado requiere que se realice un registro.</summary>
        <returns>
          Es <see langword="true" /> si el tipo debe registrarse para que se utilice desde COM; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAssembly">
      <MemberSignature Language="C#" Value="public virtual bool UnregisterAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnregisterAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool UnregisterAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">Ensamblado cuyo registro se va a anular.</param>
        <summary>Anula el registro de las clases en un ensamblado administrado.</summary>
        <returns>
          Es <see langword="true" /> si <paramref name="assembly" /> contiene tipos cuyo registro se ha anulado correctamente; es <see langword="false" /> si el ensamblado contiene tipos que no se pueden seleccionar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `UnregisterAssembly` Quita las entradas del registro para los tipos en el ensamblado especificado previamente agregado por <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>. Este método también llama a las funciones de anulación del registro se encuentran en el ensamblado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nombre completo de <paramref name="assembly" /> es <see langword="null" />.  
  
 O bien  
  
 Un método marcado con <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> no es <see langword="static" />.  
  
 O bien  
  
 Hay más de un método marcado con <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> en un nivel determinado de la jerarquía.  
  
 O bien  
  
 La firma del método marcado con <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> no es válida.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">Una función de anulación de registro personalizada definida por el usuario (marcada con el atributo <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />) produce una excepción.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTypeForComClients">
      <MemberSignature Language="C#" Value="public virtual void UnregisterTypeForComClients (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterTypeForComClients(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterTypeForComClients (cookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterTypeForComClients(int cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">El valor de cookie devuelto por una llamada anterior a la sobrecarga del método <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" />.</param>
        <summary>Quita las referencias a un tipo registrado con el método <see cref="M:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenga en cuenta que usar invocación de plataforma para llamar a la no administrada `CoRegisterClassObject` y `CoDisconnectObject` métodos para registrar y anular el registro de los objetos COM no se admite.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiere plena confianza para el llamador inmediato. Este miembro no puede usarse por código de confianza parcial o transparente.</permission>
      </Docs>
    </Member>
  </Members>
</Type>