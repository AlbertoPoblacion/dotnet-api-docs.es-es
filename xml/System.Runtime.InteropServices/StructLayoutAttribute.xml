<Type Name="StructLayoutAttribute" FullName="System.Runtime.InteropServices.StructLayoutAttribute">
  <TypeSignature Language="C#" Value="public sealed class StructLayoutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StructLayoutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.StructLayoutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StructLayoutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructLayoutAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8e7d9-101">Le permite controlar el diseño físico de los campos de datos de una clase o una estructura en la memoria.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-101">Lets you control the physical layout of the data fields of a class or structure in memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-102">Este atributo se puede aplicar a clases o estructuras.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-102">You can apply this attribute to classes or structures.</span></span>  
  
 <span data-ttu-id="8e7d9-103">Common language runtime controla el diseño físico de los campos de datos de una clase o estructura en la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-103">The common language runtime controls the physical layout of the data fields of a class or structure in managed memory.</span></span> <span data-ttu-id="8e7d9-104">Sin embargo, si desea pasar el tipo a código no administrado, puede usar el <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo para controlar el diseño del tipo no administrado.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-104">However, if you want to pass the type to unmanaged code, you can use the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to control the unmanaged layout of the type.</span></span> <span data-ttu-id="8e7d9-105">Utilizar el atributo con <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> para forzar que los miembros que se disponen secuencialmente en el orden en que aparecen.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-105">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="8e7d9-106">Para, <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> controla tanto el diseño en la memoria administrada y el diseño de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-106">For , <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> controls both the layout in managed memory and the layout in unmanaged memory.</span></span> <span data-ttu-id="8e7d9-107">Para los tipos no bits/bytes, que controla el diseño cuando la clase o estructura, se calculan las referencias a código no administrado, pero no controla el diseño en la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-107">For non-blittable types, it controls the layout when the class or structure is marshaled to unmanaged code, but does not control the layout in managed memory.</span></span> <span data-ttu-id="8e7d9-108">Utilizar el atributo con <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> para controlar la posición exacta de cada miembro de datos.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-108">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> to control the precise position of each data member.</span></span> <span data-ttu-id="8e7d9-109">Esto afecta al diseño administrado y no administrado, para los tipos bits/bytes y no bits/bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-109">This affects both managed and unmanaged layout, for both blittable and non-blittable types.</span></span> <span data-ttu-id="8e7d9-110">Usar <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> requiere el uso de la <xref:System.Runtime.InteropServices.FieldOffsetAttribute> atributo para indicar la posición de cada campo dentro del tipo.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-110">Using <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> requires that you use the <xref:System.Runtime.InteropServices.FieldOffsetAttribute> attribute to indicate the position of each field within the type.</span></span>  
  
 <span data-ttu-id="8e7d9-111">Los compiladores de C#, Visual Basic y C++ aplican el <xref:System.Runtime.InteropServices.LayoutKind.Sequential> valor de diseño a estructuras de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-111">C#, Visual Basic, and C++ compilers apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential> layout value to structures by default.</span></span> <span data-ttu-id="8e7d9-112">Para las clases, se debe aplicar la <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> valor explícitamente.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-112">For classes, you must apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value explicitly.</span></span> <span data-ttu-id="8e7d9-113">El [Tlbimp.exe (importador de la biblioteca de tipos)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) también se aplica el <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo; siempre se aplica el <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> cuando importa una biblioteca de tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-113">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute; it always applies the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value when it imports a type library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e7d9-114">En el ejemplo siguiente se muestra una declaración administrada de la `GetSystemTime` de función y define `MySystemTime` clase con <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> diseño.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-114">The following example demonstrates a managed declaration of the `GetSystemTime` function and defines `MySystemTime` class with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> layout.</span></span> <span data-ttu-id="8e7d9-115">`GetSystemTime` Obtiene la hora del sistema y se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-115">`GetSystemTime` gets the system time and prints to the console.</span></span>  
  
 [!code-cpp[StructLayoutAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/StructLayoutAttribute/CPP/structlayoutattribute.cpp#1)]
 [!code-csharp[StructLayoutAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/StructLayoutAttribute/CS/structlayoutattribute.cs#1)]
 [!code-vb[StructLayoutAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StructLayoutAttribute/VB/structlayoutattribute.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e7d9-116">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-116">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (short layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (layoutKind As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(short layoutKind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="8e7d9-117">Entero de 16 bits que representa uno de los valores de <see cref="T:System.Runtime.InteropServices.LayoutKind" /> que especifica cómo debe organizarse la clase o la estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-117">A 16-bit integer that represents one of the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> values that specifes how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="8e7d9-118">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> con el miembro de enumeración <see cref="T:System.Runtime.InteropServices.LayoutKind" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-118">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-119">Este constructor toma un entero subyacente de 16 bits que representa cada uno de ellos <xref:System.Runtime.InteropServices.LayoutKind> miembro de enumeración.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-119">This constructor takes an underlying 16-bit integer that represents each <xref:System.Runtime.InteropServices.LayoutKind> enumeration member.</span></span> <span data-ttu-id="8e7d9-120">El [Tlbimp.exe (importador de la biblioteca de tipos)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) utiliza este constructor.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-120">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (System.Runtime.InteropServices.LayoutKind layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.LayoutKind layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(System::Runtime::InteropServices::LayoutKind layoutKind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Runtime.InteropServices.LayoutKind" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="8e7d9-121">Uno de los valores de enumeración que especifica cómo debe organizarse la clase o la estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-121">One of the enumeration values that specifes how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="8e7d9-122">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> con el miembro de enumeración <see cref="T:System.Runtime.InteropServices.LayoutKind" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-122">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-123">Para el código legible que es menos propenso a errores, siempre que utilice este constructor.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-123">For readable code that is less prone to error, always use this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e7d9-124">Indica si las referencias de los campos de datos de cadena dentro de la clase deben calcularse como <see langword="LPWSTR" /> o <see langword="LPSTR" /> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-124">Indicates whether string data fields within the class should be marshaled as <see langword="LPWSTR" /> or <see langword="LPSTR" /> by default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-125">Si el `CharSet` campo está establecido en <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>, todos los argumentos de cadena se convierten en caracteres Unicode (`LPWSTR`) antes de pasarlos a la implementación no administrada.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-125">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>, all string arguments are converted to Unicode characters (`LPWSTR`) before they are passed to the unmanaged implementation.</span></span> <span data-ttu-id="8e7d9-126">Si el campo está establecido en <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, las cadenas se convierten en cadenas ANSI (`LPSTR`).</span><span class="sxs-lookup"><span data-stu-id="8e7d9-126">If the field is set to <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, the strings are converted to ANSI strings (`LPSTR`).</span></span> <span data-ttu-id="8e7d9-127">Si el `CharSet` campo se establece en <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType>, la conversión depende de la plataforma (ANSI en Windows 98 y Windows Millennium Edition y Unicode en versiones posteriores).</span><span class="sxs-lookup"><span data-stu-id="8e7d9-127">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType>, the conversion is platform-dependent (ANSI on Windows 98 and Windows Me, and Unicode on later versions).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public int Pack;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Pack" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />
      <MemberSignature Language="VB.NET" Value="Public Pack As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Pack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e7d9-128">Controla la alineación de los campos de datos de una clase o una estructura en la memoria.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-128">Controls the alignment of data fields of a class or structure in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-129">El <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> campo controla la alineación de los campos de un tipo en la memoria.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-129">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field controls the alignment of a type's fields in memory.</span></span>  <span data-ttu-id="8e7d9-130">Afecta a ambos <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-130">It affects both <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8e7d9-131">De forma predeterminada, el valor es 0, indica que el tamaño de la plataforma actual de empaquetado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-131">By default, the value is 0, indicating the default packing size for the current platform.</span></span> <span data-ttu-id="8e7d9-132">El valor de <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> debe ser 0, 1, 2, 4, 8, 16, 32, 64 o 128:</span><span class="sxs-lookup"><span data-stu-id="8e7d9-132">The value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> must be 0, 1, 2, 4, 8, 16, 32, 64, or 128:</span></span>  
  
 <span data-ttu-id="8e7d9-133">Los campos de una instancia de tipo se alinean mediante las reglas siguientes:</span><span class="sxs-lookup"><span data-stu-id="8e7d9-133">The fields of a type instance are aligned by using the following rules:</span></span>  
  
-   <span data-ttu-id="8e7d9-134">La alineación del tipo es el tamaño de su elemento más grande (1, 2, 4, 8, etc., bytes) o el empaquetado especificado un tamaño, lo que sea menor.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-134">The alignment of the type is the size of its largest element (1, 2, 4, 8, etc., bytes) or the specified packing size, whichever is smaller.</span></span>  
  
-   <span data-ttu-id="8e7d9-135">Cada campo debe alinearse con campos de su propio tamaño (1, 2, 4, 8, etc., bytes) o la alineación del tipo, lo que sea menor.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-135">Each field must align with fields of its own size (1, 2, 4, 8, etc., bytes) or the alignment of the type, whichever is smaller.</span></span>  <span data-ttu-id="8e7d9-136">Dado que la alineación predeterminada del tipo es el tamaño de su elemento más grande, que es mayor o igual que todas las demás longitudes de campo, esto suele significar que los campos están alineados por su tamaño.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-136">Because the default alignment of the type is the size of its largest element, which is greater than or equal to all other field lengths, this usually means that fields are aligned by their size.</span></span> <span data-ttu-id="8e7d9-137">Por ejemplo, incluso si el campo más grande en un tipo es un entero de 64 bits (8 bytes) o el campo de módulo se establece en 8, <xref:System.Byte> campos alineación en límites de 1 byte, <xref:System.Int16> campos alineación en límites de 2 bytes, y <xref:System.Int32> campos alineación en límites de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-137">For example, even if the largest field in a type is a 64-bit (8-byte) integer or the Pack field is set to 8, <xref:System.Byte> fields align on 1-byte boundaries, <xref:System.Int16> fields align on 2-byte boundaries, and <xref:System.Int32> fields align on 4-byte boundaries.</span></span>  
  
-   <span data-ttu-id="8e7d9-138">Se agregaron bytes de relleno entre los campos para satisfacer los requisitos de alineación.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-138">Padding is added between fields to satisfy the alignment requirements.</span></span>  
  
 <span data-ttu-id="8e7d9-139">Por ejemplo, considere la siguiente estructura, que consta de dos <xref:System.Byte> campos y uno <xref:System.Int32> campo, cuando se usa con varios valores para el <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> campo.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-139">For example, consider the following structure, which consists of two <xref:System.Byte> fields and one <xref:System.Int32> field, when it is used with various values for the <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex0.cs#1)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="8e7d9-140">Para compilar correctamente el ejemplo de C#, debe especificar el `/unsafe` modificador del compilador.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-140">To successfully compile the C# examples, you must specify the `/unsafe` compiler switch.</span></span>  
  
 <span data-ttu-id="8e7d9-141">Si especifica el tamaño de empaquetado predeterminado, el tamaño de la estructura tiene 8 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-141">If you specify the default packing size, the size of the structure is 8 bytes.</span></span> <span data-ttu-id="8e7d9-142">Los dos bytes ocupan los primeros dos bytes de memoria, como bytes deben estar en línea en los límites de un byte.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-142">The two bytes occupy the first two bytes of memory, because bytes must align on one-byte boundaries.</span></span> <span data-ttu-id="8e7d9-143">Dado que la alineación predeterminada del tipo es de 4 bytes, que es el tamaño de sus campos más grandes, `i3`, hay dos bytes de relleno seguido por el campo de número entero.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-143">Because the default alignment of the type is 4 bytes, which is the size of its largest fields, `i3`, there are two bytes of padding followed by the integer field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex1.cs#2)]  
  
 <span data-ttu-id="8e7d9-144">Si <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> está establecido en 2, el tamaño de la estructura es 6 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-144">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 6 bytes.</span></span> <span data-ttu-id="8e7d9-145">Como antes, los dos bytes que ocupan los primeros dos bytes de memoria.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-145">As before, the two bytes occupy the first two bytes of memory.</span></span> <span data-ttu-id="8e7d9-146">Como campos ahora alinearán en límites de 2 bytes, no hay ningún relleno entre el segundo byte y el entero.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-146">Because fields now align on 2-byte boundaries, there is no padding between the second byte and the integer.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex2.cs#3)]  
  
 <span data-ttu-id="8e7d9-147">Si <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> se establece en 4, el tamaño de la estructura es el mismo que en el caso predeterminado, donde alineación del tipo definido por el tamaño de su campo más grande, `i3`, que es 4.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-147">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 4, the size of the structure is the same as in the default case, where the type's alignment was defined by the size of its largest field, `i3`, which is 4.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex3.cs#4)]  
  
 <span data-ttu-id="8e7d9-148">Si <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> está establecido en 8, el tamaño de la estructura sigue siendo igual que en el valor predeterminado de casos, dado que el `i3` campo alinea en un límite de 4 bytes, que es menor que el límite de 8 bytes especificado por el campo de módulo.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-148">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the still same as in the default case, because the `i3` field aligns on a 4-byte boundary, which is smaller than the 8-byte boundary specified by the Pack field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex4.cs#5)]  
  
 <span data-ttu-id="8e7d9-149">He aquí otro ejemplo, considere la siguiente estructura, que consta de campos de dos bytes, el campo de un entero de 32 bits con signo, una matriz de byte único elemento y un valor decimal.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-149">To take another example, consider the following structure, which consists of two byte fields, one 32-bit signed integer field, one single-element byte array, and a decimal value.</span></span> <span data-ttu-id="8e7d9-150">Con el tamaño de empaquetado predeterminado, el tamaño de la estructura es 28 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-150">With the default packing size, the size of the structure is 28 bytes.</span></span> <span data-ttu-id="8e7d9-151">Los dos bytes ocupan los primeros dos bytes de memoria, seguido de dos bytes de relleno, seguido por el número entero.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-151">The two bytes occupy the first two bytes of memory, followed by two bytes of padding, followed by the integer.</span></span> <span data-ttu-id="8e7d9-152">A continuación figura la matriz de un byte, seguida de tres bytes de relleno.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-152">Next is the one-byte array, followed by three bytes of padding.</span></span> <span data-ttu-id="8e7d9-153">Por último, el <xref:System.Decimal> campo, d5, se alinea en un límite de 4 bytes porque un valor decimal se compone de cuatro <xref:System.Int32> campos, por lo que su alineación se basa en el tamaño de la mayor de sus campos en lugar de en el tamaño de la <xref:System.Decimal> estructura como un todo.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-153">Finally, the <xref:System.Decimal> field, d5, aligns on a 4-byte boundary because a decimal value consists of four <xref:System.Int32> fields, so its alignment is based on the size of the largest of its fields rather than on the size of the <xref:System.Decimal> structure as a whole.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex5.cs#6)]  
  
 <span data-ttu-id="8e7d9-154">Si <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> está establecido en 2, el tamaño de la estructura es de 24 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-154">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 24 bytes.</span></span> <span data-ttu-id="8e7d9-155">En comparación con la alineación predeterminada, se han quitado los dos bytes de relleno entre los dos bytes y el entero porque la alineación del tipo ahora está 4 en lugar de 2.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-155">In comparison with the default alignment, the two bytes of padding between the two bytes and the integer have been removed because the type's alignment is now 4 rather than 2.</span></span> <span data-ttu-id="8e7d9-156">Y los tres bytes de relleno después `a4` se han reemplazado por un byte de relleno, ya que `d5` ahora se alinea en un límite de 2 bytes en lugar de un límite de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-156">And the three bytes of padding after `a4` have been replaced by one byte of padding, since `d5` now aligns on a 2-byte boundary rather than a 4-byte boundary.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex6.cs#7)]  
  
 <span data-ttu-id="8e7d9-157">Si <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> está establecido en 8, el tamaño de la estructura es el mismo que en el caso predeterminado, porque todos los requisitos de alineación de esta estructura están inferior a 8.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-157">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the same as in the default case, because all the alignment requirements in this structure are less than 8.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex7.cs#8)]  
  
 <span data-ttu-id="8e7d9-158">El <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> campo se utiliza con frecuencia cuando se exportan las estructuras durante el disco y las operaciones de escritura de la red.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-158">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field is frequently used when structures are exported during disk and network write operations.</span></span> <span data-ttu-id="8e7d9-159">El campo también se suele usar durante la plataforma de invocación y las operaciones de interoperabilidad.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-159">The field is also frequently used during platform invoke and interop operations.</span></span>  
  
 <span data-ttu-id="8e7d9-160">En ocasiones, el campo se usa para reducir los requisitos de memoria, que produce un tamaño de empaquetado más estricto.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-160">Occasionally, the field is used to reduce memory requirements by producing a tighter packing size.</span></span> <span data-ttu-id="8e7d9-161">Sin embargo, este uso requiere una consideración cuidadosa de restricciones de hardware reales y realmente puede degradar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-161">However, this usage requires careful consideration of actual hardware constraints, and may actually degrade performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Size" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Size" />
      <MemberSignature Language="VB.NET" Value="Public Size As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Size;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e7d9-162">Indica el tamaño absoluto de la clase o estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-162">Indicates the absolute size of the class or structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7d9-163">Este campo debe ser igual o mayor que el tamaño total, en bytes, de los miembros de la clase o estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-163">This field must be equal or greater than the total size, in bytes, of the members of the class or structure.</span></span> <span data-ttu-id="8e7d9-164">Este campo es principalmente para los autores de compiladores que desean extender la memoria ocupada por una estructura para el acceso directo y no administrado.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-164">This field is primarily for compiler writers who want to extend the memory occupied by a structure for direct, unmanaged access.</span></span> <span data-ttu-id="8e7d9-165">Por ejemplo, puede usar este campo cuando se trabaja con uniones que no están representadas directamente en metadatos.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-165">For example, you can use this field when working with unions that are not represented in metadata directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.LayoutKind Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.LayoutKind Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.StructLayoutAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As LayoutKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::LayoutKind Value { System::Runtime::InteropServices::LayoutKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e7d9-166">Obtiene el valor de <see cref="T:System.Runtime.InteropServices.LayoutKind" /> que especifica la forma en que está organizada la clase o estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-166">Gets the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> value that specifies how the class or structure is arranged.</span></span></summary>
        <value><span data-ttu-id="8e7d9-167">Uno de los valores de enumeración que especifica cómo se organiza la clase o la estructura.</span><span class="sxs-lookup"><span data-stu-id="8e7d9-167">One of the enumeration values that specifies how the class or structure is arranged.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>