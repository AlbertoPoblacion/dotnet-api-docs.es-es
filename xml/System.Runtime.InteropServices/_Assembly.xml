<Type Name="_Assembly" FullName="System.Runtime.InteropServices._Assembly">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39657d58b49ae78bfde43ae0d91e335f0dca15e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Assembly" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Assembly" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Assembly" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Assembly" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Assembly" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2F1A-384A-BC52-FDE93C215C5B")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Assembly))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="63559-101">Expone los miembros públicos de la clase <see cref="T:System.Reflection.Assembly" /> a código no administrado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="63559-101">Exposes the public members of the <see cref="T:System.Reflection.Assembly" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-102">Esta interfaz es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-103">Esta interfaz conserva el orden de vtable de la <xref:System.Reflection.Assembly?displayProperty=nameWithType> clase miembros que pueden tener acceso a objetos COM no administrados.</span><span class="sxs-lookup"><span data-stu-id="63559-103">This interface preserves the vtable order of the <xref:System.Reflection.Assembly?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.Assembly" />
  </Docs>
  <Members>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-104">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.CodeBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.CodeBase" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-105">Ubicación del ensamblado tal y como se especificó originalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-105">The location of the assembly as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-106">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-106">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-107">El <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> propiedad obtiene la ubicación del ensamblado tal y como se especificó originalmente, por ejemplo, en un <xref:System.Reflection.AssemblyName> objeto.</span><span class="sxs-lookup"><span data-stu-id="63559-107">The <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property gets the location of the assembly as specified originally, for example, in an <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.CodeBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-108">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.CreateInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-108">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-109">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-109">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-110">El <xref:System.Reflection.Assembly.CreateInstance%2A> métodos buscar un tipo de este ensamblado y crear una instancia de dicho tipo mediante el activador del sistema.</span><span class="sxs-lookup"><span data-stu-id="63559-110">The <xref:System.Reflection.Assembly.CreateInstance%2A> methods locate a type from this assembly and create an instance of it using the system activator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.CreateInstance" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="63559-111">
            <see cref="P:System.Type.FullName" /> del tipo que se va a localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-111">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-112">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-112">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-113">Instancia de <see cref="T:System.Object" /> que representa el tipo, con los atributos de activación, enlazador, referencia cultural y argumentos, establecido en <see langword="null" /> y <see cref="T:System.Reflection.BindingFlags" /> establecido en Public o Instance, o <see langword="null" /> si no se encuentra el parámetro <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-113">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-114">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-114">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-115">El <xref:System.Reflection.Assembly.CreateInstance%2A> método ubica el tipo especificado en este ensamblado y crea una instancia de dicho tipo mediante el activador del sistema, con búsqueda de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="63559-115">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="63559-116">
            <see cref="P:System.Type.FullName" /> del tipo que se va a localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-116">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="63559-117">Es <see langword="true" /> para no hacer distinción entre mayúsculas y minúsculas en el nombre del tipo; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-117">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-118">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-118">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-119">Instancia de <see cref="T:System.Object" /> que representa el tipo, con los atributos de activación, enlazador, referencia cultural y argumentos, establecido en <see langword="null" /> y <see cref="T:System.Reflection.BindingFlags" /> establecido en Public o Instance, o <see langword="null" /> si no se encuentra el parámetro <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-119">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-120">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-120">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-121">El <xref:System.Reflection.Assembly.CreateInstance%2A> método ubica el tipo especificado en este ensamblado y crea una instancia del mismo mediante el activador del sistema, con búsqueda de mayúsculas y minúsculas opcional.</span><span class="sxs-lookup"><span data-stu-id="63559-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="63559-122">
            <see cref="P:System.Type.FullName" /> del tipo que se va a localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-122">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="63559-123">Es <see langword="true" /> para no hacer distinción entre mayúsculas y minúsculas en el nombre del tipo; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-123">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="63559-124">Máscara de bits que afecta cómo se realiza la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-124">A bitmask that affects how the search is conducted.</span>
          </span>
          <span data-ttu-id="63559-125">Este valor es una combinación de marcadores de bits de <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-125">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="63559-126">Objeto que habilita el enlace, la conversión de tipos de argumentos, las llamadas a miembros y la recuperación de objetos <see langword="MemberInfo" /> mediante reflexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-126">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="63559-127">Si <c>binder</c> es <see langword="null" />, se usará el enlazador predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-127">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="63559-128">Matriz de tipo <see langword="Object" /> que contiene los argumentos que se pasarán al constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-128">An array of type <see langword="Object" /> containing the arguments to be passed to the constructor.</span>
          </span>
          <span data-ttu-id="63559-129">Esta matriz de argumentos debe coincidir en número, orden y tipo con los parámetros del constructor al que se va a invocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-129">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="63559-130">Si se quiere el constructor predeterminado, <c>args</c> debe ser una matriz vacía o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-130">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="63559-131">Instancia de <see langword="CultureInfo" /> usada para regir la conversión de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-131">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="63559-132">Si es <see langword="null" />, se utiliza <see langword="CultureInfo" /> para el subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-132">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="63559-133">(Esto es necesario para convertir un objeto <see langword="String" /> que representa 1000 en un valor <see langword="Double" />, por ejemplo, dado que 1000 se representa de maneras diferentes según la referencia cultural).</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-133">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="63559-134">Matriz de tipo <see langword="Object" /> que contiene uno o más atributos de activación que pueden participar en la activación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-134">An array of type <see langword="Object" /> containing one or more activation attributes that can participate in the activation.</span>
          </span>
          <span data-ttu-id="63559-135">Un ejemplo de atributo de activación es:</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-135">An example of an activation attribute is:</span>
          </span>
          <span data-ttu-id="63559-136">URLAttribute(http://hostname/appname/objectURI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-136">URLAttribute(http://hostname/appname/objectURI)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-137">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-137">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-138">Instancia de <see langword="Object" /> que representa al tipo y que coincide con los criterios especificados o <see langword="null" /> si no encuentra <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-138">An instance of <see langword="Object" /> representing the type and matching the specified criteria, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-139">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-139">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-140">El <xref:System.Reflection.Assembly.CreateInstance%2A> método ubica el tipo especificado en este ensamblado y crea una instancia del mismo mediante el activador del sistema, con búsqueda de mayúsculas y minúsculas opcional y con la referencia cultural especificada, los argumentos y los atributos de enlace y activación.</span><span class="sxs-lookup"><span data-stu-id="63559-140">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-141">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.EntryPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-141">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EntryPoint" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-142">Objeto <see cref="T:System.Reflection.MethodInfo" /> que representa al punto de entrada de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-142">A <see cref="T:System.Reflection.MethodInfo" /> object that represents the entry point of this assembly.</span>
          </span>
          <span data-ttu-id="63559-143">Si no se encuentra ningún punto de entrada (por ejemplo, el ensamblado es una DLL), se devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-143">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-144">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-144">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-145">El <xref:System.Reflection.Assembly.EntryPoint%2A> propiedad obtiene el punto de entrada de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-145">The <xref:System.Reflection.Assembly.EntryPoint%2A> property gets the entry point of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EntryPoint" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="63559-146">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see cref="T:System.Object" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-146">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-147">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-147">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-148">
            <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-148">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-149">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-149">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-150">El <xref:System.Object.Equals%2A> método determina si el texto especificado <xref:System.Object> es igual al actual <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="63559-150">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-151">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.EscapedCodeBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-151">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-152">Identificador uniforme de recursos (URI) con caracteres de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-152">A Uniform Resource Identifier (URI) with escape characters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-153">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-153">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-154">El <xref:System.Reflection.Assembly.EscapedCodeBase%2A> propiedad obtiene el identificador URI, incluidos los caracteres de escape, que representa el código base.</span><span class="sxs-lookup"><span data-stu-id="63559-154">The <xref:System.Reflection.Assembly.EscapedCodeBase%2A> property gets the URI, including escape characters, that represents the codebase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EscapedCodeBase" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-155">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.Evidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-155">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Evidence" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-156">
            <see cref="T:System.Security.Policy.Evidence" /> correspondiente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-156">An <see cref="T:System.Security.Policy.Evidence" /> object for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-157">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-157">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-158">El <xref:System.Reflection.Assembly.Evidence%2A> propiedad obtiene la evidencia para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-158">The <xref:System.Reflection.Assembly.Evidence%2A> property gets the evidence for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-159">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-159">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-160">Nombre para mostrar del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-160">The display name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-161">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-161">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-162">El <xref:System.Reflection.Assembly.FullName%2A> propiedad obtiene el nombre para mostrar del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-162">The <xref:System.Reflection.Assembly.FullName%2A> property gets the display name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.FullName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-163">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-163">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-164">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-164">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-165">El <xref:System.Reflection.Assembly.GetCustomAttributes%2A> métodos obtienen los atributos personalizados para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-165">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> methods get the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetCustomAttributes" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="63559-166">Este argumento se omite para objetos de tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-166">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-167">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-167">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-168">Matriz de tipo <see langword="Object" /> que contiene los atributos personalizados de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-168">An array of type <see langword="Object" /> containing the custom attributes for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-169">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-169">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-170">El <xref:System.Reflection.Assembly.GetCustomAttributes%2A> método obtiene todos los atributos personalizados para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-170">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="63559-171">
            <see cref="T:System.Type" /> para el que se deben devolver los atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-171">The <see cref="T:System.Type" /> for which the custom attributes are to be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="63559-172">Este argumento se omite para objetos de tipo <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-172">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-173">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-173">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-174">Matriz de tipo <see cref="T:System.Object" /> que contiene los atributos personalizados de este ensamblado tal y como lo especifica <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-174">An array of type <see cref="T:System.Object" /> containing the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-175">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-175">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-176">El <xref:System.Reflection.Assembly.GetCustomAttributes%2A> método obtiene todos los atributos personalizados para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-176">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-177">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="M:System.Reflection.Assembly.GetExportedTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-177">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-178">Matriz de objetos <see cref="T:System.Type" /> que representan los tipos definidos en este ensamblado y que se pueden ver desde fuera del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-178">An array of <see cref="T:System.Type" /> objects that represent the types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-179">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-179">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-180">El <xref:System.Reflection.Assembly.GetExportedTypes%2A> propiedad obtiene los tipos exportados definidos en este ensamblado que son visibles fuera del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-180">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> property gets the exported types defined in this assembly that are visible outside the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetExportedTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-181">Nombre del archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-181">The name of the specified file.</span>
          </span>
          <span data-ttu-id="63559-182">No incluya la ruta al archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-182">Do not include the path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-183">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetFile(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-183">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-184">
            <see cref="T:System.IO.FileStream" /> para el archivo especificado o <see langword="null" /> si no se encuentra el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-184">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" /> if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-185">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-185">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-186">El <xref:System.Reflection.Assembly.GetFile%2A> método obtiene un <xref:System.IO.FileStream> para el archivo especificado en la tabla de archivos del manifiesto de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-186">The <xref:System.Reflection.Assembly.GetFile%2A> method gets a <xref:System.IO.FileStream> for the specified file in the file table of the manifest of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFile(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-187">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetFiles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-187">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetFiles" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-188">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-188">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-189">El <xref:System.Reflection.Assembly.GetFiles%2A> métodos obtienen los archivos de la tabla de archivos del manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-189">The <xref:System.Reflection.Assembly.GetFiles%2A> methods get the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-190">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetFiles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-190">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-191">Matriz de objetos <see cref="T:System.IO.FileStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-191">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-192">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-192">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-193">El <xref:System.Reflection.Assembly.GetFiles%2A> método obtiene los archivos en la tabla de archivos del manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-193">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="63559-194">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-194">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-195">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-195">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-196">Matriz de objetos <see cref="T:System.IO.FileStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-196">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-197">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-198">El <xref:System.Reflection.Assembly.GetFiles%2A> método obtiene los archivos en la tabla de archivos del manifiesto del ensamblado, especificando si deben incluirse módulos de recursos.</span><span class="sxs-lookup"><span data-stu-id="63559-198">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-199">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-199">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-200">Código hash para el objeto <see cref="T:System.Object" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-200">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-201">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-201">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-202">El <xref:System.Object.GetHashCode%2A> método actúa como función hash para un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="63559-202">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="63559-203"><xref:System.Object.GetHashCode%2A> es apto para el uso en algoritmos hash y estructuras de datos como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="63559-203"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-204">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-204">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-205">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-205">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-206">El <xref:System.Reflection.Assembly.GetLoadedModules%2A> métodos obtienen todos los módulos cargados que forman parte de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-206">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> methods get all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-207">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetLoadedModules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-207">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-208">Matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-208">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-209">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-209">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-210">El <xref:System.Reflection.Assembly.GetLoadedModules%2A> método obtiene todos los módulos cargados que forman parte de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-210">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="63559-211">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-211">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-212">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-212">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-213">Matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-213">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-214">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-214">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-215">El <xref:System.Reflection.Assembly.GetLoadedModules%2A> método obtiene todos los módulos cargados que forman parte de este ensamblado, especificando si deben incluirse módulos de recursos.</span><span class="sxs-lookup"><span data-stu-id="63559-215">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="63559-216">Nombre del recurso, que distingue entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-216">The case-sensitive name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-217">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-217">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-218">Objeto <see cref="T:System.Reflection.ManifestResourceInfo" /> llenado con información sobre la topología del recurso o <see langword="null" /> si no se encuentra el recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-218">A <see cref="T:System.Reflection.ManifestResourceInfo" /> object populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-219">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-219">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-220">El <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> método devuelve información sobre cómo el recurso dado ha persistido.</span><span class="sxs-lookup"><span data-stu-id="63559-220">The <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method returns information about how the given resource has been persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-221">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-221">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-222">Matriz de tipo <see langword="String" /> que contiene los nombres de todos los recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-222">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-223">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-223">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-224">El <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> método devuelve los nombres de todos los recursos de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-224">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method returns the names of all the resources in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-225">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-225">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-226">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-226">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-227">El <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> métodos cargan el recurso del manifiesto especificado en este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-227">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> methods load the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-228">Nombre del recurso de manifiesto que se solicita, que distingue entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-228">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-229">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-229">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-230">
            <see cref="T:System.IO.Stream" /> que representa este recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-230">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-231">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-231">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-232">El <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> método carga el recurso del manifiesto especificado en este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-232">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="63559-233">Tipo cuyo espacio de nombres se usa para especificar el nombre del recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-233">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="63559-234">Nombre del recurso de manifiesto que se solicita, que distingue entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-234">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-235">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-235">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-236">
            <see cref="T:System.IO.Stream" /> que representa este recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-236">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-237">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-238">El <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> método carga el recurso del manifiesto especificado según el espacio de nombres del tipo especificado, en este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-238">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-239">Nombre del módulo que se solicita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-239">The name of the module being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-240">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetModule(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-240">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-241">Módulo que se solicita o <see langword="null" /> si no se encuentra el módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-241">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-242">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-242">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-243">El <xref:System.Reflection.Assembly.GetModule%2A> método obtiene el módulo especificado en este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-243">The <xref:System.Reflection.Assembly.GetModule%2A> method gets the specified module in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModule(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-244">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetModules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-244">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetModules" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-245">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-245">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-246">El <xref:System.Reflection.Assembly.GetModules%2A> métodos obtienen todos los módulos que forman parte de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-246">The <xref:System.Reflection.Assembly.GetModules%2A> methods get all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-247">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetModules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-247">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-248">Matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-248">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-249">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-249">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-250">El <xref:System.Reflection.Assembly.GetModules%2A> método obtiene todos los módulos que forman parte de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-250">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules" />
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="63559-251">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-251">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-252">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-252">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-253">Matriz de módulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-253">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-254">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-254">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-255">El <xref:System.Reflection.Assembly.GetModules%2A> método obtiene todos los módulos que forman parte de este ensamblado, especificando si deben incluirse módulos de recursos.</span><span class="sxs-lookup"><span data-stu-id="63559-255">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-256">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-256">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetName" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-257">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-257">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-258">El <xref:System.Reflection.Assembly.GetName%2A> métodos reciben un <xref:System.Reflection.AssemblyName> para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-258">The <xref:System.Reflection.Assembly.GetName%2A> methods get an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-259">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-259">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-260">
            <see cref="T:System.Reflection.AssemblyName" /> correspondiente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-260">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-261">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-261">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-262">El <xref:System.Reflection.Assembly.GetName%2A> método obtiene un <xref:System.Reflection.AssemblyName> para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-262">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="63559-263">
            <see langword="true" /> para establecer la propiedad <see cref="P:System.Reflection.Assembly.CodeBase" /> en la ubicación del ensamblado después de crear una instantánea; <see langword="false" /> para establecer la propiedad <see cref="P:System.Reflection.Assembly.CodeBase" /> en la ubicación original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-263">
              <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-264">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-264">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-265">
            <see cref="T:System.Reflection.AssemblyName" /> correspondiente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-265">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-266">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-266">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-267">El <xref:System.Reflection.Assembly.GetName%2A> método obtiene un <xref:System.Reflection.AssemblyName> para este ensamblado y establece el código base según lo especificado por el `copiedName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="63559-267">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly, setting the codebase as specified by the `copiedName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="63559-268">Objeto que debe llenarse con información de serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-268">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="63559-269">Contexto de destino de la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-269">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-270">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-270">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-271">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-271">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-272">El <xref:System.Reflection.Assembly.GetObjectData%2A> método obtiene información de serialización con todos los datos necesarios para crear una nueva instancia de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-272">The <xref:System.Reflection.Assembly.GetObjectData%2A> method gets serialization information with all of the data needed to reinstantiate this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="63559-273">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="63559-274">Este miembro no puede usarse por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-275">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-275">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-276">Matriz de tipo <see cref="T:System.Reflection.AssemblyName" /> que contiene todos los ensamblados a los que hace referencia este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-276">An array of type <see cref="T:System.Reflection.AssemblyName" /> containing all the assemblies referenced by this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-277">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-277">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-278">El <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> método obtiene el <xref:System.Reflection.AssemblyName> objetos para todos los ensamblados al que hace referencia este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-278">The <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method gets the <xref:System.Reflection.AssemblyName> objects for all the assemblies referenced by this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-279">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-279">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-280">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-280">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-281">El <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> métodos obtienen el ensamblado satélite.</span><span class="sxs-lookup"><span data-stu-id="63559-281">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> methods get the satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="63559-282">Referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-282">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-283">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-283">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-284">Ensamblado satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-284">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-285">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-285">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-286">El <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> método obtiene el ensamblado satélite para la referencia cultural especificada.</span><span class="sxs-lookup"><span data-stu-id="63559-286">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="63559-287">Referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-287">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="63559-288">Versión del ensamblado satélite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-288">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-289">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-289">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-290">Ensamblado satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-290">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-291">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-291">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-292">El <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> método obtiene la versión especificada del ensamblado satélite para la referencia cultural especificada.</span><span class="sxs-lookup"><span data-stu-id="63559-292">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the specified version of the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-293">Proporciona el acceso independiente de la versión de los objetos COM a los métodos <see cref="Overload:System.Reflection.Assembly.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-293">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetType" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-294">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-295">El <xref:System.Reflection.Assembly.GetType%2A> métodos reciben el <xref:System.Type> objeto que representa el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="63559-295">The <xref:System.Reflection.Assembly.GetType%2A> methods get the <xref:System.Type> object that represents the specified type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-296">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Object.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-296">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-297">Un objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-297">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-298">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-299">El <xref:System.Object.GetType%2A> método obtiene el tipo de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="63559-299">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetType" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-300">Nombre completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-300">The full name of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-301">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetType(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-301">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-302">Objeto <see cref="T:System.Type" /> que representa la clase especificada o <see langword="null" /> si no se encuentra la clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-302">A <see cref="T:System.Type" /> object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-303">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-304">El <xref:System.Reflection.Assembly.GetType%2A> método obtiene la <xref:System.Type> objeto con el nombre especificado en la instancia de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-304">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-305">Nombre completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-305">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="63559-306">
            <see langword="true" /> para producir una excepción si no se encuentra el tipo; <see langword="false" /> para devolver <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-306">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-307">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-307">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-308">Objeto <see cref="T:System.Type" /> que representa a la clase especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-308">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-309">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-309">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-310">El <xref:System.Reflection.Assembly.GetType%2A> método obtiene la <xref:System.Type> objeto con el nombre especificado en la instancia de ensamblado y, opcionalmente, produce una excepción si no se encuentra el tipo.</span><span class="sxs-lookup"><span data-stu-id="63559-310">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="63559-311">Nombre completo del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-311">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="63559-312">
            <see langword="true" /> para producir una excepción si no se encuentra el tipo; <see langword="false" /> para devolver <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-312">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="63559-313">Es <see langword="true" /> para no hacer distinción entre mayúsculas y minúsculas en el nombre del tipo; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-313">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-314">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-314">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-315">Objeto <see cref="T:System.Type" /> que representa a la clase especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-315">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-316">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-316">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-317">El <xref:System.Reflection.Assembly.GetType%2A> método obtiene la <xref:System.Type> objeto con el nombre especificado en la instancia de ensamblado, con la opción de omitir el caso y de producir una excepción si no se encuentra el tipo.</span><span class="sxs-lookup"><span data-stu-id="63559-317">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-318">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.GetTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-318">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetTypes" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-319">Matriz de tipo <see cref="T:System.Type" /> que contiene los objetos para todos los tipos definidos en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-319">An array of type <see cref="T:System.Type" /> containing objects for all the types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-320">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-320">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-321">El <xref:System.Reflection.Assembly.GetTypes%2A> método obtiene los tipos definidos en este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-321">The <xref:System.Reflection.Assembly.GetTypes%2A> method gets the types defined in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-322">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-322">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-323">Es <see langword="true" /> si el ensamblado se ha cargado desde la caché global de ensamblados; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-323">
              <see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-324">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-324">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-325">El <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> propiedad obtiene un valor que indica si el ensamblado se ha cargado desde la caché global de ensamblados.</span><span class="sxs-lookup"><span data-stu-id="63559-325">The <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> property gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="63559-326">
            <see cref="T:System.Type" /> del atributo personalizado que se va a comprobar para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-326">The <see cref="T:System.Type" /> of the custom attribute to be checked for this assembly.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="63559-327">Este argumento se omite para objetos de este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-327">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-328">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-328">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-329">
            <see langword="true" /> si está definido el atributo personalizado identificado por el <see cref="T:System.Type" /> especificado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-329">
              <see langword="true" /> if a custom attribute identified by the specified <see cref="T:System.Type" /> is defined; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-330">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-330">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-331">El <xref:System.Reflection.Assembly.IsDefined%2A> método indica si un atributo personalizado identificado por el objeto <xref:System.Type> está definido.</span><span class="sxs-lookup"><span data-stu-id="63559-331">The <xref:System.Reflection.Assembly.IsDefined%2A> method indicates whether a custom attribute identified by the specified <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63559-332">Proporciona el acceso independiente de la versión de los objetos COM a los miembros de <see cref="Overload:System.Reflection.Assembly.LoadModule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-332">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.LoadModule" /> members.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-333">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-333">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-334">El <xref:System.Reflection.Assembly.LoadModule%2A> miembros cargan el módulo interno para este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63559-334">The <xref:System.Reflection.Assembly.LoadModule%2A> members load the module internal to this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.LoadModule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="63559-335">Nombre del módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-335">Name of the module.</span>
          </span>
          <span data-ttu-id="63559-336">Debe corresponder a un nombre de archivo en el manifiesto de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-336">Must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="63559-337">Matriz de bytes que es una imagen basada en COFF que contiene un módulo emitido, o un recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-337">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-338">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-338">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-339">Módulo cargado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-339">The loaded Module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-340">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-340">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-341">El <xref:System.Reflection.Assembly.LoadModule%2A> método carga el módulo, interno para este ensamblado, con una imagen basada en Common Object File Format COFF que contiene un módulo emitido o un archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="63559-341">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="63559-342">Nombre del módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-342">Name of the module.</span>
          </span>
          <span data-ttu-id="63559-343">Debe corresponder a un nombre de archivo en el manifiesto de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-343">Must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="63559-344">Matriz de bytes que es una imagen basada en COFF que contiene un módulo emitido, o un recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-344">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="63559-345">Matriz de bytes que contiene los bytes sin formato que representan a los símbolos del módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-345">A byte array containing the raw bytes representing the symbols for the module.</span>
          </span>
          <span data-ttu-id="63559-346">Debe ser <see langword="null" /> si es un archivo de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-346">Must be <see langword="null" /> if this is a resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63559-347">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-347">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-348">Módulo cargado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-348">The loaded module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-349">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-349">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-350">El <xref:System.Reflection.Assembly.LoadModule%2A> método carga el módulo, interno para este ensamblado, con una imagen basada en Common Object File Format COFF que contiene un módulo emitido o un archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="63559-350">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="63559-351">También se cargan los bytes sin formato que representan a los símbolos del módulo.</span><span class="sxs-lookup"><span data-stu-id="63559-351">The raw bytes representing the symbols for the module are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-352">Proporciona el acceso independiente de la versión de los objetos COM a la propiedad <see cref="P:System.Reflection.Assembly.Location" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-352">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Location" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63559-353">Ubicación del archivo cargado que contiene el manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-353">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="63559-354">Si se creó una instantánea del archivo cargado, la ubicación se corresponde con la del archivo después de que se hiciera la instantánea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-354">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span>
          </span>
          <span data-ttu-id="63559-355">Si el ensamblado se carga desde una matriz de bytes, como cuando se usa la sobrecarga del método <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, el valor devuelto es una cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-355">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-356">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-356">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-357">El <xref:System.Reflection.Assembly.Location%2A> propiedad obtiene la ruta de acceso o la ubicación de convención de nomenclatura Universal (UNC) del archivo cargado que contiene el manifiesto.</span><span class="sxs-lookup"><span data-stu-id="63559-357">The <xref:System.Reflection.Assembly.Location%2A> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Location" />
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.InteropServices._Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63559-358">Proporciona el acceso independiente de la versión de los objetos COM al evento <see cref="E:System.Reflection.Assembly.ModuleResolve" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-358">Provides COM objects with version-independent access to the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-359">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-359">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-360">El <xref:System.Reflection.Assembly.ModuleResolve> evento se produce cuando el cargador de clases de common language runtime no puede resolver una referencia a un módulo interno de un ensamblado por medios normales.</span><span class="sxs-lookup"><span data-stu-id="63559-360">The <xref:System.Reflection.Assembly.ModuleResolve> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="63559-361">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-361">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="63559-362">Este miembro no puede usarse por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-362">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="E:System.Reflection.Assembly.ModuleResolve" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63559-363">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.Assembly.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-363">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63559-364">Nombre completo del ensamblado o nombre de la clase si no es posible determinar su nombre completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63559-364">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63559-365">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="63559-365">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63559-366">El <xref:System.Reflection.Assembly.ToString%2A> método devuelve el nombre completo del ensamblado, también conocido como el nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="63559-366">The <xref:System.Reflection.Assembly.ToString%2A> method returns the full name of the assembly, also known as the display name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>