<Type Name="ManagedToNativeComInteropStubAttribute" FullName="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f0ae4cf12c2d896c1f787892c65580e698fc156" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39975677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagedToNativeComInteropStubAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagedToNativeComInteropStubAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagedToNativeComInteropStubAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagedToNativeComInteropStubAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagedToNativeComInteropStubAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona compatibilidad con la personalización del usuario de código auxiliar de interoperabilidad en escenarios de administrado a interoperabilidad COM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este atributo permite a los desarrolladores de interoperabilidad que tengan conocimientos acerca de la serialización y el funcionamiento interno de las llamadas de interoperabilidad para hacer lo siguiente:  
  
-   Aprovechar las ventajas del código auxiliar de interoperabilidad personalizado en tiempo de compilación en lugar de tiempo de ejecución.  
  
-   Depuración del código auxiliar de interoperabilidad personalizado.  
  
-   Proporcione capacidades de cálculo de referencias dentro de un código auxiliar que no se proporciona el tiempo de ejecución.  
  
-   Proporcionan funcionalidades de envío del método específico del usuario.  
  
 Aplique el atributo en un método en una interfaz para especificar un método de código auxiliar correspondiente para la interoperabilidad de COM administrado a nativo.  
  
 Si este atributo se encuentra durante el tiempo de ejecución, common language runtime no genera dinámicamente un código auxiliar de interoperabilidad. En su lugar, invoca el código auxiliar personalizado que se creó en tiempo de compilación.  
  
 El <xref:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute> atributo tiene las siguientes características:  
  
-   El atributo se puede usar únicamente en los métodos de interfaces que se marcan `[ComImport]`. Si el atributo se aplica a tipos no sea de interfaz, se omite el tiempo de ejecución.  
  
-   El atributo se puede usar una sola vez en el mismo método en una interfaz. Si se usa más de una vez, el compilador genera un error de atributo duplicado.  
  
-   El atributo no es heredable de una interfaz base. Las interfaces derivadas deben asignar explícitamente el atributo.  
  
-   El ensamblado que contiene el método con atributos también debe contener el código auxiliar personalizado.  
  
 Métodos de código auxiliar sobrecargados son válidos. Aunque se especifique solo el tipo y el nombre del método de código auxiliar, el tiempo de ejecución detectará el código auxiliar correspondiente. Esto hace examinando todos los argumentos en el método de interfaz y, a continuación, realizar la firma completa mediante el uso de explícita `this` puntero.  
  
 También es posible que varios métodos en una interfaz para compartir el mismo método de código auxiliar; Sin embargo, se debe tener cuidado al usar códigos auxiliares compartidos.  
  
> [!NOTE]
>  Los métodos auxiliares deben ser estáticos.  
  
 Podría indicar al runtime para usar un código auxiliar de interoperabilidad personalizado en tiempo de compilación en lugar de tiempo de ejecución con el siguiente código de C#:  
  
```  
[ComImport]  
interface IMyInterface  
{  
    [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),  
              "ForwardTestStub")]  
    void GetString (string arg);  
}  
```  
  
 A continuación, podría utilizar el siguiente código para declarar el método de código auxiliar correspondiente:  
  
```  
class TestStubClass  
{  
    internal static void ForwardTestStub(IMyInterface thisObject,  
             string arg) {…}  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedToNativeComInteropStubAttribute (Type classType, string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type classType, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classType As Type, methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagedToNativeComInteropStubAttribute(Type ^ classType, System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute : Type * string -&gt; System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" Usage="new System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute (classType, methodName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classType">Clase que contiene el método de código auxiliar necesario.</param>
        <param name="methodName">Nombre del método de código auxiliar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> con el tipo de clase y el nombre del método que se hayan especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">No se encuentra <paramref name="methodName" />.  
  
O bien 
El método es no estático o no genérico.  
  
O bien 
La lista de parámetros del método no coincide con la lista de parámetros que espera el código auxiliar.</exception>
        <exception cref="T:System.MethodAccessException">La interfaz que contiene el método de interoperabilidad administrado no tiene acceso al método de código auxiliar, porque el método de código auxiliar tiene accesibilidad privada o protegida, o debido a un problema de seguridad.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public Type ClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClassType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ClassType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassType : Type" Usage="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la clase que contiene el método de código auxiliar necesario.</summary>
        <value>Clase que contiene el código auxiliar de interoperabilidad personalizado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del método de código auxiliar.</summary>
        <value>Nombre de un código auxiliar de interoperabilidad personalizado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>