<Type Name="Effect" FullName="System.Windows.Media.Effects.Effect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="172ddb93d60c40eb440ed24c200f964a186cfe13" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36494842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Effect : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract Effect extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Effect&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Effect abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Effect = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un efecto de imagen personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se deriva la <xref:System.Windows.Media.Effects.Effect> clase para implementar un efecto de mapa de bits personalizado. En la mayoría de los casos, se derivará de <xref:System.Windows.Media.Effects.ShaderEffect>.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">para tener acceso total a los recursos de la interfaz de usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
    <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Effect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Effect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Effects.Effect" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.Effect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::Effect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.Effect" Usage="effect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.Effects.Effect" /> y hace copias en profundidad de sus valores. Cuando se copian las propiedades de dependencia de este objeto, este método copia las referencias de recursos y los enlaces de datos (que podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</summary>
        <returns>Clon modificable de esta instancia. En realidad, el clon devuelto es una copia en profundidad del objeto actual. El valor de la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del clon es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.Effects.Effect.Clone%2A> método se puede utilizar para generar copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos. Para mayor comodidad, este método prevalece sobre el heredados <xref:System.Windows.Freezable.Clone%2A> método para proporcionar una implementación fuertemente tipada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.Effect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.Effect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::Effect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.Effect" Usage="effect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.Effects.Effect" /> y hace copias en profundidad de sus valores actuales. Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para generar copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada mediante una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectMapping">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.GeneralTransform EffectMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GeneralTransform EffectMapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.Effect.EffectMapping" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property EffectMapping As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Media::GeneralTransform ^ EffectMapping { System::Windows::Media::GeneralTransform ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectMapping : System.Windows.Media.GeneralTransform" Usage="System.Windows.Media.Effects.Effect.EffectMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, transforma la entrada del mouse y los sistemas de coordenadas a través del efecto.</summary>
        <value>Transformación que se va a aplicar. El valor predeterminado es la transformación de identidad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidar el <xref:System.Windows.Media.Effects.Effect.EffectMapping%2A> propiedad para asignar una transformación que difiere de la transformación de identidad predeterminada.  
  
 La entrada se transforma a través de la inversa de esta transformación. El <xref:System.Windows.Media.Visual.TransformToAncestor%2A> y <xref:System.Windows.Media.Visual.TransformToDescendant%2A> métodos también tienen la <xref:System.Windows.Media.Effects.Effect.EffectMapping%2A> transformación aplicada.  
  
 Los puntos de entrada deben ser de [0-1] intervalo y los puntos de salida se deben asignar a [0-1] intervalo. El <xref:System.Windows.Media.GeneralTransform.Inverse%2A> propiedad debe devolver un <xref:System.Windows.Media.GeneralTransform> que calcule la asignación inversa.  
  
 La transformación inversa asigna un punto después de que el efecto se aplicará al punto que procede antes del efecto. El inverso de-no transformar un punto de antes el efecto se aplica a una vez aplicado el efecto de mapas.  
  
 Tenga en cuenta que la transformación no incluye información sobre el tamaño físico en píxeles que se va a usar y solo funciona en el intervalo de la unidad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="ImplicitInput">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush ImplicitInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Brush ImplicitInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.Effect.ImplicitInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ImplicitInput As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Brush ^ ImplicitInput { System::Windows::Media::Brush ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplicitInput : System.Windows.Media.Brush" Usage="System.Windows.Media.Effects.Effect.ImplicitInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Windows.Media.Brush" /> que, cuando se usa como entrada de <see cref="T:System.Windows.Media.Effects.Effect" />, hace que el mapa de bits del <see cref="T:System.Windows.UIElement" /> al que se aplica <see cref="T:System.Windows.Media.Effects.Effect" /> sea esa entrada.</summary>
        <value>
          <see cref="T:System.Windows.Media.Brush" /> que actúa como entrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> propiedad como el valor a una entrada con valores de pincel para una <xref:System.Windows.Media.Effects.ShaderEffect>.  
  
 El <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> propiedad representa la entrada del sombreador que procede de la representación de la <xref:System.Windows.UIElement> que la <xref:System.Windows.Media.Effects.Effect> se aplica a.  
  
> [!NOTE]
>  El comportamiento es indefinido cuando <xref:System.Windows.Media.Effects.Effect.ImplicitInput%2A> se utiliza como un pincel de otras clases WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
  </Members>
</Type>