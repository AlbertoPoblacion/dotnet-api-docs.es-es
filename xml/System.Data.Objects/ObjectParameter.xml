<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06efc60e5a1f7331a4df2519751005fb7125f2da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389289" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un parámetro de consulta que se pasa a una consulta de objeto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa un parámetro de consulta que se pasa a una <xref:System.Data.Objects.ObjectQuery%601> o un método del generador de consultas. Para obtener más información, consulte [métodos del generador de consultas](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Los parámetros de objeto se componen de un nombre, un tipo y un valor.  
  
 Esta clase no puede heredarse. Para obtener más información, vea <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). En el ejemplo, se agregan nuevos parámetros a la colección. Se recorre en iteración la <xref:System.Data.Objects.ObjectParameterCollection> y se muestra el nombre, el tipo y el valor de cada parámetro de la colección.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Objects.ObjectParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro. Este nombre no debe incluir el marcador de parámetro "@" que se usa en las instrucciones de [!INCLUDE[esql](~/includes/esql-md.md)]; solo debe incluir el nombre real. El primer carácter de la expresión debe ser una letra. Los demás caracteres de la expresión deben ser letras, números o caracteres de subrayado (_).</param>
        <param name="value">Valor inicial (e intrínsecamente, tipo) del parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Objects.ObjectParameter" /> con el nombre y el valor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea un parámetro a partir del nombre y el valor especificados. El tipo de parámetro se deduce del valor.  
  
 Si se agrega a la <xref:System.Data.Objects.ObjectParameterCollection>, no se puede cambiar el nombre del parámetro. El valor del parámetro se puede cambiar con la propiedad <xref:System.Data.Objects.ObjectParameter.Value%2A>. Una vez compilada la consulta, el valor no se puede cambiar. Para obtener más información, consulte [métodos del generador de consultas](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). En el ejemplo, se agregan nuevos parámetros a la colección. Se recorre en iteración la <xref:System.Data.Objects.ObjectParameterCollection> y se muestra el nombre, el tipo y el valor de cada parámetro de la colección.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si el valor de cualquier argumento es NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Si el valor del argumento Name no es válido. Los nombres de los parámetros deben comenzar por una letra y solo pueden contener letras, números y caracteres de subrayado.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro. Este nombre no debe incluir el marcador de parámetro "@" que se usa en las instrucciones de [!INCLUDE[esql](~/includes/esql-md.md)]; solo debe incluir el nombre real. El primer carácter de la expresión debe ser una letra. Los demás caracteres de la expresión deben ser letras, números o caracteres de subrayado (_).</param>
        <param name="type">Tipo de Common Language Runtime (CLR) al que pertenece el parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Objects.ObjectParameter" /> con el nombre y el tipo especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crean instancias, no se puede cambiar el nombre del parámetro. El valor del parámetro se puede establecer o cambiar con la propiedad <xref:System.Data.Objects.ObjectParameter.Value%2A>. Una vez compilada la consulta, el valor no se puede cambiar. Para obtener más información, consulte [métodos del generador de consultas](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si el valor de cualquier argumento es NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Si el valor del argumento Name no es válido. Los nombres de los parámetros deben comenzar por una letra y solo pueden contener letras, números y caracteres de subrayado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del parámetro, que solo se puede establecer a través de un constructor.</summary>
        <value>Nombre del parámetro, que solo se puede establecer a través de un constructor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crean instancias, no se puede cambiar el nombre del parámetro. El valor del parámetro se puede establecer o cambiar con la propiedad <xref:System.Data.Objects.ObjectParameter.Value%2A>. Una vez compilada la consulta, el valor no se puede cambiar. Para obtener más información, consulte [métodos del generador de consultas](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). En el ejemplo, se agregan nuevos parámetros a la colección. Se recorre en iteración la <xref:System.Data.Objects.ObjectParameterCollection> y se muestra el nombre, el tipo y el valor de cada parámetro de la colección.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de parámetro.</summary>
        <value>
          <see cref="T:System.Type" /> del parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de parámetro solo se puede establecer a través de un constructor.  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). En el ejemplo, se agregan nuevos parámetros a la colección. Se recorre en iteración la <xref:System.Data.Objects.ObjectParameterCollection> y se muestra el nombre, el tipo y el valor de cada parámetro de la colección.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro.</summary>
        <value>Valor del parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una vez compilada la consulta, el valor no se puede cambiar. Para obtener más información, consulte [métodos del generador de consultas](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Si el nuevo valor es no es compatible con el tipo declarado en el constructor, se puede producir una excepción en tiempo de ejecución. El proveedor debe determinar si el valor es compatible con el tipo declarado. Por ejemplo, si el tipo inicial es <xref:System.Int32> y el nuevo valor es <xref:System.Guid>, podría recibir una excepción.  
  
   
  
## Examples  
 El ejemplo de este tema se basa en el [modelo AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). En el ejemplo, se agregan nuevos parámetros a la colección. Se recorre en iteración la <xref:System.Data.Objects.ObjectParameterCollection> y se muestra el nombre, el tipo y el valor de cada parámetro de la colección.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>