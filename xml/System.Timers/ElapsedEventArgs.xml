<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ElapsedEventArgs.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5054276d76f47da80b3b5509fe52a79591bb5b8dc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">054276d76f47da80b3b5509fe52a79591bb5b8dc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Timers.ElapsedEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event.</source>
          <target state="translated">Proporciona datos para el evento <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.ElapsedEventArgs">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</source>
          <target state="translated">El ejemplo siguiente crea un <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> objeto que se activa su <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> evento cada dos segundos (2000 milisegundos), configura un controlador de eventos para el evento e inicia el temporizador.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Timers.ElapsedEventArgs">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">El controlador de eventos muestra el valor de la <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> propiedad cada vez que se genera.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>Gets the date/time when the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event was raised.</source>
          <target state="translated">Obtiene la fecha y hora a la que se generó el evento <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>The time the <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph> event was raised.</source>
          <target state="translated">Hora a la que se generó el evento <ph id="ph1">&lt;see cref="E:System.Timers.Timer.Elapsed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>The <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event is raised on a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread, so the event-handling method might run on one thread at the same time that a call to the <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType&gt;</ph> method runs on another thread.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> evento se desencadena en un <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> subprocesos, por lo que el método de control de eventos puede ejecutarse en un subproceso al mismo tiempo que una llamada a la <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType&gt;</ph> método se ejecuta en otro subproceso.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>This might result in the <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> event being raised after the <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method is called.</source>
          <target state="translated">Esto podría dar lugar a la <ph id="ph1">&lt;xref:System.Timers.Timer.Elapsed&gt;</ph> evento que se provoca después de la <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>This race condition cannot be prevented simply by comparing the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A&gt;</ph> property with the time when the <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method is called, because the event-handling method might already be executing when the <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method is called, or might begin executing between the moment when the <ph id="ph4">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method is called and the moment when the stop time is saved.</source>
          <target state="translated">No se puede evitar esta condición de carrera simplemente comparando el <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A&gt;</ph> propiedad con el tiempo cuando el <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> se llama el método, el método de control de eventos podría ya se está ejecutando cuando el <ph id="ph3">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> método se llama o podría empezar a ejecutar entre el momento cuando la <ph id="ph4">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> se llama al método y el momento en que cuando se guarda la hora de detención.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>If it is critical to prevent the thread that calls the <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> method from proceeding while the event-handling method is still executing, use a more robust synchronization mechanism such as the <ph id="ph2">&lt;xref:System.Threading.Monitor&gt;</ph> class or the <ph id="ph3">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> method.</source>
          <target state="translated">Si es fundamental para evitar que el subproceso que llama el <ph id="ph1">&lt;xref:System.Timers.Timer.Stop%2A&gt;</ph> método continúe mientras todavía se está ejecutando el método de control de eventos, use un mecanismo de sincronización más sólido como el <ph id="ph2">&lt;xref:System.Threading.Monitor&gt;</ph> clase o <ph id="ph3">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>Code that uses the <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> method can be found in the example for the <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Código que usa el <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> método puede encontrarse en el ejemplo para el <ph id="ph2">&lt;xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> object that fires its <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</source>
          <target state="translated">El ejemplo siguiente crea un <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> objeto que se activa su <ph id="ph2">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType&gt;</ph> evento cada dos segundos (2000 milisegundos), configura un controlador de eventos para el evento e inicia el temporizador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Timers.ElapsedEventArgs.SignalTime">
          <source>The event handler displays the value of the <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> property each time it is raised.</source>
          <target state="translated">El controlador de eventos muestra el valor de la <ph id="ph1">&lt;xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType&gt;</ph> propiedad cada vez que se genera.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>