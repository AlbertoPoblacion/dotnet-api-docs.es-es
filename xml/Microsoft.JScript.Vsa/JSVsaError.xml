<Type Name="JSVsaError" FullName="Microsoft.JScript.Vsa.JSVsaError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71182d388a1904959418c1977903f7108e79e5e5" />
    <Meta Name="ms.sourcegitcommit" Value="850a55c780d5a95b534467969add0232fd3a6125" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/07/2018" />
    <Meta Name="ms.locfileid" Value="34828938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum JSVsaError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JSVsaError extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Vsa.JSVsaError" />
  <TypeSignature Language="VB.NET" Value="Public Enum JSVsaError" />
  <TypeSignature Language="C++ CLI" Value="public enum class JSVsaError" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7607D148-3AA5-4CC6-AED5-D4DB0ECBD992")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define el conjunto de excepciones que puede producir un motor de scripts de .NET.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AppDomainCannotBeSet">
      <MemberSignature Language="C#" Value="AppDomainCannotBeSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AppDomainCannotBeSet = int32(-2146226176)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainCannotBeSet" />
      <MemberSignature Language="VB.NET" Value="AppDomainCannotBeSet" />
      <MemberSignature Language="C++ CLI" Value="AppDomainCannotBeSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226176</MemberValue>
      <Docs>
        <summary>Valor: 0x80133000</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede establecer el dominio de aplicación.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> método o la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método cuando se producirá un error en los intentos establecer la opción AppDomain en un motor administrado, por ejemplo, los motores de script de Visual Basic o JScript. Motores de secuencias de comandos administrados no admiten el uso de dominios de aplicación personalizada. Motores de secuencias de comandos administrados siempre la usará el dominio de aplicación en el que se están ejecutando.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInvalid">
      <MemberSignature Language="C#" Value="AppDomainInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AppDomainInvalid = int32(-2146226175)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainInvalid" />
      <MemberSignature Language="VB.NET" Value="AppDomainInvalid" />
      <MemberSignature Language="C++ CLI" Value="AppDomainInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226175</MemberValue>
      <Docs>
        <summary>Valor: 0x80133001</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el dominio de aplicación especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> método o <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método cuando se intenta establecer una referencia de AppDomain que no es válida. Para restablecer la `AppDomain` opción en una referencia nula, llamada la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBaseCannotBeSet">
      <MemberSignature Language="C#" Value="ApplicationBaseCannotBeSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ApplicationBaseCannotBeSet = int32(-2146226174)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseCannotBeSet" />
      <MemberSignature Language="VB.NET" Value="ApplicationBaseCannotBeSet" />
      <MemberSignature Language="C++ CLI" Value="ApplicationBaseCannotBeSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226174</MemberValue>
      <Docs>
        <summary>Valor: 0x80133002</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede establecer la base de la aplicación.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> método o <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método cuando se intenta obtener o establecer la opción ApplicationBase en un motor administrado, como Visual Basic .NET o JScript .NET motores de secuencias de comandos. El host debe establecer el `ApplicationBase` opción en el dominio de aplicación en el que crea el motor de scripts.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBaseInvalid">
      <MemberSignature Language="C#" Value="ApplicationBaseInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ApplicationBaseInvalid = int32(-2146226173)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseInvalid" />
      <MemberSignature Language="VB.NET" Value="ApplicationBaseInvalid" />
      <MemberSignature Language="C++ CLI" Value="ApplicationBaseInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226173</MemberValue>
      <Docs>
        <summary>Valor: 0x80133003</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el directorio de base de la aplicación especificada no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> método o <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método cuando se intenta obtener o establecer la propiedad ApplicationBase de opción en un motor y por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método cuando el directorio especificado como directorio Base de la aplicación no es un directorio válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyExpected">
      <MemberSignature Language="C#" Value="AssemblyExpected" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AssemblyExpected = int32(-2146226172)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyExpected" />
      <MemberSignature Language="VB.NET" Value="AssemblyExpected" />
      <MemberSignature Language="C++ CLI" Value="AssemblyExpected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226172</MemberValue>
      <Docs>
        <summary>Valor: 0x80133004</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem> no hace referencia a un ensamblado válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método cuando uno de los `IVsaReferenceItem` objetos incluidos en el <xref:Microsoft.JScript.Vsa.IJSVsaItems> colección no representa un ensamblado válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyNameInvalid">
      <MemberSignature Language="C#" Value="AssemblyNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AssemblyNameInvalid = int32(-2146226171)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyNameInvalid" />
      <MemberSignature Language="VB.NET" Value="AssemblyNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="AssemblyNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226171</MemberValue>
      <Docs>
        <summary>Valor: 0x80133005</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: nombre del ensamblado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem.AssemblyName*> se especifica la propiedad cuando un nombre de ensamblado que no es válido para un <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BadAssembly">
      <MemberSignature Language="C#" Value="BadAssembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError BadAssembly = int32(-2146226170)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.BadAssembly" />
      <MemberSignature Language="VB.NET" Value="BadAssembly" />
      <MemberSignature Language="C++ CLI" Value="BadAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226170</MemberValue>
      <Docs>
        <summary>Valor: 0x80133006</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: formato de ensamblado no es válido.  
  
 Se produce cuando el ensamblado proporcionado al motor no es válido. Esta excepción se produce normalmente cuando un motor intenta ejecutar o utilizar el ensamblado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserNotExist">
      <MemberSignature Language="C#" Value="BrowserNotExist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError BrowserNotExist = int32(-2146226115)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.BrowserNotExist" />
      <MemberSignature Language="VB.NET" Value="BrowserNotExist" />
      <MemberSignature Language="C++ CLI" Value="BrowserNotExist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226115</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se encontró el explorador especificado.  
  
 Iniciada por el método aDTEngine.AttachDebugger cuando se ha iniciado una sesión de depuración remota y realiza un intento de iniciar el explorador remoto, pero un explorador no está disponible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedAssemblyInvalid">
      <MemberSignature Language="C#" Value="CachedAssemblyInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CachedAssemblyInvalid = int32(-2146226169)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CachedAssemblyInvalid" />
      <MemberSignature Language="VB.NET" Value="CachedAssemblyInvalid" />
      <MemberSignature Language="C++ CLI" Value="CachedAssemblyInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226169</MemberValue>
      <Docs>
        <summary>Valor: 0x80133007</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el ensamblado en la caché no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método cuando se llama e intenta utilizar un ensamblado previamente almacenado en caché, pero el ensamblado no es válido, por ejemplo, es una referencia nula (`Nothing` en Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackUnexpected">
      <MemberSignature Language="C#" Value="CallbackUnexpected" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CallbackUnexpected = int32(-2146226168)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CallbackUnexpected" />
      <MemberSignature Language="VB.NET" Value="CallbackUnexpected" />
      <MemberSignature Language="C++ CLI" Value="CallbackUnexpected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226168</MemberValue>
      <Docs>
        <summary>Valor: 0x80133008</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede realizar la devolución de llamada en este momento.  
  
 Iniciada por varios métodos cuando uno de los <xref:Microsoft.JScript.Vsa.IJSVsaSite> o <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite> se llama a métodos de devolución de llamada en un momento imprevisto. Por ejemplo, el <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> solo se debe llamar al método mediante un motor como resultado de una llamada a la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método. Si se llama en cualquier otro momento, se producirá una excepción CallbackUnexpected.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotAttachToWebServer">
      <MemberSignature Language="C#" Value="CannotAttachToWebServer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CannotAttachToWebServer = int32(-2146226100)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CannotAttachToWebServer" />
      <MemberSignature Language="VB.NET" Value="CannotAttachToWebServer" />
      <MemberSignature Language="C++ CLI" Value="CannotAttachToWebServer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226100</MemberValue>
      <Docs>
        <summary>Valor: 0x8013304C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede conectar al servidor Web especificado.  
  
 Iniciada por el método aDTEngine.AttachDebugger cuando inicie una sesión de depuración del servidor y VSA no puede asociar el depurador al servidor Web especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOMNotAvailable">
      <MemberSignature Language="C#" Value="CodeDOMNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CodeDOMNotAvailable = int32(-2146226167)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CodeDOMNotAvailable" />
      <MemberSignature Language="VB.NET" Value="CodeDOMNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="CodeDOMNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226167</MemberValue>
      <Docs>
        <summary>Valor: 0x80133009</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: un válido Code Document Object Model (CodeDOM) no está disponible.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.CodeDOM*> propiedad cuando la propiedad no está disponible para su lectura. El motor no es compatible con la propiedad o requiere una llamada explícita a la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método con el fin de generar el modelo de objetos de documento (DOM).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompiledStateNotFound">
      <MemberSignature Language="C#" Value="CompiledStateNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CompiledStateNotFound = int32(-2146226166)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CompiledStateNotFound" />
      <MemberSignature Language="VB.NET" Value="CompiledStateNotFound" />
      <MemberSignature Language="C++ CLI" Value="CompiledStateNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226166</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se pudo cargar el estado compilado especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> método cuando se llama para un motor que no tiene un estado compilado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebuggeeNotStarted">
      <MemberSignature Language="C#" Value="DebuggeeNotStarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError DebuggeeNotStarted = int32(-2146226114)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.DebuggeeNotStarted" />
      <MemberSignature Language="VB.NET" Value="DebuggeeNotStarted" />
      <MemberSignature Language="C++ CLI" Value="DebuggeeNotStarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226114</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: depurar la aplicación de destino no ha iniciado.  
  
 Iniciada por el método aDTEngine.AttachDebugger cuando se inicia un sesión de depuración de cliente de Windows, pero la `AttachDebugger` método no es capaz de iniciar la aplicación de destino que se especifica con la opción TargetEXE.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugInfoNotSupported">
      <MemberSignature Language="C#" Value="DebugInfoNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError DebugInfoNotSupported = int32(-2146226165)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.DebugInfoNotSupported" />
      <MemberSignature Language="VB.NET" Value="DebugInfoNotSupported" />
      <MemberSignature Language="C++ CLI" Value="DebugInfoNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226165</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite el uso de información de depuración.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo*> propiedad cuando está establecida en true, pero el motor no admite la generación de información de depuración. Compilación continuará, pero el motor compila el código sin información de depuración.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementNameInvalid">
      <MemberSignature Language="C#" Value="ElementNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ElementNameInvalid = int32(-2146226164)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ElementNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ElementNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ElementNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226164</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de elemento no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> método y <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement*> métodos cuando se llaman con un parámetro de nombre que no es válido, por ejemplo, uno que contiene caracteres que no son válidos. Tenga en cuenta que el host no debe iniciar una excepción ElementNameInvalid cuando el parámetro de nombre es un puntero nulo, como un puntero nulo es un argumento válido que se usa para solicitar datos de nivel de motor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementNotFound">
      <MemberSignature Language="C#" Value="ElementNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ElementNotFound = int32(-2146226163)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ElementNotFound" />
      <MemberSignature Language="VB.NET" Value="ElementNotFound" />
      <MemberSignature Language="C++ CLI" Value="ElementNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226163</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se encontró el elemento.  
  
 Producida por <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> método cuando se llama con un parámetro de nombre que no es válido, es decir, uno que no se corresponde con un elemento guardado anteriormente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineBusy">
      <MemberSignature Language="C#" Value="EngineBusy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineBusy = int32(-2146226162)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineBusy" />
      <MemberSignature Language="VB.NET" Value="EngineBusy" />
      <MemberSignature Language="C++ CLI" Value="EngineBusy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226162</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: motor está ocupado dando servicio a otro subproceso.  
  
 Iniciada por todos los miembros cuando un motor está dando servicio a una solicitud desde otro subproceso. De forma predeterminada, un motor de scripts de .NET solo debe llamarse desde un subproceso a la vez.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineCannotClose">
      <MemberSignature Language="C#" Value="EngineCannotClose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineCannotClose = int32(-2146226161)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotClose" />
      <MemberSignature Language="VB.NET" Value="EngineCannotClose" />
      <MemberSignature Language="C++ CLI" Value="EngineCannotClose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226161</MemberValue>
      <Docs>
        <summary>Valor: 0x8013300F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede cerrar el motor especificado.  
  
 Producida por <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Close*> método cuando se realiza un intento de llamar a este método, pero la. No se puede cerrar correctamente el motor de scripts NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineCannotReset">
      <MemberSignature Language="C#" Value="EngineCannotReset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineCannotReset = int32(-2146226160)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotReset" />
      <MemberSignature Language="VB.NET" Value="EngineCannotReset" />
      <MemberSignature Language="C++ CLI" Value="EngineCannotReset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226160</MemberValue>
      <Docs>
        <summary>Valor: 0x80133010</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede restablecer el motor especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> método cuando se llama, pero no se pudo restablecer el motor de scripts de .NET o no se pudo desenlazar sus eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineClosed">
      <MemberSignature Language="C#" Value="EngineClosed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineClosed = int32(-2146226159)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineClosed" />
      <MemberSignature Language="VB.NET" Value="EngineClosed" />
      <MemberSignature Language="C++ CLI" Value="EngineClosed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226159</MemberValue>
      <Docs>
        <summary>Valor: 0x80133011</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: se ha cerrado el motor.  
  
 En la mayoría de los casos se produce después de que se ha cerrado el motor de scripts de .NET mediante una llamada a la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Close*> método. Una vez que se ha llamado al método Close, ya no se puede utilizar el motor y debe crearse un nuevo motor de secuencia de comandos para llevar a cabo las tareas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineEmpty">
      <MemberSignature Language="C#" Value="EngineEmpty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineEmpty = int32(-2146226159)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineEmpty" />
      <MemberSignature Language="VB.NET" Value="EngineEmpty" />
      <MemberSignature Language="C++ CLI" Value="EngineEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226159</MemberValue>
      <Docs>
        <summary>Valor: 0x80133012</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el motor especificado no tiene ningún elemento de origen para compilar.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método cuando se llama, pero no hay elementos en el <xref:Microsoft.JScript.Vsa.IJSVsaItems> colección para compilar, es decir, el <xref:Microsoft.JScript.Vsa.IJSVsaItems.Count*> propiedad = 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineInitialized">
      <MemberSignature Language="C#" Value="EngineInitialized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineInitialized = int32(-2146226157)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineInitialized" />
      <MemberSignature Language="VB.NET" Value="EngineInitialized" />
      <MemberSignature Language="C++ CLI" Value="EngineInitialized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226157</MemberValue>
      <Docs>
        <summary>Valor: 0x80133013</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: motor ya se ha inicializado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> método y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> métodos cuando se llaman a estos métodos, pero ya se inicializó el motor de scripts. NET. Si el host desea cargar el estado de origen o inicializar un nuevo motor de secuencia de comandos, los métodos respectivos deben ser los primeros que se llama después de establecer el < xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*
> y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameInUse">
      <MemberSignature Language="C#" Value="EngineNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameInUse = int32(-2146226156)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInUse" />
      <MemberSignature Language="VB.NET" Value="EngineNameInUse" />
      <MemberSignature Language="C++ CLI" Value="EngineNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226156</MemberValue>
      <Docs>
        <summary>Valor: 0x80133014</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de motor especificado ya está en uso por otro motor.  
  
 Producida por <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> propiedad cuando se realiza un intento para establecer en el mismo nombre que de una existente de .NET motor dentro del host de script. Aunque la propiedad Name no es necesario que sea único global, no puede ser el mismo que el nombre de un motor de scripts que se aloja actualmente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameInvalid">
      <MemberSignature Language="C#" Value="EngineNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameInvalid = int32(-2146226113)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInvalid" />
      <MemberSignature Language="VB.NET" Value="EngineNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="EngineNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226113</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de motor no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> propiedad si el nombre especificado ya está en utilizar otro motor. VSA requiere que los nombres de los motores de tiempo de diseño sean únicas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameNotSet">
      <MemberSignature Language="C#" Value="EngineNameNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameNotSet = int32(-2146226099)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameNotSet" />
      <MemberSignature Language="VB.NET" Value="EngineNameNotSet" />
      <MemberSignature Language="C++ CLI" Value="EngineNameNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226099</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de motor no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> propiedad si el nombre especificado ya está en utilizar otro motor. VSA requiere que los nombres de los motores de tiempo de diseño sean únicas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotCompiled">
      <MemberSignature Language="C#" Value="EngineNotCompiled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotCompiled = int32(-2146226155)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotCompiled" />
      <MemberSignature Language="VB.NET" Value="EngineNotCompiled" />
      <MemberSignature Language="C++ CLI" Value="EngineNotCompiled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226155</MemberValue>
      <Docs>
        <summary>Valor: 0x80133015</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el motor especificado no se compila.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState*> métodos cuando no hay ningún estado compilado para ejecutar o guardar. El motor de scripts de .NET debe compilar el código con una llamada a la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método, o la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> método debe llamarse antes de que el motor de scripts se puede ejecutar o guardar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotExist">
      <MemberSignature Language="C#" Value="EngineNotExist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotExist = int32(-2146226112)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotExist" />
      <MemberSignature Language="VB.NET" Value="EngineNotExist" />
      <MemberSignature Language="C++ CLI" Value="EngineNotExist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226112</MemberValue>
      <Docs>
        <summary>Valor: 0x80133040</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: motor no existe.  
  
 Producida por la propiedad aIDE.ExtensibilityObject en casos donde no hay ningún motor válido del que se va a recuperar el objeto de extensibilidad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotInitialized">
      <MemberSignature Language="C#" Value="EngineNotInitialized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotInitialized = int32(-2146226154)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotInitialized" />
      <MemberSignature Language="VB.NET" Value="EngineNotInitialized" />
      <MemberSignature Language="C++ CLI" Value="EngineNotInitialized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226154</MemberValue>
      <Docs>
        <summary>Valor: 0x80133016</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se inicializó el motor especificado.  
  
 Iniciada por varios miembros cuando el motor de scripts de .NET no se ha inicializado correctamente y el host intenta obtener acceso a una propiedad o método que requiera el motor de secuencia de comandos al inicializarse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotRunning">
      <MemberSignature Language="C#" Value="EngineNotRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotRunning = int32(-2146226153)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotRunning" />
      <MemberSignature Language="VB.NET" Value="EngineNotRunning" />
      <MemberSignature Language="C++ CLI" Value="EngineNotRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226153</MemberValue>
      <Docs>
        <summary>Valor: 0x80133017</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el motor especificado debe estar en ejecución.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> método y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Assembly*> propiedad cuando se llama a alguno y el motor de secuencia de comandos de .NET especificado no se está ejecutando.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineRunning">
      <MemberSignature Language="C#" Value="EngineRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineRunning = int32(-2146226152)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineRunning" />
      <MemberSignature Language="VB.NET" Value="EngineRunning" />
      <MemberSignature Language="C++ CLI" Value="EngineRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226152</MemberValue>
      <Docs>
        <summary>Valor: 0x80133018</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: motor está en ejecución.  
  
 Iniciada por varios miembros cuando se ejecuta el motor de scripts. NET, y el host intenta realizar una operación que no se permite mientras se ejecuta el motor de scripts. Por ejemplo, al intentar crear un nuevo código de elemento mediante la <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> método producirá esta excepción si el motor está en estado de ejecución.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceInvalid">
      <MemberSignature Language="C#" Value="EventSourceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceInvalid = int32(-2146226151)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226151</MemberValue>
      <Docs>
        <summary>Valor: 0x80133019</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el origen de eventos especificado no existe.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetEventSourceInstance*> método cuando se llama con un parámetro o par de parámetros que no es válido. Ya sea la `itemName` parámetro hace referencia a un elemento que el host no agregó al motor, o el `eventSourceName` parámetro hace referencia a un origen de eventos que no se agregó al elemento especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNameInUse">
      <MemberSignature Language="C#" Value="EventSourceNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNameInUse = int32(-2146226150)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInUse" />
      <MemberSignature Language="VB.NET" Value="EventSourceNameInUse" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226150</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de origen de eventos especificado ya está en uso.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> método cuando se llama con un `eventSourceName` parámetro que se ha utilizado previamente como un nombre de origen del evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNameInvalid">
      <MemberSignature Language="C#" Value="EventSourceNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNameInvalid = int32(-2146226149)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226149</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de origen de eventos especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> método y <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource*> métodos cuando se llaman con un `eventSourceName` parámetro que no es un identificador válido. Hosts pueden determinar si un identificador es válido llamar primero la <xref:Microsoft.JScript.Vsa.IJSVsaEngine> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNotFound">
      <MemberSignature Language="C#" Value="EventSourceNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNotFound = int32(-2146226148)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNotFound" />
      <MemberSignature Language="VB.NET" Value="EventSourceNotFound" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226148</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se encontró el origen de eventos especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource*> método cuando se llama con un `eventNameType` parámetro que ya no está en usar como un origen de eventos en el elemento de código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceTypeInvalid">
      <MemberSignature Language="C#" Value="EventSourceTypeInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceTypeInvalid = int32(-2146226147)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceTypeInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceTypeInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceTypeInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226147</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el tipo de origen de eventos especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> método cuando se llama con un `eventSourceType` parámetro que no es un tipo válido. Tenga en cuenta que esto no es cierto para el motor de secuencia de comandos de Visual Basic, que en su lugar indica una excepción de compilación en esta situación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFormatUnsupported">
      <MemberSignature Language="C#" Value="FileFormatUnsupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError FileFormatUnsupported = int32(-2146226111)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.FileFormatUnsupported" />
      <MemberSignature Language="VB.NET" Value="FileFormatUnsupported" />
      <MemberSignature Language="C++ CLI" Value="FileFormatUnsupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226111</MemberValue>
      <Docs>
        <summary>Valor: 0x80133041</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite el formato de archivo.  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileTypeUnknown">
      <MemberSignature Language="C#" Value="FileTypeUnknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError FileTypeUnknown = int32(-2146226110)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.FileTypeUnknown" />
      <MemberSignature Language="VB.NET" Value="FileTypeUnknown" />
      <MemberSignature Language="C++ CLI" Value="FileTypeUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226110</MemberValue>
      <Docs>
        <summary>Valor: 0x80133042</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: archivo es de tipo desconocido.  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledStateFailed">
      <MemberSignature Language="C#" Value="GetCompiledStateFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GetCompiledStateFailed = int32(-2146226146)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GetCompiledStateFailed" />
      <MemberSignature Language="VB.NET" Value="GetCompiledStateFailed" />
      <MemberSignature Language="C++ CLI" Value="GetCompiledStateFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226146</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se pudo cargar el estado compilado especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> método y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> métodos cuando el `GetCompiledState` método se produce un error. El método Run devuelve al llamador la `GetCompiledStateFailed` excepción devuelta por la `GetCompiledState` método. El `Run` método también podría generar la excepción GetCompiledStateFailed si la caché de ensamblados produce una excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalInstanceInvalid">
      <MemberSignature Language="C#" Value="GlobalInstanceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GlobalInstanceInvalid = int32(-2146226145)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceInvalid" />
      <MemberSignature Language="VB.NET" Value="GlobalInstanceInvalid" />
      <MemberSignature Language="C++ CLI" Value="GlobalInstanceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226145</MemberValue>
      <Docs>
        <summary>Valor: 0x8013301F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: la instancia global especificada no existe.  
  
 Producida por <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetGlobalInstance*> método cuando se llama con un parámetro de nombre no válido, es decir, uno que no se agregó mediante el <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalInstanceTypeInvalid">
      <MemberSignature Language="C#" Value="GlobalInstanceTypeInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GlobalInstanceTypeInvalid = int32(-2146226144)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceTypeInvalid" />
      <MemberSignature Language="VB.NET" Value="GlobalInstanceTypeInvalid" />
      <MemberSignature Language="C++ CLI" Value="GlobalInstanceTypeInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226144</MemberValue>
      <Docs>
        <summary>Valor: 0x80133020</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el tipo de instancia Global no es válido.  
  
 Se produce cuando el `TypeString` propiedad de un <xref:Microsoft.JScript.Vsa.IJSVsaGlobalItem> objeto no es válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCompilerError">
      <MemberSignature Language="C#" Value="InternalCompilerError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError InternalCompilerError = int32(-2146226143)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.InternalCompilerError" />
      <MemberSignature Language="VB.NET" Value="InternalCompilerError" />
      <MemberSignature Language="C++ CLI" Value="InternalCompilerError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226143</MemberValue>
      <Docs>
        <summary>Valor: 0x80133021</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: se ha producido una excepción interna del compilador.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método cuando se llama y se produce una excepción inesperada en el compilador. No se produce esta excepción para errores de compilación, que señalizan al host por medio de la <xref:Microsoft.JScript.Vsa.IJSVsaSite.OnCompilerError*> método, sino para excepciones del propio compilador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCannotBeRemoved">
      <MemberSignature Language="C#" Value="ItemCannotBeRemoved" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemCannotBeRemoved = int32(-2146226142)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRemoved" />
      <MemberSignature Language="VB.NET" Value="ItemCannotBeRemoved" />
      <MemberSignature Language="C++ CLI" Value="ItemCannotBeRemoved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226142</MemberValue>
      <Docs>
        <summary>Valor: 0x80133022</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede quitar el elemento especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> y <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> métodos cuando se realiza un intento para quitar un elemento que no se puede quitar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCannotBeRenamed">
      <MemberSignature Language="C#" Value="ItemCannotBeRenamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemCannotBeRenamed = int32(-2146226109)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRenamed" />
      <MemberSignature Language="VB.NET" Value="ItemCannotBeRenamed" />
      <MemberSignature Language="C++ CLI" Value="ItemCannotBeRenamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226109</MemberValue>
      <Docs>
        <summary>Valor: 0x80133043</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se puede cambiar el nombre del elemento.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItem.Name*> propiedad en casos donde se realiza un intento para cambiar el nombre de un elemento que no se pueden cambiar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemFlagNotSupported">
      <MemberSignature Language="C#" Value="ItemFlagNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemFlagNotSupported = int32(-2146226141)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemFlagNotSupported" />
      <MemberSignature Language="VB.NET" Value="ItemFlagNotSupported" />
      <MemberSignature Language="C++ CLI" Value="ItemFlagNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226141</MemberValue>
      <Docs>
        <summary>Valor: 0x80133023</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite el indicador especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> método cuando la llamada especifica un indicador que no es válido o no es compatible con el host.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNameInUse">
      <MemberSignature Language="C#" Value="ItemNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNameInUse = int32(-2146226140)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInUse" />
      <MemberSignature Language="VB.NET" Value="ItemNameInUse" />
      <MemberSignature Language="C++ CLI" Value="ItemNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226140</MemberValue>
      <Docs>
        <summary>Valor: 0x80133024</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: nombre del elemento especificado ya está en uso.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> método y <xref:Microsoft.JScript.Vsa.IJSVsaItem.Name*> propiedad cuando una llamada a la `CreateItem` método se realiza con un parámetro de nombre que ya está en uso, o cuando tiene un elemento existente su `Name` propiedad establecida en un nombre que ya está en uso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNameInvalid">
      <MemberSignature Language="C#" Value="ItemNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNameInvalid = int32(-2146226139)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ItemNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ItemNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226139</MemberValue>
      <Docs>
        <summary>Valor: 0x80133025</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre de elemento no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> propiedad cuando el nombre de un elemento no es válido. El nombre de un elemento se puede establecer al llamar a la `CreateItem` método, o al establecer el `Name` propiedad. Use la <xref:Microsoft.JScript.Vsa.IJSVsaEngine> método para determinar si un identificador es válido para el motor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNotFound">
      <MemberSignature Language="C#" Value="ItemNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNotFound = int32(-2146226138)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNotFound" />
      <MemberSignature Language="VB.NET" Value="ItemNotFound" />
      <MemberSignature Language="C++ CLI" Value="ItemNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226138</MemberValue>
      <Docs>
        <summary>Valor: 0x80133026</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el elemento especificado no se encuentra en la colección.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> propiedad, <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> método <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> propiedad, y <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> método cuando la propiedad aItems.Item se indiza utilizando un parámetro que no es válido. Cuando se usa la sobrecarga de la cadena, el parámetro name debe ser el mismo que el nombre de un elemento ya está en la colección; Cuando se usa la sobrecarga de tipo entero, el `index` parámetro debe estar comprendido entre 0 y el valor de la <xref:Microsoft.JScript.Vsa.IJSVsaItems.Count*> propiedad -1, ambos inclusive.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeNotSupported">
      <MemberSignature Language="C#" Value="ItemTypeNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemTypeNotSupported = int32(-2146226137)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemTypeNotSupported" />
      <MemberSignature Language="VB.NET" Value="ItemTypeNotSupported" />
      <MemberSignature Language="C++ CLI" Value="ItemTypeNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226137</MemberValue>
      <Docs>
        <summary>Valor: 0x80133027</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite el tipo de elemento especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> método cuando se realiza una llamada con un `itemType` parámetro que no es compatible con el motor. Tenga en cuenta que no todos los motores admiten todos los valores de la enumeración VsaItemType.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCIDNotSupported">
      <MemberSignature Language="C#" Value="LCIDNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError LCIDNotSupported = int32(-2146226136)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.LCIDNotSupported" />
      <MemberSignature Language="VB.NET" Value="LCIDNotSupported" />
      <MemberSignature Language="C++ CLI" Value="LCIDNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226136</MemberValue>
      <Docs>
        <summary>Valor: 0x80133028</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite el identificador de configuración regional (LCID).  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LCID*> propiedad cuando se establece en un LCID que no es compatible con el motor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadElementFailed">
      <MemberSignature Language="C#" Value="LoadElementFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError LoadElementFailed = int32(-2146226135)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.LoadElementFailed" />
      <MemberSignature Language="VB.NET" Value="LoadElementFailed" />
      <MemberSignature Language="C++ CLI" Value="LoadElementFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226135</MemberValue>
      <Docs>
        <summary>Valor: 0x80133029</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se pudo cargar el elemento especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> método y <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> métodos cuando una llamada a la `LoadElement` método se produce un error. El `LoadSourceState` método devuelve la excepción LoadElementFailed el `IVsaPersistSite.LoadElement` método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingPdb">
      <MemberSignature Language="C#" Value="MissingPdb" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError MissingPdb = int32(-2146226102)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.MissingPdb" />
      <MemberSignature Language="VB.NET" Value="MissingPdb" />
      <MemberSignature Language="C++ CLI" Value="MissingPdb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226102</MemberValue>
      <Docs>
        <summary>Valor: 0x8013304A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: n/d  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingSource">
      <MemberSignature Language="C#" Value="MissingSource" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError MissingSource = int32(-2146226108)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.MissingSource" />
      <MemberSignature Language="VB.NET" Value="MissingSource" />
      <MemberSignature Language="C++ CLI" Value="MissingSource" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226108</MemberValue>
      <Docs>
        <summary>Valor: 0x80133044</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: origen que faltan.  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTooLong">
      <MemberSignature Language="C#" Value="NameTooLong" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NameTooLong = int32(-2146226106)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NameTooLong" />
      <MemberSignature Language="VB.NET" Value="NameTooLong" />
      <MemberSignature Language="C++ CLI" Value="NameTooLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226106</MemberValue>
      <Docs>
        <summary>Valor: 0x80133046</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el nombre del motor supera la longitud permitida de 256 caracteres.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> propiedad en casos donde el valor establecido como nombre del motor supera los 256 caracteres.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotClientSideAndNoUrl">
      <MemberSignature Language="C#" Value="NotClientSideAndNoUrl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotClientSideAndNoUrl = int32(-2146226101)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotClientSideAndNoUrl" />
      <MemberSignature Language="VB.NET" Value="NotClientSideAndNoUrl" />
      <MemberSignature Language="C++ CLI" Value="NotClientSideAndNoUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226101</MemberValue>
      <Docs>
        <summary>Valor: 0x8013304B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: n/d  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationInvalid">
      <MemberSignature Language="C#" Value="NotificationInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotificationInvalid = int32(-2146226134)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotificationInvalid" />
      <MemberSignature Language="VB.NET" Value="NotificationInvalid" />
      <MemberSignature Language="C++ CLI" Value="NotificationInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226134</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: la notificación especificada no es válida.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaSite.Notify*> método cuando se llama con una notificación de que no es válida. Por lo general se recomienda que las aplicaciones host pasar por alto las notificaciones que no son compatibles con, o que no necesitan responder. Sin embargo, en casos en que tratan una notificación específica y la notificación no es válida, los hosts deben iniciar la excepción NotificationInvalid.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotInitCompleted">
      <MemberSignature Language="C#" Value="NotInitCompleted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotInitCompleted = int32(-2146226107)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotInitCompleted" />
      <MemberSignature Language="VB.NET" Value="NotInitCompleted" />
      <MemberSignature Language="C++ CLI" Value="NotInitCompleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226107</MemberValue>
      <Docs>
        <summary>Valor: 0x80133045</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se ha llamado al método aDTEngine.InitCompleted.  
  
 Producida por los métodos aDTEngine.GetIDE o por el método signTime.ShowIDE en casos donde se les llama antes de la `InitCompleted` llama método, indica que la inicialización ha terminado. En el caso de los `ShowIDE` (método), la excepción indica que el primer motor de la colección de motores no se ha inicializado todavía.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionInvalid">
      <MemberSignature Language="C#" Value="OptionInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError OptionInvalid = int32(-2146226133)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.OptionInvalid" />
      <MemberSignature Language="VB.NET" Value="OptionInvalid" />
      <MemberSignature Language="C++ CLI" Value="OptionInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226133</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: la opción especificada no es válida.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> métodos cuando el host intenta establecer una opción utilizando cualquiera de los métodos, pero el valor proporcionado no es válido para la opción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionNotSupported">
      <MemberSignature Language="C#" Value="OptionNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError OptionNotSupported = int32(-2146226132)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.OptionNotSupported" />
      <MemberSignature Language="VB.NET" Value="OptionNotSupported" />
      <MemberSignature Language="C++ CLI" Value="OptionNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226132</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se admite la opción especificada.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> método <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> (método), y `IVsaItem.SetOption` métodos al intentar obtener o establecer una opción que no es compatible con el motor de  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcNameInUse">
      <MemberSignature Language="C#" Value="ProcNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ProcNameInUse = int32(-2146226105)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInUse" />
      <MemberSignature Language="VB.NET" Value="ProcNameInUse" />
      <MemberSignature Language="C++ CLI" Value="ProcNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226105</MemberValue>
      <Docs>
        <summary>Valor: 0x80133047</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: n/d  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcNameInvalid">
      <MemberSignature Language="C#" Value="ProcNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ProcNameInvalid = int32(-2146226104)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ProcNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ProcNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226104</MemberValue>
      <Docs>
        <summary>Valor: 0x80133048</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: n/d  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeFailed">
      <MemberSignature Language="C#" Value="RevokeFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RevokeFailed = int32(-2146226131)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RevokeFailed" />
      <MemberSignature Language="VB.NET" Value="RevokeFailed" />
      <MemberSignature Language="C++ CLI" Value="RevokeFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226131</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: error en una solicitud para revocar la caché de ensamblado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RevokeCache*> método cuando se llama, pero no puede revocar la caché. Obtener más información puede estar disponible por medio de la propiedad Exception.InnerException. Tenga en cuenta que si no hay ningún ensamblado para revocar en caché, el motor debería devolver "correcto" y no producen esta excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerAlreadySet">
      <MemberSignature Language="C#" Value="RootMonikerAlreadySet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerAlreadySet = int32(-2146226130)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerAlreadySet" />
      <MemberSignature Language="VB.NET" Value="RootMonikerAlreadySet" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerAlreadySet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226130</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> propiedad ya se ha establecido y no se puede establecer de nuevo.  
  
 Producida por la `IVsaEngine.RootMoniker` propiedad cuando se realiza un intento para establecer esta propiedad una vez que ya se ha establecido en un valor válido. El `RootMoniker` propiedad solo puede establecerse una vez.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerInUse">
      <MemberSignature Language="C#" Value="RootMonikerInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerInUse = int32(-2146226129)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInUse" />
      <MemberSignature Language="VB.NET" Value="RootMonikerInUse" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226129</MemberValue>
      <Docs>
        <summary>Valor: 0x8013302F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el moniker raíz especificado ya está en uso.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> propiedad cuando se realiza un intento para establecer esta propiedad en un valor que ya está en uso por otro motor. El `RootMoniker` propiedad debe ser única globalmente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerInvalid">
      <MemberSignature Language="C#" Value="RootMonikerInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerInvalid = int32(-2146226128)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInvalid" />
      <MemberSignature Language="VB.NET" Value="RootMonikerInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226128</MemberValue>
      <Docs>
        <summary>Valor: 0x80133030</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el moniker raíz especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> propiedad cuando se realiza un intento para establecer esta propiedad en un valor que no es un moniker válido. Un moniker puede no ser válido por las razones siguientes:  
  
 No se adhiere a la sintaxis del moniker de \<protocolo > ://\<ruta de acceso >.  
  
 Utiliza caracteres que no son válidos dentro de un identificador uniforme de recursos (URI). Para obtener más información sobre los caracteres válidos, vea [Request For Comments 2396](https://www.ietf.org/rfc/rfc2396).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerNotSet">
      <MemberSignature Language="C#" Value="RootMonikerNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerNotSet = int32(-2146226127)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerNotSet" />
      <MemberSignature Language="VB.NET" Value="RootMonikerNotSet" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226127</MemberValue>
      <Docs>
        <summary>Valor: 0x80133031</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> no se estableció la propiedad.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> método, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método, y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> métodos y el <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> propiedad cuando la propiedad o método requiere un moniker raíz válido, pero la `RootMoniker` no se estableció la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerProtocolInvalid">
      <MemberSignature Language="C#" Value="RootMonikerProtocolInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerProtocolInvalid = int32(-2146226126)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerProtocolInvalid" />
      <MemberSignature Language="VB.NET" Value="RootMonikerProtocolInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerProtocolInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226126</MemberValue>
      <Docs>
        <summary>Valor: 0x80133032</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el protocolo especificado en el moniker raíz no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> propiedad cuando se realiza un intento para establecer esta propiedad en un valor que utiliza un protocolo ya registrado en el equipo, como file o http. No se pueden usar protocolos registrados como parte del moniker.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespaceInvalid">
      <MemberSignature Language="C#" Value="RootNamespaceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootNamespaceInvalid = int32(-2146226125)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceInvalid" />
      <MemberSignature Language="VB.NET" Value="RootNamespaceInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootNamespaceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226125</MemberValue>
      <Docs>
        <summary>Valor: 0x80133033</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el espacio de nombres raíz especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace*> propiedad cuando se realiza un intento para establecer esta propiedad en un valor que no es un identificador de espacio de nombres válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespaceNotSet">
      <MemberSignature Language="C#" Value="RootNamespaceNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootNamespaceNotSet = int32(-2146226124)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceNotSet" />
      <MemberSignature Language="VB.NET" Value="RootNamespaceNotSet" />
      <MemberSignature Language="C++ CLI" Value="RootNamespaceNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226124</MemberValue>
      <Docs>
        <summary>Valor: 0x80133034</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se estableció el espacio de nombres raíz.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método si se llama antes de la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace*> se establece la propiedad. El motor del cargador en tiempo de ejecución y el motor de secuencia de comandos de Visual Basic también producirá esta excepción al llamar al método Run si no se ha establecido la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledStateFailed">
      <MemberSignature Language="C#" Value="SaveCompiledStateFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SaveCompiledStateFailed = int32(-2146226123)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SaveCompiledStateFailed" />
      <MemberSignature Language="VB.NET" Value="SaveCompiledStateFailed" />
      <MemberSignature Language="C++ CLI" Value="SaveCompiledStateFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226123</MemberValue>
      <Docs>
        <summary>Valor: 0x80133035</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se pudo guardar el estado compilado especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState*> método cuando se produce un error en este método. Tenga en cuenta que este método no guarda código realmente, pero en su lugar, simplemente proporciona a la aplicación host con los datos binarios especificados, para que el host puede guardarlo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveElementFailed">
      <MemberSignature Language="C#" Value="SaveElementFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SaveElementFailed = int32(-2146226122)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SaveElementFailed" />
      <MemberSignature Language="VB.NET" Value="SaveElementFailed" />
      <MemberSignature Language="C++ CLI" Value="SaveElementFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226122</MemberValue>
      <Docs>
        <summary>Valor: 0x80133036</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se pudo guardar el elemento especificado.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveSourceState*> método y <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement*> métodos cuando una llamada a la `SaveElement` método se produce un error. El `InnerException` propiedad de la <xref:System.Exception> clase se establece en la excepción producida por el código subyacente (por ejemplo, una salida de excepción de espacio de disco). Para obtener más información, vea <xref:System.Exception.InnerException%2A?displayProperty=nameWithType>. El `SaveSourceState` método devuelve el `SaveElementFailed` excepción desde el `SaveElement` método de vuelta al llamador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteAlreadySet">
      <MemberSignature Language="C#" Value="SiteAlreadySet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteAlreadySet = int32(-2146226121)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteAlreadySet" />
      <MemberSignature Language="VB.NET" Value="SiteAlreadySet" />
      <MemberSignature Language="C++ CLI" Value="SiteAlreadySet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226121</MemberValue>
      <Docs>
        <summary>Valor: 0x80133037</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el sitio especificado ya se estableció.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> propiedad cuando se realiza un intento para establecer esta propiedad y ya tiene un valor distinto de null. Una vez que se ha establecido, no se puede restablecer la propiedad de sitio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteInvalid">
      <MemberSignature Language="C#" Value="SiteInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteInvalid = int32(-2146226120)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteInvalid" />
      <MemberSignature Language="VB.NET" Value="SiteInvalid" />
      <MemberSignature Language="C++ CLI" Value="SiteInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226120</MemberValue>
      <Docs>
        <summary>Valor: 0x80133038</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el sitio especificado no es válido.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> propiedad cuando se realiza un intento para establecer esta propiedad en un valor que no es válido <xref:Microsoft.JScript.Vsa.IJSVsaSite> referencia de objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteNotSet">
      <MemberSignature Language="C#" Value="SiteNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteNotSet = int32(-2146226119)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteNotSet" />
      <MemberSignature Language="VB.NET" Value="SiteNotSet" />
      <MemberSignature Language="C++ CLI" Value="SiteNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226119</MemberValue>
      <Docs>
        <summary>Valor: 0x80133039</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: no se estableció el sitio.  
  
 Producida por el <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> método, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> método <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> método, y <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> métodos cuando una propiedad o método que requiere un válido <xref:Microsoft.JScript.Vsa.IJSVsaSite> objeto se denomina, pero la <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> no se estableció la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceItemNotAvailable">
      <MemberSignature Language="C#" Value="SourceItemNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SourceItemNotAvailable = int32(-2146226118)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SourceItemNotAvailable" />
      <MemberSignature Language="VB.NET" Value="SourceItemNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="SourceItemNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226118</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el elemento de origen no está disponible para esta excepción.  
  
 Se produce cuando no hay ningún elemento de origen para una excepción, es decir, la <xref:Microsoft.JScript.Vsa.IJSVsaError.SourceItem*> no se establece la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceMonikerNotAvailable">
      <MemberSignature Language="C#" Value="SourceMonikerNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SourceMonikerNotAvailable = int32(-2146226117)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SourceMonikerNotAvailable" />
      <MemberSignature Language="VB.NET" Value="SourceMonikerNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="SourceMonikerNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226117</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: el moniker de origen no está disponible para esta excepción.  
  
 Se produce cuando hay ningún moniker para una excepción, es decir, la <xref:Microsoft.JScript.Vsa.IJSVsaError.SourceMoniker*> no se establece la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownError">
      <MemberSignature Language="C#" Value="UnknownError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError UnknownError = int32(-2146225921)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.UnknownError" />
      <MemberSignature Language="VB.NET" Value="UnknownError" />
      <MemberSignature Language="C++ CLI" Value="UnknownError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146225921</MemberValue>
      <Docs>
        <summary>Valor: 0x801330FF</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: excepción desconocida.  
  
 Iniciada por varios miembros cuando la excepción no se reconoce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="URLInvalid">
      <MemberSignature Language="C#" Value="URLInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError URLInvalid = int32(-2146226116)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.URLInvalid" />
      <MemberSignature Language="VB.NET" Value="URLInvalid" />
      <MemberSignature Language="C++ CLI" Value="URLInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226116</MemberValue>
      <Docs>
        <summary>Valor: 0x8013303C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: dirección URL no válida; Extensión de archivo ASPX no está presente.  
  
 Producida por la <xref:Microsoft.JScript.Vsa.IVsaDTEngine.TargetURL%2A> propiedad cuando la dirección URL de destino a la que está establecido el depurador no es válida. La propiedad debe apuntar a un archivo ASPX.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VsaServerDown">
      <MemberSignature Language="C#" Value="VsaServerDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError VsaServerDown = int32(-2146226103)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.VsaServerDown" />
      <MemberSignature Language="VB.NET" Value="VsaServerDown" />
      <MemberSignature Language="C++ CLI" Value="VsaServerDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226103</MemberValue>
      <Docs>
        <summary>Valor: 0x80133049</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cadena de la excepción: n/d  
  
 Reservado para un uso futuro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>