<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcd84970a595921ef75b42e97adafb7104b42557" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39772407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <TypeSignature Language="F#" Value="type DialogPropertyValueEditor = class&#xA;    inherit PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contenedor para toda la lógica de edición de cuadros de diálogo para los objetos <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la clase <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> para mostrar un editor insertado que puede tener asociado un editor de cuadros de diálogo.  
  
 La clase <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> puede contener un objeto <xref:System.Windows.DataTemplate> para un editor de cuadros de diálogo o la lógica personalizada a la que se llama cuando se invoca el cuadro de diálogo.  
  
 Use la clase <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> en el objeto <xref:System.Windows.DataTemplate> para invocar a la clase <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> personalizada.  
  
 Puede proporcionar un objeto <xref:System.Windows.DataTemplate> que se muestra en un cuadro de diálogo de host o invalidar el método <xref:System.Windows.Forms.Form.ShowDialog>, lo que permite volver a usar los cuadros de diálogo del sistema o los ya existentes.  
  
 La lista siguiente muestra las reglas para determinar si se usa el método <xref:System.Windows.DataTemplate> o <xref:System.Windows.Forms.Form.ShowDialog>.  
  
 Si el <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propiedad no es una referencia nula (Nothing en Visual Basic), que <xref:System.Windows.DataTemplate> se hospeda en un cuadro de diálogo específico del host, que proporciona el host de aplicación de estilos. No se llama al método <xref:System.Windows.Forms.Form.ShowDialog>.  
  
 Si el <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propiedad es una referencia null (Nothing en Visual Basic), virtual <xref:System.Windows.Forms.Form.ShowDialog> se llama al método y se puede invalidar este método para mostrar cualquier cuadro de diálogo.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> sin ninguna plantilla específica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" Usage="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor (dialogEditorTemplate, inlineEditorTemplate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">Objeto <see cref="T:System.Windows.DataTemplate" /> que se hospeda en un cromo de diálogo específico del host y cuya propiedad <see cref="P:System.Activities.ActivityContext.DataContext" /> se ha establecido en la instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> correspondiente a la propiedad que se está editando.</param>
        <param name="inlineEditorTemplate">Objeto <see cref="T:System.Windows.DataTemplate" /> que se usa para la interfaz de usuario del editor insertado. Si se usa, la propiedad <see cref="P:System.Activities.ActivityContext.DataContext" /> se establece en el objeto <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> correspondiente a la propiedad que se está editando.</param>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> con las plantillas de editor de cuadros de diálogo y de editor insertado especificadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DialogEditorTemplate : System.Windows.DataTemplate with get, set" Usage="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.DataTemplate" /> que se hospeda en un cuadro de diálogo específico del host y cuya propiedad <see cref="P:System.Activities.ActivityContext.DataContext" /> se ha establecido en <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</summary>
        <value>El objeto <see cref="T:System.Windows.DataTemplate" /> hospedado en un diálogo específico del host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta propiedad devuelve `null`, el <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> se llama al método en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit&#xA;override this.ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit" Usage="dialogPropertyValueEditor.ShowDialog (propertyValue, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">El objeto <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> de la propiedad que se va a editar.</param>
        <param name="commandSource">El objeto <see cref="T:System.Windows.IInputElement" /> que se puede usar como origen para la ejecución de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</param>
        <summary>Se le llama cuando la propiedad <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> es NULL y el usuario ha invocado un cuadro de diálogo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que es el host el que controla los comandos y que los cuadros de diálogo personalizados no van a formar parte de ese árbol visual, el parámetro `commandSource` expone una interfaz <xref:System.Windows.IInputElement> que forma parte del árbol visual del host y que, por lo tanto, se puede usar para ejecutar comandos de edición de propiedades de tal manera que estos se controlen correctamente. La invalidación de este método le permite implementar cualquier lógica de cuadros de diálogo personalizada, como la invocación de cuadros de diálogo del sistema existentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>