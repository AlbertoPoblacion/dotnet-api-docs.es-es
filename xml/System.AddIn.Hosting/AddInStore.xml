<Type Name="AddInStore" FullName="System.AddIn.Hosting.AddInStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c62bd6b5abb55b918ba2c0dc9846a8226811a9e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36715657" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AddInStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AddInStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInStore" />
  <TypeSignature Language="VB.NET" Value="Public Class AddInStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInStore abstract sealed" />
  <TypeSignature Language="F#" Value="type AddInStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides methods to store and find information about available add-ins and pipeline segments.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta clase para generar, volver a generar y actualizar dos archivos caché, como se describe en la tabla siguiente.  
  
|Archivo caché|Métodos que crean el archivo|  
|----------------|----------------------------------|  
|PipelineSegments.store<br /><br /> Este archivo se encuentra en el directorio raíz de la estructura de directorios de canalización.|<xref:System.AddIn.Hosting.AddInStore.Update%2A><br /><br /> Actualiza el archivo con nuevos segmentos de canalización. Si no hay nuevos segmentos están instalados, este método sólo valida la memoria caché.<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Rebuild%2A><br /><br /> Vuelve a generar el archivo e incluye nuevos segmentos de canalización.|  
|AddIns.store<br /><br /> Este archivo se encuentra en un directorio que contiene uno o varios subdirectorios de complementos. Si este directorio se encuentra en la estructura de directorios de canalizaciones, debe denominarse AddIns.|<xref:System.AddIn.Hosting.AddInStore.UpdateAddIns%2A><br /><br /> Actualiza el archivo con nuevos complementos en una ubicación especificada. Llamar a este método si los complementos están fuera de la estructura de directorios de canalización.<br /><br /> Si no hay complementos nuevos se instalan, este método sólo valida la memoria caché.<br /><br /> <xref:System.AddIn.Hosting.AddInStore.RebuildAddIns%2A><br /><br /> Vuelve a generar el archivo e incluye complementos en una ubicación especificada. Llamar a este método si los complementos están fuera de la estructura de directorios de canalización.<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Update%2A><br /><br /> Si los complementos están en la estructura de directorios de canalización, este método actualiza el archivo con complementos nuevos.<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Rebuild%2A><br /><br /> Si los complementos están en la estructura de directorios de canalización, este método vuelve a generar el archivo e incluye complementos nuevos.|  
  
 Estos métodos crean los archivos de la memoria caché si no existen previamente.  
  
 Una vez creados los archivos de la memoria caché, use la <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A> método para examinar los archivos para buscar todos los complementos que coinciden con una determinada vista de host del complemento. También puede usar el <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A> método para buscar un complemento específico.  
  
> [!IMPORTANT]
>  No se admite para permitir que los usuarios de confianza o entidades tener acceso a PipelineSegments.store y Addins.store. Si lo hace, puede causar problemas de corrupción de datos para las aplicaciones.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo actualizar los archivos de la caché.  
  
 [!code-csharp[AddInP3Host#2](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#2)]
 [!code-vb[AddInP3Host#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindAddIn">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIn (Type hostViewOfAddIn, string pipelineRootFolderPath, string addInFilePath, string addInTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIn(class System.Type hostViewOfAddIn, string pipelineRootFolderPath, string addInFilePath, string addInTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIn(System.Type,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIn (hostViewOfAddIn As Type, pipelineRootFolderPath As String, addInFilePath As String, addInTypeName As String) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIn(Type ^ hostViewOfAddIn, System::String ^ pipelineRootFolderPath, System::String ^ addInFilePath, System::String ^ addInTypeName);" />
      <MemberSignature Language="F#" Value="static member FindAddIn : Type * string * string * string -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIn (hostViewOfAddIn, pipelineRootFolderPath, addInFilePath, addInTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
        <Parameter Name="addInFilePath" Type="System.String" />
        <Parameter Name="addInTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">The type that defines the host's view of the add-in.</param>
        <param name="pipelineRootFolderPath">The path to the root of the pipeline directory structure.</param>
        <param name="addInFilePath">The path and file name of the add-in to find.</param>
        <param name="addInTypeName">The type name of the add-in.</param>
        <summary>Finds a specific add-in.</summary>
        <returns>A collection of tokens that contains only the token representing the add-in that was found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se encuentra una sola canalización para un complemento, será el único elemento en el <xref:System.AddIn.Hosting.AddInToken> colección. Si se encuentran varias canalizaciones para el complemento especificado, se pueden diferenciar examinando el <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se busca un complemento específico.  
  
 [!code-csharp[AddInP3Host#6](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#6)]
 [!code-vb[AddInP3Host#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="pipelineRootFolderPath" /> or <paramref name="addInFilePath" /> or <paramref name="addInTypeName" /> is 0.  \- or -  The add-in file does not exist in <paramref name="addInfilePath" />.</exception>
        <exception cref="T:System.ArgumentNullException">One or more parameters are <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have read access permission to <paramref name="pipelineRootFolderPath" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">la capacidad leer la carpeta del complemento. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />. Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</permission>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.String,System.String[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAddIns">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Finds all add-ins for a specified host view of the add-in.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, location As PipelineStoreLocation) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * System.AddIn.Hosting.PipelineStoreLocation -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">The type that defines the host's view of the add-in.</param>
        <param name="location">The host application's base directory.</param>
        <summary>Finds all add-ins for a specified host view of the add-in at a location specified by the <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> enumeration value.</summary>
        <returns>A collection of tokens that represent the add-ins that were found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.AddIn.Hosting.PipelineStoreLocation> enumeración actualmente, solo contiene el <xref:System.AddIn.Hosting.PipelineStoreLocation.ApplicationBase> valor, que señala al directorio de base de la aplicación del host.  
  
   
  
## Examples  
 En el ejemplo siguiente se buscan los complementos en la ubicación especificada por el <xref:System.AddIn.Hosting.PipelineStoreLocation> enumeración.  
  
 [!code-csharp[AddInP3Host#4](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#4)]
 [!code-vb[AddInP3Host#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> is an invalid <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, System.AddIn.Hosting.PipelineStoreLocation location, params string[] addInFolderPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, valuetype System.AddIn.Hosting.PipelineStoreLocation location, string[] addInFolderPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.AddIn.Hosting.PipelineStoreLocation,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, location As PipelineStoreLocation, ParamArray addInFolderPaths As String()) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::AddIn::Hosting::PipelineStoreLocation location, ... cli::array &lt;System::String ^&gt; ^ addInFolderPaths);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * System.AddIn.Hosting.PipelineStoreLocation * string[] -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, location, addInFolderPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
        <Parameter Name="addInFolderPaths" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">The type that defines the host's view of the add-in.</param>
        <param name="location">One of the enumeration values.  Currently the only value in this enumeration is the directory specified by the <see cref="P:System.AppDomainSetup.ApplicationBase" /> property that was used to set up the host's application domain.</param>
        <param name="addInFolderPaths">(Optional). The path of the directory that contains one or more subdirectories of add-ins. Because this parameter takes an array of strings, you can specify more than one path.  This parameter is not required if your add-ins are located in the pipeline directory structure under the AddIns folder.</param>
        <summary>Finds all add-ins for a specified host view of the add-in at the location specified by a <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value and an optional add-ins folder.</summary>
        <returns>A collection of tokens that represent the add-ins that were found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta sobrecarga del método para habilitar un host de confianza parcial, que no tenga permiso de detección de ruta de acceso para detectar su propia ubicación buscar los complementos en su propio directorio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> is an invalid <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, string pipelineRootFolderPath, params string[] addInFolderPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, string pipelineRootFolderPath, string[] addInFolderPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, pipelineRootFolderPath As String, ParamArray addInFolderPaths As String()) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::String ^ pipelineRootFolderPath, ... cli::array &lt;System::String ^&gt; ^ addInFolderPaths);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * string * string[] -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, pipelineRootFolderPath, addInFolderPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
        <Parameter Name="addInFolderPaths" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">The type that defines the host's view of the add-in.</param>
        <param name="pipelineRootFolderPath">The path of the root of the pipeline directory structure.</param>
        <param name="addInFolderPaths">(Optional). The path of the directory that contains one or more subdirectories of add-ins. Because this parameter takes an array of strings, you can specify more than one path.  This parameter is not required if your add-ins are located in the pipeline directory structure under the AddIns folder.</param>
        <summary>Finds all add-ins for a specified host view of the add-in from a specified root directory.</summary>
        <returns>A collection of tokens that represent the add-ins that were found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método examina los archivos del almacén de información almacenada en caché de segmento de complemento y la canalización para buscar todos los complementos que coinciden con un determinado `hostAddInView` tipo. A continuación, puede usar uno de los tokens en el valor devuelto <xref:System.AddIn.Hosting.AddInToken> colección para activar un complemento específico mediante una llamada a la <xref:System.AddIn.Hosting.AddInToken.Activate%2A> método de la <xref:System.AddIn.Hosting.AddInToken> clase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.FindAddIn(System.Type,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rebuild">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rebuilds the pipeline segments cache and includes new segments.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rebuild">
      <MemberSignature Language="C#" Value="public static string[] Rebuild (System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Rebuild(valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Rebuild(System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rebuild (location As PipelineStoreLocation) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Rebuild(System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member Rebuild : System.AddIn.Hosting.PipelineStoreLocation -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Rebuild location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="location">One of the enumeration values.  Currently the only value in this enumeration is the directory specified by the <see cref="P:System.AppDomainSetup.ApplicationBase" /> property that was used to set up the host's application domain.</param>
        <summary>Rebuilds the pipeline segments cache and includes new segments at the location specified by a <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta sobrecarga del método para habilitar un host de confianza parcial, que no tenga permiso para detectar su propia ubicación detectar complementos en su propio directorio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> is an invalid <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Rebuild">
      <MemberSignature Language="C#" Value="public static string[] Rebuild (string pipelineRootFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Rebuild(string pipelineRootFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Rebuild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rebuild (pipelineRootFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Rebuild(System::String ^ pipelineRootFolderPath);" />
      <MemberSignature Language="F#" Value="static member Rebuild : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Rebuild pipelineRootFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipelineRootFolderPath">The path of the root of the pipeline directory structure.</param>
        <summary>Rebuilds the pipeline segments cache and includes new segments from a specified root directory.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también vuelve a generar la memoria caché de complementos si los complementos están en la estructura de directorios de canalización.  
  
 Utilice este método sólo cuando puede haber un problema con la memoria caché y deben volver a generar. Para acelerar el rendimiento, utilice el <xref:System.AddIn.Hosting.AddInStore.Update%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.Update(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RebuildAddIns">
      <MemberSignature Language="C#" Value="public static string[] RebuildAddIns (string addInsFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] RebuildAddIns(string addInsFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.RebuildAddIns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RebuildAddIns (addInsFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ RebuildAddIns(System::String ^ addInsFolderPath);" />
      <MemberSignature Language="F#" Value="static member RebuildAddIns : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.RebuildAddIns addInsFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addInsFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addInsFolderPath">The path of the directory that contains one or more subdirectories of add-ins.</param>
        <summary>Rebuilds the add-in cache and includes new add-ins from a specified root directory.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método si los complementos están fuera de la estructura de directorios de canalización.  
  
 Utilice este método sólo cuando puede haber un problema con la memoria caché y deben volver a generar. Para acelerar el rendimiento, utilice el <xref:System.AddIn.Hosting.AddInStore.UpdateAddIns%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="addInsFolderPath" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Caller does not have both read and write access permissions to the location that is specified by <paramref name="addInsFolderPath" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">la capacidad de leer y actualizar la carpeta del complemento. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />. Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</permission>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.UpdateAddIns(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Updates the pipeline segments cache with new segments.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static string[] Update (System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Update(valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Update(System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update (location As PipelineStoreLocation) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Update(System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member Update : System.AddIn.Hosting.PipelineStoreLocation -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Update location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="location">One of the enumeration values.  Currently the only value in this enumeration is the directory as specified by the <see cref="P:System.AppDomainSetup.ApplicationBase" /> property that was used to set up the host's application domain.</param>
        <summary>Updates the pipeline segments cache with new segments at the location specified by a <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta sobrecarga del método para habilitar un host de confianza parcial, que no tenga permiso para detectar su propia ubicación detectar complementos en su propio directorio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> is an invalid <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static string[] Update (string pipelineRootFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Update(string pipelineRootFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Update(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update (pipelineRootFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Update(System::String ^ pipelineRootFolderPath);" />
      <MemberSignature Language="F#" Value="static member Update : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Update pipelineRootFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipelineRootFolderPath">The path of the root of the pipeline directory structure.</param>
        <summary>Updates the pipeline segments cache with new segments from a specified root directory.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también actualiza la caché de complementos si los complementos están en la estructura de directorios de canalización.  
  
 Si no hay ningún nuevos segmentos de canalización o complementos, este método sólo valida la memoria caché.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo actualizar los archivos de la memoria caché. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.AddIn.Hosting.AddInStore> clase.  
  
 [!code-csharp[AddInP3Host#3](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#3)]
 [!code-vb[AddInP3Host#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAddIns">
      <MemberSignature Language="C#" Value="public static string[] UpdateAddIns (string addInsFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] UpdateAddIns(string addInsFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.UpdateAddIns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateAddIns (addInsFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ UpdateAddIns(System::String ^ addInsFolderPath);" />
      <MemberSignature Language="F#" Value="static member UpdateAddIns : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.UpdateAddIns addInsFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addInsFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addInsFolderPath">The path of the directory that contains one or more subdirectories of add-ins.</param>
        <summary>Updates the add-in cache and includes new add-ins at a specified location.</summary>
        <returns>A collection of strings that describe warnings as the pipeline segments are evaluated.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método si los complementos están fuera de la estructura de directorios de canalización.  
  
 Si no hay complementos nuevos se instalan, este método sólo valida la memoria caché.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">A segment directory is missing from the pipeline directory structure.</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">There is an access violation to the pipeline directory structure.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="addInsFolderPath" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Caller does not have both read and write access permissions to the location that is specified by <paramref name="addInsFolderPath" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">la capacidad de leer y actualizar la carpeta del complemento. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />. Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>