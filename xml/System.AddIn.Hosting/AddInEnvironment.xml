<Type Name="AddInEnvironment" FullName="System.AddIn.Hosting.AddInEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03861fa059d5a59ed3db5e037b00de56a98d2c50" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51892626" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInEnvironment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInEnvironment" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInEnvironment sealed" />
  <TypeSignature Language="F#" Value="type AddInEnvironment = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso al dominio de aplicación y al proceso de un complemento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta clase para cargar complementos en el entorno deseado, que puede ser uno de los siguientes:  
  
-   Un dominio de aplicación existente para el que tiene el <xref:System.AppDomain> objeto.  
  
-   Un dominio de aplicación que se generó automáticamente para activar un complemento.  
  
-   Un proceso externo existente.  
  
 Para obtener el <xref:System.AddIn.Hosting.AddInEnvironment> de objeto para un complemento, pase dominio de aplicación del complemento para el <xref:System.AddIn.Hosting.AddInEnvironment> constructor de clase. Como alternativa, puede usar el <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> propiedad de la <xref:System.AddIn.Hosting.AddInController> clase para obtener el complemento <xref:System.AddIn.Hosting.AddInEnvironment> objeto.  
  
 Después de obtener el <xref:System.AddIn.Hosting.AddInEnvironment> de objeto, puede hacer lo siguiente:  
  
-   Pasar ese <xref:System.AddIn.Hosting.AddInEnvironment> objeto correspondientes <xref:System.AddIn.Hosting.AddInToken.Activate%2A> sobrecarga del método. El complemento se activará en el dominio de aplicación y el proceso que está representado por la <xref:System.AddIn.Hosting.AddInEnvironment> objeto.  
  
-   Use la <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> propiedad para obtener un <xref:System.AddIn.Hosting.AddInProcess> objeto. A continuación, pasar ese objeto al adecuado <xref:System.AddIn.Hosting.AddInToken.Activate%2A> sobrecarga del método. El complemento se activará en el proceso que está representado por la <xref:System.AddIn.Hosting.AddInProcess> objeto, pero en un dominio de aplicación.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Complementos y extensibilidad</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInEnvironment (AppDomain appDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AppDomain appDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInEnvironment(AppDomain ^ appDomain);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Hosting.AddInEnvironment : AppDomain -&gt; System.AddIn.Hosting.AddInEnvironment" Usage="new System.AddIn.Hosting.AddInEnvironment appDomain" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appDomain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="appDomain">Dominio de aplicación que contiene el complemento.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.AddIn.Hosting.AddInEnvironment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tiene acceso al dominio de aplicación que contiene el complemento necesita, puede utilizar este constructor para obtener el complemento <xref:System.AddIn.Hosting.AddInEnvironment> objeto. En caso contrario, puede usar el <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> propiedad de la <xref:System.AddIn.Hosting.AddInController> clase para obtener el <xref:System.AddIn.Hosting.AddInEnvironment> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="appDomain" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Se exigen permisos Full Trust. Un llamador de la cadena de llamadas no tiene suficientes permisos.</exception>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInProcess Process { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInProcess Process" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Process As AddInProcess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInProcess ^ Process { System::AddIn::Hosting::AddInProcess ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Process : System.AddIn.Hosting.AddInProcess" Usage="System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInProcess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.AddIn.Hosting.AddInProcess" /> que representa el proceso en el que se está ejecutando el complemento.</summary>
        <value>Proceso en el que se está ejecutando el complemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para activar varios complementos en el mismo proceso pero en diferentes dominios.  
  
 Pase el <xref:System.AddIn.Hosting.AddInProcess> objeto obtenido con esta propiedad en la correspondiente <xref:System.AddIn.Hosting.AddInToken.Activate%2A> sobrecarga del método.  
  
 Si desea activarlas en el mismo dominio en un proceso externo, debe pasar el <xref:System.AddIn.Hosting.AddInEnvironment> objeto directamente a la <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=nameWithType> sobrecarga del método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>