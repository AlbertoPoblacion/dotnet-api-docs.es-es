<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4544db5d35d59148a39a15185fab1a57d9cdada6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define la clase base opcional de los servicios Web XML, que proporciona acceso directo a los objetos comunes de ASP.NET, como los de aplicación y estado de sesión.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no necesita acceso a los objetos comunes de ASP.NET, todavía puede crear un servicio Web XML sin tener que derivar de <xref:System.Web.Services.WebService>. Pueden tener acceso a objetos ASP.NET adicionales a través de <xref:System.Web.Services.WebService.Context%2A>.  
  
 Los métodos de servicio Web XML que tienen la <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propiedad del <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> establecido en `true`, no tiene acceso a sus <xref:System.Web.HttpContext>. Por lo tanto, el acceso a cualquiera de las propiedades de la <xref:System.Web.Services.WebService> (clase), desde dentro de ese método de servicio Web XML, devolver `null`.  
  
 Si está utilizando los métodos de servicio Web XML de .NET Framework versión 1.0, al que se han el <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> atributo aplicado a ellos con el <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propiedad de conjunto a `true`, no tiene acceso a sus <xref:System.Web.HttpContext> mediante el estática <xref:System.Web.HttpContext.Current%2A> propiedad. Para tener acceso a la <xref:System.Web.HttpContext>, derive la clase que implementa el método de servicio Web XML desde <xref:System.Web.Services.WebService> y tener acceso a la <xref:System.Web.Services.WebService.Context%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente crea un servicio Web XML, que se deriva de <xref:System.Web.Services.WebService>, para utilizar el <xref:System.Web.Services.WebService.Context%2A> propiedad para obtener la hora de la solicitud en el servidor.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de aplicación de la solicitud HTTP actual.</summary>
        <value>Un objeto <see cref="T:System.Web.HttpApplicationState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estado de la aplicación y el estado de sesión, pueden usar los servicios Web XML. Estado de la aplicación se mantiene en todas las sesiones que se obtiene acceso a un servicio Web XML, independientemente de si se deshabilita el estado de sesión para un método (mediante el uso de la <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propiedad de la <xref:System.Web.Services.WebMethodAttribute>).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra un recuento de visitas, incrementa el recuento de cada vez que un explorador Web llama al método de servicio Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Web.HttpContext" /> de ASP.NET para la solicitud actual, que encapsula todo el contexto específico de HTTP utilizado por el servidor HTTP para procesar solicitudes Web.</summary>
        <value>Objeto <see cref="T:System.Web.HttpContext" /> de ASP.NET para la solicitud actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Métodos de servicio Web XML que tengan tanto el <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> atributo aplicado a ellos con el <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propiedad del conjunto de `true`, no tiene acceso a sus <xref:System.Web.HttpContext> mediante el método estático <xref:System.Web.HttpContext.Current%2A> propiedad. Para tener acceso a la <xref:System.Web.HttpContext>, derive la clase que implementa el método de servicio Web XML desde <xref:System.Web.Services.WebService> y tener acceso a la <xref:System.Web.Services.WebService.Context%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente utiliza la <xref:System.Web.Services.WebService.Context%2A> propiedad para obtener la hora de la solicitud en el servidor.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="Context" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de la clase <see cref="T:System.Web.HttpServerUtility" /> para la solicitud actual.</summary>
        <value>Un objeto <see cref="T:System.Web.HttpServerUtility" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.HttpServerUtility> clase proporciona varios métodos que pueden usarse en el procesamiento de solicitudes Web, incluido <xref:System.Web.HttpServerUtility.CreateObject%2A> (para crear instancias de objetos COM).  
  
   
  
## Examples  
 En el ejemplo siguiente devuelve el nombre del equipo del servidor Web mediante la <xref:System.Web.Services.WebService.Server%2A> propiedad.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la instancia de <see cref="T:System.Web.SessionState.HttpSessionState" /> para la solicitud actual.</summary>
        <value>Objeto <see cref="T:System.Web.SessionState.HttpSessionState" /> que representa el objeto de estado de sesión de ASP.NET para la sesión actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente usa el estado de sesión para determinar cuántas veces una sesión determinada tiene acceso al método de servicio Web XML `SessionHitCounter`. En este ejemplo, el <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propiedad de la <xref:System.Web.Services.WebMethodAttribute> está establecido en `true` con el fin de obtener acceso al estado de sesión.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión del protocolo SOAP utilizada para realizar la solicitud SOAP al servicio Web XML.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. El valor predeterminado es <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se utiliza el protocolo SOAP para comunicarse con el servicio Web XML, como HTTP-GET o HTTP-POST, el valor de la <xref:System.Web.Services.WebService.SoapVersion%2A> propiedad es <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.  
  
 Para los servicios Web XML que no se derivan de la <xref:System.Web.Services.WebService> de la clase, la versión del protocolo SOAP utilizado para realizar la solicitud SOAP en la Web de XML puede ser también tener acceso al servicio utilizando la entrada "WebServiceSoapVersion" de la <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> propiedad. Que la entrada es de tipo <xref:System.Web.Services.Protocols.SoapProtocolVersion>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de servidor ASP.NET <see cref="P:System.Web.HttpContext.User" />. Puede utilizarse con el fin de autenticar la autorización de un usuario para ejecutar la solicitud.</summary>
        <value>
          <see cref="T:System.Security.Principal.IPrincipal" /> que representa el objeto <see cref="P:System.Web.HttpContext.User" /> del servidor ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Information Services (IIS) y .NET Framework deben configurarse para la autenticación en orden para el <xref:System.Web.Services.WebService.User%2A> propiedad para que sea significativo. La autenticación es el proceso de aceptación de credenciales de un usuario y validación de esas credenciales en alguna autoridad. Si las credenciales son válidas, tiene una identidad autenticada. Se configura la autenticación en .NET Framework mediante la colocación de las entradas en el archivo web.config.  
  
 El ejemplo siguiente muestra las entradas se coloca en el archivo web.config para habilitar la autenticación de Windows.  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 Para obtener más información acerca de cómo configurar la seguridad para un servicio Web XML, vea [ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).  
  
   
  
## Examples  
 En el ejemplo siguiente busca el nombre de usuario autenticado y devuelve ese nombre.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>