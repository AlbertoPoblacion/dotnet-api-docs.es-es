<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bec1ff6c2715a44812677a2fe7298a69548c650f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cuando este atributo se agrega a un método en un servicio Web XML creado mediante ASP.NET, el método es invocable desde clientes Web remotos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los métodos de una clase que tengan este atributo establecido se denominan métodos de servicio Web XML. El método y la clase deben ser pública y en ejecución dentro de una aplicación Web ASP.NET.  
  
   
  
## Examples  
 En el ejemplo siguiente el método `GetMachineName` puede llamar de forma remota a través de la Web, porque tiene un <xref:System.Web.Services.WebMethodAttribute>. `GetUserName` no se puede llamar de forma remota, porque no tiene un <xref:System.Web.Services.WebMethodAttribute>, aunque sea `public`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica si se habilitó el estado de la sesión para el método de servicios Web XML.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica si se habilitó el estado de la sesión para el método de servicios Web XML.</param>
        <param name="transactionOption">Inicializa la compatibilidad con transacciones de un método de servicios Web XML.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada de servicio web solo puede ser la raíz de una transacción, debido a la naturaleza sin estado del protocolo HTTP. Esto significa que las dos opciones siguientes son equivalentes, con cada llamada crea una nueva transacción:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 También significa que todas las configuraciones siguientes son equivalentes; lo que significa que no hay compatibilidad con transacciones:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica si se habilitó el estado de la sesión para el método de servicios Web XML.</param>
        <param name="transactionOption">Inicializa la compatibilidad con transacciones de un método de servicios Web XML.</param>
        <param name="cacheDuration">Indica el número de segundos durante los cuales la respuesta se almacena en la caché.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada de servicio web solo puede ser la raíz de una transacción, debido a la naturaleza sin estado del protocolo HTTP.  Esto significa que las dos opciones siguientes son equivalentes, con cada llamada crea una nueva transacción:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 También significa que todas las configuraciones siguientes son equivalentes; lo que significa que no hay compatibilidad con transacciones:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica si se habilitó el estado de la sesión para el método de servicios Web XML.</param>
        <param name="transactionOption">Inicializa la compatibilidad con transacciones de un método de servicios Web XML.</param>
        <param name="cacheDuration">Indica el número de segundos durante los cuales la respuesta se almacena en la caché.</param>
        <param name="bufferResponse">Indica si la respuesta para esta solicitud se almacena en el búfer.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada de servicio web solo puede ser la raíz de una transacción, debido a la naturaleza sin estado del protocolo HTTP.  Esto significa que las dos opciones siguientes son equivalentes, con cada llamada crea una nueva transacción:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 También significa que todas las configuraciones siguientes son equivalentes; lo que significa que no hay compatibilidad con transacciones:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si la respuesta para esta solicitud se almacena en el búfer.</summary>
        <value>Es <see langword="true" /> si la respuesta para esta solicitud se almacena en el búfer; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `true`, serializa la respuesta del método de servicio Web XML en un búfer de memoria hasta que la respuesta se serializa por completo o el búfer esté lleno. Una vez que la respuesta se almacena en búfer, se devuelve al cliente de servicios Web XML a través de la red. Cuando <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> es `false`, la respuesta al método de servicio Web XML se envía al cliente según se serializa. En general, sólo se desea establecer <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `false`, si se sabe que un método de servicios Web XML devuelve grandes cantidades de datos al cliente. Para pequeñas cantidades de datos, es mejor con el rendimiento del servicio Web XML <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `true`.  
  
 Cuando <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> es `false`, se deshabilitan las extensiones SOAP para el método de servicio Web XML.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> propiedad `false` y controla la transmisión por secuencias de un archivo de texto al cliente. El ejemplo de código muestra cómo devolver un gran fragmento de datos al cliente utilizando una clase que implementa el <xref:System.Collections.IEnumerable> interfaz.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de segundos durante los cuales la respuesta se almacena en la caché.</summary>
        <value>Número de segundos durante los cuales la respuesta se almacena en la caché. El valor predeterminado es 0, lo que significa que la respuesta no se almacena en la caché.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando está habilitada la caché las solicitudes y respuestas se mantienen en memoria en el servidor para al menos la duración de caché por lo que debe tener precaución si espera solicitudes o respuestas a ser muy grande o espera las solicitudes para variar enormemente.  
  
 Hay dos aspectos que pueden afectar al almacenamiento en la caché de resultados en una aplicación de servicio Web ASP.NET 2.0.  
  
 En ASP.NET 2.0, el método HTTP de la página de prueba se ha cambiado de GET a POST. Sin embargo, los métodos POST normalmente no se almacenan en caché. Si cambia la página de prueba de una aplicación de servicio Web ASP.NET 2.0 para utilizar GET, el almacenamiento en caché funciona correctamente.  
  
 Además, HTTP indica que un agente de usuario (el explorador o la aplicación que realiza la llamada) debe tener la capacidad de anular el almacenamiento en caché del servidor estableciendo la directiva de control de caché en no caché. Por consiguiente, las aplicaciones ASP.NET omiten los resultados almacenados en caché si encuentran un encabezado que indica que no se debe utilizar el almacenamiento en caché.  
  
   
  
## Examples  
 En el ejemplo siguiente se coloca el resultado de la llamada a la `ServiceUsage` método de servicios Web XML en la memoria caché durante 60 segundos. Cada vez que se ejecuta el cliente de servicios Web XML la `ServiceUsage` método de servicios Web XML durante ese tiempo, se devuelve el mismo resultado.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Mensaje descriptivo del método de servicios Web XML.</summary>
        <value>Mensaje descriptivo del método de servicios Web XML. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El mensaje descriptivo se muestra a los posibles consumidores del servicio Web XML cuando se generan documentos de descripción del servicio Web XML, como la descripción del servicio y el servicio de la página de ayuda.  
  
   
  
## Examples  
 En el ejemplo siguiente, la cadena `Obtains the Server Computer Name` se utiliza para describir el método de servicios Web XML en la página de Ayuda de servicio y la descripción del servicio para el servicio Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si se habilitó el estado de la sesión para un método de servicios Web XML.</summary>
        <value>
          <see langword="true" /> si se habilitó el estado de la sesión para un método de servicios Web XML. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el fin de almacenar el estado de sesión en ASP.NET <xref:System.Web.SessionState.HttpSessionState> objeto, el servicio Web XML debe heredar de <xref:System.Web.Services.WebService> y un <xref:System.Web.Services.WebMethodAttribute> aplicado al método de servicios Web XML, establecer el <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propiedad `true`. Si el estado de sesión no es necesaria para un método de servicios Web XML, a continuación, si la deshabilita, puede mejorar el rendimiento.  
  
 Un cliente de servicios Web XML se identifica mediante una cookie HTTP devuelta por un servicio Web XML. Para un servicio Web XML mantener el estado de sesión para un cliente, el cliente debe conservar la cookie. Los clientes pueden recibir la cookie HTTP mediante la creación de una nueva instancia de <xref:System.Net.CookieContainer> y asignarla a la <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propiedad de la clase de proxy antes de llamar al método de servicio Web XML. Si necesita mantener el estado de sesión más allá de cuando la instancia de la clase de proxy se sale del ámbito, el cliente debe conservar la cookie HTTP entre las llamadas al servicio Web XML. Por ejemplo, un cliente de formularios Web Forms puede conservar la cookie HTTP guardando el <xref:System.Net.CookieContainer> en su propio estado de sesión. Dado que no todos los servicios Web XML utilizan el estado de sesión y, por tanto, los clientes no siempre deben usar el <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propiedad de un proxy de cliente, la documentación para el servicio Web XML debe indicar si se utiliza el estado de sesión.  
  
   
  
## Examples  
 El ejemplo siguiente usa el estado de sesión para determinar cuántas veces una sesión determinada tiene acceso el método de servicio Web XML `SessionHitCounter`.  
  
  
  
 El ejemplo de código siguiente es un cliente de formularios Web Forms de un servicio Web XML que utiliza el estado de sesión. El cliente conserva la cookie HTTP que identifica de forma única la sesión mediante el almacenamiento en el estado de sesión del cliente.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nombre que se utiliza para el método de servicios Web XML en los datos que se pasan a un método de servicios Web XML y que se devuelven desde éste.</summary>
        <value>Nombre que se utiliza para el método de servicios Web XML en los datos que se pasan a un método de servicios Web XML y desde éste. El valor predeterminado es el nombre del método de servicios Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propiedad puede usarse para el alias de nombres de método o propiedad. El uso más común de la <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propiedad será identificar los métodos polimórficos. De forma predeterminada, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> se establece en el nombre del método de servicio Web XML. Por tanto, si un servicio Web XML contiene dos o más métodos de servicio Web XML con el mismo nombre, se pueden identificar los métodos de servicio Web XML individuales estableciendo el <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> a un nombre único dentro del servicio Web XML, sin cambiar el nombre de la nombre del método real en el código.  
  
 Cuando se pasan datos a un servicio Web XML se envía en una solicitud y cuando se devuelve se envía en una respuesta. En la solicitud y respuesta, el nombre utilizado para el método de servicio Web XML es su <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propiedad.  
  
 El nombre de mensaje asociado con un método de servicios Web XML debe ser único dentro del servicio Web XML.  
  
 Si se agrega un nuevo método de servicio Web XML con el mismo nombre pero con distintos parámetros después de que los clientes son una llamada al método original, debe especificarse un nombre de mensaje diferente para el nuevo método pero el nombre del mensaje original se debe dejar tal cual garantizar la compatibilidad con los clientes existentes.  
  
   
  
## Examples  
 En el ejemplo siguiente, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> se usa para eliminar la ambigüedad de los dos `Add` métodos.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica la compatibilidad con transacciones de un método de servicios Web XML.</summary>
        <value>Compatibilidad con transacciones de un método de servicios Web XML. El valor predeterminado es <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Métodos de servicio Web XML sólo pueden participar como el objeto raíz en una transacción, debido a la naturaleza sin estado del protocolo HTTP. Métodos de servicio Web XML pueden llamar a objetos COM que participan en la misma transacción que el método de servicio Web XML, si el objeto COM está marcado para ejecutarse dentro de una transacción en la herramienta administrativa Servicios de componentes. Si un método de servicios Web XML con un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> propiedad de `Required` o `RequiresNew` invoca otro método de servicio Web XML con un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> propiedad de `Required` o `RequiresNew`, participa de cada método de servicios Web XML en su propio transacción, ya que un método de servicios Web XML sólo puede actuar como el objeto raíz en una transacción.  
  
|Elemento|Descripción|  
|----------|-----------------|  
|Deshabilitado|Indica que el método de servicio Web XML no se ejecuta dentro del ámbito de una transacción. Cuando se procesa una solicitud, el método de servicio Web XML se ejecuta sin una transacción.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|NotSupported|Indica que el método de servicio Web XML no se ejecuta dentro del ámbito de una transacción. Cuando se procesa una solicitud, el método de servicio Web XML se ejecuta sin una transacción.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|Compatible|Indica que el método de servicio Web XML no se ejecuta dentro del ámbito de las transacciones. Cuando se procesa una solicitud, el servicio Web XML se crea sin una transacción.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|Obligatorio|Indica que el método de servicio Web XML requiere una transacción. Puesto que los métodos de servicio Web XML solo pueden participar como objeto raíz en una transacción, se creará una nueva transacción para el método de servicio Web XML.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|Indica que el método de servicio Web XML requiere una nueva transacción. Cuando se procesa una solicitud, se crea el servicio Web XML dentro de una transacción nueva.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 Si una excepción se produce desde o no se detecta mediante un método de servicios Web XML, automáticamente se anula la transacción. Si se produce ninguna excepción la transacción se confirma automáticamente a menos que llame explícitamente al método `SetAbort`.  
  
   
  
## Examples  
 El ejemplo siguiente comienza una nueva transacción cuando la `Transfer` se llama al método.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>