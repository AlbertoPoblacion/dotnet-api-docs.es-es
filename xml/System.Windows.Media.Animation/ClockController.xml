<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f5db2fabcb7d8bd16865ae93253c3f12de7ee2" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209612" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controla interactivamente un <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use un <xref:System.Windows.Media.Animation.ClockController> a interactivamente iniciar, pausar, reanudar, buscar, omitir, detener y quitar un <xref:System.Windows.Media.Animation.Clock>. Solo de forma interactiva, puede controlar los relojes de nivel de raíz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece la propiedad <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> de destino para que comience en el siguiente paso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que el destino <xref:System.Windows.Media.Animation.Clock> se comporte como si su <xref:System.Windows.Media.Animation.Timeline> del objeto <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> se establece en la hora del siguiente paso. La escala de tiempo del real <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> configuración se omite (pero no cambia).  
  
 Este método cambia el reloj de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. El <xref:System.Windows.Media.Animation.ClockController.Begin%2A> método no reanuda un reloj en pausa.  
  
 Este método no tiene ningún efecto en el árbol de control de tiempo hasta la próxima vez que se procese un paso. Como efecto secundario, los eventos adecuados, también no se generará hasta ese momento. Llamar a este método desencadena el <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> y <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Media.Animation.Clock" /> controlado por este objeto <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>Objeto <see cref="T:System.Windows.Media.Animation.Clock" /> controlado por este objeto <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene el progreso de <see cref="T:System.Windows.Media.Animation.Clock" /> de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede pausar un <xref:System.Windows.Media.Animation.Clock> independientemente de su actual estado, pausar y detener un reloj no cambia su estado actual. Se puede pausar un reloj mientras <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. La única forma de quitar la pausa un reloj es mediante la <xref:System.Windows.Media.Animation.ClockController.Resume%2A> método. Si se pausa un reloj implícitamente pausa a sus elementos secundarios.  
  
 Al llamar a este método cuando ya está en pausa el reloj de destino no tiene ningún efecto.  
  
 Activa un reloj de poner en pausa el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita el objeto <see cref="T:System.Windows.Media.Animation.Clock" /> asociado a <see cref="T:System.Windows.Media.Animation.ClockController" /> de propiedades a las que anima. El reloj y sus relojes secundarios ya no afectarán estas propiedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método desencadena el <xref:System.Windows.Media.Animation.Clock.RemoveRequested> eventos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo quitar y en caso contrario, controlar interactivamente un reloj.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite un <see cref="T:System.Windows.Media.Animation.Clock" /> que se pausó previamente para reanudar su progreso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede pausar o reanudar un <xref:System.Windows.Media.Animation.Clock> independientemente de su estado actual, pausar o reanudar un reloj no cambia su estado actual. Se puede pausar un reloj mientras <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, o <xref:System.Windows.Media.Animation.ClockState.Filling>. Es la única forma de reanudar un reloj en pausa mediante la <xref:System.Windows.Media.Animation.ClockController.Resume%2A> método. Reanuda un reloj implícitamente reanuda a sus elementos secundarios. Llamar a este método en un reloj que no está en pausa no tiene ningún efecto.  
  
 Reanudar activa un reloj en pausa el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Desplazamiento de búsqueda, medido en el tiempo del reloj de destino. Este desplazamiento es relativo a los elementos <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del reloj, según el valor de <paramref name="origin" />.</param>
        <param name="origin">Valor que indica si el desplazamiento especificado es relativo a los elementos <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del reloj de destino.</param>
        <summary>Busca el elemento <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> de destino en la cantidad especificada cuando se produce la siguiente marca. Si se detiene el reloj de destino, la búsqueda lo activa de nuevo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Buscar operaciones no toman el <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> en cuenta la configuración de escala de tiempo del reloj: el reloj se trata como si su escala de tiempo tiene una <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 1 y ningún <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Este método cambia el reloj <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>. Este método no tiene ningún efecto en el árbol de control de tiempo hasta la próxima vez que se procese un paso. Como efecto secundario, los eventos adecuados también, no se generará hasta ese momento.  
  
 Búsqueda activa un guión gráfico el <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> y <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
 Si el reloj de destino tiene nodos secundarios, su hora actual se actualiza en consecuencia.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo buscar mediante un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Desplazamiento de búsqueda, medido en el tiempo del reloj de destino. Este desplazamiento es relativo a los elementos <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del reloj, según el valor de <paramref name="origin" />.</param>
        <param name="origin">Valor que indica si el desplazamiento especificado es relativo a los elementos <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> o <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> del reloj de destino.</param>
        <summary>Busca inmediatamente en el objeto <see cref="T:System.Windows.Media.Animation.Clock" /> de destino la cantidad especificada. Si se detiene el reloj de destino, la búsqueda lo activa de nuevo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Buscar operaciones no toman el <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> o <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> en cuenta la configuración de escala de tiempo del reloj: el reloj se trata como si su escala de tiempo tiene una <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 1 y ningún <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> Alinea la hora buscada del reloj con el último paso del reloj. Los valores se actualizan inmediatamente para reflejar los cambios debido a <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, aunque la pantalla no refleja estos cambios hasta que las actualizaciones de pantalla.  
  
 Si el reloj de destino tiene nodos secundarios, su hora actual se actualiza en consecuencia.  
  
 Este método cambia el reloj <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Búsqueda activa un guión gráfico el <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> y <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra tanto el <xref:System.Windows.Media.Animation.ClockController.Seek%2A> y <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> métodos de un <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Adelanta la hora actual del objeto <see cref="T:System.Windows.Media.Animation.Clock" /> de destino al final de su período activo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método avanza el reloj de destino la hora actual al final de su período activo; el comportamiento del reloj en este momento especificado por el <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> de su <xref:System.Windows.Media.Animation.Timeline>. Si la escala de tiempo <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> propiedad está establecida en <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, rellena el reloj; si la propiedad se establece en <xref:System.Windows.Media.Animation.FillBehavior.Stop>, los delimitadores de reloj.  
  
 Este método no tiene un solo si efecto el reloj de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> es <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Este método no tiene ningún efecto en el árbol de control de tiempo hasta la próxima vez que se procese un paso. Como efecto secundario, los eventos adecuados también, no se generará hasta ese momento.  
  
 Avanzar un guión gráfico para su relleno desencadenadores períodos el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> y <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la velocidad interactiva del destino <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <value>Valor finito mayor que cero que describe la velocidad interactiva del reloj de destino. Este valor se multiplica por el valor de la <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> de la <see cref="T:System.Windows.Media.Animation.Timeline" /> del reloj. Por ejemplo, si la <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> de la escala de tiempo es 0,5 y la <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> del objeto <see cref="T:System.Windows.Media.Animation.ClockController" /> del controlador es 3,0, la escala de tiempo se mueve a 1,5 veces la velocidad normal (0,5 * 3,0). El valor predeterminado es 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer esta propiedad no tiene ningún efecto hasta el paso siguiente. Si establece esta propiedad y, a continuación, obtener su valor antes de se produce el siguiente paso, obtendrá el valor antiguo. Esta propiedad devolverá el nuevo valor después del paso siguiente.  
  
 Al establecer esta propiedad no cambia el valor de la escala de tiempo subyacente <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Al establecer esta propiedad desencadena el reloj de destino <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene el <see cref="T:System.Windows.Media.Animation.Clock" /> de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método cambia el reloj de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> a <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 Un <xref:System.Windows.Media.Animation.Clock.Stopped%2A> reloj se puede reiniciar usando la <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, o <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> método.  
  
 Este método no tiene ningún efecto en el árbol de control de tiempo hasta la próxima vez que se procese un paso. Como efecto secundario, los eventos adecuados también, no se generará hasta ese momento.  
  
 Deteniendo activa un reloj el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> y <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos, pero no la <xref:System.Windows.Media.Animation.Clock.Completed> eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>