<Type Name="ColorAnimation" FullName="System.Windows.Media.Animation.ColorAnimation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4692095e3101bb018a324413acd60e2aa9581fda" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660699" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ColorAnimation : System.Windows.Media.Animation.ColorAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ColorAnimation extends System.Windows.Media.Animation.ColorAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ColorAnimation" />
  <TypeSignature Language="VB.NET" Value="Public Class ColorAnimation&#xA;Inherits ColorAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorAnimation : System::Windows::Media::Animation::ColorAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ColorAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Anima el valor de una propiedad <see cref="T:System.Windows.Media.Color" /> entre dos valores de destino usando la interpolación lineal en un <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una animación actualiza el valor de una propiedad durante un período de tiempo.  Un efecto de animación puede ser sutil, como mover un <xref:System.Windows.Shapes.Shape> unos píxeles izquierdos y derecho o espectaculares, como ampliar un objeto a su tamaño original 200 veces mientras gira y cambia de color. Para crear una animación en [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], asocie una animación a un valor de propiedad de un objeto.  
  
## <a name="target-values"></a>Valores de destino  
 La <xref:System.Windows.Media.Animation.ColorAnimation> clase crea una transición entre dos valores de destino. Para establecer sus valores de destino, utilice sus <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades.  La tabla siguiente resume cómo el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades se pueden utilizar conjuntamente o por separado los valores determinar el destino de una animación.  
  
|Propiedades especificadas|Comportamiento resultante|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> valor, según cómo esté configurada la animación anterior de salida de propiedad al valor base de la propiedad que se está animando o a una animación anterior.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por la suma de la <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor base de la propiedad animada o una animación anterior de salida de valor para el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor base de la propiedad que se está animando o una animación anterior del valor de salida a la suma de ese valor y el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad.|  
  
> [!NOTE]
>  Si establece tanto la <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades, el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad tiene prioridad y el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad se omite.  
  
 Para usar otros métodos de interpolación o animar entre más de dos valores de destino, use un <xref:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames> objeto.  
  
 Para obtener información sobre cómo aplicar varias animaciones a una sola propiedad, vea [información general sobre animaciones de fotogramas clave](~/docs/framework/wpf/graphics-multimedia/key-frame-animations-overview.md).  
  
## <a name="freezable-features"></a>Características de los objetos Freezable  
 Dado que la <xref:System.Windows.Media.Animation.ColorAnimation> clase hereda de <xref:System.Windows.Freezable>, <xref:System.Windows.Media.Animation.ColorAnimation> objetos obtienen varias características especiales, como las siguientes: se pueden declarados como compartirse entre varios objetos, hacerse de sólo lectura para mejorar el rendimiento, clonar y convertirse seguros para subprocesos. Para obtener más información acerca de las diferentes características proporcionadas por <xref:System.Windows.Freezable> los objetos, vea la [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />
    <altmember cref="T:System.Windows.Freezable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorAnimation();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorAnimation (System.Windows.Media.Color toValue, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Media.Color toValue, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorAnimation(System::Windows::Media::Color toValue, System::Windows::Duration duration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toValue" Type="System.Windows.Media.Color" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="toValue">Valor de destino de la animación.</param>
        <param name="duration">Período de tiempo que tarda la animación en reproducirse de principio a fin, una vez. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> que anima hasta el valor especificado durante el tiempo especificado. El valor inicial de la animación es el valor base de la propiedad que se anima o el resultado de otra animación.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorAnimation (System.Windows.Media.Color toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Media.Color toValue, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.FillBehavior fillBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorAnimation(System::Windows::Media::Color toValue, System::Windows::Duration duration, System::Windows::Media::Animation::FillBehavior fillBehavior);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toValue" Type="System.Windows.Media.Color" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="fillBehavior" Type="System.Windows.Media.Animation.FillBehavior" />
      </Parameters>
      <Docs>
        <param name="toValue">Valor de destino de la animación.</param>
        <param name="duration">Período de tiempo que tarda la animación en reproducirse de principio a fin, una vez. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <param name="fillBehavior">Especifica cómo se comporta la animación cuando no está activa.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> que anima hasta el valor especificado durante el tiempo especificado y tiene el comportamiento de relleno especificado. El valor inicial de la animación es el valor base de la propiedad que se anima o el resultado de otra animación.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorAnimation (System.Windows.Media.Color fromValue, System.Windows.Media.Color toValue, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Media.Color fromValue, valuetype System.Windows.Media.Color toValue, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorAnimation(System::Windows::Media::Color fromValue, System::Windows::Media::Color toValue, System::Windows::Duration duration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fromValue" Type="System.Windows.Media.Color" />
        <Parameter Name="toValue" Type="System.Windows.Media.Color" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="fromValue">Valor inicial de la animación.</param>
        <param name="toValue">Valor de destino de la animación.</param>
        <param name="duration">Período de tiempo que tarda la animación en reproducirse de principio a fin, una vez. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> que anima desde el valor inicial especificado para el valor de destino especificado durante el tiempo especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorAnimation (System.Windows.Media.Color fromValue, System.Windows.Media.Color toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Media.Color fromValue, valuetype System.Windows.Media.Color toValue, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.FillBehavior fillBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorAnimation(System::Windows::Media::Color fromValue, System::Windows::Media::Color toValue, System::Windows::Duration duration, System::Windows::Media::Animation::FillBehavior fillBehavior);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fromValue" Type="System.Windows.Media.Color" />
        <Parameter Name="toValue" Type="System.Windows.Media.Color" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="fillBehavior" Type="System.Windows.Media.Animation.FillBehavior" />
      </Parameters>
      <Docs>
        <param name="fromValue">Valor inicial de la animación.</param>
        <param name="toValue">Valor de destino de la animación.</param>
        <param name="duration">Período de tiempo que tarda la animación en reproducirse de principio a fin, una vez. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <param name="fillBehavior">Especifica cómo se comporta la animación cuando no está activa.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> que anima desde el valor inicial especificado para el valor de destino especificado durante el tiempo especificado y tiene el comportamiento de relleno especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="By">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Windows.Media.Color&gt; By { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Media.Color&gt; By" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.By" />
      <MemberSignature Language="VB.NET" Value="Public Property By As Nullable(Of Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Windows::Media::Color&gt; By { Nullable&lt;System::Windows::Media::Color&gt; get(); void set(Nullable&lt;System::Windows::Media::Color&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Media.Color&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cantidad total por la que la animación cambia su valor inicial.</summary>
        <value>Cantidad total por la que la animación cambia su valor inicial.     El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad cuando desee animar un valor "por" una determinada cantidad, en lugar de especificar un inicio o el valor final. También puede usar el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad con el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad. La tabla siguiente resume cómo el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades se pueden utilizar conjuntamente o por separado los valores determinar el destino de una animación.  
  
|Se especificaron propiedades|Comportamiento resultante|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> valor, según cómo esté configurada la animación anterior de salida de propiedad al valor base de la propiedad que se está animando o a una animación anterior.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por la suma de la <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor base de la propiedad animada o una animación anterior de salida de valor para el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor base de la propiedad que se está animando o una animación anterior del valor de salida a la suma de ese valor y el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad.|  
  
 **Tenga en cuenta** si establece tanto la <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades, el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad tiene prioridad y el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad se omite.  
  
 Para usar otros métodos de interpolación o animar entre más de dos valores de destino, use un <xref:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames> objeto.  
  
<a name="xamlAttributeUsage_By"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
 <*object* `By`="<xref:System.Windows.Media.Color>"/>  
  
 \- o -  
  
 <*objeto* `By`= "{[extensión de marcado x: Null](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="xamlPropertyElementUsage_By"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
 \<*object*>  
  
 <*object*.`By`>  
  
 \<<xref:System.Windows.Media.Color> />  
  
 </*object*.`By`>  
  
 \</*object*>  
  
<a name="dependencyPropertyInfo_By"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Media.Animation.ColorAnimation.ByProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.From" />
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.To" />
      </Docs>
    </Member>
    <Member MemberName="ByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ColorAnimation.ByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ByProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ByProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ColorAnimation Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ColorAnimation Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ColorAnimation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ColorAnimation ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ColorAnimation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> y hace copias en profundidad de los valores de este objeto. Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para generar copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada mediante una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.</summary>
        <returns>La nueva instancia.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="EasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction EasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction EasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property EasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ EasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la función de aceleración aplicada a esta animación.</summary>
        <value>Función de aceleración aplicada a esta animación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funciones de aceleración permiten crear una variedad de efectos de animación especializados incluidos rebote, las oscilaciones de muelle distintas animaciones de aceleración y desaceleración de magnitud. Estas funciones se han diseñado principalmente para 'animaciones de movimiento' frente a la animación de color, sin embargo, podría encontrar un escenario para aplicar una función de aceleración para el <xref:System.Windows.Media.Animation.ColorAnimation>. Por ejemplo, podría usar un <xref:System.Windows.Media.Animation.PowerEase> función para crear una animación de color que se anima a través de colores rápidamente al principio, pero reduce la velocidad de aceleración.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.IEasingFunction" />
      </Docs>
    </Member>
    <Member MemberName="EasingFunctionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EasingFunctionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EasingFunctionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ColorAnimation.EasingFunctionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EasingFunctionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EasingFunctionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.IEasingFunction" />
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Windows.Media.Color&gt; From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Media.Color&gt; From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As Nullable(Of Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Windows::Media::Color&gt; From { Nullable&lt;System::Windows::Media::Color&gt; get(); void set(Nullable&lt;System::Windows::Media::Color&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Media.Color&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor inicial de la animación.</summary>
        <value>Valor inicial de la animación. El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabla siguiente resume cómo el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades se pueden utilizar conjuntamente o por separado los valores determinar el destino de una animación.  
  
|Se especificaron propiedades|Comportamiento resultante|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> valor, según cómo esté configurada la animación anterior de salida de propiedad al valor base de la propiedad que se está animando o a una animación anterior.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por la suma de la <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor base de la propiedad animada o una animación anterior de salida de valor para el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor base de la propiedad que se está animando o una animación anterior del valor de salida a la suma de ese valor y el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad.|  
  
 **Tenga en cuenta** si establece tanto la <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades, el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad tiene prioridad y el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad se omite.  
  
 Para usar otros métodos de interpolación o animar entre más de dos valores de destino, use un <xref:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames> objeto.  
  
<a name="xamlAttributeUsage_From"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
 <*object* `From`="<xref:System.Windows.Media.Color>"/>  
  
 \- o -  
  
 <*objeto* `From`= "{[extensión de marcado x: Null](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="xamlPropertyElementUsage_From"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
 \<*object*>  
  
 <*object*.`From`>  
  
 \<<xref:System.Windows.Media.Color> />  
  
 </*object*.`From`>  
  
 \</*object*>  
  
<a name="dependencyPropertyInfo_From"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Media.Animation.ColorAnimation.FromProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.By" />
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.To" />
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FromProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FromProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ColorAnimation.FromProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FromProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FromProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Color GetCurrentValueCore (System.Windows.Media.Color defaultOriginValue, System.Windows.Media.Color defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Media.Color GetCurrentValueCore(valuetype System.Windows.Media.Color defaultOriginValue, valuetype System.Windows.Media.Color defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimation.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Color GetCurrentValueCore(System::Windows::Media::Color defaultOriginValue, System::Windows::Media::Color defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Color" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Color" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">El valor de origen sugerido, que se usa si la animación no tiene su propio valor de inicio establecido explícitamente.</param>
        <param name="defaultDestinationValue">El valor de destino sugerido, que se usa si la animación no tiene su propio valor final establecido explícitamente.</param>
        <param name="animationClock">Objeto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que genera las propiedades <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> que usa la animación.</param>
        <summary>Calcula un valor que representa el valor actual de la propiedad que se anima, tal y como se determina en el objeto <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.</summary>
        <returns>El valor calculado de la propiedad, según se determina por la animación actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `defaultOriginValue` es el primer elemento de la cadena de composición, este valor será el valor de la instantánea (si está disponible) o el valor de la propiedad base; en caso contrario, este valor será el valor devuelto por la animación anterior en la cadena con un <xref:System.Windows.Media.Animation.AnimationClock> que no es <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 El `defaultDestinationValue` es el valor base si la animación está en la primera capa de composición de las animaciones de una propiedad; en caso contrario, el valor es el valor de salida de la capa anterior de composición de animaciones de la propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ColorAnimation.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el valor actual de la propiedad de destino debe agregarse al valor de inicio de la animación.</summary>
        <value>
          Es <see langword="true" /> si el valor actual de la propiedad de destino debe agregarse al valor de inicio de esta animación; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la animación tiene solo uno de sus <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, o <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> conjunto de propiedades, al establecer esta propiedad no tiene ningún efecto.  
  
<a name="dependencyPropertyInfo_Additive"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
> [!NOTE]
>  Esta propiedad de dependencia es poco habitual en que el campo de identificador de la procede de <xref:System.Windows.Media.Animation.AnimationTimeline>y se comparte entre distintas clases derivadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCumulative">
      <MemberSignature Language="C#" Value="public bool IsCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.IsCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCumulative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si se acumula el valor de la animación cuando se repite.</summary>
        <value>**True** si la animación acumula sus valores cuando su <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> propiedad hace que repita su duración simple. en caso contrario, **false**. El valor predeterminado es **false**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando esta propiedad se establece en **true**, la animación de salida de valores acumulan solo cuando la animación <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> propiedad hace que repita su duración simple. No acumula sus valores cuando se reinicia porque repetido su elemento primario o porque su reloj se reinició desde un <xref:System.Windows.Media.Animation.ClockController.Begin%2A> llamar.  
  
<a name="dependencyPropertyInfo_Cumulative"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
> [!NOTE]
>  Esta propiedad de dependencia es poco habitual en que el campo de identificador de la procede de <xref:System.Windows.Media.Animation.AnimationTimeline>y se comparte entre distintas clases derivadas.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Windows.Media.Color&gt; To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Media.Color&gt; To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimation.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As Nullable(Of Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Windows::Media::Color&gt; To { Nullable&lt;System::Windows::Media::Color&gt; get(); void set(Nullable&lt;System::Windows::Media::Color&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Media.Color&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor final de la animación.</summary>
        <value>Valor final de la animación. El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabla siguiente resume cómo el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A>, <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>, y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades se pueden utilizar conjuntamente o por separado los valores determinar el destino de una animación.  
  
|Se especificaron propiedades|Comportamiento resultante|  
|--------------------------|------------------------|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> valor, según cómo esté configurada la animación anterior de salida de propiedad al valor base de la propiedad que se está animando o a una animación anterior.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> propiedad en el valor especificado por la suma de la <xref:System.Windows.Media.Animation.ColorAnimation.From%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.To%2A>|La animación progresa desde el valor base de la propiedad animada o una animación anterior de salida de valor para el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad.|  
|<xref:System.Windows.Media.Animation.ColorAnimation.By%2A>|La animación progresa desde el valor base de la propiedad que se está animando o una animación anterior del valor de salida a la suma de ese valor y el valor especificado por el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad.|  
  
 **Tenga en cuenta** si establece tanto la <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> y <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedades, el <xref:System.Windows.Media.Animation.ColorAnimation.To%2A> propiedad tiene prioridad y el <xref:System.Windows.Media.Animation.ColorAnimation.By%2A> propiedad se omite.  
  
 Para usar otros métodos de interpolación o animar entre más de dos valores de destino, use un <xref:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames> objeto.  
  
<a name="xamlAttributeUsage_To"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
 <*object* `To`="<xref:System.Windows.Media.Color>"/>  
  
 \- o -  
  
 <*objeto* `To`= "{[extensión de marcado x: Null](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="xamlPropertyElementUsage_To"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
 \<*object*>  
  
 <*object*.`To`>  
  
 \<<xref:System.Windows.Media.Color> />  
  
 </*object*.`To`>  
  
 \</*object*>  
  
<a name="dependencyPropertyInfo_To"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo identificador|<xref:System.Windows.Media.Animation.ColorAnimation.ToProperty>|  
|Propiedades de metadatos establecidos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.From" />
        <altmember cref="P:System.Windows.Media.Animation.ColorAnimation.By" />
      </Docs>
    </Member>
    <Member MemberName="ToProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ColorAnimation.ToProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>