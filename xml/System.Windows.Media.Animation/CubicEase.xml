<Type Name="CubicEase" FullName="System.Windows.Media.Animation.CubicEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="480b534699ac170900d42ba6a1d1d6168cfea38e" />
    <Meta Name="ms.sourcegitcommit" Value="acac931205d35ffca255adc91935b79b098a7a7a" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/01/2018" />
    <Meta Name="ms.locfileid" Value="39394198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CubicEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CubicEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.CubicEase" />
  <TypeSignature Language="VB.NET" Value="Public Class CubicEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CubicEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type CubicEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una función de aceleración que crea una animación que aumenta y/o reduce la velocidad por medio de la fórmula *f*(*t*) = *t*<sup>3</sup>.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede controlar si la animación se acelera, disminuye la velocidad, o ambos mediante la especificación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. El siguiente gráfico muestra los distintos valores de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, donde *f*(*t*) representa el progreso de la animación y *t* representa el tiempo.  
  
 ![Gráficos CubicEase EasingMode. ] (~/add/media/cubicease-graph.png "CubicEase EasingMode gráficos.")  
  
 La fórmula utilizada para esta función es la siguiente.  
  
 *f*(*t*) = *t*<sup>3</sup>  
  
 Hay muchas otras funciones de aceleración además <xref:System.Windows.Media.Animation.CubicEase>.
Además de utilizar las funciones de aceleración incluidas en el tiempo de ejecución, puede crear sus propias funciones de aceleración personalizadas heredando de <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
## <a name="xaml-object-element-usage"></a>Uso de elementos de objeto XAML  
  
```xaml
<CubicEase .../>  
```  
  
   
  
## Examples  
 El ejemplo siguiente aplica un <xref:System.Windows.Media.Animation.CubicEase> función de aceleración un <xref:System.Windows.Media.Animation.DoubleAnimation> para crear una animación que disminuye la velocidad.  
  
 [!code-xaml[CubicEase#CubicEase](~/samples/snippets/csharp/VS_Snippets_Wpf/cubicease/CS/window1.xaml#cubicease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CubicEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CubicEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.CubicEase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="cubicEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase derivada de <see cref="T:System.Windows.Freezable" />. Al crear una clase derivada, debe reemplazar este método.</summary>
        <returns>La nueva instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clases de animación heredan directamente de <xref:System.Windows.Freezable>. Por este motivo, deberá reemplazar el <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> método para construir un objeto de animación personalizada.  
  
   
  
## Examples  
 El ejemplo siguiente muestra una implementación típica de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="cubicEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Tiempo normalizado (progreso) de la animación.</param>
        <summary>Proporciona la parte lógica de la función de aceleración que se puede reemplazar para generar el modo <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> de la función de aceleración personalizada.</summary>
        <returns>Valor Double que representa el progreso transformado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método transforma el tiempo normalizado para controlar el ritmo de una animación para el <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 Solo tiene que especificar la función de aceleración para el <xref:System.Windows.Media.Animation.EasingMode.EaseIn> caso porque la implementación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> método transformaciones `normalizedTime` para el <xref:System.Windows.Media.Animation.EasingMode.EaseOut> y <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> casos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>