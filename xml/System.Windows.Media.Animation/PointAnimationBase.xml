<Type Name="PointAnimationBase" FullName="System.Windows.Media.Animation.PointAnimationBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7c2391d81e9d5e5955923f90c61694e3fdd2ea1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PointAnimationBase : System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PointAnimationBase extends System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.PointAnimationBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PointAnimationBase&#xA;Inherits AnimationTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointAnimationBase abstract : System::Windows::Media::Animation::AnimationTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.AnimationTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Clase abstracta que, cuando se implementa, anima un valor <see cref="T:System.Windows.Point" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar la clase derivada <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames> clase [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[keyframes_ovw_snippet#PointAnimationUsingKeyFramesWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/keyframes_ovw_snippet/CS/PointAnimationUsingKeyFramesExample.xaml#pointanimationusingkeyframeswholepage)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Consulte la [información general sobre animaciones de personalizados](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md) para obtener información sobre cómo extender las clases de animación.</para>
    </block>
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PointAnimationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PointAnimationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PointAnimationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.PointAnimationBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.PointAnimationBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.PointAnimationBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PointAnimationBase.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As PointAnimationBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::PointAnimationBase ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.PointAnimationBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este <see cref="T:System.Windows.Media.Animation.PointAnimationBase" /> y hace copias en profundidad de los valores de este objeto. Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para generar copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada mediante una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentValue">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el valor actual de la animación.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetCurrentValue(System::Object ^ defaultOriginValue, System::Object ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Object" />
        <Parameter Name="defaultDestinationValue" Type="System.Object" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">Valor de origen proporcionado a la animación si la animación no tiene su propio valor de inicio.</param>
        <param name="defaultDestinationValue">Valor de destino proporcionado a la animación si la animación no tiene su propio valor de destino.</param>
        <param name="animationClock">Objeto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que puede generar el valor de las propiedades <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> que la animación va a usar para generar su valor de salida.</param>
        <summary>Obtiene el valor actual de la animación.</summary>
        <returns>Valor que esta animación cree que debe ser el valor actual de la propiedad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la `defaultOriginValue` parámetro depende de la posición de la animación en la cadena de composición:  
  
-   Si la animación está en la primera posición en una cadena de composición y reemplaza a otra animación, `defaultOriginValue` es el resultado de esa animación en el momento en que se ha reemplazado.  
  
-   Si la animación está en la primera posición en una cadena de composición y no existe ninguna animación para reemplazar, `defaultOriginValue` es el valor base de la propiedad animada.  
  
-   Si la animación no está en la primera posición de una composición encadenar, a continuación, `defaultOriginValue` es el valor devuelto por la animación anterior en la cadena de composición que tiene un <xref:System.Windows.Media.Animation.AnimationClock> que no es <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 El valor de la `defaultDestinationValue` parámetro depende de si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición.  
  
-   Si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición, `defaultDestinationValue` es el resultado de dicha capa.  
  
-   Si no hay ningún nivel de composición anterior, `defaultDestinationValue` es el valor base de la propiedad que va a animar.  
  
 Para obtener más información acerca de la composición de animación, consulte el [animación y temporización información general del sistema](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obtener más información acerca de cómo crear tipos de animaciones personalizadas, consulte el [información general de las animaciones personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetCurrentValue (System.Windows.Point defaultOriginValue, System.Windows.Point defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetCurrentValue(valuetype System.Windows.Point defaultOriginValue, valuetype System.Windows.Point defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetCurrentValue(System::Windows::Point defaultOriginValue, System::Windows::Point defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Point" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Point" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">Valor de origen proporcionado a la animación si la animación no tiene su propio valor de inicio.</param>
        <param name="defaultDestinationValue">Valor de destino proporcionado a la animación si la animación no tiene su propio valor de destino.</param>
        <param name="animationClock">Objeto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que puede generar el valor de las propiedades <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> que la animación va a usar para generar su valor de salida.</param>
        <summary>Obtiene el valor actual de la animación.</summary>
        <returns>Valor que esta animación cree que debe ser el valor actual de la propiedad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la `defaultOriginValue` parámetro depende de la posición de la animación en la cadena de composición:  
  
-   Si la animación está en la primera posición en una cadena de composición y reemplaza a otra animación, `defaultOriginValue` es el resultado de esa animación en el momento en que se ha reemplazado.  
  
-   Si la animación está en la primera posición en una cadena de composición y no existe ninguna animación para reemplazar, `defaultOriginValue` es el valor base de la propiedad animada.  
  
-   Si la animación no está en la primera posición de una composición encadenar, a continuación, `defaultOriginValue` es el valor devuelto por la animación anterior en la cadena de composición que tiene un <xref:System.Windows.Media.Animation.AnimationClock> que no es <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 El valor de la `defaultDestinationValue` parámetro depende de si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición.  
  
-   Si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición, `defaultDestinationValue` es el resultado de dicha capa.  
  
-   Si no hay ningún nivel de composición anterior, `defaultDestinationValue` es el valor base de la propiedad que va a animar.  
  
 Para obtener más información acerca de la composición de animación, consulte el [animación y temporización información general del sistema](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obtener más información acerca de cómo crear tipos de animaciones personalizadas, consulte el [información general de las animaciones personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Point GetCurrentValueCore (System.Windows.Point defaultOriginValue, System.Windows.Point defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Point GetCurrentValueCore(valuetype System.Windows.Point defaultOriginValue, valuetype System.Windows.Point defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Point GetCurrentValueCore(System::Windows::Point defaultOriginValue, System::Windows::Point defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Point" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Point" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">El valor de origen sugerido, que se usa si la animación no tiene su propio valor de inicio establecido explícitamente.</param>
        <param name="defaultDestinationValue">El valor de destino sugerido, que se usa si la animación no tiene su propio valor final establecido explícitamente.</param>
        <param name="animationClock">Objeto <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que genera la propiedad <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> que se usa en la animación del host.</param>
        <summary>Calcula un valor que representa el valor actual de la propiedad que se está animando, como lo determina la animación del host.</summary>
        <returns>Valor actual de esta animación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la `defaultOriginValue` parámetro depende de la posición de la animación en la cadena de composición:  
  
-   Si la animación está en la primera posición en una cadena de composición y reemplaza a otra animación, `defaultOriginValue` es el resultado de esa animación en el momento en que se ha reemplazado.  
  
-   Si la animación está en la primera posición en una cadena de composición y no existe ninguna animación para reemplazar, `defaultOriginValue` es el valor base de la propiedad animada.  
  
-   Si la animación no está en la primera posición de una composición encadenar, a continuación, `defaultOriginValue` es el valor devuelto por la animación anterior en la cadena de composición que tiene un <xref:System.Windows.Media.Animation.AnimationClock> que no es <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 El valor de la `defaultDestinationValue` parámetro depende de si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición.  
  
-   Si hay una propiedad anterior <xref:System.Windows.Trigger> capa de composición, `defaultDestinationValue` es el resultado de dicha capa.  
  
-   Si no hay ningún nivel de composición anterior, `defaultDestinationValue` es el valor base de la propiedad que va a animar.  
  
 Para obtener más información acerca de la composición de animación, consulte el [animación y temporización información general del sistema](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obtener más información acerca de cómo crear tipos de animaciones personalizadas, consulte el [información general de las animaciones personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyType">
      <MemberSignature Language="C#" Value="public override sealed Type TargetPropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetPropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.PointAnimationBase.TargetPropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property TargetPropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetPropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de valor que genera esta animación.</summary>
        <value>Tipo de valor generado por esta animación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>