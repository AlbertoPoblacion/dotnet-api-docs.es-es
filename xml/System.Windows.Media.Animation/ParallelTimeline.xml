<Type Name="ParallelTimeline" FullName="System.Windows.Media.Animation.ParallelTimeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="589703875abf106caf74c13e83f0ba9561a312ce" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53475144" /></Metadata><TypeSignature Language="C#" Value="public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelTimeline extends System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelTimeline&#xA;Inherits TimelineGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelTimeline : System::Windows::Media::Animation::TimelineGroup" />
  <TypeSignature Language="F#" Value="type ParallelTimeline = class&#xA;    inherit TimelineGroup" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.TimelineGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define un segmento de tiempo que puede contener objetos <see cref="T:System.Windows.Media.Animation.Timeline" /> secundarios. Estas escalas de tiempo secundarias se activarán según sus respectivas propiedades <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> respectivas. Además, las escalas de tiempo secundarias se pueden superponer (ejecutarse en paralelo) entre sí.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline> los objetos pueden ser elementos secundarios (anidados en) de un <xref:System.Windows.Media.Animation.Storyboard>. Esto puede proporcionar una mejor encapsulación de secuencias de temporización de animaciones complejas.  
  
 <xref:System.Windows.Media.Animation.ParallelTimeline> tiene su propio <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad, por tanto, todos los secundarios escala <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> los valores son en relación con el elemento primario <xref:System.Windows.Media.Animation.ParallelTimeline> valor <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> con el objeto <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration"><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> con los parámetros <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> y <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime"><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration"><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="repeatBehavior"><see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> con los valores especificados de <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> y <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> y hace copias en profundidad de los valores de este objeto. Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> y hace copias en profundidad de sus valores actuales. Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="parallelTimeline.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de este objeto <see cref="T:System.Windows.Freezable" />.</summary>
        <returns>Nuevo objeto <see cref="T:System.Windows.Freezable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida el <xref:System.Windows.Freezable.CreateInstanceCore%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="parallelTimeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">El objeto <see cref="T:System.Windows.Media.Animation.Clock" /> desde el que se va a devolver la duración natural.</param>
        <summary>Devuelve la duración natural (duración de una sola iteración) de un objeto <see cref="T:System.Windows.Media.Animation.Clock" /> especificado.</summary>
        <returns>La duración del objeto <see cref="T:System.Windows.Duration" /> que representa la duración natural.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La duración natural es el período de una sola iteración. Si este método devuelve <xref:System.Windows.Duration.Automatic%2A> significa que la duración natural es desconocida. En este caso, el <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> de la <xref:System.Windows.Media.Animation.Clock> viene determinada por el autor. Por ejemplo, la duración de medios de transmisión se determinarían mediante el proveedor de los medios de transmisión por secuencias.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.SlipBehavior SlipBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property SlipBehavior As SlipBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::SlipBehavior SlipBehavior { System::Windows::Media::Animation::SlipBehavior get(); void set(System::Windows::Media::Animation::SlipBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.SlipBehavior : System.Windows.Media.Animation.SlipBehavior with get, set" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SlipBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el comportamiento de esta escala de tiempo cuando se posponen uno o varios de sus elementos secundarios <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <value>Valor que indica el comportamiento de esta escala de tiempo cuando se posponen uno o varios de sus elementos secundarios <see cref="T:System.Windows.Media.Animation.Timeline" />. El valor predeterminado es <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Suele ser deseable para sincronizar las animaciones y multimedia. Sin embargo, esto se complica por el hecho de que la reproducción multimedia se puede retrasar por cargar o almacenar en búfer y resulta difícil de reproducir una animación junto con los medios de forma confiable. El <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> propiedad se utiliza para determinar lo que sucede cuando se reproducen juntos archivos multimedia y animaciones. Un valor de <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (valor predeterminado) especifica que las escalas de tiempo de animación no es necesario para sincronizarse y se reproducirán cuando se especifica, independientemente del estado de otros medios en la escala de tiempo. Un valor de <xref:System.Windows.Media.Animation.SlipBehavior.Slip> por otro lado, especifica que una animación esperará (slip) hasta que esté listo para reproducir multimedia. Los diagramas siguientes muestran este comportamiento.  
  
 Esto <xref:System.Windows.Media.Animation.Storyboard> reproduce un vídeo y una animación. Cuando <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> está establecido en <xref:System.Windows.Media.Animation.SlipBehavior.Grow> y <xref:System.Windows.Media.Animation.Timeline.Duration%2A> propiedad de la <xref:System.Windows.Media.Animation.Storyboard> está establecido en <xref:System.Windows.Duration.Automatic%2A>, el <xref:System.Windows.Media.Animation.Storyboard> crece para reproducir todos los archivos multimedia y animaciones.  
  
 ![Diagrama: Clave para diagrama de SlipBehavior](~/add/media/slipbehaviorkey.png "diagrama: Clave para diagrama de SlipBehavior")  
  
 ![Diagrama: Valor de propiedad SlipBehavior de Grow](~/add/media/slipbehaviorgrow1.png "diagrama: Valor de propiedad SlipBehavior de Grow")  
  
 Esto <xref:System.Windows.Media.Animation.Storyboard> tiene un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Grow> y un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 segundos, que proporciona archivos multimedia y animaciones de 5 segundos a jugar, independientemente de cuánto se retrasan.  
  
 ![Diagrama: Valor de propiedad SlipBehavior de Grow](~/add/media/slipbehaviorgrow2.png "diagrama: Valor de propiedad SlipBehavior de Grow")  
  
 Esto <xref:System.Windows.Media.Animation.Storyboard> tiene un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Tenga en cuenta que el <xref:System.Windows.Media.Animation.DoubleAnimation> (y los otros medios que no son elementos secundarios de la <xref:System.Windows.Media.Animation.Storyboard>) no avanza a menos que también se lleva a cabo la escala de tiempo multimedia.  Si el medio tarda cierto tiempo en cargar, o si es el almacenamiento en búfer, la animación esperará (SLIP) con él.  Esto permite que las animaciones sincronizar con un solo archivo multimedia.  
  
 ![Diagrama de SlipBehavior para multimedia y animación](~/add/media/slipbehaviorslip1.png "diagrama de SlipBehavior para multimedia y animación")  
  
 Esto <xref:System.Windows.Media.Animation.Storyboard> tiene un <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Slip> y un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 segundos.  En este escenario, se garantiza que el archivo multimedia y animación para reproducir durante 5 segundos.  
  
 ![Diagrama: Propiedad SlipBehavior de un guión gráfico](~/add/media/slipbehaviorslip2.png "diagrama: Propiedad SlipBehavior de un guión gráfico")  
  
<a name="dependencyPropertyInfo_SlipBehavior"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.MediaTimeline" />
      </Docs>
    </Member>
    <Member MemberName="SlipBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlipBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SlipBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SlipBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SlipBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificador de la propiedad de dependencia <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
   
  
## Examples  
 [Información general sobre las propiedades de dependencia](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>