<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="907cb3ad1f36b5a4609f9a426ceb97451608ede8" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53393528" /></Metadata><TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un segmento de tiempo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una escala de tiempo representa un segmento de tiempo.  Proporciona propiedades que permiten especificar la longitud de ese segmento, cuándo debe iniciarse, cuántas veces se repetirá o la velocidad a la que progresará el tiempo en ese segmento, entre otras.  
  
 Las clases que heredan de la clase Timeline proporcionan funcionalidades adicionales, como reproducción de animaciones y multimedia. Los siguientes son ejemplos de algunos de los diferentes tipos de escalas de tiempo especializados disponibles.  
  
-   **Las animaciones**: Un <xref:System.Windows.Media.Animation.AnimationTimeline> es un tipo de escala de tiempo que produce valores de salida. Cuando asocia una animación con una propiedad, la animación actualiza el valor de propiedad mientras se reproduce, con lo que se "animarla". Para obtener una introducción a las animaciones, consulte [información general sobre animaciones](~/docs/framework/wpf/graphics-multimedia/animation-overview.md). Para obtener información acerca de las distintas formas de aplicar animaciones, vea la [técnicas de animación de información general sobre propiedades](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md).  
  
-   **MediaTimelines**: Un <xref:System.Windows.Media.MediaTimeline> es un tipo de escala de tiempo que controla la reproducción de un archivo multimedia.  
  
-   **Un ParallelTimeline**: Un <xref:System.Windows.Media.Animation.ParallelTimeline> es un tipo de escala de tiempo que agrupa otras escalas de tiempo.  
  
-   **Guiones gráficos**: Un <xref:System.Windows.Media.Animation.Storyboard> es un tipo especial de <xref:System.Windows.Media.Animation.ParallelTimeline> que proporciona el objeto y propiedad información de destino para las escalas de tiempo contiene. Para obtener más información acerca de <xref:System.Windows.Media.Animation.Storyboard> objetos, vea el [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Para obtener más información sobre el uso de las escalas de tiempo, consulte el [información general sobre animaciones](~/docs/framework/wpf/graphics-multimedia/animation-overview.md). Para obtener una introducción a las características de control de tiempo de escalas de tiempo, consulte el [información general sobre comportamientos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md).  
  
## <a name="data-binding-and-animating-timelines"></a>Enlace de datos y las escalas de tiempo de animación  
 La mayoría de las propiedades de escala de tiempo pueden ser datos enlazados o animadas; Sin embargo, debido al modo en que funciona el sistema de control de tiempo, las escalas de tiempo enlazados o animados no se comportan como otros datos de datos enlazan o animar objetos. Para entender su comportamiento, ayuda a entender lo que significa activar una escala de tiempo.  
  
 Cuando se aplica una escala de tiempo, se realizan copias de la escala de tiempo y sus escalas de tiempo secundarias. Estas copias se inmovilizan (sólo lectura) y <xref:System.Windows.Media.Animation.Clock> se crean objetos de ellos. Resulta que estos relojes que realizan el trabajo real de animar las propiedades de destino. Si una escala de tiempo se ha enlazado datos o animadas, se realizó una instantánea de sus valores actuales cuando se creó su reloj. Aunque la escala de tiempo original puede seguir cambiando, su reloj no.  
  
 Para que una escala de tiempo reflejar los cambios de animación o el enlace de datos, su reloj se debe regenerar. Los relojes no se regeneran automáticamente. A continuación se muestran distintas maneras de aplicar cambios a las escalas de tiempo:  
  
-   Si la escala de tiempo es o pertenece a un <xref:System.Windows.Media.Animation.Storyboard>, puede hacer que reflejan los cambios puede volver a aplicar su guion gráfico utilizando un <xref:System.Windows.Media.Animation.BeginStoryboard> o <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> método. El efecto secundario de esta acción es que también se reinicia la animación. En el código, puede usar el <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> hacer una copia de método para avanzar el guión gráfico a su posición anterior.  
  
-   Si aplica una animación directamente a una propiedad mediante el <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> método, llame a la <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> nuevo al método y pásele la animación que se ha modificado.  
  
-   Si está trabajando directamente en el nivel de relojes, cree y aplique un nuevo conjunto de relojes y utilícelos para reemplazar el conjunto anterior de relojes generados.  
  
 Para un ejemplo de datos de una animación enlazada, consulte el [ejemplo Key Spline Animation](https://go.microsoft.com/fwlink/?LinkID=160011) .  
  
## <a name="using-a-timeline-as-a-timer"></a>Uso de una escala de tiempo como un temporizador  
 El reloj de una escala de tiempo se centrará solo cuando hay un controlador de eventos asociado con él o (en el caso de un <xref:System.Windows.Media.Animation.AnimationClock> objeto) está asociado con una propiedad. Para ello (y otros), se recomienda no utilizar un <xref:System.Windows.Media.Animation.Timeline> como un temporizador.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159970">Ejemplo de comportamiento de control de tiempo de animación</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">Hora a la que debe empezar este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para obtener más información.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Timeline" /> con el objeto <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">Hora a la que debe empezar este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para obtener más información.</param>
        <param name="duration">Duración de reproducción de esta escala de tiempo, sin contar las repeticiones. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Timeline" /> con los parámetros <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> y <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">Hora a la que debe empezar este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para obtener más información.</param>
        <param name="duration">Duración de reproducción de esta escala de tiempo, sin contar las repeticiones. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para obtener más información.</param>
        <param name="repeatBehavior">Comportamiento de repetición de esta escala de tiempo, como la propiedad <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> de una iteración o una propiedad <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" /> de repetición. Consulte la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> para obtener más información.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Timeline" /> con los valores especificados de <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> y <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el porcentaje de <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de la escala de tiempo transcurrido acelerando el paso del tiempo de cero a su velocidad máxima.</summary>
        <value>Valor entre 0 y 1, inclusive, que especifica el porcentaje de <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de la escala de tiempo transcurrido acelerando el paso del tiempo de cero a su velocidad máxima. Si también se establece la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> de la escala de tiempo, la suma de <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> y <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> debe ser inferior o igual a 1. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> propiedad que se va a crear animaciones que se inician con lentitud y aceleren a medida que progresa de tiempo. El <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> propiedad resulta útil para crear efectos de facilidad o realizar el movimiento parece más natural. Use la <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> y <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> propiedades juntas para crear animaciones que se inician con lentitud, velocidad y, a continuación, ralentizar antes de finalizar.  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> es menor que 0 o mayor que 1.</exception>
        <exception cref="T:System.InvalidOperationException">La suma de <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> y <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> supera 1.</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Windows.Media.Animation.Clock" /> para este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Un reloj para este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por el <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> método y no debe llamarse directamente en el código.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Los implementadores de <see cref="T:System.Windows.Media.Animation.Timeline" /> deben invalidar este método cuando tiene un reloj personalizado correspondiente que debe usarse con la clase. El método invalidado debe crear y devolver una nueva instancia de la clase que hereda de <see cref="T:System.Windows.Media.Animation.Clock" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la escala de tiempo se reproduce en orden inverso después de completar una iteración de avance.</summary>
        <value><see langword="true" /> si la escala de tiempo se reproduce en orden inverso al final de cada iteración; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> propiedad está establecida en `true`, la escala de tiempo se reproduce durante dos veces la longitud de tiempo especificado por su <xref:System.Windows.Media.Animation.Timeline.Duration%2A> propiedad.  
  
### <a name="autoreverse-and-repetitions"></a>AutoReverse y repeticiones  
 Cuando una escala de tiempo <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> propiedad está establecida en `true` y su <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> propiedad hace que repita, cada iteración de avance seguida de una iteración con versiones anteriores. Esto constituye una repetición. Por ejemplo, una escala de tiempo con un <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> valor `true` con una iteración <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 play reenviaría una vez, a continuación, hacia atrás, a continuación, reenvía de nuevo y, a continuación, hacia atrás de nuevo.  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la hora a la que debe empezar <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <value>Hora a la que debe empezar <see cref="T:System.Windows.Media.Animation.Timeline" /> con respecto a su propiedad <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> primaria. Si esta escala de tiempo es una escala de tiempo raíz, la hora es relativa a la hora de inicio interactiva (el momento en que se desencadenó la escala de tiempo). Este valor puede ser positivo, negativo, o <see langword="null" />; un valor <see langword="null" /> significa que la escala de tiempo nunca se reproduce. El valor predeterminado es cero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad es útil para crear escalas de tiempo que se reproducen en una secuencia: aumentando la <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> de escalas de tiempo sucesivos que comparten el mismo elemento primario, puede escalonar sus tiempos de reproducción.  
  
## <a name="negative-values"></a>Valores negativos  
 Un valor negativo <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> valor hace que un <xref:System.Windows.Media.Animation.Timeline> se comporte como si se inició en algún momento en el pasado. Por ejemplo, un <xref:System.Windows.Media.Animation.Timeline> con un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> de negativo 2.5 segundos y un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> aparece en mitad de camino de 5 segundos cuando se inicia.  
  
## <a name="begintime-and-speedratio"></a>BeginTime y SpeedRatio  
 El tiempo descrito por el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad se mide en el tiempo del elemento primario de la escala de tiempo. Por ejemplo, una escala de tiempo con un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> de 5 cuyo elemento primario tiene un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 2 se inicia realmente después 2.5 segundos.  
  
 De una escala de tiempo propio <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> configuración no afecta a su <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>. Por ejemplo, una escala de tiempo con un <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> de 5 segundos, un <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 2 y una escala de tiempo primaria con una <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 se inicia después de 5 segundos, no 2,5.  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
 \<*objeto* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-] [*días*.] *horas*:*minutos*:*segundos*[. *fractionalSeconds*] "/ >  
  
O bien
  
 \<*objeto* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-] [*días*.] *horas*:*minutos*"/ >  
  
O bien
  
 \<*objeto* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-]*días*" / >  
  
O bien
  
 \<*objeto* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "{[x: Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a>Valores XAML  
 Los elementos entre corchetes (`[` y `]`) son opcionales.  
  
 *Días*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 Un valor mayor o igual que 0 que describe el número de días que abarca esta hora de inicio.  
  
 *Horas*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 Un valor entre 0 y 23 que representa el número de horas que abarca esta hora de inicio.  
  
 *Minutos*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 Un valor entre 0 y 59 que representa el número de minutos que abarca esta hora de inicio.  
  
 *segundos*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 Un valor entre 0 y 59 que representa el número de segundos que abarca esta hora de inicio.  
  
 *fractionalSeconds*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 Un valor que consta de 1 a 7 dígitos que representa a los segundos fraccionarios.  
  
 Para la completa <xref:System.TimeSpan> sintaxis, vea la sección Comentarios de la <xref:System.TimeSpan.Parse%2A> página.  
  
   
  
## Examples  
 Una escala de tiempo <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad determina el principio del período activo de una escala de tiempo. Si la escala de tiempo tiene una escala de tiempo primaria, la <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad determina cuánto tiempo tarda la escala de tiempo para iniciar después de su elemento primario. Si la escala de tiempo es una escala de tiempo raíz (un <xref:System.Windows.Media.Animation.Storyboard>, por ejemplo), el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propiedad determina cuánto tiempo tarda la escala de tiempo para empezar a reproducir una vez que se desencadene.  
  
 El ejemplo siguiente muestra varias escalas de tiempo diferentes con distintos <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> configuración.  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este <see cref="T:System.Windows.Media.Animation.Timeline" /> y hace copias en profundidad de los valores de este objeto.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> y hace copias en profundidad de sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando esta escala de tiempo ha terminado de reproducirse totalmente: ya no especificará su período activo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta escala de tiempo es la escala de tiempo raíz de un árbol de la escala de tiempo, ha completado su reproducción una vez que llega al final de su período activo (que incluye las repeticiones) y todos sus elementos secundarios han llegado al final de su período activo. Si esta escala de tiempo es una escala de tiempo secundarias, se considera que ha terminado de reproducirse totalmente cuando la escala de tiempo raíz del árbol de escala de tiempo a la que pertenece alcanza el final de su período activo y todas sus escalas de tiempo secundarias hayan terminado de reproducirse.  
  
 Detención de una escala de tiempo no desencadena su evento completado, pero se omite hasta su período de relleno hace.  
  
 El <xref:System.Object> parámetro de la <xref:System.EventHandler> controlador de eventos es la escala de tiempo <xref:System.Windows.Media.Animation.Clock>.  
  
 Aunque este controlador de eventos parece estar asociada con una escala de tiempo, en realidad se registra con el <xref:System.Windows.Media.Animation.Clock> creado para esta escala de tiempo.  Para obtener más información, consulte el [información general sobre eventos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).  
  
   
  
## Examples  
 En el ejemplo siguiente, dos <xref:System.Windows.Media.Animation.Storyboard> objetos se utilizan para crear una transición de animación entre dos imágenes, almacenados mediante <xref:System.Windows.Media.ImageSource> objetos y se muestran mediante un <xref:System.Windows.Controls.Image> control. Un guión gráfico reduce el control de imagen hasta que desaparezca. Cuando finalice, la antigua <xref:System.Windows.Media.ImageSource> se intercambia con las demás <xref:System.Windows.Media.ImageSource>, y un segundo guión gráfico que se expande la imagen de control hasta que vuelve a tamaño completo.  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Windows.Media.Animation.Clock" /> a partir de <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo elemento <see cref="T:System.Windows.Media.Animation.Clock" /> controlable de este elemento <see cref="T:System.Windows.Media.Animation.Timeline" />. Si este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> tiene elementos secundarios, se crea un árbol de relojes con este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> como raíz.</summary>
        <returns>Nuevo elemento <see cref="T:System.Windows.Media.Animation.Clock" /> controlable de este elemento <see cref="T:System.Windows.Media.Animation.Timeline" />. Si este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> es un elemento <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> que contiene escalas de tiempo secundarias, se crea un árbol de objetos <see cref="T:System.Windows.Media.Animation.Clock" /> con un elemento <see cref="T:System.Windows.Media.Animation.Clock" /> controlable creado a partir de este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> como raíz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque esto <xref:System.Windows.Media.Animation.Timeline> puede ser el elemento secundario de uno o varios <xref:System.Windows.Media.Animation.TimelineGroup> objetos, se omite esta información: este método trata actual <xref:System.Windows.Media.Animation.Timeline> como raíz <xref:System.Windows.Media.Animation.Timeline>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot">Es <see langword="true" /> si el objeto <see cref="T:System.Windows.Media.Animation.Clock" /> raíz devuelto debe devolver el objeto <see cref="T:System.Windows.Media.Animation.ClockController" /> de su propiedad <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> para que se pueda controlar el árbol de <see cref="T:System.Windows.Media.Animation.Clock" /> interactivamente; de lo contrario, es <see langword="false" />.</param>
        <summary>Crea un nuevo objeto <see cref="T:System.Windows.Media.Animation.Clock" /> a partir de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> y especifica si el nuevo objeto <see cref="T:System.Windows.Media.Animation.Clock" /> se puede controlar. Si este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> tiene elementos secundarios, se crea un árbol de relojes con este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> como raíz.</summary>
        <returns>El nuevo objeto <see cref="T:System.Windows.Media.Animation.Clock" /> construido a partir de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />. Si este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> es un elemento <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> que contiene escalas de tiempo secundarias, se crea un árbol de objetos <see cref="T:System.Windows.Media.Animation.Clock" /> con un elemento <see cref="T:System.Windows.Media.Animation.Clock" /> controlable creado a partir de este elemento <see cref="T:System.Windows.Media.Animation.Timeline" /> como raíz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aunque esto <xref:System.Windows.Media.Animation.Timeline> puede ser el elemento secundario de uno o varios <xref:System.Windows.Media.Animation.TimelineGroup> objetos, se omite esta información: este método trata actual <xref:System.Windows.Media.Animation.Timeline> como raíz <xref:System.Windows.Media.Animation.Timeline>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia la velocidad de progreso del reloj de la escala de tiempo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La velocidad global actual de cambios en el reloj de la escala de tiempo en las siguientes circunstancias:  
  
-   El reloj cambia la dirección debido a su escala de tiempo <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> configuración.  
  
-   El reloj aumenta o disminuye la velocidad debido a su escala de tiempo <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> o <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> valores de propiedad.  
  
-   El reloj está en pausa o reanudar.  
  
-   El reloj se vuelve inactivo o se reactiva.  
  
-   El <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> de uno de los cambios de elemento primario del reloj.  
  
 El <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> evento es útil para realizar el seguimiento cuando se detiene el reloj de una escala de tiempo; en el controlador de eventos, use el guión gráfico <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> método o la comprobación del reloj <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> propiedad para determinar si se detiene el reloj; compare esto con un valor previamente almacenado en caché para determinar si ha cambiado.  
  
 El <xref:System.Object> parámetro de la <xref:System.EventHandler> controlador de eventos es la escala de tiempo <xref:System.Windows.Media.Animation.Clock>.  
  
 Aunque este controlador de eventos parece estar asociada con una escala de tiempo, en realidad se registra con el <xref:System.Windows.Media.Animation.Clock> creado para esta escala de tiempo.  Para obtener más información, consulte el [información general sobre eventos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo registrarse para la <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se actualiza la propiedad <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> del <see cref="T:System.Windows.Media.Animation.Clock" /> de la escala de tiempo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> eventos cuando desea recibir una notificación cuando una escala de tiempo <xref:System.Windows.Media.Animation.Clock> inicia, detiene o llena.  
  
 Pausar un <xref:System.Windows.Media.Animation.Clock> no cambia su <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>. Para recibir una notificación cuando se detiene un reloj, use el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 Aunque este evento se produce cuando el <xref:System.Windows.Media.Animation.ClockState> pasa a ser válido, que no significa necesariamente que la <xref:System.Windows.Media.Animation.ClockState> cambiado: un <xref:System.Windows.Media.Animation.Clock> que cambia de <xref:System.Windows.Media.Animation.ClockState.Active> a <xref:System.Windows.Media.Animation.ClockState.Filling> y luego volver a <xref:System.Windows.Media.Animation.ClockState.Active> provocará en el mismo paso Este evento, pero su <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> propiedad no cambia realmente.  
  
 El <xref:System.Object> parámetro de la <xref:System.EventHandler> controlador de eventos es el <xref:System.Windows.Media.Animation.Clock> que se creó para esta escala de tiempo.  
  
 Aunque este controlador de eventos parece estar asociada con una escala de tiempo, en realidad se registra con el <xref:System.Windows.Media.Animation.Clock> creado para esta escala de tiempo.  Para obtener más información, consulte el [información general sobre eventos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se actualiza la propiedad <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> del <see cref="T:System.Windows.Media.Animation.Clock" /> de la escala de tiempo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> evento al que quiere que le avisa cuando el <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> de una escala de tiempo <xref:System.Windows.Media.Animation.Clock> se actualiza.  
  
 El <xref:System.Object> parámetro de la <xref:System.EventHandler> controlador de eventos es la escala de tiempo <xref:System.Windows.Media.Animation.Clock>.  
  
 Aunque este controlador de eventos parece estar asociada con una escala de tiempo, en realidad se registra con el <xref:System.Windows.Media.Animation.Clock> creado para esta escala de tiempo.  Para obtener más información, consulte el [información general sobre eventos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo registrarse para la <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> eventos.  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el porcentaje de <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de la escala de tiempo transcurrido desacelerando el paso del tiempo de su velocidad máxima a cero.</summary>
        <value>Valor entre 0 y 1, inclusive, que especifica el porcentaje de <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> de la escala de tiempo transcurrido desacelerando el paso del tiempo de su velocidad máxima a cero. Si también se establece la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> de la escala de tiempo, la suma de <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> y <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> debe ser inferior o igual a 1. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> propiedad que se va a crear animaciones que lentamente hacia abajo antes de detenerse. El <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> propiedad resulta útil para crear efectos de facilidad o realizar el movimiento parece más natural. Use la <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> y <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> propiedades juntas para crear animaciones que se inician con lentitud, velocidad y, a continuación, ralentizar antes de finalizar.  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> es menor que 0 o mayor que 1.</exception>
        <exception cref="T:System.InvalidOperationException">La suma de <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> y <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> supera 1.</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRate">
      <MemberSignature Language="C#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="ILAsm" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      <MemberSignature Language="VB.NET" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="F#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" Usage="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece la velocidad de fotograma deseada para esta escala de tiempo y sus escalas de tiempo secundarias.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Utilice esta propiedad para definir una velocidad de fotogramas específicos en el que se deben ejecutar animaciones.  Esto es sólo una instrucción y no es un valor garantizado. Esta propiedad tiene dos usos principales:

- Limitar la cantidad de recursos de procesamiento para movimiento lento, en segundo plano tipo animaciones que no requieren un alto grado de fidelidad. Esto puede lograrse estableciendo un valor de velocidad de fotograma pequeño en la escala de tiempo.

- Reducir el impacto visual de desgarro en rápido movimiento horizontales animaciones. Esto puede lograrse estableciendo un valor de velocidad de fotograma alta en la escala de tiempo.

Esta propiedad solo puede establecerse en una escala de tiempo raíz.

## Examples  
El ejemplo siguiente utiliza la propiedad DesiredFrameRate para limitar varias animaciones a 10 fotogramas por segundo.

[!code-xaml[timingbehaviors_snip#GraphicsMMDesiredFrameRateExample](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/DesiredFrameRateExample.xaml#GraphicsMMDesiredFrameRateExample)]

]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/wpf/graphics-multimedia/animation-overview.md">Información general sobre animaciones</related>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad adjunta <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la duración para la que se reproduce esta escala de tiempo, sin contar las repeticiones.</summary>
        <value>La duración simple de la escala de tiempo: la cantidad de tiempo que esta escala de tiempo tarda en completar una iteración de avance. El valor predeterminado es <see cref="P:System.Windows.Duration.Automatic" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duración simple de una escala de tiempo constituye el tiempo para una iteración de avance en comparación con el período de tiempo total, incluidas las repeticiones.  
  
## <a name="default-duration-behavior"></a>Comportamiento de duración predeterminado  
 El comportamiento de un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> estructura con un valor de <xref:System.Windows.Duration.Automatic%2A> depende del tipo de escala de tiempo:  
  
|**Escala de tiempo**|**Comportamiento**|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|Indeterminado (<xref:System.Windows.Media.Animation.Timeline> es abstracto)|  
|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|Se expande para ajustar las escalas de tiempo secundarias|  
|\<*Tipo*> animación (conocidas como animaciones "básicas" o un "From/To/By")|1 segundo|  
|\<*Tipo*> AnimationUsingKeyFrames (conocidas como animaciones de fotogramas clave)|Suma de todos los fotogramas clave <xref:System.Windows.Media.Animation.KeyTime> valores|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
   
  
## Examples  
 <xref:System.Windows.Media.Animation.ParallelTimeline> y <xref:System.Windows.Media.Animation.Storyboard> son tipos de <xref:System.Windows.Media.Animation.TimelineGroup> objetos. El tiempo que dure un <xref:System.Windows.Media.Animation.TimelineGroup> viene determinada por la duración de sus escalas de tiempo secundarias. Por ejemplo, el <xref:System.Windows.Media.Animation.Storyboard> a continuación, se ejecutará durante seis segundos (duración de 6 segundos) que es cuando su escala de tiempo de último elemento secundario (<xref:System.Windows.Media.Animation.DoubleAnimation>) finaliza.  
  
> [!NOTE]
>  Nota: se ha omitido el código en los ejemplos siguientes, que se proporcionan solo con fines ilustrativos.  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 Ejemplos de \< *tipo*> incluyen animaciones <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etcetera. Si no hay ningún <xref:System.Windows.Media.Animation.Timeline.Duration%2A> se especifica para estos tipos de animaciones, se ejecutarán durante un segundo.  
  
 [xaml]  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 Ejemplos de \< *tipo*> AnimationUsingKeyFrames incluyen <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etcetera. Si no hay ningún <xref:System.Windows.Media.Animation.Timeline.Duration%2A> se especifica para estos tipos de animaciones que se ejecutarán hasta que hayan finalizado todos los fotogramas clave.  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica cómo se comporta <see cref="T:System.Windows.Media.Animation.Timeline" /> una vez que llega al final de su período activo.</summary>
        <value>Un valor que especifica cómo se comporta la escala de tiempo después de llegar al final de su período activo pero su elemento principal se encuentra dentro de su período de relleno o activo. El valor predeterminado es <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca un animaciones <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> propiedad <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> cuando desee que la animación conserve su valor una vez que llega al final de su período activo. Una animación que se ha llegado al final de su período activo que tiene un <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> de <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> se dice que su período de relleno. Si no desea que una animación conserve su valor después de que llega al final de su período activo, establezca su  
  
 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> propiedad <xref:System.Windows.Media.Animation.FillBehavior.Stop>.  
  
 Dado que una animación en su período de relleno continúa para invalidar el valor de su propiedad de destino, al intentar establecer el valor de la propiedad de destino a través de otros medios puede parecer que no tienen ningún efecto. Para obtener un ejemplo que muestra cómo establecer un valor de propiedad después de animarla, vea [Cómo: Establecer una propiedad después de animarla con un guión gráfico](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md).  
  
 Una escala de tiempo secundarias detiene la reproducción y el rellenado cuando se detiene su escala de tiempo primaria; Si desea una escala de tiempo del elemento secundario para rellenar, asegúrese de que su objeto timeline primario tiene un <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> de <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>.  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><see langword="true" /> para comprobar si se puede inmovilizar esta instancia; <see langword="false" /> para inmovilizar esta instancia.</param>
        <summary>Convierte este objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> en no modificable o determina si se puede convertir en no modificable.</summary>
        <returns>Si <paramref name="isChecking" /> es true, este método devuelve <see langword="true" /> si se puede establecer esta instancia como de solo lectura o <see langword="false" /> si no se puede establecer como de solo lectura.  
  
Si <paramref name="isChecking" /> es false, este método devuelve <see langword="true" />, si esta instancia es ahora de solo lectura, o <see langword="false" /> si no se puede establecer como de solo lectura, con el inconveniente de haber empezado a cambiar el estado de inmovilización de este objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No llame a este método directamente (excepto cuando base la llamada en una implementación). Este método se llama internamente en <xref:System.Windows.Freezable.Freeze%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="T:System.Windows.Media.Animation.Timeline" /> los implementadores deben invalidar este método cuando la clase contiene los datos que no se almacenan utilizando las propiedades de dependencia.  
  
Una implementación típica podría llamar a la base y luego llame al estático <see cref="M:System.Windows.Freezable.Freeze" /> método en todos los <see cref="T:System.Windows.Freezable" /> las propiedades que contiene la clase, devolver con tipo <see langword="true" /> sólo si todas las propiedades estén inmovilizadas (o se ha inmovilizado podría, en el caso de pasar a través de un <see langword="false" /> valor <paramref name="isChecking" />).</para></block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Instancia de <see cref="T:System.Windows.Media.Animation.Timeline" /> que se va a clonar.</param>
        <summary>Convierte esta instancia en un clon del objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales. Tenga en cuenta que si estas propiedades contienen referencias de recursos o enlaces de datos, <xref:System.Windows.Freezable.GetAsFrozen%2A> se producirá un error al intentar inmovilizar el objeto y se producirá un <xref:System.InvalidOperationException>.  
  
 Este método es invocado por el <xref:System.Windows.Freezable.GetAsFrozen%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método. Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetAsFrozen%2A> en lugar de llamar a este método directamente.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">Clase <see cref="T:System.Windows.Media.Animation.Timeline" /> que se va a copiar e inmovilizar.</param>
        <summary>Convierte esta instancia en un clon inmovilizado del valor de <see cref="T:System.Windows.Media.Animation.Timeline" /> especificado. Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por el <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método. Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> en lugar de llamar a este método directamente.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">Escala de tiempo desde la que se va a recuperar la velocidad de fotograma deseada.</param>
        <summary>Obtiene la velocidad de fotograma deseada del objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> especificado.</summary>
        <returns>Velocidad de fotograma deseada de esta escala de tiempo. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método proporciona acceso de lectura a la <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> propiedad adjunta. Para obtener más información, consulte la <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> página.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">Objeto <see cref="T:System.Windows.Media.Animation.Clock" /> creado para este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</param>
        <summary>Devuelve la longitud de una sola iteración de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Longitud de una sola iteración de <see cref="T:System.Windows.Media.Animation.Timeline" /> o <see cref="P:System.Windows.Duration.Automatic" /> si la duración natural se desconoce.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método solo debe llamarse cuando la <xref:System.Windows.Media.Animation.Timeline.Duration%2A> propiedad está establecida en <xref:System.Windows.Duration.Automatic%2A>. Si <xref:System.Windows.Media.Animation.Timeline.Duration%2A> es <xref:System.Windows.Duration.Automatic%2A>, la duración natural viene determinada por la implementación concreta de la clase de <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.  
  
 Si <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> devuelve <xref:System.Windows.Duration.Automatic%2A>, significa que la duración natural es desconocido, lo que implica una duración natural de <xref:System.Windows.Duration.Forever%2A>. Por ejemplo, es el caso para el streaming multimedia.  
  
 Tenga en cuenta que pasar un reloj distinto del que se creó para esta escala de tiempo de este método es posible, pero le proporcionará resultados no confiables.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">Objeto <see cref="T:System.Windows.Media.Animation.Clock" /> creado para este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</param>
        <summary>Devuelve la longitud de una sola iteración de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />. Este método proporciona la implementación de <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />.</summary>
        <returns>Longitud de una sola iteración de <see cref="T:System.Windows.Media.Animation.Timeline" /> o <see cref="P:System.Windows.Duration.Automatic" /> si la duración natural se desconoce.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método proporciona la implementación de <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> y no debe llamarse directamente desde el código. Utilice <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> en su lugar.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Este método debe implementarse mediante clases de escala de tiempo que deben proporcionar un natural personalizado <see cref="T:System.Windows.Duration" /> cuando el <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> propiedad está establecida en <see cref="P:System.Windows.Duration.Automatic" />. Si el autor no puede determinar la duración natural, este método debe devolver <see cref="P:System.Windows.Duration.Automatic" />.</para></block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de este objeto <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <value>El nombre de esta escala de tiempo. El valor predeterminado es <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.Name" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se quita el reloj creado para esta escala de tiempo o una de sus escalas de tiempo primarias.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se genera aplicando un <xref:System.Windows.Media.Animation.RemoveStoryboard> acción a un guión gráfico, a través de un guión gráfico <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> método, o (cuando se trabaja directamente con relojes) una llamada a la <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> método.  
  
 Aunque este controlador de eventos parece estar asociada con una escala de tiempo, en realidad se registra con el <xref:System.Windows.Media.Animation.Clock> creado para esta escala de tiempo.  Para obtener más información, consulte el [información general sobre eventos de temporización](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de repetición de esta escala de tiempo.</summary>
        <value>Una iteración <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> que especifica el número de veces que se debe reproducir la escala de tiempo, un valor <see cref="T:System.TimeSpan" /> que especifica la longitud total del período activo de esta escala de tiempo o el valor especial <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, que especifica que la escala de tiempo debe repetirse indefinidamente. El valor predeterminado es un <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> con un <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> de <c>1</c>, lo que indica que la escala de tiempo se reproduce una vez.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si una iteración <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> especificado y la escala de tiempo <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> propiedad está establecida en `true`, una repetición consta de una iteración de avance y una iteración con versiones anteriores. Una escala de tiempo con un <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> propiedad establecida en true una iteración <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 tardarían en reproducirse hacia delante y hacia atrás, a continuación, reenvía de nuevo y, a continuación, hacia atrás de nuevo.  
  
 En lugar de especificar el número de veces que se reproduce una escala de tiempo, también puede especificar la longitud total de tiempo que desea la escala de tiempo para jugar. Un objeto Timeline, repetir este procedimiento <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> valor debe ser mayor que la escala de tiempo <xref:System.Windows.Media.Animation.Timeline.Duration%2A>. Por ejemplo, una escala de tiempo con un <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 2 segundos y un <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> de 4 segundos se reproducirá dos veces. Si el <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> es menor que la escala de tiempo <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, se acorta el período activo de la escala de tiempo.  
  
 Para obtener más información acerca de la repetición de las escalas de tiempo, consulte [información general sobre animaciones](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline">Objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> al que se asigna <paramref name="desiredFrameRate" />.</param>
        <param name="desiredFrameRate">Es el número máximo de fotogramas que esta escala de tiempo debe generar cada segundo o es <see langword="null" /> si el sistema debe controlar el número de fotogramas.</param>
        <summary>Establece la velocidad de fotograma deseada del objeto <see cref="T:System.Windows.Media.Animation.Timeline" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método establece el <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> propiedad adjunta. Para obtener más información, consulte la <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> página.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la velocidad, relativa a su elemento primario, a la que progresa <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <value>Un valor finito mayor que 0 que describe la velocidad de progresión de esta escala de tiempo, relativa a su velocidad del elemento primario o, si se trata de una escala de tiempo raíz, la velocidad de la escala de tiempo predeterminada. El valor predeterminado es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una escala de tiempo <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> configuración no tiene un efecto su <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; ese es el tiempo en relación con primario de la escala de tiempo o, si la escala de tiempo es una escala de tiempo raíz, el momento en que se ha confirmado el reloj de la escala de tiempo.  
  
 Si <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> o <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> se especifican, esto <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> es el promedio de la duración natural de la escala de tiempo.  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
   
  
## Examples  
 Una escala de tiempo <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> propiedad controla la velocidad de progreso con respecto a su elemento primario. Si la escala de tiempo es una raíz, su <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> es relativa a la velocidad de la escala de tiempo predeterminada. El ejemplo siguiente muestra varias escalas de tiempo con diferentes <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> configuración.  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> es menor que 0 o no es un valor finito.</exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>