<Type Name="PowerEase" FullName="System.Windows.Media.Animation.PowerEase">
  <TypeSignature Language="C#" Value="public class PowerEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.PowerEase" />
  <TypeSignature Language="VB.NET" Value="Public Class PowerEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class PowerEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="66175-101">Representa una función de entradas y salidas lentas que crea una animación que aumenta o disminuye la velocidad usando la fórmula *f*(*t*) = *t*<sup>p</sup>, donde p es igual al valor de la propiedad <see cref="P:System.Windows.Media.Animation.PowerEase.Power" />.</span><span class="sxs-lookup"><span data-stu-id="66175-101">Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>p</sup> where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66175-102">Puede controlar si la animación se acelera, reduce la velocidad, o ambos mediante la especificación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="66175-102">You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span> <span data-ttu-id="66175-103">En el siguiente gráfico muestra los distintos valores de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, donde *f*(*t*) representa el progreso de la animación y *t* representa el tiempo.</span><span class="sxs-lookup"><span data-stu-id="66175-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="66175-104">![Gráficos CubicEase EasingMode. ] (~/add/media/cubicease-graph.png "CubicEase EasingMode gráficos.")</span><span class="sxs-lookup"><span data-stu-id="66175-104">![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png "CubicEase EasingMode graphs.")</span></span>  
  
 <span data-ttu-id="66175-105">Mediante el uso de la <xref:System.Windows.Media.Animation.PowerEase> función, puede especificar qué rapidez aceleración/desaceleración tiene lugar mediante la especificación de la <xref:System.Windows.Media.Animation.PowerEase.Power%2A> propiedad:</span><span class="sxs-lookup"><span data-stu-id="66175-105">By using the <xref:System.Windows.Media.Animation.PowerEase> function, you can specify how quickly acceleration/deceleration takes place by specifying the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property:</span></span>  
  
 <span data-ttu-id="66175-106">*f*(*t*) = *t*<sup>p</sup> donde `p` es igual que el <xref:System.Windows.Media.Animation.PowerEase.Power%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="66175-106">*f*(*t*) = *t*<sup>p</sup> where `p` is equal to the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property.</span></span>  
  
 <span data-ttu-id="66175-107">Por este motivo, el <xref:System.Windows.Media.Animation.PowerEase> función se puede sustituir por <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase>(*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t *) = *t*<sup>4</sup>), y <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t* <sup>5</sup>).</span><span class="sxs-lookup"><span data-stu-id="66175-107">Because of this, the <xref:System.Windows.Media.Animation.PowerEase> function can be substituted for <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase> (*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>), and <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t*<sup>5</sup>).</span></span> <span data-ttu-id="66175-108">Por ejemplo, si desea utilizar un <xref:System.Windows.Media.Animation.PowerEase> función para crear el mismo comportamiento que un <xref:System.Windows.Media.Animation.QuadraticEase> función (*f*(*t*) = *t*<sup>2</sup>), debe especificar un <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valor de propiedad de 2.</span><span class="sxs-lookup"><span data-stu-id="66175-108">For example, if you wanted to use a <xref:System.Windows.Media.Animation.PowerEase> function to create the same behavior as a <xref:System.Windows.Media.Animation.QuadraticEase> function (*f*(*t*) = *t*<sup>2</sup>), you would specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of 2.</span></span>  
  
 <span data-ttu-id="66175-109">Hay muchas otras funciones de aceleración además <xref:System.Windows.Media.Animation.PowerEase> que puede explorar usando el siguiente ejemplo de Silverlight.</span><span class="sxs-lookup"><span data-stu-id="66175-109">There are several other easing functions besides <xref:System.Windows.Media.Animation.PowerEase> which you can explore using the following Silverlight sample.</span></span>  
  
 [<span data-ttu-id="66175-110">Ejecutar este ejemplo</span><span class="sxs-lookup"><span data-stu-id="66175-110">Run this sample</span></span>](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 <span data-ttu-id="66175-111">Además de utilizar las funciones de aceleración incluidas en el tiempo de ejecución, puede crear sus propias funciones de aceleración personalizadas mediante la adquisición de <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span><span class="sxs-lookup"><span data-stu-id="66175-111">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
<a name="xamlObjectElementUsage_PowerEase"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="66175-112">Uso de elementos de objeto XAML</span><span class="sxs-lookup"><span data-stu-id="66175-112">XAML Object Element Usage</span></span>  
  
```  
<PowerEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="66175-113">El ejemplo siguiente aplica un <xref:System.Windows.Media.Animation.PowerEase> cómo facilitar la función con un <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valor de propiedad de `20` a una <xref:System.Windows.Media.Animation.DoubleAnimation> para crear una animación disminuye la velocidad.</span><span class="sxs-lookup"><span data-stu-id="66175-113">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="66175-114">Dado que la <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valor es tan alto, la desaceleración es repentina en comparación con si se utiliza un valor inferior.</span><span class="sxs-lookup"><span data-stu-id="66175-114">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PowerEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66175-115">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.PowerEase" />.</span><span class="sxs-lookup"><span data-stu-id="66175-115">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66175-116">Crea una nueva instancia de la clase derivada de <see cref="T:System.Windows.Freezable" />.</span><span class="sxs-lookup"><span data-stu-id="66175-116">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span> <span data-ttu-id="66175-117">Al crear una clase derivada, debe reemplazar este método.</span><span class="sxs-lookup"><span data-stu-id="66175-117">When creating a derived class, you must override this method.</span></span></summary>
        <returns><span data-ttu-id="66175-118">La nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="66175-118">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66175-119">Clases de animación heredan indirectamente de <xref:System.Windows.Freezable>.</span><span class="sxs-lookup"><span data-stu-id="66175-119">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="66175-120">Por este motivo, debe invalidar el <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> método para construir un objeto de animación personalizado.</span><span class="sxs-lookup"><span data-stu-id="66175-120">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66175-121">En el ejemplo siguiente se muestra una implementación típica de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="66175-121">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime"><span data-ttu-id="66175-122">Tiempo normalizado (progreso) de la animación.</span><span class="sxs-lookup"><span data-stu-id="66175-122">Normalized time (progress) of the animation.</span></span></param>
        <summary><span data-ttu-id="66175-123">Proporciona la parte lógica de la función de aceleración que se puede reemplazar para generar el modo <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> de la función de aceleración personalizada.</span><span class="sxs-lookup"><span data-stu-id="66175-123">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span></span></summary>
        <returns><span data-ttu-id="66175-124">Valor Double que representa el progreso transformado.</span><span class="sxs-lookup"><span data-stu-id="66175-124">A double that represents the transformed progress.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66175-125">Este método transforma el tiempo normalizado para controlar el ritmo de una animación para la <xref:System.Windows.Media.Animation.EasingMode.EaseIn> casos de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="66175-125">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="66175-126">Solo tiene que especificar la función de aceleración para el <xref:System.Windows.Media.Animation.EasingMode.EaseIn> caso porque la implementación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> método transformaciones `normalizedTime` para el <xref:System.Windows.Media.Animation.EasingMode.EaseOut> y <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> casos.</span><span class="sxs-lookup"><span data-stu-id="66175-126">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Power" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.PowerEase.Power" />
      <MemberSignature Language="VB.NET" Value="Public Property Power As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Power { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66175-127">Obtiene o establece la potencia exponencial de la interpolación de animación.</span><span class="sxs-lookup"><span data-stu-id="66175-127">Gets or sets the exponential power of the animation interpolation.</span></span> <span data-ttu-id="66175-128">Por ejemplo, el valor 7 creará una curva de interpolación de animaciones que sigue la fórmula *f*(*t*) = *t*<sup>7</sup>.</span><span class="sxs-lookup"><span data-stu-id="66175-128">For example, a value of 7 will create an animation interpolation curve that follows the formula *f*(*t*) = *t*<sup>7</sup>.</span></span></summary>
        <value><span data-ttu-id="66175-129">Potencia exponencial de la interpolación de animación.</span><span class="sxs-lookup"><span data-stu-id="66175-129">The exponential power of the animation interpolation.</span></span> <span data-ttu-id="66175-130">Este valor debe ser mayor o igual que 0.</span><span class="sxs-lookup"><span data-stu-id="66175-130">This value must be greater or equal to 0.</span></span> <span data-ttu-id="66175-131">El valor predeterminado es 2.</span><span class="sxs-lookup"><span data-stu-id="66175-131">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<span data-ttu-id="66175-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span><span class="sxs-lookup"><span data-stu-id="66175-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span></span>  
  
<a name="xamlAttributeUsage_Power"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="66175-133">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="66175-133">XAML Attribute Usage</span></span>  
  
```  
<object Power="double" .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="66175-134">El ejemplo siguiente aplica un <xref:System.Windows.Media.Animation.PowerEase> cómo facilitar la función con un <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valor de propiedad de `20` a una <xref:System.Windows.Media.Animation.DoubleAnimation> para crear una animación disminuye la velocidad.</span><span class="sxs-lookup"><span data-stu-id="66175-134">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="66175-135">Dado que la <xref:System.Windows.Media.Animation.PowerEase.Power%2A> valor es tan alto, la desaceleración es repentina en comparación con si se utiliza un valor inferior.</span><span class="sxs-lookup"><span data-stu-id="66175-135">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PowerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66175-136">Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.PowerEase.Power" />.</span><span class="sxs-lookup"><span data-stu-id="66175-136">Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>