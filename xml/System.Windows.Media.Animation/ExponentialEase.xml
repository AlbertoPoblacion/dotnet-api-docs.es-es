<Type Name="ExponentialEase" FullName="System.Windows.Media.Animation.ExponentialEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16e8b1dd4b51b6cecedb46daea49fdb85b29f3d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657479" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExponentialEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExponentialEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ExponentialEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ExponentialEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExponentialEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una función de entradas y salidas lentas que crea una animación que acelera y/o desacelera mediante una fórmula exponencial.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede controlar si la animación se acelera, se ralentiza o ambos mediante la especificación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. En el siguiente gráfico muestra los distintos valores de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> donde *f*(*t*) representa el progreso de la animación y *t* representa el tiempo.  
  
 ![Gráficos ExponentialEase de diferentes EasingMode. ] (~/add/media/exponentialease-graph.png "Gráficos ExponentialEase de diferentes EasingMode.")  
  
 La fórmula utilizada para esta función es la siguiente.  
  
 ![Fórmula matemática para ExponentialEase](~/add/media/exponentialease-formula.png "fórmula matemática para ExponentialEase")  
  
 Mediante la fórmula anterior, el siguiente gráfico muestra el efecto de varios valores diferentes para el <xref:System.Windows.Media.Animation.ExponentialEase.Exponent%2A> propiedad:  
  
 ![ExponentialEase para tres valores de Exponent](~/add/media/expo-easeproperty.png "ExponentialEase para tres valores de Exponent")  
  
 Hay muchas otras funciones de aceleración además <xref:System.Windows.Media.Animation.ExponentialEase> que puede explorar usando el siguiente ejemplo de Silverlight.  
  
 [Ejecutar este ejemplo](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 Además de utilizar las funciones de aceleración incluidas en el tiempo de ejecución, puede crear sus propias funciones de aceleración personalizadas mediante la adquisición de <xref:System.Windows.Media.Animation.EasingFunctionBase>.  
  
<a name="xamlObjectElementUsage_ExponentialEase"></a>   
## <a name="xaml-object-element-usage"></a>Uso de elementos de objeto XAML  
  
```  
<ExponentialEase .../>  
```  
  
   
  
## Examples  
 El ejemplo siguiente aplica un <xref:System.Windows.Media.Animation.ExponentialEase> función de aceleración una <xref:System.Windows.Media.Animation.DoubleAnimation> para crear una animación disminuye la velocidad.  
  
 [!code-xaml[ExponentialEase#ExponentialEase](~/samples/snippets/csharp/VS_Snippets_Wpf/exponentialease/CS/window1.xaml#exponentialease)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExponentialEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ExponentialEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExponentialEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.ExponentialEase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase derivada de <see cref="T:System.Windows.Freezable" />. Al crear una clase derivada, debe reemplazar este método.</summary>
        <returns>La nueva instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clases de animación heredan indirectamente de <xref:System.Windows.Freezable>. Por este motivo, debe invalidar el <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> método para construir un objeto de animación personalizado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra una implementación típica de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">Tiempo normalizado (progreso) de la animación.</param>
        <summary>Proporciona la parte lógica de la función de aceleración que se puede reemplazar para generar el modo <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> de la función de aceleración personalizada.</summary>
        <returns>Valor Double que representa el progreso transformado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método transforma el tiempo normalizado para controlar el ritmo de una animación para la <xref:System.Windows.Media.Animation.EasingMode.EaseIn> casos de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 Solo tiene que especificar la función de aceleración para el <xref:System.Windows.Media.Animation.EasingMode.EaseIn> caso porque la implementación de la <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> método transformaciones `normalizedTime` para el <xref:System.Windows.Media.Animation.EasingMode.EaseOut> y <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> casos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exponent">
      <MemberSignature Language="C#" Value="public double Exponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Exponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ExponentialEase.Exponent" />
      <MemberSignature Language="VB.NET" Value="Public Property Exponent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Exponent { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el exponente utilizado para determinar la interpolación de la animación.</summary>
        <value>Exponente utilizado para determinar la interpolación de la animación. El valor predeterminado es 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ExponentialEase.ExponentProperty>  
  
 La fórmula utilizada en <xref:System.Windows.Media.Animation.ExponentialEase> es el siguiente.  
  
 ![Fórmula matemática para ExponentialEase](~/add/media/exponentialease-formula.png "fórmula matemática para ExponentialEase")  
  
 Mediante la fórmula anterior, el siguiente gráfico muestra el efecto de varios valores diferentes para el <xref:System.Windows.Media.Animation.ExponentialEase.Exponent%2A> propiedad:  
  
 ![ExponentialEase para tres valores de Exponent](~/add/media/expo-easeproperty.png "ExponentialEase para tres valores de Exponent")  
  
<a name="xamlAttributeUsage_Exponent"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object Exponent="double" .../>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExponentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExponentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ExponentialEase.ExponentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExponentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExponentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>