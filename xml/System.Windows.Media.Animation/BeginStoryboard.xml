<Type Name="BeginStoryboard" FullName="System.Windows.Media.Animation.BeginStoryboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba97488818f79aeb640f22a3fcdb84549c03b395" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55360884" /></Metadata><TypeSignature Language="C#" Value="public sealed class BeginStoryboard : System.Windows.TriggerAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BeginStoryboard extends System.Windows.TriggerAction" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.BeginStoryboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BeginStoryboard&#xA;Inherits TriggerAction" />
  <TypeSignature Language="C++ CLI" Value="public ref class BeginStoryboard sealed : System::Windows::TriggerAction" />
  <TypeSignature Language="F#" Value="type BeginStoryboard = class&#xA;    inherit TriggerAction" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerAction</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Acción de desencadenador que inicia un <see cref="T:System.Windows.Media.Animation.Storyboard" /> y distribuye sus animaciones a sus propiedades y objetos de destino.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use un <xref:System.Windows.Media.Animation.BeginStoryboard> acción con un <xref:System.Windows.EventTrigger> o <xref:System.Windows.Trigger> para aplicar animaciones a sus propiedades de destino e iniciarlas. <xref:System.Windows.Media.Animation.BeginStoryboard> comienza una <xref:System.Windows.Media.Animation.Storyboard> mediante una llamada a <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> en su <xref:System.Windows.Media.Animation.Storyboard> hacen referencia a cuando se desencadena.  
  
 Cuando comience una <xref:System.Windows.Media.Animation.Storyboard> en una propiedad que ya se esté animando por otro <xref:System.Windows.Media.Animation.Storyboard>, el <xref:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior%2A> propiedad de <xref:System.Windows.Media.Animation.BeginStoryboard> determina cómo se realiza la animación.  
  
## <a name="pause-resume-stop-or-otherwise-control-a-storyboard-interactively"></a>Pausar, reanudar, detener o controlar interactivamente un guión gráfico  
 Para poder pausar, reanudar o controlar una <xref:System.Windows.Media.Animation.BeginStoryboard.Storyboard%2A> que se declaró en el marcado de forma interactiva, debe establecer el <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> propiedad de su <xref:System.Windows.Media.Animation.BeginStoryboard>. A continuación, puede controlar la <xref:System.Windows.Media.Animation.Storyboard> mediante el uso de un <xref:System.Windows.Media.Animation.ControllableStoryboardAction> objeto (como <xref:System.Windows.Media.Animation.PauseStoryboard>, <xref:System.Windows.Media.Animation.ResumeStoryboard>, o <xref:System.Windows.Media.Animation.StopStoryboard>) se controla mediante una referencia a su <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>. Si el <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> de <xref:System.Windows.Media.Animation.BeginStoryboard> no se especifica, el <xref:System.Windows.Media.Animation.BeginStoryboard.Storyboard%2A> no se puede controlar interactivamente después de que se ha iniciado. Vea [Cómo: Usar desencadenadores de eventos para controlar un guión gráfico después de su inicio](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) para obtener más información.  
  
> [!NOTE]
>  En el código, puede usar los métodos interactivos de la <xref:System.Windows.Media.Animation.Storyboard> clase para controlar un <xref:System.Windows.Media.Animation.Storyboard> que se aplicó mediante un <xref:System.Windows.Media.Animation.BeginStoryboard>. Como es el caso cuando se usa <xref:System.Windows.Media.Animation.ControllableStoryboardAction> objetos, debe proporcionar el <xref:System.Windows.Media.Animation.BeginStoryboard> un nombre para su <xref:System.Windows.Media.Animation.Storyboard> se pueda controlar interactivamente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.ResumeStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.BeginStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.StopStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.PauseStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" />
    <altmember cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" />
    <altmember cref="T:System.Windows.EventTrigger" />
    <altmember cref="T:System.Windows.Trigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BeginStoryboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BeginStoryboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BeginStoryboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandoffBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.HandoffBehavior HandoffBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.HandoffBehavior HandoffBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property HandoffBehavior As HandoffBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::HandoffBehavior HandoffBehavior { System::Windows::Media::Animation::HandoffBehavior get(); void set(System::Windows::Media::Animation::HandoffBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.HandoffBehavior : System.Windows.Media.Animation.HandoffBehavior with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de entrega apropiado para iniciar un reloj de animación en este guión gráfico.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />. El valor predeterminado es <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-the-compose-handoffbehavior"></a>Mediante el campo Compose de HandoffBehavior  
 Al aplicar un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, o <xref:System.Windows.Media.Animation.AnimationClock> a una propiedad mediante el uso de <xref:System.Windows.Media.Animation.HandoffBehavior.Compose?displayProperty=nameWithType>, cualquier <xref:System.Windows.Media.Animation.Clock> objetos asociados anteriormente a esa propiedad siguen consumiendo recursos del sistema; el sistema de temporización no quita estos relojes de forma automática.  
  
 Para evitar problemas de rendimiento cuando aplique muchos relojes mediante <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, debe quitar los relojes de composición de la propiedad animada cuando se hayan completado. Hay varias formas de quitar un reloj:  
  
-   Para quitar todos los relojes de una propiedad, utilice el <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> o <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> método del objeto animado. Especifique la propiedad animada como primer parámetro, y `null` como el segundo. De este modo, se quitarán todos los relojes de animación de la propiedad.  
  
-   Para quitar un determinado <xref:System.Windows.Media.Animation.AnimationClock> desde una lista de relojes, utilice la <xref:System.Windows.Media.Animation.Clock.Controller%2A> propiedad de la <xref:System.Windows.Media.Animation.AnimationClock> para recuperar un <xref:System.Windows.Media.Animation.ClockController>, a continuación, llame a la <xref:System.Windows.Media.Animation.ClockController.Remove%2A> método de la <xref:System.Windows.Media.Animation.ClockController>. Esto se hace normalmente el <xref:System.Windows.Media.Animation.Clock.Completed> controlador de eventos de un reloj. Tenga en cuenta que los relojes de raíz única pueden controlarse mediante una <xref:System.Windows.Media.Animation.ClockController>; el <xref:System.Windows.Media.Animation.Clock.Controller%2A> devuelve la propiedad de un reloj secundario `null`. Tenga en cuenta también que el <xref:System.Windows.Media.Animation.Clock.Completed> eventos no se llama si la duración efectiva del reloj es para siempre.  En ese caso, el usuario debe determinar cuándo llamar a <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Este problema se produce principalmente en las animaciones de objetos que tienen un período de duración prolongado.  Cuando un objeto se recolecta, sus relojes también se desconectan y el recolector.  
  
 Para obtener más información acerca de los objetos de reloj, consulte [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />. Al asignar un nombre al objeto <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />, es posible controlar el elemento <see cref="T:System.Windows.Media.Animation.Storyboard" /> después de iniciarse.</summary>
        <value>Nombre del objeto <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />. De manera predeterminada, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para poder pausar, reanudar o, en caso contrario, controlar interactivamente un <xref:System.Windows.Media.Animation.Storyboard>, establezca el <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> propiedad de su <xref:System.Windows.Media.Animation.BeginStoryboard> y usar un <xref:System.Windows.Media.Animation.ControllableStoryboardAction> objeto como <xref:System.Windows.Media.Animation.PauseStoryboard>, <xref:System.Windows.Media.Animation.ResumeStoryboard>, o <xref:System.Windows.Media.Animation.StopStoryboard> para hacer referencia a este nombre. Si el <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> de <xref:System.Windows.Media.Animation.BeginStoryboard> no se especifica, el <xref:System.Windows.Media.Animation.Storyboard> no se puede verse afectado de forma interactiva después de que se ha iniciado; Además, cuando el <xref:System.Windows.Media.Animation.Storyboard> finaliza o entra en su período de relleno, la animación se eliminan los relojes. Vea [Cómo: Usar desencadenadores de eventos para controlar un guión gráfico después de su inicio](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) para obtener más información.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clase <see cref="T:System.Windows.Media.Animation.Storyboard" /> que esta clase <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> inicia.</summary>
        <value><see cref="T:System.Windows.Media.Animation.Storyboard" /> que la clase <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> inicia. De manera predeterminada, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Storyboard"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryboardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StoryboardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StoryboardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoryboardProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StoryboardProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoryboardProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>