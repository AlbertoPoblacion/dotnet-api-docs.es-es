<Type Name="SynchronizedCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a78fd6e216810da416a0b6eef05ea6f26967b2d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizedCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="10feb-101">El tipo de objeto contenido como elementos en la colección segura para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10feb-101">The type of object contained as items in the thread-safe collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="10feb-102">Proporciona una colección segura para subprocesos que contiene objetos de un tipo especificado por el parámetro genérico como elementos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10feb-102">Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-103">La <xref:System.Collections.Generic.SynchronizedCollection%601> almacena datos en un contenedor <xref:System.Collections.Generic.List%601> y proporciona un objeto que se puede establecer y utilizar para sincronizar el acceso a la colección, de tal manera que sea segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="10feb-103">The <xref:System.Collections.Generic.SynchronizedCollection%601> stores data in a <xref:System.Collections.Generic.List%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread-safe.</span></span> <span data-ttu-id="10feb-104">Se puede recuperar el contenedor <xref:System.Collections.Generic.IList%601> mediante el método <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A>.</span><span class="sxs-lookup"><span data-stu-id="10feb-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A> method.</span></span> <span data-ttu-id="10feb-105">El objeto sincronizado se puede recuperar utilizando la propiedad <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="10feb-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A> property.</span></span> <span data-ttu-id="10feb-106">Solo se puede establecer si se usa uno de los constructores que toman el parámetro `syncRoot`.</span><span class="sxs-lookup"><span data-stu-id="10feb-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-107">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10feb-108">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="10feb-109">El objeto empleado para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-109">The object used to synchronize access the thread-safe collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-110">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> con el objeto empleado para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-110">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-111">Si varias instancias de <xref:System.Collections.Generic.SynchronizedCollection%601> se crean utilizando el mismo `syncRoot`, se protege el acceso en todas las instancias.</span><span class="sxs-lookup"><span data-stu-id="10feb-111">If multiple instances of the <xref:System.Collections.Generic.SynchronizedCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="10feb-112">
            <paramref name="syncRoot" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-112">
              <paramref name="syncRoot" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="10feb-113">El objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-113">The object used to synchronize access to the thread-safe collection.</span>
          </span>
        </param>
        <param name="list">
          <span data-ttu-id="10feb-114">La colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de elementos que se usa para inicializar la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-114">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-115">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> a partir de una lista enumerable especificada de elementos y con el objeto empleado para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-115">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="10feb-116">El valor de <paramref name="syncRoot" /> o <paramref name="list" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-116">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, params T[] list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="10feb-117">El objeto empleado para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-117">The object used to synchronize access the thread-safe collection.</span>
          </span>
        </param>
        <param name="list">
          <span data-ttu-id="10feb-118">
            <see cref="T:System.Array" /> de elementos de tipo <c>T</c> que se usa para inicializar la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-118">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-119">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> desde una matriz especificada de elementos y con el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-119">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="10feb-120">El valor de <paramref name="syncRoot" /> o <paramref name="list" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-120">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.List&lt;T&gt; list, bool makeCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.List`1&lt;!T&gt; list, bool makeCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As List(Of T), makeCopy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::List&lt;T&gt; ^ list, bool makeCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="makeCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="list">To be added.</param>
        <param name="makeCopy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="10feb-121">El elemento que se va a agregar a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-121">The element to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-122">Agrega un elemento a la colección segura para subprocesos, de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-122">Adds an item to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-123">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-123">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10feb-124">Quita todos los elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-124">Removes all items from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10feb-125">Quita todos los elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-125">Removes all items from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="10feb-126">Objeto que se va a buscar en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-126">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-127">Determina si la colección contiene un elemento con un valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-127">Determines whether the collection contains an element with a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-128">
            <see langword="true" /> si se encuentra el valor del elemento en la colección; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-128">
              <see langword="true" /> if the element value is found in the collection; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-129">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-129">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="10feb-130">Destino <see cref="T:System.Array" /> de los elementos de tipo <c>T</c> copiados de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-130">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="10feb-131">Índice de base cero de la matriz donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-131">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-132">Copia los elementos de la colección a una matriz especificada, empezando por un índice determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-132">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-133">Obtiene el número de elementos contenidos en la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-133">Gets the number of elements contained in the thread-safe collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-134">El número de elementos que contiene la colección segura para subprocesos y de sólo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-134">The number of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10feb-135">Devuelve un enumerador que recorre en iteración la colección sincronizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-135">Returns an enumerator that iterates through the synchronized collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-136">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> para los objetos del tipo almacenados en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-136">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="10feb-137">Quita todos los elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-137">Removes all items from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-138">Devuelve el índice de la primera aparición de un valor de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-138">Returns the index of the first occurrence of a value in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-139">El índice de base cero de la primera aparición del valor en la colección. </span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-139">The zero-based index of the first occurrence of the value in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-140">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-140">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-141">Índice de base cero del elemento que se va a recuperar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-141">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="10feb-142">El objeto que se va a insertar en la colección como un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-142">The object to be inserted into the collection as an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-143">Inserta un elemento en el índice especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-143">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-144">Si el `index` es igual al número de elementos de la colección, el elemento se agrega a la lista.</span><span class="sxs-lookup"><span data-stu-id="10feb-144">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="10feb-145">Si el `index` es menor que el número de elementos de la colección, los elementos que siguen al punto de inserción del elemento se desplazan hacia abajo para alojar el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="10feb-145">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-146">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-146">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-147">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-147">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-148">El índice de base cero de la colección donde se va a insertar el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-148">The zero-based index of the collection where the object is to be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="10feb-149">El objeto que se va a insertar en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-149">The object to be inserted into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-150">Inserta un elemento en el índice especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-150">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-151">Si el `index` es igual al número de elementos de la colección, el elemento se agrega a la lista.</span><span class="sxs-lookup"><span data-stu-id="10feb-151">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="10feb-152">Si el `index` es menor que el número de elementos de la colección, los elementos que siguen al punto de inserción del elemento se desplazan hacia abajo para alojar el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="10feb-152">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-153">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-153">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-154">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-154">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-155">Índice de base cero del elemento que se va a recuperar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-155">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-156">Obtiene un elemento de la colección segura para subprocesos con un índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-156">Gets an element from the thread-safe collection with a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-157">El objeto en la colección que tiene el <paramref name="index" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-157">The object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-158">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-158">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::List&lt;T&gt; ^ Items { System::Collections::Generic::List&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-159">Obtiene la lista de elementos que contiene la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-159">Gets the list of elements contained in the thread-safe collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-160">La <see cref="T:System.Collections.Generic.IList`1" /> de elementos que contiene la colección de sólo lectura y segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-160">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="10feb-161">Objeto que se quitará de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-161">The object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-162">Quita la primera aparición de un elemento especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-162">Removes the first occurrence of a specified item from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-163">
            <see langword="true" /> si el elemento se eliminó con éxito de la colección; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-163">
              <see langword="true" /> if item was successfully removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-164">Los elementos de la colección que siguen al elemento eliminado se desplazan hacia arriba para ocupar el hueco libre y sus índices se actualizan en consecuencia.</span><span class="sxs-lookup"><span data-stu-id="10feb-164">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-165">Índice de base cero del elemento que se va a recuperar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-165">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-166">Elimina un elemento de la colección en un índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-166">Removes an item at a specified index from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-167">Los elementos de la colección que siguen al elemento eliminado se desplazan hacia arriba para ocupar el hueco libre y sus índices se actualizan en consecuencia.</span><span class="sxs-lookup"><span data-stu-id="10feb-167">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-168">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-168">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-169">Índice de base cero del elemento que se va a recuperar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-169">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-170">Elimina un elemento de la colección en un <paramref name="index" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-170">Removes an item at a specified <paramref name="index" /> from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-171">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-171">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-172">El índice de base cero del objeto que se va a reemplazar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-172">The zero-based index of the object to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="10feb-173">El objeto que se va a reemplazar</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-173">The object to replace</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-174">Reemplaza el elemento situado en un índice especificado con otro elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-174">Replaces the item at a specified index with another item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-175">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-175">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-176">Obtiene el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-176">Gets the object used to synchronize access to the thread-safe collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-177">Un objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-177">An object used to synchronize access to the thread-safe collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-178">Obtiene un valor que indica si la colección es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-178">Gets a value that indicates whether the collection is read only.</span>
          </span>
        </summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-179">Esta propiedad siempre devuelve `false` porque se puede agregar a la colección, de modo que no es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="10feb-179">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="10feb-180">Destino <see cref="T:System.Array" /> de los elementos de tipo <c>T</c> copiados de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-180">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="10feb-181">Índice de base cero de la matriz donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-181">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-182">Copia los elementos de la colección a una matriz especificada, empezando por un índice determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-182">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-183">Obtiene un valor que indica si la colección es segura para la ejecución de subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-183">Gets a value that indicates whether the collection is thread safe.</span>
          </span>
        </summary>
        <value>
          <see langword="true" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-184">Esta propiedad siempre devuelve `true` porque la colección es segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="10feb-184">This property always returns `true` because the collection is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-185">Obtiene el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-185">Gets the object used to synchronize access to the thread-safe collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-186">Un objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-186">An object used to synchronize access to the thread-safe collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-187">El valor de este objeto `syncRoot` se puede establecer al crear la colección segura para subprocesos mediante el constructor <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="10feb-187">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="10feb-188">Devuelve un enumerador que recorre en iteración la colección sincronizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-188">Returns an enumerator that iterates through the synchronized collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-189">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> para los objetos del tipo almacenados en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-189">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="10feb-190">El objeto que se va a agregar a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-190">The object to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-191">Agrega un elemento a la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-191">Adds an element to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-192">Posición en la que se insertó el nuevo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-192">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-193">Un índice de base cero proporciona la posición.</span><span class="sxs-lookup"><span data-stu-id="10feb-193">The position is given by a zero-based index.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="10feb-194">Objeto que se va a buscar en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-194">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-195">Determina si la colección contiene un elemento con un valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-195">Determines whether the collection contains an element with a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-196">
            <see langword="true" /> si el elemento <paramref name="value" /> se encuentra en la colección; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-196">
              <see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-197">
            <paramref name="value" /> no es un objeto del tipo que contiene la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-197">
              <paramref name="value" /> is not an object of the type contained in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="10feb-198">El elemento en la colección cuyo índice se determina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-198">The element in the collection whose index is being determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-199">Determina el índice de base cero de un elemento de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-199">Determines the zero-based index of an element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10feb-200">El índice de <paramref name="value" /> si se encuentra en la colección; de lo contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-200">The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-201">Índice de base cero en el que se va a insertar <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-201">The zero-based index at which <c>value</c> is to be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="10feb-202">El objeto que se va a insertar en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-202">The object to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-203">Inserta un objeto en un índice especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-203">Inserts an object into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-204">Si el `index` es igual al número de elementos de la colección, el elemento se agrega a la lista.</span><span class="sxs-lookup"><span data-stu-id="10feb-204">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="10feb-205">Si el `index` es menor que el número de elementos de la colección, los elementos que siguen al punto de inserción del elemento se desplazan hacia abajo para alojar el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="10feb-205">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-206">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-206">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-207">El <paramref name="value" /> establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-207">The <paramref name="value" /> set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-208">Obtiene un valor que indica si el tamaño de la colección es fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-208">Gets a value that indicates whether the collection is fixed in size.</span>
          </span>
        </summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-209">Esta propiedad devuelve `false` porque se puede agregar a la colección, por lo que su tamaño no es fijo.</span><span class="sxs-lookup"><span data-stu-id="10feb-209">This property returns `false` because the collection can be added to and so is not fixed in size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10feb-210">Obtiene un valor que indica si la colección es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-210">Gets a value that indicates whether the collection is read only.</span>
          </span>
        </summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-211">Esta propiedad siempre devuelve `false` porque se puede agregar a la colección, de modo que no es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="10feb-211">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="10feb-212">Índice de base cero del elemento que se va a recuperar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-212">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-213">Obtiene o establece el elemento en un índice de base cero especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-213">Gets or sets the item at a specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10feb-214">El elemento con el <paramref name="index" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-214">The item with the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="10feb-215">El valor establecido es <see langword="null" /> o no es del tipo genérico <paramref name="T" /> correcto para la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-215">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="10feb-216">El <paramref name="index" /> especificado es menor que cero o mayor que el número de elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-216">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="10feb-217">Objeto que se va a quitar de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-217">The object to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10feb-218">Elimina la primera aparición de un objeto especificado de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10feb-218">Removes the first occurrence of a specified object as an element from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10feb-219">Los elementos de la colección que siguen al elemento eliminado se desplazan hacia arriba para ocupar el hueco libre y sus índices se actualizan en consecuencia.</span><span class="sxs-lookup"><span data-stu-id="10feb-219">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>