<Type Name="LinkedList&lt;T&gt;" FullName="System.Collections.Generic.LinkedList&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="baccdd7a8c2a1b8ce49132fa3ee333c72ee72d96" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinkedList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinkedList`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.LinkedList`1" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkedList(Of T)&#xA;Implements ICollection, ICollection(Of T), IDeserializationCallback, IEnumerable(Of T), IReadOnlyCollection(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class LinkedList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type LinkedList&lt;'T&gt; = class&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="5cf40-101">Especifica el tipo de elemento de la lista vinculada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-101">Specifies the element type of the linked list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="5cf40-102">Representa una lista de doble vínculo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-102">Represents a doubly linked list.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-103"><xref:System.Collections.Generic.LinkedList%601> es una lista vinculada de uso general.</span><span class="sxs-lookup"><span data-stu-id="5cf40-103"><xref:System.Collections.Generic.LinkedList%601> is a general-purpose linked list.</span></span> <span data-ttu-id="5cf40-104">Es compatible con los enumeradores e implementa el <xref:System.Collections.ICollection> interfaz, coherente con otras clases de colección de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="5cf40-104">It supports enumerators and implements the <xref:System.Collections.ICollection> interface, consistent with other collection classes in the .NET Framework.</span></span>  
  
 <span data-ttu-id="5cf40-105"><xref:System.Collections.Generic.LinkedList%601> proporciona nodos independientes de tipo <xref:System.Collections.Generic.LinkedListNode%601>, por lo que la inserción y eliminación son operaciones o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-105"><xref:System.Collections.Generic.LinkedList%601> provides separate nodes of type <xref:System.Collections.Generic.LinkedListNode%601>, so insertion and removal are O(1) operations.</span></span>  
  
 <span data-ttu-id="5cf40-106">Puede quitar nodos y volverlos a insertar en la misma lista o en otra lista, lo que resulta en ninguna objetos adicionales que se asignan en el montón.</span><span class="sxs-lookup"><span data-stu-id="5cf40-106">You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap.</span></span> <span data-ttu-id="5cf40-107">Debido a la lista también mantiene un recuento interno, obteniendo el <xref:System.Collections.Generic.LinkedList%601.Count%2A> propiedad es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-107">Because the list also maintains an internal count, getting the <xref:System.Collections.Generic.LinkedList%601.Count%2A> property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="5cf40-108">Cada nodo en un <xref:System.Collections.Generic.LinkedList%601> objeto es del tipo <xref:System.Collections.Generic.LinkedListNode%601>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-108">Each node in a <xref:System.Collections.Generic.LinkedList%601> object is of the type <xref:System.Collections.Generic.LinkedListNode%601>.</span></span> <span data-ttu-id="5cf40-109">Dado que el <xref:System.Collections.Generic.LinkedList%601> está vinculada por partida doble, cada nodo de destino al día el <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> nodo y con versiones anteriores a la <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> nodo.</span><span class="sxs-lookup"><span data-stu-id="5cf40-109">Because the <xref:System.Collections.Generic.LinkedList%601> is doubly linked, each node points forward to the <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> node and backward to the <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> node.</span></span>  
  
 <span data-ttu-id="5cf40-110">Las listas que contienen tipos de referencia funcionan mejor cuando un nodo y su valor se crean al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="5cf40-110">Lists that contain reference types perform better when a node and its value are created at the same time.</span></span> <span data-ttu-id="5cf40-111"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> tipos de propiedad de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-111"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> property for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-112">Si el <xref:System.Collections.Generic.LinkedList%601> está vacía, el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-112">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-113">La <xref:System.Collections.Generic.LinkedList%601> clase no admite el encadenamiento, división, ciclos u otras características que pueden dejar la lista en un estado incoherente.</span><span class="sxs-lookup"><span data-stu-id="5cf40-113">The <xref:System.Collections.Generic.LinkedList%601> class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state.</span></span> <span data-ttu-id="5cf40-114">La lista sigue siendo coherente en un único subproceso.</span><span class="sxs-lookup"><span data-stu-id="5cf40-114">The list remains consistent on a single thread.</span></span> <span data-ttu-id="5cf40-115">El único escenario multiproceso admitido <xref:System.Collections.Generic.LinkedList%601> es multiproceso de las operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="5cf40-115">The only multithreaded scenario supported by <xref:System.Collections.Generic.LinkedList%601> is multithreaded read operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-116">En el ejemplo de código siguiente se muestra muchas características de la <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-116">The following code example demonstrates many features of the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 [!code-cpp[Generic.LinkedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.LinkedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.LinkedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.LinkedList/cs/source.cs#1)]
 [!code-vb[Generic.LinkedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.LinkedList/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="5cf40-117">Este tipo no es seguro para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-117">This type is not thread safe.</span>
      </span>
      <span data-ttu-id="5cf40-118">Si la <see cref="T:System.Collections.Generic.LinkedList`1" /> es necesario acceder a varios subprocesos, deberá implementar su propio mecanismo de sincronización.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-118">If the <see cref="T:System.Collections.Generic.LinkedList`1" /> needs to be accessed by multiple threads, you will need to implement their own synchronization mechanism.</span>
      </span>
      <span data-ttu-id="5cf40-119">Un <see cref="T:System.Collections.Generic.LinkedList`1" /> puede admitir varios lectores simultáneamente, siempre y cuando no se modifica la colección.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-119">A <see cref="T:System.Collections.Generic.LinkedList`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="5cf40-120">Aun así, enumerar una colección no es un procedimiento seguro para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-120">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="5cf40-121">En el caso excepcional donde una enumeración debe enfrentarse a los accesos de escritura, la colección debe estar bloqueada durante toda la enumeración.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-121">In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</span>
      </span>
      <span data-ttu-id="5cf40-122">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cf40-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.LinkedListNode`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-123">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-123">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-124">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.LinkedList`1" /> que está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-124">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-125"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-125"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-126">Si el <xref:System.Collections.Generic.LinkedList%601> está vacía, el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-126">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-127">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-127">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-128">En el ejemplo de código siguiente se crea e inicializa un <xref:System.Collections.Generic.LinkedList%601> de tipo <xref:System.String>, agrega varios nodos y, a continuación, muestra su contenido.</span><span class="sxs-lookup"><span data-stu-id="5cf40-128">The following code example creates and initializes a <xref:System.Collections.Generic.LinkedList%601> of type <xref:System.String>, adds several nodes, and then displays its contents.</span></span>  
  
 [!code-cpp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CPP/llctor.cpp#1)]
 [!code-csharp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CS/llctor.cs#1)]
 [!code-vb[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/VB/llctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.LinkedList&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;" Usage="new System.Collections.Generic.LinkedList&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="5cf40-129">
            <see cref="T:System.Collections.IEnumerable" /> cuyos elementos se copian en el nuevo <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-129">The <see cref="T:System.Collections.IEnumerable" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-130">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.LinkedList`1" /> que contiene elementos copiados de la interfaz <see cref="T:System.Collections.IEnumerable" /> especificada y tiene una capacidad suficiente para alojar el número de elementos copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-130">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-131"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-131"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-132">Si `collection` ningún elemento tiene el nuevo <xref:System.Collections.Generic.LinkedList%601> está vacío y el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-132">If `collection` has no elements then the new <xref:System.Collections.Generic.LinkedList%601> is empty, and the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-133">Este constructor es una operación o (n), donde `n` es el número de elementos de `collection`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-133">This constructor is an O(n) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-134">Para obtener un ejemplo que incluye este constructor, vea el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-134">For an example that includes this constructor, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-135">
            <paramref name="collection" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-135">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedList (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinkedList(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.LinkedList&lt;'T&gt; : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;" Usage="new System.Collections.Generic.LinkedList&lt;'T&gt; (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="5cf40-136">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar el <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-136">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5cf40-137">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada al <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-137">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-138">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.LinkedList`1" />, que se puede serializar con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is serializable with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-139"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-139"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-140">Si el <xref:System.Collections.Generic.LinkedList%601> está vacía, el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-140">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-141">Este constructor es una operación o (n).</span><span class="sxs-lookup"><span data-stu-id="5cf40-141">This constructor is an O(n) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAfter">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-142">Agrega un nuevo nodo o valor detrás de un nodo existente en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-142">Adds a new node or value after an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public void AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAfter (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberSignature Language="F#" Value="member this.AddAfter : System.Collections.Generic.LinkedListNode&lt;'T&gt; * System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddAfter (node, newNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-143">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> después del cual se va a insertar <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-143">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="5cf40-144">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que se va a agregar a la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-144">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-145">Agrega el nuevo nodo especificado después del nodo existente que se haya concretado en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-145">Adds the specified new node after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-146"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-146"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-147">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-147">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-148">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-148">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-149">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-149">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5cf40-150">-o bien- <paramref name="newNode" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-150">-or-  <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-151">
            <paramref name="node" /> no está en la colección <see cref="T:System.Collections.Generic.LinkedList`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-151">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="5cf40-152">-o bien- <paramref name="newNode" /> pertenece a otra colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-152">-or-  <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAfter (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberSignature Language="F#" Value="member this.AddAfter : System.Collections.Generic.LinkedListNode&lt;'T&gt; * 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddAfter (node, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-153">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> después del cual se va a insertar un nuevo elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-153">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5cf40-154">Valor que se va a agregar a la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-154">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-155">Agrega un nuevo nodo que contiene el valor especificado después del nodo existente que se haya concretado en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-155">Adds a new node containing the specified value after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-156">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-156">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-157"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-157"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-158">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-158">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-159">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-159">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-160">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-160">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-161">
            <paramref name="node" /> no está en la colección <see cref="T:System.Collections.Generic.LinkedList`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-161">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBefore">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-162">Agrega un nuevo nodo o valor antes de un nodo existente en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-162">Adds a new node or value before an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public void AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBefore (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberSignature Language="F#" Value="member this.AddBefore : System.Collections.Generic.LinkedListNode&lt;'T&gt; * System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddBefore (node, newNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-163">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> antes del cual se va a insertar <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-163">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="5cf40-164">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que se va a agregar a la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-164">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-165">Agrega el nuevo nodo especificado antes del nodo existente que se haya concretado en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-165">Adds the specified new node before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-166"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-166"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-167">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-167">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-168">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-168">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-169">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-169">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5cf40-170">-o bien- <paramref name="newNode" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-170">-or-  <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-171">
            <paramref name="node" /> no está en la colección <see cref="T:System.Collections.Generic.LinkedList`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-171">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="5cf40-172">-o bien- <paramref name="newNode" /> pertenece a otra colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-172">-or-  <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBefore (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberSignature Language="F#" Value="member this.AddBefore : System.Collections.Generic.LinkedListNode&lt;'T&gt; * 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddBefore (node, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-173">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> antes del cual se va a insertar un nuevo elemento <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-173">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5cf40-174">Valor que se va a agregar a la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-174">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-175">Agrega un nuevo nodo que contiene el valor especificado antes del nodo existente que se haya concretado en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-175">Adds a new node containing the specified value before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-176">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-176">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-177"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-177"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-178">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-178">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-179">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-179">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-180">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-180">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-181">
            <paramref name="node" /> no está en la colección <see cref="T:System.Collections.Generic.LinkedList`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-181">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFirst">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-182">Agrega un nuevo nodo o valor al principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-182">Adds a new node or value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public void AddFirst (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFirst(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFirst (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFirst(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.AddFirst : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddFirst node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-183">Nuevo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que se va a agregar al principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-183">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-184">Agrega el nuevo nodo especificado al principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-184">Adds the specified new node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-185"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-185"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-186">Si el <xref:System.Collections.Generic.LinkedList%601> es el nuevo nodo vacío, se convierte en el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-186">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-187">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-187">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-188">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-188">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-189">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-189">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-190">
            <paramref name="node" /> pertenece a otra colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-190">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddFirst (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddFirst(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFirst (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddFirst(T value);" />
      <MemberSignature Language="F#" Value="member this.AddFirst : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddFirst value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-191">Valor que se va a agregar al principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-191">The value to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-192">Agrega un nuevo nodo que contiene el valor especificado al principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-192">Adds a new node containing the specified value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-193">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-193">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-194"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-194"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-195">Si el <xref:System.Collections.Generic.LinkedList%601> es el nuevo nodo vacío, se convierte en el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-195">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-196">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-196">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-197">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-197">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLast">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-198">Agrega un nuevo nodo o valor al final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-198">Adds a new node or value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public void AddLast (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLast(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLast (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLast(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.AddLast : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.AddLast node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-199">Nuevo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que se va a agregar al final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-199">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-200">Agrega el nuevo nodo especificado al final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-200">Adds the specified new node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-201"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-201"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-202">Si el <xref:System.Collections.Generic.LinkedList%601> es el nuevo nodo vacío, se convierte en el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-202">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-203">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-203">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-204">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-204">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-205">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-205">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-206">
            <paramref name="node" /> pertenece a otra colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-206">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddLast(T value);" />
      <MemberSignature Language="F#" Value="member this.AddLast : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.AddLast value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-207">Valor que se agrega al final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-207">The value to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-208">Agrega un nuevo nodo que contiene el valor especificado al final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-208">Adds a new node containing the specified value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-209">Nuevo objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-209">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-210"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-210"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-211">Si el <xref:System.Collections.Generic.LinkedList%601> es el nuevo nodo vacío, se convierte en el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-211">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-212">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-212">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-213">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-213">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="linkedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-214">Quita todos los nodos de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-214">Removes all nodes from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-215"><xref:System.Collections.Generic.LinkedList%601.Count%2A> está establecido en cero y también se liberan las referencias a otros objetos de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-215"><xref:System.Collections.Generic.LinkedList%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  <span data-ttu-id="5cf40-216"><xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> se establecen en `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-216"><xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> are set to `null`.</span></span>  
  
 <span data-ttu-id="5cf40-217">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-217">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-218">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-218">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="linkedList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-219">Valor que se va a buscar en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-219">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="5cf40-220">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-220">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-221">Determina si un valor se encuentra en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-221">Determines whether a value is in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-222">
            <see langword="true" /> si <paramref name="value" /> se encuentra en la matriz <see cref="T:System.Collections.Generic.LinkedList`1" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-222">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Generic.LinkedList`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-223">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-223">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-224">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-224">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="linkedList.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5cf40-225">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-225">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="5cf40-226">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-226">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5cf40-227">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-227">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-228">Copia la totalidad de <see cref="T:System.Collections.Generic.LinkedList`1" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-228">Copies the entire <see cref="T:System.Collections.Generic.LinkedList`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-229">Los elementos se copian en el <xref:System.Array> en el mismo orden en que el enumerador recorre el <xref:System.Collections.Generic.LinkedList%601>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-229">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.LinkedList%601>.</span></span>  
  
 <span data-ttu-id="5cf40-230">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-230">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-231">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-231">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-232">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-232">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5cf40-233">
            <paramref name="index" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-233">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5cf40-234">El número de elementos de la <see cref="T:System.Collections.Generic.LinkedList`1" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-234">The number of elements in the source <see cref="T:System.Collections.Generic.LinkedList`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-235">Obtiene el número de nodos que ya están incluidos en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-235">Gets the number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-236">Número de nodos que ya están incluidos en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-236">The number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-237">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-237">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-238">Para obtener un ejemplo que incluye esta propiedad, vea el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-238">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Find (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Find(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Find(T value);" />
      <MemberSignature Language="F#" Value="member this.Find : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.Find value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-239">Valor que se va a buscar en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-239">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-240">Encuentra el primer nodo que contiene el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-240">Finds the first node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-241">Primer objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene el valor especificado, si se encuentra; de lo contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-241">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-242">El <xref:System.Collections.Generic.LinkedList%601> se buscará hacia delante, empezando en <xref:System.Collections.Generic.LinkedList%601.First%2A> hasta <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-242">The <xref:System.Collections.Generic.LinkedList%601> is searched forward starting at <xref:System.Collections.Generic.LinkedList%601.First%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-243">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-243">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-244">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-244">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; FindLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; FindLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ FindLast(T value);" />
      <MemberSignature Language="F#" Value="member this.FindLast : 'T -&gt; System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="linkedList.FindLast value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-245">Valor que se va a buscar en la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-245">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-246">Encuentra el último nodo que contiene el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-246">Finds the last node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-247">Último objeto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que contiene el valor especificado, si se encuentra; de lo contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-247">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-248">El <xref:System.Collections.Generic.LinkedList%601> es la búsqueda hacia atrás, empezando en <xref:System.Collections.Generic.LinkedList%601.Last%2A> hasta <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-248">The <xref:System.Collections.Generic.LinkedList%601> is searched backward starting at <xref:System.Collections.Generic.LinkedList%601.Last%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-249">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-249">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-250">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-250">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; First { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; First" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.First" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property First As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ First { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.First : System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-251">Obtiene el primer nodo de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-251">Gets the first node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-252">Primer <see cref="T:System.Collections.Generic.LinkedListNode`1" /> de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-252">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-253"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-253"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-254">Si el <xref:System.Collections.Generic.LinkedList%601> está vacía, el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-254">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-255">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-255">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-256">Para obtener un ejemplo que incluye esta propiedad, vea el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-256">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedList&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.LinkedList`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As LinkedList(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedList&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.LinkedList&lt;'T&gt;.Enumerator" Usage="linkedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedList&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-257">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-257">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-258">Estructura <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> para la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-258">An <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-259">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="5cf40-259">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="5cf40-260">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="5cf40-260">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5cf40-261">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="5cf40-261">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5cf40-262">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-262">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5cf40-263">En esta posición, el valor de propiedad <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="5cf40-263">At this position, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-264">Por lo tanto, debe llamar a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-264">Therefore, you must call <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-265"><xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-265"><xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5cf40-266"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="5cf40-266"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5cf40-267">Si <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-267">If <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5cf40-268">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-268">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5cf40-269">Si la última llamada a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="5cf40-269">If the last call to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-270">No puede volver a establecer la propiedad <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="5cf40-270">You cannot set <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="5cf40-271">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="5cf40-271">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5cf40-272">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> o <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-272">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="5cf40-273">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5cf40-273">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="5cf40-274">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5cf40-274">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5cf40-275">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5cf40-275">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5cf40-276">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5cf40-276">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="5cf40-277">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-277">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="linkedList.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="5cf40-278">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información requerida para serializar la instancia de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-278">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5cf40-279">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la instancia de la <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-279">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-280">Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar la instancia de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-280">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-281">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-281">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-282">
            <paramref name="info" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-282">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5cf40-283">para proporcionar servicios de serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-283">for providing serialization services.</span>
          </span>
          <span data-ttu-id="5cf40-284">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-284">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Last { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Last" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Last" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Last As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Last { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Last : System.Collections.Generic.LinkedListNode&lt;'T&gt;" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.Last" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-285">Obtiene el último nodo de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-285">Gets the last node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-286">Último <see cref="T:System.Collections.Generic.LinkedListNode`1" /> de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-286">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-287"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-287"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-288">Si el <xref:System.Collections.Generic.LinkedList%601> está vacía, el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A> contienen propiedades `null`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-288">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="5cf40-289">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-289">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-290">Para obtener un ejemplo que incluye esta propiedad, vea el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-290">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="linkedList.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="5cf40-291">Origen del evento de deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-291">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-292">Implementa la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" /> y genera el evento de deserialización cuando esta ha finalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-292">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-293">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-293">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="5cf40-294">El objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> asociado a la instancia de <see cref="T:System.Collections.Generic.LinkedList`1" /> actual no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-294">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.LinkedList`1" /> instance is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-295">Quita la primera aparición de un nodo o valor de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-295">Removes the first occurrence of a node or value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Collections.Generic.LinkedListNode&lt;'T&gt; -&gt; unit" Usage="linkedList.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="5cf40-296">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> que se va a quitar de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-296">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-297">Quita el nodo especificado de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-297">Removes the specified node from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-298">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-298">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-299">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-299">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-300">
            <paramref name="node" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-300">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-301">
            <paramref name="node" /> no está en la colección <see cref="T:System.Collections.Generic.LinkedList`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-301">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="linkedList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-302">Valor que se va a quitar de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-302">The value to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-303">Quita la primera aparición del valor especificado de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-303">Removes the first occurrence of the specified value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-304">
            <see langword="true" /> si el elemento que contiene <paramref name="value" /> se quita correctamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-304">
              <see langword="true" /> if the element containing <paramref name="value" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5cf40-305">Este método también devuelve <see langword="false" /> si no se encontró <paramref name="value" /> en el <see cref="T:System.Collections.Generic.LinkedList`1" /> original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-305">This method also returns <see langword="false" /> if <paramref name="value" /> was not found in the original <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-306">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-306">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-307">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-307">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFirst">
      <MemberSignature Language="C#" Value="public void RemoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFirst();" />
      <MemberSignature Language="F#" Value="member this.RemoveFirst : unit -&gt; unit" Usage="linkedList.RemoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-308">Quita el nodo del principio de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-308">Removes the node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-309">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-309">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-310">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-310">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-311">La colección <see cref="T:System.Collections.Generic.LinkedList`1" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-311">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLast">
      <MemberSignature Language="C#" Value="public void RemoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLast();" />
      <MemberSignature Language="F#" Value="member this.RemoveLast : unit -&gt; unit" Usage="linkedList.RemoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-312">Quita el nodo del final de la colección <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-312">Removes the node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-313">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-313">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-314">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-314">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5cf40-315">La colección <see cref="T:System.Collections.Generic.LinkedList`1" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-315">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5cf40-316">Valor que se agrega al final de la colección <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-316">The value to add at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-317">Agrega un elemento al final de la interfaz <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-317">Adds an item at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-318"><xref:System.Collections.Generic.LinkedList%601> acepta `null` como válido <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> para tipos de referencia y permite valores duplicados.</span><span class="sxs-lookup"><span data-stu-id="5cf40-318"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="5cf40-319">Si el <xref:System.Collections.Generic.LinkedList%601> es el nuevo nodo vacío, se convierte en el <xref:System.Collections.Generic.LinkedList%601.First%2A> y <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-319">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-320">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-320">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cf40-321">Para obtener un ejemplo que incluye este método, consulte el <xref:System.Collections.Generic.LinkedList%601> clase.</span><span class="sxs-lookup"><span data-stu-id="5cf40-321">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-322">Obtiene un valor que indica si <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-322">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-323">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-323">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5cf40-324">En la implementación predeterminada de <see cref="T:System.Collections.Generic.LinkedList`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-324">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-325">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="5cf40-325">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="5cf40-326">Una colección es de solo lectura es simplemente una colección con un contenedor que evita la modificación de la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="5cf40-326">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="5cf40-327">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-327">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-328">Devuelve un enumerador que recorre en iteración una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-328">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-329">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> que se puede utilizar para recorrer en iteración la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-329">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-330">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="5cf40-330">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="5cf40-331">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="5cf40-331">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5cf40-332">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="5cf40-332">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5cf40-333">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-333">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5cf40-334">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="5cf40-334">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-335">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-335">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-336"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-336"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5cf40-337"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="5cf40-337"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5cf40-338">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-338">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5cf40-339">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-339">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5cf40-340">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="5cf40-340">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-341">No puede volver a establecer la propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="5cf40-341">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="5cf40-342">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="5cf40-342">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5cf40-343">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-343">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="5cf40-344">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5cf40-344">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="5cf40-345">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5cf40-345">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5cf40-346">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5cf40-346">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5cf40-347">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5cf40-347">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="5cf40-348">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-348">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5cf40-349">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-349">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="5cf40-350">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-350">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5cf40-351">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-351">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cf40-352">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-352">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5cf40-353">Si el tipo del origen de <xref:System.Collections.ICollection> no puede convertirse automáticamente al tipo del destino `array`, las implementaciones no genérica de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, mientras que las implementaciones genéricas inician <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-353">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="5cf40-354">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5cf40-355">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-355">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5cf40-356">
            <paramref name="index" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-356">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5cf40-357">
            <paramref name="array" /> es multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-357">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="5cf40-358">-o bien- <paramref name="array" /> no tiene índices basados en cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-358">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="5cf40-359">-o bien- El número de elementos de la colección <see cref="T:System.Collections.ICollection" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final del parámetro <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-359">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="5cf40-360">-o bien- El tipo de la colección <see cref="T:System.Collections.ICollection" /> de origen no puede convertirse automáticamente al tipo del parámetro <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-360">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-361">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-361">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-362">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-362">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5cf40-363">En la implementación predeterminada de <see cref="T:System.Collections.Generic.LinkedList`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-363">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-364">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5cf40-364">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="5cf40-365">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5cf40-365">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="5cf40-366">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5cf40-366">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5cf40-367">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5cf40-367">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5cf40-368"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-368"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="5cf40-369">La sincronización es eficaz solo si todos los subprocesos bloquean este objeto antes de acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-369">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="5cf40-370">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-370">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.LinkedList&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-371">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-371">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5cf40-372">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-372">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="5cf40-373">En la implementación predeterminada de <see cref="T:System.Collections.Generic.LinkedList`1" />, esta propiedad siempre devuelve la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-373">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-374">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5cf40-374">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="5cf40-375">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5cf40-375">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="5cf40-376">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5cf40-376">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5cf40-377">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5cf40-377">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5cf40-378"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-378"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="5cf40-379">La sincronización es eficaz solo si todos los subprocesos bloquean este objeto antes de acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-379">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="5cf40-380">El código siguiente muestra el uso de la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad para C#, C++ y Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="5cf40-380">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="5cf40-381">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-381">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cf40-382">Devuelve un enumerador que recorre en iteración la lista vinculada como colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-382">Returns an enumerator that iterates through the linked list as a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cf40-383">Interfaz <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer la lista vinculada como colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cf40-383">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the linked list as a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf40-384">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="5cf40-384">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="5cf40-385">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="5cf40-385">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5cf40-386">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="5cf40-386">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5cf40-387">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="5cf40-387">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5cf40-388"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="5cf40-388"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="5cf40-389">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="5cf40-389">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-390">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-390">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-391"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-391"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="5cf40-392"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="5cf40-392"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5cf40-393">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-393">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5cf40-394">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="5cf40-394">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5cf40-395">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="5cf40-395">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5cf40-396">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-396">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="5cf40-397">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="5cf40-397">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5cf40-398">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5cf40-398">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="5cf40-399">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5cf40-399">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="5cf40-400">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5cf40-400">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5cf40-401">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5cf40-401">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5cf40-402">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5cf40-402">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="5cf40-403">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="5cf40-403">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>