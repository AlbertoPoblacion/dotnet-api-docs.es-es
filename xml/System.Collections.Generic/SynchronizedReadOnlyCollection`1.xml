<Type Name="SynchronizedReadOnlyCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class SynchronizedReadOnlyCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedReadOnlyCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedReadOnlyCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedReadOnlyCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="ffa2e-101">El tipo de objeto contenido como elementos en la colección segura para subprocesos y de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-101">The type of object contained as items in the thread-safe, read-only collection.</span></span></typeparam>
    <summary><span data-ttu-id="ffa2e-102">Proporciona una colección de solo lectura y segura para subprocesos que contiene objetos de un tipo especificados por el parámetro genérico como elementos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-102">Provides a thread-safe, read-only collection that contains objects of a type specified by the generic parameter as elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-103"><xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> almacena los datos en un contenedor <xref:System.Collections.Generic.IList%601> y proporciona un objeto que se puede establecer y usar para sincronizar el acceso a la colección, de tal manera que ésta sea segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-103">The <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> stores data in an <xref:System.Collections.Generic.IList%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread safe.</span></span> <span data-ttu-id="ffa2e-104">Se puede recuperar el contenedor <xref:System.Collections.Generic.IList%601> mediante la propiedad <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A>.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A> property.</span></span> <span data-ttu-id="ffa2e-105">El objeto sincronizado se puede recuperar utilizando la propiedad <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A> property.</span></span> <span data-ttu-id="ffa2e-106">Solo se puede establecer si se usa uno de los constructores que toman el parámetro `syncRoot`.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ffa2e-107">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffa2e-108">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="sync_root">To be added.</param>
        <summary><span data-ttu-id="ffa2e-109">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> con el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-109">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class with the object used to synchronize access to the thread-safe, read-only collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-110">Si varias instancias de <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> se crean utilizando el mismo `syncRoot`, se protege el acceso en todas las instancias.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-110">If multiple instances of the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ffa2e-111"><paramref name="syncRoot" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-111"><paramref name="syncRoot" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.List&lt;T&gt; list, bool make_copy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.List`1&lt;!T&gt; list, bool make_copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As List(Of T), make_copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::List&lt;T&gt; ^ list, bool make_copy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sync_root" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="make_copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sync_root">To be added.</param>
        <param name="list">To be added.</param>
        <param name="make_copy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As IEnumerable(Of T))" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="sync_root">To be added.</param>
        <param name="list"><span data-ttu-id="ffa2e-112">La colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de elementos que se usa para inicializar la colección segura para subprocesos y de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-112">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe, read-only collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-113">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> de una lista enumerable especificada de elementos y con el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos y de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-113">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ffa2e-114">El valor de <paramref name="syncRoot" /> o <paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-114"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, params T[] list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, params T[] list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, !T[] list) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, ParamArray list As T())" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="list" Type="T[]" Index="1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="sync_root">To be added.</param>
        <param name="list"><span data-ttu-id="ffa2e-115"><see cref="T:System.Array" /> de elementos de tipo <c>T</c> que se usa para inicializar la colección segura para subprocesos de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-115">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe, read-only collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-116">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> de una matriz especificada de elementos y con el objeto que se usa para sincronizar el acceso a la colección segura para subprocesos y de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-116">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ffa2e-117">El valor de <paramref name="syncRoot" /> o <paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-117"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-118">Objeto que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-118">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-119">Determina si la colección contiene un elemento con un valor específico.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-119">Determines whether the collection contains an element with a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="ffa2e-120"><see langword="true" /> si el elemento <paramref name="value" /> se encuentra en la colección; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-120"><see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ffa2e-121"><paramref name="value" /> no es un objeto del tipo que contiene la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-121"><paramref name="value" /> is not an object of the type contained in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ffa2e-122">La <see cref="T:System.Array" /> que es el destino de los elementos copiados de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-122">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="ffa2e-123">Índice de base cero de la matriz donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-123">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ffa2e-124">Copia los elementos de la colección a una matriz especificada, empezando por un índice determinado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-124">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-125">Obtiene el número de elementos que contiene la colección segura para subprocesos y de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-125">Gets the number of elements contained in the thread-safe, read-only collection.</span></span></summary>
        <value><span data-ttu-id="ffa2e-126">El número de elementos que contiene la colección segura para subprocesos y de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-126">The number of elements contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffa2e-127">Devuelve un enumerador que recorre en iteración la colección sincronizada de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-127">Returns an enumerator that iterates through the synchronized, read-only collection.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-128"><see cref="T:System.Collections.Generic.IEnumerator`1" /> para los objetos del tipo almacenados en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-128">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-129">El elemento cuyo índice se recupera.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-129">The element whose index is being retrieved.</span></span></param>
        <summary><span data-ttu-id="ffa2e-130">Devuelve el índice de la primera aparición de un valor de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-130">Returns the index of the first occurrence of a value in the collection.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-131">El índice de base cero de la primera aparición del <paramref name="value" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-131">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-132">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-132">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-133">Obtiene un elemento de la colección segura para subprocesos y de solo lectura con un índice especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-133">Gets an element from the thread-safe, read-only collection with a specified index.</span></span></summary>
        <value><span data-ttu-id="ffa2e-134">El objeto en la colección que tiene el <paramref name="index" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-134">The object in the collection that has the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-135">Obtiene la lista de elementos que contiene la colección segura para subprocesos y de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-135">Gets the list of elements contained in the thread-safe, read-only collection.</span></span></summary>
        <value><span data-ttu-id="ffa2e-136">La <see cref="T:System.Collections.Generic.IList`1" /> de elementos que contiene la colección de sólo lectura y segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-136">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-137">El elemento que se va a agregar a la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-137">The element to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-138">Lanza una <see cref="T:System.NotSupportedException" /> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-138">Throws a <see cref="T:System.NotSupportedException" /> if called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-139">Los elementos no se pueden agregar a una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-139">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-140">Los elementos no se pueden establecer en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-140">Items cannot be set in a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffa2e-141">Lanza una <see cref="T:System.NotSupportedException" /> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-141">Throws a <see cref="T:System.NotSupportedException" /> if called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-142">Los elementos no se pueden borrar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-142">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-143">Los elementos no se pueden borrar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-143">Items cannot be cleared from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-144">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-144">This property always returns <see langword="true" /> because the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="ffa2e-145">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-145">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-146">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-146">This property always returns <see langword="true" /> because the collection is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-147">El valor que se va a quitar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-147">The value to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-148">Devuelve <see langword="false" /> y lanza una <see cref="T:System.NotSupportedException" /> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-148">Returns <see langword="false" /> and throws a <see cref="T:System.NotSupportedException" /> if called.</span></span></summary>
        <returns>
          <span data-ttu-id="ffa2e-149"><see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-149"><see langword="False" />.</span></span>  
  
 <span data-ttu-id="ffa2e-150">El método devuelve <see langword="false" /> para indicar que el elemento no se quitó de la colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-150">The method returns <see langword="false" /> to indicate that the item was not removed from the read-only collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-151">Los elementos no se pueden quitar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-151">Items cannot be removed from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T value) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-152">Índice de base cero en el que se va a insertar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-152">The zero-based index at which <c>value</c> is to be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="ffa2e-153">El objeto que se va a insertar en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-153">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-154">Lanza una <see cref="T:System.NotSupportedException" /> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-154">Throws a <see cref="T:System.NotSupportedException" /> if called.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-155">Los elementos no se pueden insertar en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-155">Items cannot be inserted into a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IList&lt;T&gt;.Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-156">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-156">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-157">Devuelve el objeto en la colección que tiene el <paramref name="index" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-157">Returns the object in the collection that has the specified <paramref name="index" />.</span></span></summary>
        <value><span data-ttu-id="ffa2e-158">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-158">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-159">Devuelve el objeto en la colección que tiene el <paramref name="index" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-159">Returns the object in the collection that has the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-160">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-160">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-161">Lanza una <see cref="T:System.NotSupportedException" /> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-161">Throws a <see cref="T:System.NotSupportedException" /> if called.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-162">Los elementos no se pueden quitar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-162">Items cannot be removed from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ffa2e-163">La <see cref="T:System.Array" /> que es el destino de los elementos copiados de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-163">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="ffa2e-164">Índice de base cero de la matriz donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-164">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ffa2e-165">Copia los elementos de la colección a una matriz especificada, empezando por un índice determinado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-165">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-166">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-166">This property always returns <see langword="true" /> because the collection is thread safe.</span></span></summary>
        <value><span data-ttu-id="ffa2e-167">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-167">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-168">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-168">This property always returns <see langword="true" /> because the collection is thread safe.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-169">Obtiene el objeto que se usa para sincronizar el acceso a la colección de solo lectura y segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-169">Gets the object used to synchronize access to the thread-safe, read-only collection.</span></span></summary>
        <value><span data-ttu-id="ffa2e-170">Devuelve <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-170">Returns <see cref="T:System.Object" />.</span></span>  
  
 <span data-ttu-id="ffa2e-171">El objeto que se usa para sincronizar el acceso a la colección de solo lectura y segura para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-171">The object used to synchronize access to the thread-safe, read-only collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-172">El valor de este objeto `syncRoot` se puede establecer al crear la colección segura para subprocesos mediante el constructor <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-172">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffa2e-173">Devuelve un enumerador que recorre en iteración la colección sincronizada de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-173">Returns an enumerator that iterates through the synchronized, read-only collection.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-174">Devuelve <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-174">Returns <see cref="T:System.Collections.IEnumerator" />.</span></span>  <span data-ttu-id="ffa2e-175">Un enumerador que recorre en iteración la colección sincronizada de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-175">An enumerator that iterates through the synchronized, read-only collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-176">El elemento que se va a agregar a la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-176">The element to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-177">Agrega un elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-177">Adds an element to the collection.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-178">Devuelve <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-178">Returns <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="ffa2e-179">Posición en la que se insertó el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-179">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-180">Los elementos no se pueden agregar a una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-180">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-181">Los elementos no se pueden establecer en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-181">Items cannot be set in a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffa2e-182">Los elementos no se pueden borrar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-182">Items cannot be cleared from a read-only collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-183">Los elementos no se pueden borrar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-183">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-184">Los elementos no se pueden borrar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-184">Items cannot be cleared from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-185">Objeto que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-185">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-186">Comprueba si el objeto especificado existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-186">Checks whether the specified object exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-187">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-187">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-188">True, si el objeto se encuentra en la colección; de lo contrario, False.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-188">True if the object is located in the collection; otherwise false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-189">Devuelve `true` si el elemento `value` está en la colección; en caso contrario, `false`.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-189">Returns `true` if the element `value` is found in the collection; otherwise `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ffa2e-190"><paramref name="value" /> no es un objeto del tipo que contiene la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-190"><paramref name="value" /> is not an object of the type contained in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-191">El elemento cuyo índice se recupera.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-191">The element whose index is being retrieved.</span></span></param>
        <summary><span data-ttu-id="ffa2e-192">Obtiene el índice del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-192">Gets the index of the specified item.</span></span></summary>
        <returns><span data-ttu-id="ffa2e-193">Devuelve <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-193">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="ffa2e-194">El índice de base cero de la primera aparición del <paramref name="value" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-194">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-195">Índice de base cero en el que se va a insertar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-195">The zero-based index at which <c>value</c> is to be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="ffa2e-196">El objeto que se va a insertar en la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-196">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-197">Los elementos no se pueden insertar en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-197">Items cannot be inserted into a read-only collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-198">Lanza una <xref:System.NotSupportedException> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-198">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-199">Los elementos no se pueden insertar en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-199">Items cannot be inserted into a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-200">Esta propiedad devuelve <see langword="true" /> porque la colección de solo lectura siempre tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-200">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span></span></summary>
        <value><span data-ttu-id="ffa2e-201">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-201">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-202">Esta propiedad devuelve <see langword="true" /> porque la colección de solo lectura siempre tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-202">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffa2e-203">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-203">This property always returns <see langword="true" /> because the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="ffa2e-204">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-204">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="ffa2e-205">Esta propiedad siempre devuelve <see langword="true" /> porque la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-205">This property always returns <see langword="true" /> because the collection is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-206">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-206">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-207">Obtiene el elemento en un índice de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-207">Gets the item at a specified zero-based index.</span></span></summary>
        <value><span data-ttu-id="ffa2e-208">Devuelve <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-208">Returns <see cref="T:System.Object" />.</span></span>  
  
 <span data-ttu-id="ffa2e-209">Obtiene el elemento en un índice de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-209">Gets the item at a specified zero-based index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-210">Los elementos no se pueden establecer en una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-210">Items cannot be set in a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ffa2e-211">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-211">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-212">Recupera el elemento especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-212">Retrieves the specified element from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-213">Lanza una <xref:System.NotSupportedException> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-213">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-214">Los elementos no se pueden quitar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-214">Items cannot be removed from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ffa2e-215">Índice de base cero del elemento que se va a recuperar de la colección.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-215">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="ffa2e-216">Los elementos no se pueden quitar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-216">Items cannot be removed from a read-only collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffa2e-217">Lanza una <xref:System.NotSupportedException> si se llama.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-217">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ffa2e-218">Los elementos no se pueden quitar de una colección de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ffa2e-218">Items cannot be removed from a read-only collection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>