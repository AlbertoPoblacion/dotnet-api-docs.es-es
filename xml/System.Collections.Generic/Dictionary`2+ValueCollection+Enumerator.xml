<Type Name="Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84958cea04889c383a62bcadb0ba14cadca80ada" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Dictionary&lt;TKey,TValue&gt;.ValueCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Dictionary`2/ValueCollection/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Dictionary(Of TKey, TValue).ValueCollection.Enumerator&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="public: value class Dictionary&lt;TKey, TValue&gt;::ValueCollection::Enumerator : System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="13721-101">Enumera los elementos de un <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="13721-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13721-102">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="13721-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="13721-103">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="13721-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="13721-104">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="13721-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="13721-105">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="13721-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="13721-106">En esta posición, el valor de propiedad <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="13721-106">At this position, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="13721-107">Por lo tanto, debe llamar a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-107">Therefore, you must call <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="13721-108"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-108"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="13721-109"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="13721-109"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="13721-110">Si <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="13721-110">If <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="13721-111">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="13721-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="13721-112">Si la última llamada a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="13721-112">If the last call to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="13721-113">No puede volver a establecer la propiedad <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="13721-113">You cannot set <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="13721-114">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="13721-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="13721-115">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="13721-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="13721-116">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="13721-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="13721-117">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="13721-117">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="13721-118">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="13721-118">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="13721-119">Las implementaciones de las recopilaciones predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="13721-119">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public TValue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue Current { TValue get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13721-120">Obtiene el elemento en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-120">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13721-121">Elemento de <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-121">The element in the <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13721-122"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> no está definida en cualquiera de las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="13721-122"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="13721-123">El enumerador se coloca antes del primer elemento de la colección, inmediatamente después de crear el enumerador.</span><span class="sxs-lookup"><span data-stu-id="13721-123">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="13721-124"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> se debe llamar para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-124"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="13721-125">La última llamada a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="13721-125">The last call to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="13721-126"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-126"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="13721-127"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="13721-127"><xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the next element.</span></span> <span data-ttu-id="13721-128">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="13721-128">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13721-129">Para mejorar el rendimiento, esta propiedad no produce una excepción si el enumerador se coloca antes del primer elemento o después del último elemento; el valor de la propiedad es indefinido.</span><span class="sxs-lookup"><span data-stu-id="13721-129">For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element; the value of the property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13721-130">Libera todos los recursos que usa <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-130">Releases all resources used by the <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13721-131">Desplaza el enumerador al siguiente elemento de <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-131">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13721-132">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-132">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13721-133">Después de crea un enumerador, el enumerador se coloca antes del primer elemento de la colección y la primera llamada a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> desplaza el enumerador hasta el primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="13721-133">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="13721-134">Si <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="13721-134">If <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="13721-135">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="13721-135">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="13721-136">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="13721-136">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="13721-137">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador se invalida definitivamente.</span><span class="sxs-lookup"><span data-stu-id="13721-137">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13721-138">La colección se modificó después de que el enumerador se creara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-138">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13721-139">Obtiene el elemento en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-139">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13721-140">Elemento de la colección en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-140">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13721-141"><xref:System.Collections.IEnumerator.Current%2A> no está definida en cualquiera de las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="13721-141"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="13721-142">El enumerador se coloca antes del primer elemento de la colección, inmediatamente después de crear el enumerador o inmediatamente después de <xref:System.Collections.IEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="13721-142">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or immediately after <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>   <span data-ttu-id="13721-143"><xref:System.Collections.IEnumerator.MoveNext%2A> se debe llamar para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-143"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="13721-144">La última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="13721-144">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="13721-145"><xref:System.Collections.IEnumerator.Current%2A> Devuelve el mismo objeto hasta que <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="13721-145"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="13721-146"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="13721-146"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span> <span data-ttu-id="13721-147">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="13721-147">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13721-148">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-148">The enumerator is positioned before the first element of the collection or after the last element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13721-149">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-149">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13721-150">Después de llamar a <xref:System.Collections.IEnumerator.Reset%2A>, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="13721-150">After calling <xref:System.Collections.IEnumerator.Reset%2A>, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="13721-151">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="13721-151">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="13721-152">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador se invalida definitivamente.</span><span class="sxs-lookup"><span data-stu-id="13721-152">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13721-153">La colección se modificó después de que el enumerador se creara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13721-153">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>