<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05dd2d33958afd2ac9deacf41e0ba2b74bfdcd7b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36646276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type List&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="92f91-101">Tipo de elementos en la lista.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-101">The type of elements in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="92f91-102">Representa una lista de objetos fuertemente tipados a la que se puede obtener acceso por índice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-102">Represents a strongly typed list of objects that can be accessed by index.</span>
      </span>
      <span data-ttu-id="92f91-103">Proporciona métodos para buscar, ordenar y manipular listas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-103">Provides methods to search, sort, and manipulate lists.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-104">El <xref:System.Collections.Generic.List%601> clase es el equivalente genérico de la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="92f91-105">Implementa el <xref:System.Collections.Generic.IList%601> interfaz genérico mediante una matriz cuyo tamaño aumenta dinámicamente cuando es necesario.</span><span class="sxs-lookup"><span data-stu-id="92f91-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="92f91-106">Puede agregar elementos a un <xref:System.Collections.Generic.List%601> mediante el uso de la <xref:System.Collections.Generic.List%601.Add%2A> o <xref:System.Collections.Generic.List%601.AddRange%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="92f91-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="92f91-107">La <xref:System.Collections.Generic.List%601> clase usa un comparador de igualdad y un comparador de orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="92f91-108">Métodos como <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, y <xref:System.Collections.Generic.Dictionary%602.Remove%2A> utilizan un comparador de igualdad para los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="92f91-109">El comparador de igualdad predeterminado para el tipo `T` se determina como sigue.</span><span class="sxs-lookup"><span data-stu-id="92f91-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="92f91-110">Si tipo `T` implementa la <xref:System.IEquatable%601> interfaz genérica, el comparador de igualdad es el <xref:System.IEquatable%601.Equals%28%600%29> método de dicha interfaz; en caso contrario, el comparador de igualdad predeterminado es <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="92f91-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="92f91-111">Métodos como <xref:System.Collections.Generic.List%601.BinarySearch%2A> y <xref:System.Collections.Generic.List%601.Sort%2A> utilizan un comparador de orden para los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="92f91-112">El comparador predeterminado para el tipo `T` se determina como sigue.</span><span class="sxs-lookup"><span data-stu-id="92f91-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="92f91-113">Si tipo `T` implementa la <xref:System.IComparable%601> interfaz genérica, el comparador predeterminado es la <xref:System.IComparable%601.CompareTo%28%600%29> método de dicha interfaz; en caso contrario, si tipo `T` implementa la interfaz no genérica <xref:System.IComparable> interfaz y, a continuación, el valor predeterminado comparador es el <xref:System.IComparable.CompareTo%28System.Object%29> método de dicha interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="92f91-114">Si tipo `T` implementa ninguna de estas interfaces, no hay ningún comparador predeterminado y se debe proporcionar explícitamente un delegado de comparación o comparador.</span><span class="sxs-lookup"><span data-stu-id="92f91-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="92f91-115">El <xref:System.Collections.Generic.List%601> no se garantiza que se ordenen.</span><span class="sxs-lookup"><span data-stu-id="92f91-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="92f91-116">Se debe ordenar el <xref:System.Collections.Generic.List%601> antes de realizar operaciones (como <xref:System.Collections.Generic.List%601.BinarySearch%2A>) que requieren el <xref:System.Collections.Generic.List%601> se ordenen.</span><span class="sxs-lookup"><span data-stu-id="92f91-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="92f91-117">Pueden tener acceso a los elementos de esta colección utilizando un índice entero.</span><span class="sxs-lookup"><span data-stu-id="92f91-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="92f91-118">Índices de esta colección son de base cero.</span><span class="sxs-lookup"><span data-stu-id="92f91-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="92f91-119">Para un gran <xref:System.Collections.Generic.List%601> objetos, puede aumentar la capacidad máxima de 2 millones de elementos en un sistema de 64 bits estableciendo la `enabled` atributo del elemento de configuración para `true` en el entorno de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="92f91-119">For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="92f91-120"><xref:System.Collections.Generic.List%601> acepta `null` como un valor válido para la referencia de tipos y permite a los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="92f91-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92f91-121">Para obtener una versión inmutable de la <xref:System.Collections.Generic.List%601> de clases, consulte <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="92f91-122">Consideraciones sobre el rendimiento</span><span class="sxs-lookup"><span data-stu-id="92f91-122">Performance Considerations</span></span>  
 <span data-ttu-id="92f91-123">Hora de decidir si desea utilizar el <xref:System.Collections.Generic.List%601> o <xref:System.Collections.ArrayList> (clase), ambos de los cuales tienen una funcionalidad similar, recuerde que la <xref:System.Collections.Generic.List%601> clase funciona mejor en la mayoría de los casos y tiene seguridad de tipos.</span><span class="sxs-lookup"><span data-stu-id="92f91-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="92f91-124">Si se usa un tipo de referencia de tipo `T` de la <xref:System.Collections.Generic.List%601> (clase), el comportamiento de las dos clases es idéntico.</span><span class="sxs-lookup"><span data-stu-id="92f91-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="92f91-125">Sin embargo, si se usa un tipo de valor de tipo `T`, debe tener en cuenta los problemas de implementación y conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="92f91-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="92f91-126">Si se usa un tipo de valor de tipo `T`, el compilador genera una implementación de la <xref:System.Collections.Generic.List%601> clase específicamente para ese tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="92f91-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="92f91-127">Es decir, un elemento de lista de un <xref:System.Collections.Generic.List%601> objeto no tiene que aplicar la conversión boxing antes de que el elemento se puede usar y, después de unos 500 elementos de lista se crean la memoria ahorrada no conversión boxing de los elementos de lista es mayor que la memoria utilizada para generar la implementación de la clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="92f91-128">Compruebe el tipo de valor utilizado para el tipo `T` implementa el <xref:System.IEquatable%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="92f91-129">Si no es así, los métodos como <xref:System.Collections.Generic.List%601.Contains%2A> debe llamar a la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método, que el elemento de lista afectado los cuadros.</span><span class="sxs-lookup"><span data-stu-id="92f91-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="92f91-130">Si el tipo de valor implementa la <xref:System.IComparable> interfaz y posee el código fuente, también se implemente el <xref:System.IComparable%601> interfaz genérica para evitar la <xref:System.Collections.Generic.List%601.BinarySearch%2A> y <xref:System.Collections.Generic.List%601.Sort%2A> métodos de conversión boxing de los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="92f91-131">Si no dispone del código fuente, pase una <xref:System.Collections.Generic.IComparer%601> el objeto a la <xref:System.Collections.Generic.List%601.BinarySearch%2A> y <xref:System.Collections.Generic.List%601.Sort%2A> métodos</span><span class="sxs-lookup"><span data-stu-id="92f91-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="92f91-132">Es una ventaja de usar la implementación específica del tipo de la <xref:System.Collections.Generic.List%601> clase en lugar de usar la <xref:System.Collections.ArrayList> clase o escribir una colección de contenedor fuertemente tipado usted mismo.</span><span class="sxs-lookup"><span data-stu-id="92f91-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="92f91-133">La razón es que la propia implementación debe hacer lo que .NET Framework ya realiza automáticamente, y common language runtime puede compartir código de lenguaje intermedio de Microsoft y los metadatos, que la implementación no puede hacer.</span><span class="sxs-lookup"><span data-stu-id="92f91-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="92f91-134">Consideraciones de F #</span><span class="sxs-lookup"><span data-stu-id="92f91-134">F# Considerations</span></span>  
 <span data-ttu-id="92f91-135">La <xref:System.Collections.Generic.List%601> clase se utiliza con poca frecuencia en el código de F #.</span><span class="sxs-lookup"><span data-stu-id="92f91-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span>  <span data-ttu-id="92f91-136">En su lugar, [enumera](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), que son listas inmutable, vinculada individualmente, se suele ser el preferido.</span><span class="sxs-lookup"><span data-stu-id="92f91-136">Instead, [Lists](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="92f91-137">Una lista de F # proporciona una serie ordenada e inmutable de valores y se puede usar en el desarrollo de estilo funcional.</span><span class="sxs-lookup"><span data-stu-id="92f91-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="92f91-138">Cuando se utiliza en F #, la <xref:System.Collections.Generic.List%601> clase normalmente se conoce por el [ResizeArray\<' t >](https://msdn.microsoft.com/library/ee353447.aspx) escriba abreviatura para evitar conflictos con listas de F #</span><span class="sxs-lookup"><span data-stu-id="92f91-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the  [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-139">En el ejemplo siguiente se muestra cómo agregar, quitar e insertar un objeto comercial simple en una <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="92f91-140">En el ejemplo siguiente se muestra varias propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica de tipo cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="92f91-141">(Para obtener un ejemplo de un <xref:System.Collections.Generic.List%601> de tipos complejos, vea la <xref:System.Collections.Generic.List%601.Contains%2A> método.)</span><span class="sxs-lookup"><span data-stu-id="92f91-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="92f91-142">El constructor predeterminado se utiliza para crear una lista de cadenas con la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="92f91-142">The default constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="92f91-143">El <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra y, a continuación, el <xref:System.Collections.Generic.List%601.Add%2A> método se usa para agregar varios elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="92f91-144">Se enumeran los elementos y la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra una vez más, junto con el <xref:System.Collections.Generic.List%601.Count%2A> propiedad, para mostrar que se ha aumentado la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="92f91-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="92f91-145">El <xref:System.Collections.Generic.List%601.Contains%2A> método se usa para comprobar la presencia de un elemento en la lista, el <xref:System.Collections.Generic.List%601.Insert%2A> método se utiliza para insertar un nuevo elemento en el medio de la lista y se muestra el contenido de la lista de nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="92f91-146">El valor predeterminado <xref:System.Collections.Generic.List%601.Item%2A> propiedad (el indizador en C#) se utiliza para recuperar un elemento, el <xref:System.Collections.Generic.List%601.Remove%2A> método se utiliza para quitar la primera instancia del elemento duplicado agregado anteriormente y se muestra el contenido nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="92f91-147">El <xref:System.Collections.Generic.List%601.Remove%2A> método siempre quita la primera instancia que encuentra.</span><span class="sxs-lookup"><span data-stu-id="92f91-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="92f91-148">El <xref:System.Collections.Generic.List%601.TrimExcess%2A> método se usa para reducir la capacidad para que coincida con el recuento y el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> se muestran las propiedades.</span><span class="sxs-lookup"><span data-stu-id="92f91-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="92f91-149">Si la capacidad no utilizada hubiera sido menor que el 10 por ciento de la capacidad total, la lista no habría cambió de tamaño.</span><span class="sxs-lookup"><span data-stu-id="92f91-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="92f91-150">Por último, el <xref:System.Collections.Generic.List%601.Clear%2A> método se utiliza para quitar todos los elementos de la lista y el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> se muestran las propiedades.</span><span class="sxs-lookup"><span data-stu-id="92f91-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="92f91-151">Estático público (<see langword="Shared" /> en Visual Basic) miembros de este tipo son seguros para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="92f91-152">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-152">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="92f91-153">Es seguro realizar varias operaciones de lectura en un <see cref="T:System.Collections.Generic.List`1" />, pero pueden producirse problemas si se modifica la colección mientras se está leyendo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it’s being read.</span>
      </span>
      <span data-ttu-id="92f91-154">Para garantizar la seguridad para subprocesos, bloquear la colección durante una lectura o la operación de escritura.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-154">To ensure thread safety, lock the collection during a read or write operation.</span>
      </span>
      <span data-ttu-id="92f91-155">Para habilitar obtengan acceso varios subprocesos de lectura y escritura a una colección, debe implementar su propia sincronización.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
      <span data-ttu-id="92f91-156">Para las colecciones con la sincronización integrada, vea las clases en el <see cref="N:System.Collections.Concurrent" /> espacio de nombres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span>
      </span>
      <span data-ttu-id="92f91-157">Para una alternativa de forma inherente: seguridad de subprocesos, vea la <see cref="T:System.Collections.Immutable.ImmutableList`1" /> clase.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92f91-157">For an inherently thread–safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-158">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-159">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.List`1" /> que está vacía y tiene la capacidad inicial predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-159">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-160">La capacidad de un <xref:System.Collections.Generic.List%601> es el número de elementos que la <xref:System.Collections.Generic.List%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="92f91-160">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="92f91-161">Cuando se agregan elementos a un <xref:System.Collections.Generic.List%601>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="92f91-161">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="92f91-162">Si se puede estimar el tamaño de la colección, usando la <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor y especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-162">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-163">La capacidad puede reducirse mediante una llamada a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> método o estableciendo la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad explícitamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-163">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="92f91-164">Al disminuir la capacidad se reasigna memoria y copia todos los elementos en el <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-164">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-165">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-165">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-166">En el ejemplo siguiente se muestra el constructor predeterminado de la <xref:System.Collections.Generic.List%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-166">The following example demonstrates the default constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="92f91-167">El constructor predeterminado crea una lista con la capacidad predeterminada, como se muestra, mostrando la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92f91-167">The default constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="92f91-168">En el ejemplo se agrega, se inserta y se quita elementos, mostrando cómo cambia la capacidad ya que estos métodos se usan.</span><span class="sxs-lookup"><span data-stu-id="92f91-168">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="92f91-169">Colección cuyos elementos se copian en la nueva lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-169">The collection whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-170">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.List`1" /> que contiene elementos copiados de la colección especificada y tiene una capacidad suficiente para aceptar el número de elementos copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-171">Los elementos se copian en el <xref:System.Collections.Generic.List%601> en el mismo orden que los lee el enumerador de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-171">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="92f91-172">Este constructor es una O (*n*) operación, donde *n* es el número de elementos de `collection`.</span><span class="sxs-lookup"><span data-stu-id="92f91-172">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-173">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor y varios métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-173">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-174">Se crea una matriz de cadenas y se pasa al constructor, rellenar la lista con los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-174">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="92f91-175">El <xref:System.Collections.Generic.List%601.Capacity%2A> , a continuación, se muestra la propiedad, para mostrar que la capacidad inicial es exactamente lo que se requiere para contener los elementos de entrada.</span><span class="sxs-lookup"><span data-stu-id="92f91-175">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-176">
            <paramref name="collection" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-176">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="92f91-177">Número de elementos que puede almacenar inicialmente la lista nueva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-177">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-178">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.List`1" /> que está vacía y tiene la capacidad inicial especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-178">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-179">La capacidad de un <xref:System.Collections.Generic.List%601> es el número de elementos que la <xref:System.Collections.Generic.List%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="92f91-179">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="92f91-180">Cuando se agregan elementos a un <xref:System.Collections.Generic.List%601>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="92f91-180">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="92f91-181">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-181">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-182">La capacidad puede reducirse mediante una llamada a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> método o estableciendo la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad explícitamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-182">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="92f91-183">Al disminuir la capacidad se reasigna memoria y copia todos los elementos en el <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-183">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-184">Este constructor es una O (*n*) operación, donde *n* es `capacity`.</span><span class="sxs-lookup"><span data-stu-id="92f91-184">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-185">En el ejemplo siguiente se muestra el <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="92f91-185">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="92f91-186">Un <xref:System.Collections.Generic.List%601> de cadenas con una capacidad de 4 se crea, dado que se conoce el tamaño final de la lista será exactamente 4.</span><span class="sxs-lookup"><span data-stu-id="92f91-186">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="92f91-187">La lista se rellena con cuatro cadenas y se crea una copia de solo lectura mediante el <xref:System.Collections.Generic.List%601.AsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-187">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-188">
            <paramref name="capacity" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-188">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="list.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-189">Objeto que se va a agregar al final de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-189">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-190">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-190">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-191">Agrega un objeto al final de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-191">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-192"><xref:System.Collections.Generic.List%601> acepta `null` como un valor válido para la referencia de tipos y permite a los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="92f91-192"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92f91-193">Si <xref:System.Collections.Generic.List%601.Count%2A> ya es igual a <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacidad de la <xref:System.Collections.Generic.List%601> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-193">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="92f91-194">Si <xref:System.Collections.Generic.List%601.Count%2A> es menor que <xref:System.Collections.Generic.List%601.Capacity%2A>, este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-194">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="92f91-195">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-195">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-196">En el ejemplo siguiente se muestra cómo agregar, quitar e insertar un objeto comercial simple en una <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-196">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="92f91-197">En el ejemplo siguiente se muestra varias propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica, incluida la <xref:System.Collections.Generic.List%601.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-197">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="92f91-198">El constructor predeterminado se utiliza para crear una lista de cadenas con una capacidad de 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-198">The default constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="92f91-199">El <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra y, a continuación, el <xref:System.Collections.Generic.List%601.Add%2A> método se usa para agregar varios elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-199">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="92f91-200">Se enumeran los elementos y la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra una vez más, junto con el <xref:System.Collections.Generic.List%601.Count%2A> propiedad, para mostrar que se ha aumentado la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="92f91-200">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="92f91-201">Otras propiedades y métodos se usan para buscar, insertar y quitar elementos de la lista y, finalmente, para borrar la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-201">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; unit" Usage="list.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="92f91-202">Colección cuyos elementos deben agregarse al final de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-202">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-203">La propia colección no puede ser <see langword="null" />, pero puede contener elementos que sean <see langword="null" /> si el tipo <c>T</c> es un tipo de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-203">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-204">Agrega los elementos de la colección especificada al final de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-204">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-205">Se conserva el orden de los elementos de la colección en el <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-205">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-206">Si el nuevo <xref:System.Collections.Generic.List%601.Count%2A> (actual <xref:System.Collections.Generic.List%601.Count%2A> más el tamaño de la colección) será mayor que <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacidad de la <xref:System.Collections.Generic.List%601> se incrementa mediante la reasignación automática de la matriz interna para dar cabida a los nuevos elementos y la los elementos existentes se copian en la nueva matriz antes de que se agregan los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-206">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="92f91-207">Si el <xref:System.Collections.Generic.List%601> puede dar cabida a los nuevos elementos sin aumentar la <xref:System.Collections.Generic.List%601.Capacity%2A>, este método es una O (*n*) operación, donde *n* es el número de elementos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="92f91-207">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="92f91-208">Si la capacidad debe aumentarse para dar cabida a los nuevos elementos, este método se convierte en una O (*n* + *m*) operación, donde *n* es el número de elementos va a agregar y *m* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-208">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-209">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.AddRange%2A> método y otros métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-209">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-210">Se crea una matriz de cadenas y se pasa al constructor, rellenar la lista con los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-210">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="92f91-211">El <xref:System.Collections.Generic.List%601.AddRange%2A> se llama el método, con la lista como su argumento.</span><span class="sxs-lookup"><span data-stu-id="92f91-211">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="92f91-212">El resultado es que los elementos actuales de la lista se agregan al final de la lista, duplicación de todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-212">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-213">
            <paramref name="collection" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-213">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.AsReadOnly : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="list.AsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-214">Devuelve un contenedor de <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de solo lectura para la colección actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-214">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-215">Objeto que actúa como contenedor de solo lectura para la <see cref="T:System.Collections.Generic.List`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-215">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-216">Para evitar que las modificaciones a la <xref:System.Collections.Generic.List%601> de objetos, exponer sólo a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="92f91-216">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="92f91-217">Un <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objeto no expone métodos que modifican la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-217">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="92f91-218">Sin embargo, si se realizan cambios en subyacente <xref:System.Collections.Generic.List%601> de objetos, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="92f91-218">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92f91-219">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-219">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-220">En el ejemplo siguiente se muestra el <xref:System.Collections.Generic.List%601.AsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-220">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="92f91-221">Un <xref:System.Collections.Generic.List%601> de cadenas con una capacidad de 4 se crea, dado que se conoce el tamaño final de la lista será exactamente 4.</span><span class="sxs-lookup"><span data-stu-id="92f91-221">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="92f91-222">La lista se rellena con cuatro cadenas y el <xref:System.Collections.Generic.List%601.AsReadOnly%2A> método se utiliza para obtener solo lectura <xref:System.Collections.Generic.IList%601> implementación de interfaz genérica que ajusta la lista original.</span><span class="sxs-lookup"><span data-stu-id="92f91-222">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="92f91-223">Un elemento de la lista original se establece en "Coelophysis" utilizando el <xref:System.Collections.Generic.List%601.Item%2A> propiedad (el indizador en C#) y el contenido de la lista de solo lectura se muestra de nuevo para demostrar que es simplemente un contenedor de la lista original.</span><span class="sxs-lookup"><span data-stu-id="92f91-223">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-224">Utiliza un algoritmo de búsqueda binaria para localizar un elemento concreto en la <see cref="T:System.Collections.Generic.List`1" /> ordenada o en una parte de ella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-224">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T -&gt; int" Usage="list.BinarySearch item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-225">Objeto que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-225">The object to locate.</span>
          </span>
          <span data-ttu-id="92f91-226">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-226">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-227">Busca la <see cref="T:System.Collections.Generic.List`1" /> completa ordenada para un elemento usando el comparador predeterminado y devuelve el índice de base cero del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-227">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-228">Índice de base cero de <paramref name="item" /> en la <see cref="T:System.Collections.Generic.List`1" /> ordenada, si es que se encuentra <paramref name="item" />; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="item" /> o, si no hay ningún elemento mayor, el complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-228">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-229">Este método utiliza el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para el tipo `T` para determinar el orden de los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-229">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="92f91-230">El <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propiedad comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-230">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-231">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-231">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-232">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-232">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-233">El <xref:System.Collections.Generic.List%601> ya deben estar ordenados según la implementación del comparador; en caso contrario, el resultado es incorrecto.</span><span class="sxs-lookup"><span data-stu-id="92f91-233">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="92f91-234">Comparar `null` con cualquier referencia de tipo, se permite y no genera una excepción cuando se usa el <xref:System.IComparable%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-234">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="92f91-235">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="92f91-235">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92f91-236">Si el <xref:System.Collections.Generic.List%601> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="92f91-236">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92f91-237">Si el <xref:System.Collections.Generic.List%601> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="92f91-237">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92f91-238">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-238">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92f91-239">Cuando se inserta el valor en el <xref:System.Collections.Generic.List%601>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="92f91-239">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92f91-240">Este método es una O (registro *n*) operación, donde *n* es el número de elementos del intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-240">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-241">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-241">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="92f91-242">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-242">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="92f91-243">La lista se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="92f91-243">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="92f91-244">El <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> sobrecarga del método, a continuación, se usa para buscar dos cadenas que no están en la lista, y el <xref:System.Collections.Generic.List%601.Insert%2A> método se usa para insertarlos.</span><span class="sxs-lookup"><span data-stu-id="92f91-244">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="92f91-245">El valor devuelto de la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> método es negativo en cada caso, dado que las cadenas no están en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-245">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="92f91-246">Tomar el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) de este número negativo se produce el índice del primer elemento de la lista que es mayor que la cadena de búsqueda y, a continuación, insertar en esta ubicación conserva la ordenación orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-246">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="92f91-247">La segunda cadena de búsqueda es mayor que cualquier elemento de la lista, por lo que es la posición de inserción al final de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-247">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-248">El comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o de la interfaz <see cref="T:System.IComparable" /> para el tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-248">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-249">Objeto que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-249">The object to locate.</span>
          </span>
          <span data-ttu-id="92f91-250">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-250">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92f91-251">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a usar al comparar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-251">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="92f91-252">-o bien- <see langword="null" /> para utilizar el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-252">-or-  <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-253">Busca la <see cref="T:System.Collections.Generic.List`1" /> completa ordenada para un elemento usando el comparador especificado y devuelve el índice de base cero del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-253">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-254">Índice de base cero de <paramref name="item" /> en la <see cref="T:System.Collections.Generic.List`1" /> ordenada, si es que se encuentra <paramref name="item" />; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="item" /> o, si no hay ningún elemento mayor, el complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-254">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-255">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-255">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="92f91-256">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer> instancia como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="92f91-256">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="92f91-257">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.Generic.List%601> se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.Generic.IComparer%601> implementación.</span><span class="sxs-lookup"><span data-stu-id="92f91-257">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="92f91-258">Si `comparer` es `null`, el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-258">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-259">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-259">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-260">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-260">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-261">El <xref:System.Collections.Generic.List%601> ya deben estar ordenados según la implementación del comparador; en caso contrario, el resultado es incorrecto.</span><span class="sxs-lookup"><span data-stu-id="92f91-261">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="92f91-262">Comparar `null` con cualquier referencia de tipo, se permite y no genera una excepción cuando se usa el <xref:System.IComparable%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-262">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="92f91-263">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="92f91-263">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92f91-264">Si el <xref:System.Collections.Generic.List%601> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="92f91-264">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92f91-265">Si el <xref:System.Collections.Generic.List%601> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="92f91-265">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92f91-266">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-266">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92f91-267">Cuando se inserta el valor en el <xref:System.Collections.Generic.List%601>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="92f91-267">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92f91-268">Este método es una O (registro *n*) operación, donde *n* es el número de elementos del intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-268">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-269">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-269">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="92f91-270">En el ejemplo se define un comparador alternativo para las cadenas denominado DinoCompare, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-270">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="92f91-271">El comparador funciona del siguiente modo: en primer lugar, la comparación se comprueba si hay `null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="92f91-271">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="92f91-272">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="92f91-272">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="92f91-273">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="92f91-273">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="92f91-274">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-274">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="92f91-275">Muestra la lista se ordena utilizando al comparador alternativo y se muestran nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-275">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="92f91-276">El <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> , a continuación, se utiliza la sobrecarga del método para buscar varias cadenas que no se en la lista, empleando el comparador alternativo.</span><span class="sxs-lookup"><span data-stu-id="92f91-276">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="92f91-277">El <xref:System.Collections.Generic.List%601.Insert%2A> método se utiliza para insertar las cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-277">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="92f91-278">Estos dos métodos se encuentran en la función denominada `SearchAndInsert`, junto con el código para tomar el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) del número negativo devuelto por <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> y usarlo como un índice para Insertar la nueva cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-278">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-279">
            <paramref name="comparer" /> es <see langword="null" />, y el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o la interfaz <see cref="T:System.IComparable" /> del tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-279">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (index, count, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-280">Índice inicial de base cero del intervalo que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-280">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-281">Longitud del intervalo en el que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-281">The length of the range to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="92f91-282">Objeto que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-282">The object to locate.</span>
          </span>
          <span data-ttu-id="92f91-283">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-283">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92f91-284">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar al comparar elementos, o <see langword="null" /> para utilizar el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-284">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-285">Busca un elemento en un intervalo de elementos del objeto <see cref="T:System.Collections.Generic.List`1" /> ordenado usando el comparador especificado y devuelve el índice de base cero del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-285">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-286">Índice de base cero de <paramref name="item" /> en la <see cref="T:System.Collections.Generic.List`1" /> ordenada, si es que se encuentra <paramref name="item" />; en caso contrario, número negativo que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="item" /> o, si no hay ningún elemento mayor, el complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-286">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-287">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-287">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="92f91-288">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer> instancia como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="92f91-288">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="92f91-289">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.Generic.List%601> se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.Generic.IComparer%601> implementación.</span><span class="sxs-lookup"><span data-stu-id="92f91-289">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="92f91-290">Si `comparer` es `null`, el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-290">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-291">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-291">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-292">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-292">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-293">El <xref:System.Collections.Generic.List%601> ya deben estar ordenados según la implementación del comparador; en caso contrario, el resultado es incorrecto.</span><span class="sxs-lookup"><span data-stu-id="92f91-293">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="92f91-294">Comparar `null` con cualquier referencia de tipo, se permite y no genera una excepción cuando se usa el <xref:System.IComparable%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-294">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="92f91-295">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="92f91-295">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92f91-296">Si el <xref:System.Collections.Generic.List%601> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="92f91-296">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92f91-297">Si el <xref:System.Collections.Generic.List%601> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="92f91-297">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92f91-298">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-298">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92f91-299">Cuando se inserta el valor en el <xref:System.Collections.Generic.List%601>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="92f91-299">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92f91-300">Este método es una O (registro *n*) operación, donde *n* es el número de elementos del intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-300">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-301">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-301">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="92f91-302">En el ejemplo se define un comparador alternativo para las cadenas denominado DinoCompare, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-302">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="92f91-303">El comparador funciona del siguiente modo: en primer lugar, la comparación se comprueba si hay `null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="92f91-303">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="92f91-304">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="92f91-304">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="92f91-305">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="92f91-305">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="92f91-306">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con los nombres de cinco dinosaurios herbívoros y tres dinosaurios carnívoros.</span><span class="sxs-lookup"><span data-stu-id="92f91-306">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="92f91-307">Dentro de cada uno de los dos grupos, los nombres no están en ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-307">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="92f91-308">Se muestra la lista, se ordena el intervalo de herbívoros utilizando al comparador alternativo y se muestra la lista de nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-308">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="92f91-309">El <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> , a continuación, se utiliza la sobrecarga del método para buscar sólo el intervalo de herbívoros "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-309">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="92f91-310">No se encuentra la cadena y el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) del número negativo devuelto por la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método se utiliza como un índice para insertar la nueva cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-310">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-311">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-311">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-312">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-312">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-313">
            <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-313">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-314">
            <paramref name="comparer" /> es <see langword="null" />, y el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o la interfaz <see cref="T:System.IComparable" /> del tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-314">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-315">Obtiene o establece el número total de elementos que puede contener la estructura de datos interna sin cambiar el tamaño.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-315">Gets or sets the total number of elements the internal data structure can hold without resizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-316">Número de elementos que puede contener <see cref="T:System.Collections.Generic.List`1" /> antes de que sea necesario cambiar el tamaño.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-316">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-317"><xref:System.Collections.Generic.List%601.Capacity%2A> es el número de elementos que el <xref:System.Collections.Generic.List%601> pueden almacenar antes de que sea necesario, cambiar el tamaño, mientras que <xref:System.Collections.Generic.List%601.Count%2A> es el número de elementos que están realmente en la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-317"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-318"><xref:System.Collections.Generic.List%601.Capacity%2A> es siempre mayor o igual que <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-318"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="92f91-319">Si <xref:System.Collections.Generic.List%601.Count%2A> supera <xref:System.Collections.Generic.List%601.Capacity%2A> al agregar elementos, se aumenta la capacidad reasignando automáticamente la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-319">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="92f91-320">Si la capacidad es significativamente mayor que el recuento y desea reducir la memoria utilizada por el <xref:System.Collections.Generic.List%601>, puede reducir la capacidad mediante una llamada a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> método o estableciendo la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad explícitamente a un valor inferior.</span><span class="sxs-lookup"><span data-stu-id="92f91-320">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="92f91-321">Cuando el valor de <xref:System.Collections.Generic.List%601.Capacity%2A> se establece explícitamente, la matriz interna también se reasigna para alojar la capacidad especificada y se copian todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-321">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="92f91-322">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad es una O (*n*) operación, donde *n* es la capacidad de nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-322">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-323">En el ejemplo siguiente se muestra cómo comprobar la capacidad y el recuento de un <xref:System.Collections.Generic.List%601> que contiene un objeto comercial simple y se muestra cómo utilizar el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para quitar una capacidad adicional.</span><span class="sxs-lookup"><span data-stu-id="92f91-323">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-324">El siguiente ejemplo se muestra la <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad en varios puntos en la vida de una lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-324">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="92f91-325">El constructor predeterminado se utiliza para crear una lista de cadenas con una capacidad de 0 y el <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra para demostrar esto.</span><span class="sxs-lookup"><span data-stu-id="92f91-325">The default constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="92f91-326">Después de la <xref:System.Collections.Generic.List%601.Add%2A> método se ha utilizado para agregar varios elementos, se enumeran los elementos y, a continuación, el <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra de nuevo, junto con el <xref:System.Collections.Generic.List%601.Count%2A> propiedad, para mostrar que se ha aumentado la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="92f91-326">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="92f91-327">El <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad se muestra después de nuevo el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método se usa para reducir la capacidad para que coincida con el recuento.</span><span class="sxs-lookup"><span data-stu-id="92f91-327">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="92f91-328">Por último, el <xref:System.Collections.Generic.List%601.Clear%2A> método se utiliza para quitar todos los elementos de la lista y el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> propiedades se muestran de nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-328">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-329">
            <see cref="P:System.Collections.Generic.List`1.Capacity" /> se establece en un valor que es menor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-329">
              <see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="92f91-330">No hay memoria suficiente en el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-330">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="list.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-331">Quita todos los elementos de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-331">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-332"><xref:System.Collections.Generic.List%601.Count%2A> se establece en 0, y también se liberan las referencias a otros objetos desde los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-332"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="92f91-333"><xref:System.Collections.Generic.List%601.Capacity%2A> No cambie.</span><span class="sxs-lookup"><span data-stu-id="92f91-333"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="92f91-334">Para restablecer la capacidad de la <xref:System.Collections.Generic.List%601>, llame a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> método o un conjunto el <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad directamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-334">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="92f91-335">Al disminuir la capacidad se reasigna memoria y copia todos los elementos en el <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-335">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="92f91-336">Recortar vacío <xref:System.Collections.Generic.List%601> establece la capacidad de la <xref:System.Collections.Generic.List%601> en la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="92f91-336">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="92f91-337">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-337">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-338">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Clear%2A> método y varias otras propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-338">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="92f91-339">El <xref:System.Collections.Generic.List%601.Clear%2A> método se usa al final del programa, para quitar todos los elementos de la lista y el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> , a continuación, se muestran las propiedades.</span><span class="sxs-lookup"><span data-stu-id="92f91-339">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="list.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-340">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-340">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-341">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-341">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-342">Determina si un elemento se encuentra en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-342">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-343">
            <see langword="true" /> si <paramref name="item" /> se encuentra en la matriz <see cref="T:System.Collections.Generic.List`1" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-343">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-344">Este método determina la igualdad utilizando el comparador de igualdad predeterminado, tal como se define por la implementación del objeto de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método para `T` (el tipo de valores de la lista).</span><span class="sxs-lookup"><span data-stu-id="92f91-344">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="92f91-345">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-345">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-346">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Contains%2A> y <xref:System.Collections.Generic.List%601.Exists%2A> métodos en un <xref:System.Collections.Generic.List%601> que contiene un objeto comercial simple que implementa <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-346">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-347">El ejemplo siguiente contiene una lista de objetos complejos de tipo `Cube`.</span><span class="sxs-lookup"><span data-stu-id="92f91-347">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="92f91-348">El `Cube` la clase implementa la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método para que dos cubos se consideran iguales si sus dimensiones son iguales.</span><span class="sxs-lookup"><span data-stu-id="92f91-348">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="92f91-349">En este ejemplo, el <xref:System.Collections.Generic.List%601.Contains%2A> método `true`, ya que un cubo con las dimensiones especificadas ya está en la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-349">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="member this.ConvertAll : Converter&lt;'T, 'Output&gt; -&gt; System.Collections.Generic.List&lt;'Output&gt;" Usage="list.ConvertAll converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="92f91-350">Tipo de los elementos de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-350">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="converter">
          <span data-ttu-id="92f91-351">Delegado <see cref="T:System.Converter`2" /> que convierte cada elemento de un tipo en otro tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-351">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-352">Convierte en otro tipo los elementos incluidos en la <see cref="T:System.Collections.Generic.List`1" /> actual y devuelve una lista que contiene los elementos convertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-352">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-353">
            <see cref="T:System.Collections.Generic.List`1" /> del tipo de destino que contiene los elementos convertidos de la <see cref="T:System.Collections.Generic.List`1" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-353">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-354">El <xref:System.Converter%602> es un delegado a un método que convierte un objeto en el tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="92f91-354">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="92f91-355">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Converter%602> delegado y los elementos convertidos se guardan en el nuevo <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-355">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-356">Actual <xref:System.Collections.Generic.List%601> permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="92f91-356">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="92f91-357">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-357">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-358">En el ejemplo siguiente se define un método denominado `PointFToPoint` que convierte un <xref:System.Drawing.PointF> estructura a un <xref:System.Drawing.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="92f91-358">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="92f91-359">El ejemplo crea un <xref:System.Collections.Generic.List%601> de <xref:System.Drawing.PointF> estructuras, crea un `Converter\<PointF, Point>` delegar (`Converter(Of PointF, Point)` en Visual Basic) para representar el `PointFToPoint` método y pasa el delegado a la <xref:System.Collections.Generic.List%601.ConvertAll%2A> (método).</span><span class="sxs-lookup"><span data-stu-id="92f91-359">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="92f91-360">El <xref:System.Collections.Generic.List%601.ConvertAll%2A> método pasa cada elemento de la lista de entrada a la `PointFToPoint` método y coloca los elementos convertidos en una nueva lista de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="92f91-360">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="92f91-361">Se muestran ambas listas.</span><span class="sxs-lookup"><span data-stu-id="92f91-361">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-362">
            <paramref name="converter" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-362">
              <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-363">Copia la totalidad de <see cref="T:System.Collections.Generic.List`1" /> o una parte en una matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-363">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="list.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="92f91-364">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-364">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-365">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-365">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-366">Copia toda la <see cref="T:System.Collections.Generic.List`1" /> en una matriz unidimensional compatible, empezando en el principio de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-366">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-367">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-367">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92f91-368">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-368">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-369">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-369">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-370">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-370">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="92f91-371">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con 5 cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-371">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="92f91-372">Se crea una matriz de cadena vacía de 15 elementos y la <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el primer elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-372">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="92f91-373">El <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el índice de matriz 6 (dejando vacío el índice 5).</span><span class="sxs-lookup"><span data-stu-id="92f91-373">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="92f91-374">Por último, el <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para copiar 3 elementos de la lista, empezando con el índice 2, en la matriz, empezando en la matriz de índice 12 (dejando vacío el índice 11).</span><span class="sxs-lookup"><span data-stu-id="92f91-374">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="92f91-375">A continuación, se muestra el contenido de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-375">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-376">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-376">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-377">El número de elementos del <see cref="T:System.Collections.Generic.List`1" /> de origen es mayor que el número de elementos que puede contener el <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-377">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="list.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="92f91-378">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-378">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-379">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-379">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="92f91-380">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-380">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-381">Copia la totalidad de <see cref="T:System.Collections.Generic.List`1" /> en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-381">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-382">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-382">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92f91-383">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-383">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-384">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-384">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-385">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-385">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="92f91-386">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con 5 cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-386">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="92f91-387">Se crea una matriz de cadena vacía de 15 elementos y la <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el primer elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-387">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="92f91-388">El <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el índice de matriz 6 (dejando vacío el índice 5).</span><span class="sxs-lookup"><span data-stu-id="92f91-388">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="92f91-389">Por último, el <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para copiar 3 elementos de la lista, empezando con el índice 2, en la matriz, empezando en la matriz de índice 12 (dejando vacío el índice 11).</span><span class="sxs-lookup"><span data-stu-id="92f91-389">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="92f91-390">A continuación, se muestra el contenido de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-390">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-391">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-391">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-392">
            <paramref name="arrayIndex" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-392">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-393">El número de elementos de la <see cref="T:System.Collections.Generic.List`1" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-393">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="list.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-394">Índice de base cero de la <see cref="T:System.Collections.Generic.List`1" /> de origen donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-394">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="92f91-395">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-395">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-396">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-396">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="92f91-397">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-397">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-398">Número de elementos que se van a copiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-398">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-399">Copia un intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> en una matriz unidimensional compatible, empezando en el índice especificado de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-399">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-400">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-400">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92f91-401">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-401">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-402">Este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-402">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-403">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-403">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="92f91-404">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con 5 cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-404">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="92f91-405">Se crea una matriz de cadena vacía de 15 elementos y la <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el primer elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-405">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="92f91-406">El <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga del método se usa para copiar todos los elementos de la lista en la matriz, empezando en el índice de matriz 6 (dejando vacío el índice 5).</span><span class="sxs-lookup"><span data-stu-id="92f91-406">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="92f91-407">Por último, el <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para copiar 3 elementos de la lista, empezando con el índice 2, en la matriz, empezando en la matriz de índice 12 (dejando vacío el índice 11).</span><span class="sxs-lookup"><span data-stu-id="92f91-407">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="92f91-408">A continuación, se muestra el contenido de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-408">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-409">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-409">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-410">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-410">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-411">-o bien- <paramref name="arrayIndex" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-411">-or-  <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-412">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-412">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-413">
            <paramref name="index" /> es mayor o igual que el valor de <see cref="P:System.Collections.Generic.List`1.Count" /> de la <see cref="T:System.Collections.Generic.List`1" /> de origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-413">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-414">-o bien- El número de elementos de <paramref name="index" /> hasta el final de <see cref="T:System.Collections.Generic.List`1" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-414">-or-  The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.List&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-415">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-415">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-416">Número de elementos contenidos en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-416">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-417"><xref:System.Collections.Generic.List%601.Capacity%2A> es el número de elementos que el <xref:System.Collections.Generic.List%601> pueden almacenar antes de que sea necesario cambiar el tamaño.</span><span class="sxs-lookup"><span data-stu-id="92f91-417"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="92f91-418"><xref:System.Collections.Generic.List%601.Count%2A> es el número de elementos que están realmente en la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-418"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-419"><xref:System.Collections.Generic.List%601.Capacity%2A> es siempre mayor o igual que <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-419"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="92f91-420">Si <xref:System.Collections.Generic.List%601.Count%2A> supera <xref:System.Collections.Generic.List%601.Capacity%2A> al agregar elementos, se aumenta la capacidad reasignando automáticamente la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-420">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="92f91-421">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-421">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-422">En el ejemplo siguiente se muestra cómo comprobar la capacidad y el recuento de un <xref:System.Collections.Generic.List%601> que contiene un objeto comercial simple y se muestra cómo utilizar el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para quitar una capacidad adicional.</span><span class="sxs-lookup"><span data-stu-id="92f91-422">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-423">En el ejemplo siguiente se muestra el valor de la <xref:System.Collections.Generic.List%601.Count%2A> propiedad en varios puntos en la vida de una lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-423">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="92f91-424">Una vez creada y rellena la lista y muestran sus elementos, el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> se muestran las propiedades.</span><span class="sxs-lookup"><span data-stu-id="92f91-424">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="92f91-425">Estas propiedades se muestran después de volver a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> ha sido método llamado así como después el contenido de la lista se borra.</span><span class="sxs-lookup"><span data-stu-id="92f91-425">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'T&gt; -&gt; bool" Usage="list.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-426">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones de los elementos que se van a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-426">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-427">Determina si <see cref="T:System.Collections.Generic.List`1" /> contiene elementos que cumplen las condiciones definidas por el predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-427">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-428">Es <see langword="true" /> si <see cref="T:System.Collections.Generic.List`1" /> contiene uno o varios elementos que cumplen las condiciones definidas por el predicado especificado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-428">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-429">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-429">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-430">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado y el procesamiento se detiene cuando se encuentra una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="92f91-430">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="92f91-431">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-431">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-432">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Contains%2A> y <xref:System.Collections.Generic.List%601.Exists%2A> métodos en un <xref:System.Collections.Generic.List%601> que contiene un objeto comercial simple que implementa <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-432">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-433">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Exists%2A> (método) y otros métodos que utilizan el <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="92f91-433">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="92f91-434">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-434">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="92f91-435">El ejemplo también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-435">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="92f91-436">El <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, y <xref:System.Collections.Generic.List%601.FindAll%2A> métodos se usan para buscar la lista con el método de predicado de búsqueda y, a continuación, el <xref:System.Collections.Generic.List%601.RemoveAll%2A> método se utiliza para quitar todas las entradas que terminen en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-436">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="92f91-437">Por último, el <xref:System.Collections.Generic.List%601.Exists%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="92f91-437">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="92f91-438">Recorre la lista desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="92f91-438">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="92f91-439">La búsqueda se detiene y el método devuelve `true` si la `EndsWithSaurus` método `true` para cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-439">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="92f91-440">El <xref:System.Collections.Generic.List%601.Exists%2A> método `false` porque se han quitado todos los elementos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="92f91-440">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-441">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-441">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="92f91-442">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-442">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-443">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-443">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Find : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.Find match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-444">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-444">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-445">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la primera aparición en toda la matriz <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-445">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-446">Primer elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-446">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-447">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-447">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-448">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado, avanzando el <xref:System.Collections.Generic.List%601>, empezando por el primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-448">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="92f91-449">Cuando se encuentra una coincidencia, se detiene el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="92f91-449">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="92f91-450">Al buscar una lista que contiene los tipos de valor, asegúrese de que el valor predeterminado para el tipo no cumple el predicado de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-450">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="92f91-451">En caso contrario, no hay ninguna manera de distinguir entre un elemento de lista que posee el valor predeterminado para el tipo y un valor predeterminado que indica que se encontró ninguna coincidencia.</span><span class="sxs-lookup"><span data-stu-id="92f91-451">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="92f91-452">Si el valor predeterminado satisface el predicado de búsqueda, utilice la <xref:System.Collections.Generic.List%601.FindIndex%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="92f91-452">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="92f91-453">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-453">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-454">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Find%2A> método en un <xref:System.Collections.Generic.List%601> que contiene un objeto complejo simple.</span><span class="sxs-lookup"><span data-stu-id="92f91-454">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-455">El ejemplo siguiente muestra los métodos de búsqueda para la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-455">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="92f91-456">El ejemplo de la <xref:System.Collections.Generic.List%601> clase contiene `book` objetos de clase `Book`, con los datos de la [archivo XML de ejemplo: libros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="92f91-456">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="92f91-457">El `FillList` método en el ejemplo usa [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analizar los valores del archivo XML para los valores de propiedad de la `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-457">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="92f91-458">En la tabla siguiente describe los ejemplos de los métodos de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-458">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="92f91-459">Método</span><span class="sxs-lookup"><span data-stu-id="92f91-459">Method</span></span>|<span data-ttu-id="92f91-460">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="92f91-460">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-461">Encuentra un libro por un identificador utilizando el `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-461">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-462">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-462">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-463">Buscar todos los libros que cuya `Genre` propiedad es "Equipo" con el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-463">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-464">Busca el último libro en la colección que tiene una fecha de publicación anterior a 2001, utilizando el `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-464">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-465">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-465">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-466">Busca el índice del primer equipo libro utilizando la `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-466">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-467">Busca el índice del último libro equipo utilizando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-467">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-468">Busca el índice del primer libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-468">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-469">Busca el índice del último libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-469">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-470">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-470">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Predicate&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-471">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones de los elementos que se van a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-471">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-472">Recupera todos los elementos que coinciden con las condiciones definidas por el predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-472">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-473">
            <see cref="T:System.Collections.Generic.List`1" /> que contiene todos los elementos que cumplen las condiciones definidas por el predicado especificado, si se encuentran; en caso contrario, devuelve una <see cref="T:System.Collections.Generic.List`1" /> vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-473">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-474">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-474">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-475">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado y los elementos que cumplen las condiciones se guardan en el valor devuelto <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-475">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-476">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-476">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-477">El ejemplo siguiente muestra los métodos de búsqueda para la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-477">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="92f91-478">El ejemplo de la <xref:System.Collections.Generic.List%601> clase contiene `book` objetos de clase `Book`, con los datos de la [archivo XML de ejemplo: libros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="92f91-478">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="92f91-479">El `FillList` método en el ejemplo usa [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analizar los valores del archivo XML para los valores de propiedad de la `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-479">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="92f91-480">En la tabla siguiente describe los ejemplos de los métodos de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-480">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="92f91-481">Método</span><span class="sxs-lookup"><span data-stu-id="92f91-481">Method</span></span>|<span data-ttu-id="92f91-482">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="92f91-482">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-483">Encuentra un libro por un identificador utilizando el `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-483">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-484">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-484">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-485">Buscar todos los libros que cuya `Genre` propiedad es "Equipo" con el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-485">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-486">Busca el último libro en la colección que tiene una fecha de publicación anterior a 2001, utilizando el `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-486">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-487">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-487">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-488">Busca el índice del primer equipo libro utilizando la `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-488">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-489">Busca el índice del último libro equipo utilizando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-489">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-490">Busca el índice del primer libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-490">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-491">Busca el índice del último libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-491">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-492">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-492">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-493">Busca un elemento que cumpla las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en <see cref="T:System.Collections.Generic.List`1" /> o en una parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-493">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
          <span data-ttu-id="92f91-494">Este método devuelve -1 si no se encuentra un elemento que cumpla las condiciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-494">This method returns -1 if an item that matches the conditions is not found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-495">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-495">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-496">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en toda la matriz <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-496">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-497">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-497">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-498">El <xref:System.Collections.Generic.List%601> se busca hacia delante a partir del primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-498">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="92f91-499">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-499">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-500">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-500">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="92f91-501">El delegado tiene la firma:</span><span class="sxs-lookup"><span data-stu-id="92f91-501">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="92f91-502">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-502">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-503">En el ejemplo siguiente se define un `Employee` clase con dos campos, `Name` y `Id`.</span><span class="sxs-lookup"><span data-stu-id="92f91-503">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="92f91-504">También define un `EmployeeSearch` clase con un método único, `StartsWith`, que indica si la `Employee.Name` campo comienza con una subcadena especificada que se proporciona a los `EmployeeSearch` constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-504">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="92f91-505">Tenga en cuenta la firma de este método</span><span class="sxs-lookup"><span data-stu-id="92f91-505">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="92f91-506">corresponde a la firma del delegado que puede pasarse a la <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-506">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="92f91-507">El ejemplo crea un `List<Employee>` de objetos, se agrega un número de `Employee` objetos y, a continuación, llama el <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método dos veces para buscar la colección completa, la primera vez para el primer `Employee` cuyos `Name` campo comienza con "J" y la segunda vez para el primer `Employee` cuyos `Name` campo comienza con "Ju".</span><span class="sxs-lookup"><span data-stu-id="92f91-507">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection , the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-508">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-508">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="92f91-509">Índice inicial de base cero de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-509">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="92f91-510">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-510">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-511">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la matriz <see cref="T:System.Collections.Generic.List`1" /> que va desde el índice especificado hasta el último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-511">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-512">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-512">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-513">El <xref:System.Collections.Generic.List%601> se busca hacia delante, empezando en `startIndex` y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-513">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="92f91-514">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-514">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-515">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-515">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="92f91-516">El delegado tiene la firma:</span><span class="sxs-lookup"><span data-stu-id="92f91-516">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="92f91-517">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es el número de elementos de `startIndex` al final de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-517">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-518">En el ejemplo siguiente se define un `Employee` clase con dos campos, `Name` y `Id`.</span><span class="sxs-lookup"><span data-stu-id="92f91-518">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="92f91-519">También define un `EmployeeSearch` clase con un método único, `StartsWith`, que indica si la `Employee.Name` campo comienza con una subcadena especificada que se proporciona a los `EmployeeSearch` constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-519">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="92f91-520">Tenga en cuenta la firma de este método</span><span class="sxs-lookup"><span data-stu-id="92f91-520">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="92f91-521">corresponde a la firma del delegado que puede pasarse a la <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-521">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="92f91-522">El ejemplo crea un `List<Employee>` de objetos, se agrega un número de `Employee` objetos y, a continuación, llama el <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método dos veces para buscar en la colección a partir de su miembro quinto (es decir, el miembro en el índice 4).</span><span class="sxs-lookup"><span data-stu-id="92f91-522">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="92f91-523">La primera vez, busca la primera `Employee` cuyos `Name` campo comienza con "J"; la segunda vez, busca la primera `Employee` cuyos `Name` campo comienza con "Ju".</span><span class="sxs-lookup"><span data-stu-id="92f91-523">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-524">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-524">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-525">
            <paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-525">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="92f91-526">Índice inicial de base cero de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-526">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-527">Número de elementos de la sección en la que se va a realizar la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-527">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="92f91-528">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-528">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-529">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición en el intervalo de elementos de la matriz <see cref="T:System.Collections.Generic.List`1" /> que comienza en el índice especificado y contiene el número especificado de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-529">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-530">Índice de base cero de la primera aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-530">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-531">El <xref:System.Collections.Generic.List%601> se busca hacia delante, empezando en `startIndex` y terminando en `startIndex` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-531">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92f91-532">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-532">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-533">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-533">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="92f91-534">El delegado tiene la firma:</span><span class="sxs-lookup"><span data-stu-id="92f91-534">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="92f91-535">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-535">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-536">En el ejemplo siguiente se define un `Employee` clase con dos campos, `Name` y `Id`.</span><span class="sxs-lookup"><span data-stu-id="92f91-536">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="92f91-537">También define un `EmployeeSearch` clase con un método único, `StartsWith`, que indica si la `Employee.Name` campo comienza con una subcadena especificada que se proporciona a los `EmployeeSearch` constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-537">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="92f91-538">Tenga en cuenta la firma de este método</span><span class="sxs-lookup"><span data-stu-id="92f91-538">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="92f91-539">corresponde a la firma del delegado que puede pasarse a la <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-539">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="92f91-540">El ejemplo crea un `List<Employee>` de objetos, se agrega un número de `Employee` objetos y, a continuación, llama el <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método dos veces para buscar la colección completa (es decir, los miembros desde el índice 0 al índice <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span><span class="sxs-lookup"><span data-stu-id="92f91-540">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="92f91-541">La primera vez, busca la primera `Employee` cuyos `Name` campo comienza con "J"; la segunda vez, busca la primera `Employee` cuyos `Name` campo comienza con "Ju".</span><span class="sxs-lookup"><span data-stu-id="92f91-541">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-542">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-542">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-543">
            <paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-543">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-544">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-544">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-545">-o bien- <paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-545">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLast : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.FindLast match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-546">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-546">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-547">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve la última aparición en toda la matriz <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-547">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-548">Último elemento que coincide con las condiciones definidas por el predicado especificado, si se encuentra; de lo contrario, valor predeterminado para el tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-548">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-549">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-549">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-550">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado, mover hacia atrás el <xref:System.Collections.Generic.List%601>, empezando por el último elemento y terminando por el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-550">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="92f91-551">Cuando se encuentra una coincidencia, se detiene el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="92f91-551">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="92f91-552">Al buscar una lista que contiene los tipos de valor, asegúrese de que el valor predeterminado para el tipo no cumple el predicado de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-552">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="92f91-553">En caso contrario, no hay ninguna manera de distinguir entre un elemento de lista que posee el valor predeterminado para el tipo y un valor predeterminado que indica que se encontró ninguna coincidencia.</span><span class="sxs-lookup"><span data-stu-id="92f91-553">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="92f91-554">Si el valor predeterminado satisface el predicado de búsqueda, utilice la <xref:System.Collections.Generic.List%601.FindLastIndex%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="92f91-554">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="92f91-555">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-555">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-556">El ejemplo siguiente muestra los métodos de búsqueda para la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-556">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="92f91-557">El ejemplo de la <xref:System.Collections.Generic.List%601> clase contiene `book` objetos de clase `Book`, con los datos de la [archivo XML de ejemplo: libros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="92f91-557">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="92f91-558">El `FillList` método en el ejemplo usa [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analizar los valores del archivo XML para los valores de propiedad de la `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-558">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="92f91-559">En la tabla siguiente describe los ejemplos de los métodos de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-559">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="92f91-560">Método</span><span class="sxs-lookup"><span data-stu-id="92f91-560">Method</span></span>|<span data-ttu-id="92f91-561">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="92f91-561">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-562">Encuentra un libro por un identificador utilizando el `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-562">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-563">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-563">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-564">Buscar todos los libros que cuya `Genre` propiedad es "Equipo" con el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-564">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-565">Busca el último libro en la colección que tiene una fecha de publicación anterior a 2001, utilizando el `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-565">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-566">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-566">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-567">Busca el índice del primer equipo libro utilizando la `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-567">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-568">Busca el índice del último libro equipo utilizando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-568">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-569">Busca el índice del primer libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-569">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-570">Busca el índice del último libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-570">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-571">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-571">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-572">Busca un elemento que cumpla las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en <see cref="T:System.Collections.Generic.List`1" /> o en una parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-572">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-573">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-573">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-574">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en toda la matriz <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-574">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-575">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-575">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-576">El <xref:System.Collections.Generic.List%601> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-576">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="92f91-577">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-577">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-578">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-578">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="92f91-579">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-579">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-580">El ejemplo siguiente muestra los métodos de búsqueda para la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-580">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="92f91-581">El ejemplo de la <xref:System.Collections.Generic.List%601> clase contiene `book` objetos de clase `Book`, con los datos de la [archivo XML de ejemplo: libros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="92f91-581">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="92f91-582">El `FillList` método en el ejemplo usa [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analizar los valores del archivo XML para los valores de propiedad de la `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-582">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="92f91-583">En la tabla siguiente describe los ejemplos de los métodos de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-583">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="92f91-584">Método</span><span class="sxs-lookup"><span data-stu-id="92f91-584">Method</span></span>|<span data-ttu-id="92f91-585">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="92f91-585">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-586">Encuentra un libro por un identificador utilizando el `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-586">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-587">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-587">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-588">Buscar todos los libros que cuya `Genre` propiedad es "Equipo" con el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-588">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-589">Busca el último libro en la colección que tiene una fecha de publicación anterior a 2001, utilizando el `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-589">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-590">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-590">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-591">Busca el índice del primer equipo libro utilizando la `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-591">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-592">Busca el índice del último libro equipo utilizando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-592">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-593">Busca el índice del primer libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-593">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-594">Busca el índice del último libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-594">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-595">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-595">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="92f91-596">Índice inicial de base cero de la búsqueda hacia atrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-596">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="92f91-597">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-597">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-598">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la matriz <see cref="T:System.Collections.Generic.List`1" /> que va desde el primer elemento hasta el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-598">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-599">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-599">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-600">El <xref:System.Collections.Generic.List%601> es la búsqueda hacia atrás, empezando en `startIndex` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-600">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="92f91-601">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-601">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-602">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-602">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="92f91-603">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es el número de elementos desde el principio de la <xref:System.Collections.Generic.List%601> a `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="92f91-603">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-604">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-604">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-605">
            <paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-605">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="92f91-606">Índice inicial de base cero de la búsqueda hacia atrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-606">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-607">Número de elementos de la sección en la que se va a realizar la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-607">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="92f91-608">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-608">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-609">Busca un elemento que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la última aparición en el intervalo de elementos de la matriz <see cref="T:System.Collections.Generic.List`1" /> que contiene el número especificado de elementos y termina en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-609">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-610">Índice de base cero de la última aparición de un elemento que coincide con las condiciones definidas por <paramref name="match" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-610">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-611">El <xref:System.Collections.Generic.List%601> es la búsqueda hacia atrás, empezando en `startIndex` y terminando en `startIndex` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-611">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92f91-612">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-612">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-613">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-613">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="92f91-614">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-614">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-615">El ejemplo siguiente muestra los métodos de búsqueda para la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="92f91-615">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="92f91-616">El ejemplo de la <xref:System.Collections.Generic.List%601> clase contiene `book` objetos de clase `Book`, con los datos de la [archivo XML de ejemplo: libros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="92f91-616">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="92f91-617">El `FillList` método en el ejemplo usa [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analizar los valores del archivo XML para los valores de propiedad de la `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-617">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="92f91-618">En la tabla siguiente describe los ejemplos de los métodos de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-618">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="92f91-619">Método</span><span class="sxs-lookup"><span data-stu-id="92f91-619">Method</span></span>|<span data-ttu-id="92f91-620">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="92f91-620">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-621">Encuentra un libro por un identificador utilizando el `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-621">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-622">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-622">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-623">Buscar todos los libros que cuya `Genre` propiedad es "Equipo" con el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-623">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-624">Busca el último libro en la colección que tiene una fecha de publicación anterior a 2001, utilizando el `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-624">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="92f91-625">Ejemplo de C# usa a un delegado anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-625">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-626">Busca el índice del primer equipo libro utilizando la `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-626">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-627">Busca el índice del último libro equipo utilizando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-627">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-628">Busca el índice del primer libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-628">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="92f91-629">Busca el índice del último libro informático en la segunda mitad de la colección, usando el `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-629">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-630">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-630">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-631">
            <paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-631">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-632">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-632">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-633">-o bien- <paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-633">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'T&gt; -&gt; unit" Usage="list.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="92f91-634">Delegado <see cref="T:System.Action`1" /> para realizar la acción en cada elemento de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-634">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-635">Realiza la acción especificada en cada elemento de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-635">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-636">El <xref:System.Action%601> se pasa un delegado a un método que realiza una acción en el objeto.</span><span class="sxs-lookup"><span data-stu-id="92f91-636">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="92f91-637">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Action%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="92f91-637">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="92f91-638">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-638">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="92f91-639">Modificar la colección subyacente en el cuerpo de la <xref:System.Action%601> delegado no se admite y provoca un comportamiento indefinido.</span><span class="sxs-lookup"><span data-stu-id="92f91-639">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-640">En el ejemplo siguiente se muestra el uso de la <xref:System.Action%601> delegado que se va a imprimir el contenido de un <xref:System.Collections.Generic.List%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="92f91-640">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="92f91-641">En este ejemplo el `Print` método se usa para mostrar el contenido de la lista en la consola.</span><span class="sxs-lookup"><span data-stu-id="92f91-641">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-642">Además de mostrar el contenido mediante el `Print` método, el ejemplo de C# muestra el uso de para mostrar los resultados en la consola.</span><span class="sxs-lookup"><span data-stu-id="92f91-642">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of  to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-643">
            <paramref name="action" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-643">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-644">Se ha modificado un elemento de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-644">An element in the collection has been modified.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.List&lt;'T&gt;.Enumerator" Usage="list.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-645">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-645">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-646">Estructura <see cref="T:System.Collections.Generic.List`1.Enumerator" /> para la colección <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-646">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-647">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="92f91-647">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="92f91-648">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="92f91-648">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="92f91-649">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="92f91-649">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="92f91-650">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-650">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="92f91-651">En esta posición, el <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="92f91-651">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="92f91-652">Por lo tanto, debe llamar a la <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-652">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="92f91-653">El <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propiedad devuelve el mismo objeto hasta que <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="92f91-653">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="92f91-654"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-654"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="92f91-655">Si <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-655">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="92f91-656">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-656">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="92f91-657">Si la última llamada a <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="92f91-657">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92f91-658">No puede volver a establecer la propiedad <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="92f91-658">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="92f91-659">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="92f91-659">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="92f91-660">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> o <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-660">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-661">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="92f91-661">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92f91-662">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="92f91-662">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92f91-663">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="92f91-663">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92f91-664">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="92f91-664">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="92f91-665">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-665">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetRange : int * int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-666">Índice de <see cref="T:System.Collections.Generic.List`1" /> de base cero en el que empieza el intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-666">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-667">Número de elementos del intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-667">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-668">Crea una copia superficial de un intervalo de elementos en la <see cref="T:System.Collections.Generic.List`1" /> de origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-668">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-669">Copia superficial de un intervalo de elementos en la <see cref="T:System.Collections.Generic.List`1" /> de origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-669">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-670">Una copia superficial de una colección de tipos de referencia o un subconjunto de dicha colección, sólo contiene las referencias a los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-670">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="92f91-671">No se copian los propios objetos.</span><span class="sxs-lookup"><span data-stu-id="92f91-671">The objects themselves are not copied.</span></span> <span data-ttu-id="92f91-672">Las referencias de la nueva lista apuntan a los mismos objetos que las referencias de la lista original.</span><span class="sxs-lookup"><span data-stu-id="92f91-672">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="92f91-673">Una copia superficial de una colección de tipos de valor o un subconjunto de dicha colección, contiene los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-673">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="92f91-674">Sin embargo, si los elementos de la colección contienen referencias a otros objetos, esos objetos no se copian.</span><span class="sxs-lookup"><span data-stu-id="92f91-674">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="92f91-675">Las referencias de los elementos de la nueva colección apuntan a los mismos objetos que las referencias de los elementos de la colección original.</span><span class="sxs-lookup"><span data-stu-id="92f91-675">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="92f91-676">En cambio, una copia en profundidad de una colección copia los elementos y todo lo que hacen referencia directa o indirectamente el elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-676">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="92f91-677">Este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-677">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-678">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.GetRange%2A> método y otros métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-678">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-679">Al final del ejemplo, el <xref:System.Collections.Generic.List%601.GetRange%2A> método se usa para obtener tres elementos de la lista, a partir de la posición de índice 2.</span><span class="sxs-lookup"><span data-stu-id="92f91-679">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="92f91-680">El <xref:System.Collections.Generic.List%601.ToArray%2A> método se llama en el cuadro <xref:System.Collections.Generic.List%601>, creación de una matriz de tres elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-680">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="92f91-681">Se muestran los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-681">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-682">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-682">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-683">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-683">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-684">
            <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-684">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-685">Devuelve el índice de base cero de la primera aparición de un valor en la <see cref="T:System.Collections.Generic.List`1" /> o en una parte de ella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-685">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="list.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-686">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-686">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-687">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-687">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-688">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en todo el objeto <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-688">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-689">Índice de base cero de la primera aparición de <paramref name="item" /> en la totalidad de <see cref="T:System.Collections.Generic.List`1" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-689">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-690">El <xref:System.Collections.Generic.List%601> se busca hacia delante a partir del primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-690">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="92f91-691">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-691">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-692">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-692">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-693">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-693">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="92f91-694">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-694">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-695">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga del método busca en la lista desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-695">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="92f91-696">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar la lista comenzando en la posición de índice 3 y continuando hasta el final de la lista y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-696">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-697">Por último, el <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-697">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="list.IndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-698">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-698">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-699">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-699">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f91-700">Índice inicial de base cero de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-700">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="92f91-701">0 (cero) es válido en una lista vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-701">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-702">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que abarca desde el índice especificado hasta el último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-702">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-703">Índice de base cero de la primera aparición de <paramref name="item" /> dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que abarca desde <paramref name="index" /> hasta el último elemento, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-703">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-704">El <xref:System.Collections.Generic.List%601> se busca hacia delante, empezando en `index` y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-704">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="92f91-705">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-705">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-706">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es el número de elementos de `index` al final de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-706">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-707">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-707">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="92f91-708">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-708">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-709">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga del método busca en la lista desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-709">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="92f91-710">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar la lista comenzando en la posición de índice 3 y continuando hasta el final de la lista y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-710">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-711">Por último, el <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-711">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-712">
            <paramref name="index" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-712">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="list.IndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-713">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-713">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-714">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-714">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f91-715">Índice inicial de base cero de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-715">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="92f91-716">0 (cero) es válido en una lista vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-716">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-717">Número de elementos de la sección en la que se va a realizar la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-717">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-718">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que comienza en el índice especificado y contiene el número especificado de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-718">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-719">Índice de base cero de la primera aparición de <paramref name="item" /> dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que comienza en <paramref name="index" /> y contiene el número de elementos de <paramref name="count" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-719">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-720">El <xref:System.Collections.Generic.List%601> se busca hacia delante, empezando en `index` y terminando en `index` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-720">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92f91-721">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-721">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-722">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-722">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-723">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-723">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="92f91-724">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-724">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-725">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga del método busca en la lista desde el principio y busca la primera aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-725">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="92f91-726">El <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se usa para buscar la lista comenzando en la posición de índice 3 y continuando hasta el final de la lista y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-726">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-727">Por último, el <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se usa para buscar en un intervalo de dos entradas, comenzando en la posición de índice dos; devuelve -1 porque no hay ninguna instancia de la cadena de búsqueda en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-727">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-728">
            <paramref name="index" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-728">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-729">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-729">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-730">-o bien- <paramref name="index" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-730">-or-  <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="list.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-731">Índice de base cero donde debe insertarse <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-731">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="92f91-732">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-732">The object to insert.</span>
          </span>
          <span data-ttu-id="92f91-733">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-733">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-734">Inserta un elemento en <see cref="T:System.Collections.Generic.List`1" />, en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-734">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-735"><xref:System.Collections.Generic.List%601> acepta `null` como un valor válido para la referencia de tipos y permite a los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="92f91-735"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92f91-736">Si <xref:System.Collections.Generic.List%601.Count%2A> ya es igual a <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacidad de la <xref:System.Collections.Generic.List%601> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-736">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="92f91-737">Si `index` es igual a <xref:System.Collections.Generic.List%601.Count%2A>, `item` se agrega al final de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-737">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-738">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-738">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-739">En el ejemplo siguiente se muestra cómo agregar, quitar e insertar un objeto comercial simple en una <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-739">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="92f91-740">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Insert%2A> método, junto con otras propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-740">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="92f91-741">Una vez creada la lista, se agregan elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-741">After the list is created, elements are added.</span></span> <span data-ttu-id="92f91-742">El <xref:System.Collections.Generic.List%601.Insert%2A> método se utiliza para insertar un elemento en la mitad de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-742">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="92f91-743">El elemento insertado es un duplicado, que se quita más tarde mediante el <xref:System.Collections.Generic.List%601.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-743">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-744">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-744">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-745">-o bien- <paramref name="index" /> es mayor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-745">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; unit" Usage="list.InsertRange (index, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-746">Índice de base cero donde se deben insertar los nuevos elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-746">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="92f91-747">Colección cuyos elementos se deben insertar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-747">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-748">La propia colección no puede ser <see langword="null" />, pero puede contener elementos que sean <see langword="null" /> si el tipo <c>T</c> es un tipo de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-748">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-749">Inserta los elementos de una colección en <see cref="T:System.Collections.Generic.List`1" /> en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-749">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-750"><xref:System.Collections.Generic.List%601> acepta `null` como un valor válido para la referencia de tipos y permite a los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="92f91-750"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92f91-751">Si el nuevo <xref:System.Collections.Generic.List%601.Count%2A> (actual <xref:System.Collections.Generic.List%601.Count%2A> más el tamaño de la colección) será mayor que <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacidad de la <xref:System.Collections.Generic.List%601> se incrementa mediante la reasignación automática de la matriz interna para dar cabida a los nuevos elementos y la los elementos existentes se copian en la nueva matriz antes de que se agregan los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-751">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="92f91-752">Si `index` es igual a <xref:System.Collections.Generic.List%601.Count%2A>, los elementos se agregan al final de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-752">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-753">Se conserva el orden de los elementos de la colección en el <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-753">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-754">Este método es una O (*n* \* *m*) operación, donde *n* es el número de elementos que se va a agregarse y *m* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-754">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-755">En el ejemplo siguiente se muestra <xref:System.Collections.Generic.List%601.InsertRange%2A> método y otros métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-755">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-756">Después de haber creado y se rellena con los nombres de varios pacíficos comer planta dinosaurios, la lista el <xref:System.Collections.Generic.List%601.InsertRange%2A> método se utiliza para insertar una matriz de tres dinosaurios feroces comer carne en la lista, comenzando en la posición de índice 3.</span><span class="sxs-lookup"><span data-stu-id="92f91-756">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-757">
            <paramref name="collection" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-757">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-758">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-758">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-759">-o bien- <paramref name="index" /> es mayor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-759">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-760">Índice de base cero del elemento que se va a obtener o establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-760">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-761">Obtiene o establece el elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-761">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-762">Elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-762">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-763"><xref:System.Collections.Generic.List%601> acepta `null` como un valor válido para la referencia de tipos y permite a los elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="92f91-763"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92f91-764">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="92f91-764">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="92f91-765">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-765">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-766">El ejemplo de esta sección se muestra la <xref:System.Collections.Generic.List%601.Item%2A> propiedad (el indizador en C#) y como otras propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-766">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="92f91-767">Después de la lista crean y rellenan con el <xref:System.Collections.Generic.List%601.Add%2A> método, un elemento se recupera y muestra el uso de la <xref:System.Collections.Generic.List%601.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92f91-767">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="92f91-768">(Para obtener un ejemplo que usa el <xref:System.Collections.Generic.List%601.Item%2A> propiedad para establecer el valor de un elemento de lista, vea <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span><span class="sxs-lookup"><span data-stu-id="92f91-768">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-769">Visual Basic, C# y C++ todas tengan la sintaxis para tener acceso a la <xref:System.Collections.Generic.List%601.Item%2A> propiedad sin utilizar su nombre.</span><span class="sxs-lookup"><span data-stu-id="92f91-769">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="92f91-770">En su lugar, la variable que contiene el <xref:System.Collections.Generic.List%601> se utiliza como si fuera una matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-770">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="92f91-771">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <xref:System.Collections.Generic.List%601.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92f91-771">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="92f91-772">Visual Basic implementa <xref:System.Collections.Generic.List%601.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="92f91-772">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-773">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-773">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-774">- o bien- <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-774">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-775">Devuelve el índice de base cero de la última aparición de un valor en la <see cref="T:System.Collections.Generic.List`1" /> o en una parte de ella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-775">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="list.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-776">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-776">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-777">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-777">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-778">Busca el objeto especificado y devuelve el índice de base cero de la última aparición en toda la <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-778">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-779">Índice de base cero de la última aparición de <paramref name="item" /> en toda la <see cref="T:System.Collections.Generic.List`1" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-779">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-780">El <xref:System.Collections.Generic.List%601> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-780">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="92f91-781">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-781">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-782">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-782">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-783">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-783">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="92f91-784">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-784">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-785">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga del método busca en toda la lista desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-785">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-786">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar la lista hacia atrás a partir de la posición de índice 3 y continuando hasta el principio de la lista, por lo que busca la primera aparición de la cadena en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-786">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="92f91-787">Por último, el <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de cuatro entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-787">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="list.LastIndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-788">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-788">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-789">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-789">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f91-790">Índice inicial de base cero de la búsqueda hacia atrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-790">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-791">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que abarca desde el primer elemento hasta el último índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-791">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-792">Índice de base cero de la última aparición de <paramref name="item" /> dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que abarca desde el primer elemento hasta <paramref name="index" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-792">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-793">El <xref:System.Collections.Generic.List%601> es la búsqueda hacia atrás, empezando en `index` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-793">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="92f91-794">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-794">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-795">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es el número de elementos desde el principio de la <xref:System.Collections.Generic.List%601> a `index`.</span><span class="sxs-lookup"><span data-stu-id="92f91-795">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-796">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-796">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="92f91-797">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-797">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-798">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga del método busca en toda la lista desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-798">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-799">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar la lista hacia atrás a partir de la posición de índice 3 y continuando hasta el principio de la lista, por lo que busca la primera aparición de la cadena en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-799">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="92f91-800">Por último, el <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de cuatro entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-800">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-801">
            <paramref name="index" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-801">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="list.LastIndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-802">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-802">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-803">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-803">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="92f91-804">Índice inicial de base cero de la búsqueda hacia atrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-804">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-805">Número de elementos de la sección en la que se va a realizar la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-805">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-806">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que contiene el número de elementos especificado y termina en el índice determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-806">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-807">Índice de base cero de la última aparición de <paramref name="item" /> dentro del intervalo de elementos de <see cref="T:System.Collections.Generic.List`1" /> que contiene el número de elementos de <paramref name="count" /> y termina en <paramref name="index" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-807">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-808">El <xref:System.Collections.Generic.List%601> es la búsqueda hacia atrás, empezando en `index` y terminando en `index` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-808">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92f91-809">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-809">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-810">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-810">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-811">En el ejemplo siguiente se muestra las tres sobrecargas de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-811">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="92f91-812">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, con una entrada que aparece dos veces, en la ubicación de índice 0 y la ubicación de índice 5.</span><span class="sxs-lookup"><span data-stu-id="92f91-812">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="92f91-813">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga del método busca en toda la lista desde el final y encuentra la segunda aparición de la cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-813">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="92f91-814">El <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar la lista hacia atrás a partir de la posición de índice 3 y continuando hasta el principio de la lista, por lo que busca la primera aparición de la cadena en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-814">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="92f91-815">Por último, el <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para buscar un intervalo de 4 entradas, comenzando en la posición de índice 4 y avanzando hacia atrás (es decir, busca en los elementos en ubicaciones 4, 3, 2 y 1); esta búsqueda devuelve – 1 porque no hay ninguna instancia de la búsqueda cadena en ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="92f91-815">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-816">
            <paramref name="index" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-816">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-817">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-817">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-818">-o bien- <paramref name="index" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-818">-or-  <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="list.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-819">Objeto que se va a quitar de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-819">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-820">El valor puede ser <see langword="null" /> para los tipos de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-820">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-821">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-821">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-822">
            <see langword="true" /> si <paramref name="item" /> se quita correctamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-822">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-823">Este método también devuelve <see langword="false" /> si no se encuentra <paramref name="item" /> en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-823">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-824">Si tipo `T` implementa la <xref:System.IEquatable%601> el comparador de igualdad es la interfaz genérica, la <xref:System.IEquatable%601.Equals%2A> método de dicha interfaz; en caso contrario, el comparador de igualdad predeterminado es <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="92f91-824">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f91-825">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-825">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-826">En el ejemplo siguiente se muestra cómo agregar, quitar e insertar un objeto comercial simple en una <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-826">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="92f91-827">En el ejemplo siguiente se muestra <xref:System.Collections.Generic.List%601.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-827">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="92f91-828">Varias propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase genérica sirven para agregar, insertar y buscar en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-828">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="92f91-829">Después de estas operaciones, la lista contiene un duplicado.</span><span class="sxs-lookup"><span data-stu-id="92f91-829">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="92f91-830">El <xref:System.Collections.Generic.List%601.Remove%2A> método se utiliza para quitar la primera instancia del elemento duplicado y se muestra el contenido.</span><span class="sxs-lookup"><span data-stu-id="92f91-830">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="92f91-831">El <xref:System.Collections.Generic.List%601.Remove%2A> método siempre quita la primera instancia que encuentra.</span><span class="sxs-lookup"><span data-stu-id="92f91-831">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; int" Usage="list.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-832">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones de los elementos que se van a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-832">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-833">Quita todos los elementos que cumplen las condiciones definidas por el predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-833">Removes all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-834">Número de elementos que se han quitado de <see cref="T:System.Collections.Generic.List`1" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-834">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-835">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-835">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-836">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado y los elementos que cumplen las condiciones se quitan de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-836">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92f91-837">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-837">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-838">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.RemoveAll%2A> (método) y otros métodos que utilizan el <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="92f91-838">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="92f91-839">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-839">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="92f91-840">El ejemplo también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-840">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="92f91-841">El <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, y <xref:System.Collections.Generic.List%601.FindAll%2A> métodos se usan para buscar la lista con el método de predicado de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="92f91-841">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="92f91-842">El <xref:System.Collections.Generic.List%601.RemoveAll%2A> método se utiliza para quitar todas las entradas que terminen en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-842">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="92f91-843">Recorre la lista desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="92f91-843">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="92f91-844">El elemento se quita si la `EndsWithSaurus` método `true`.</span><span class="sxs-lookup"><span data-stu-id="92f91-844">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-845">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-845">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="92f91-846">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-846">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="92f91-847">Por último, el <xref:System.Collections.Generic.List%601.Exists%2A> método verifica que no hay ninguna cadena de la lista que terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-847">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-848">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-848">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="list.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-849">Índice de base cero del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-849">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-850">Quita el elemento situado en el índice especificado de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-850">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-851">Cuando se llama a <xref:System.Collections.Generic.List%601.RemoveAt%2A> para quitar un elemento, se vuelven a numerar los elementos restantes en la lista para reemplazar el elemento quitado.</span><span class="sxs-lookup"><span data-stu-id="92f91-851">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="92f91-852">Por ejemplo, si quita el elemento en el índice 3, el elemento situado en índice 4 se mueve a la posición 3.</span><span class="sxs-lookup"><span data-stu-id="92f91-852">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="92f91-853">Además, el número de elementos de la lista (tal como está representado por la <xref:System.Collections.Generic.List%601.Count%2A> propiedad) se reduce en 1.</span><span class="sxs-lookup"><span data-stu-id="92f91-853">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="92f91-854">Este método es una O (*n*) operación, donde *n* es (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="92f91-854">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-855">En el ejemplo siguiente se muestra cómo agregar, quitar e insertar un objeto comercial simple en una <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-855">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-856">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-856">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-857">- o bien- <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-857">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="list.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-858">Índice inicial de base cero del intervalo de elementos que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-858">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-859">Número de elementos que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-859">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-860">Quita todos los elementos de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-860">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-861">Se quitan los elementos y todos los elementos siguientes en la <xref:System.Collections.Generic.List%601> tienen sus índices reducidos en `count`.</span><span class="sxs-lookup"><span data-stu-id="92f91-861">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="92f91-862">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-862">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-863">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.RemoveRange%2A> método y otros métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-863">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-864">Después de haber creado y modificado, la lista el <xref:System.Collections.Generic.List%601.RemoveRange%2A> método se usa para quitar dos elementos de la lista, comenzando en la posición de índice 2.</span><span class="sxs-lookup"><span data-stu-id="92f91-864">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-865">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-865">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-866">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-866">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-867">
            <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-867">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-868">Invierte el orden de los elementos en la <see cref="T:System.Collections.Generic.List`1" /> o en una parte de ella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-868">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="list.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-869">Invierte el orden de los elementos en la <see cref="T:System.Collections.Generic.List`1" /> completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-869">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-870">Este método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para invertir el orden de los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-870">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="92f91-871">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-871">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-872">El ejemplo siguiente muestra ambas sobrecargas de la <xref:System.Collections.Generic.List%601.Reverse%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-872">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="92f91-873">El ejemplo se crea un <xref:System.Collections.Generic.List%601> de cadenas y se agregan seis cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-873">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="92f91-874">El <xref:System.Collections.Generic.List%601.Reverse> sobrecarga del método se utiliza para invertir la lista y, a continuación, el <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para invertir la mitad de la lista, empezando con el elemento 1 y que abarcan las cuatro elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-874">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Reverse : int * int -&gt; unit" Usage="list.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-875">Índice inicial de base cero del intervalo que se va a invertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-875">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-876">Número de elementos del intervalo que se va a invertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-876">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-877">Invierte el orden de los elementos en el intervalo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-877">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-878">Este método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para invertir el orden de los elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-878">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="92f91-879">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-879">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-880">El ejemplo siguiente muestra ambas sobrecargas de la <xref:System.Collections.Generic.List%601.Reverse%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-880">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="92f91-881">El ejemplo se crea un <xref:System.Collections.Generic.List%601> de cadenas y se agregan seis cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-881">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="92f91-882">El <xref:System.Collections.Generic.List%601.Reverse> sobrecarga del método se utiliza para invertir la lista y, a continuación, el <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> sobrecarga del método se utiliza para invertir la mitad de la lista, empezando con el elemento 1 y que abarcan las cuatro elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-882">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-883">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-883">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-884">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-884">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-885">
            <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-885">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-886">Ordena los elementos en la <see cref="T:System.Collections.Generic.List`1" /> o en una parte de ella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-886">Sorts the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overloaded-method-syntax"></a><span data-ttu-id="92f91-887">Sintaxis del método sobrecargado</span><span class="sxs-lookup"><span data-stu-id="92f91-887">Overloaded method syntax</span></span>  
 <span data-ttu-id="92f91-888">El <xref:System.Collections.Generic.List%601.Sort%2A> métodos permiten ordenar con el comparador predeterminado para el tipo de objeto en la lista o especificar un método de ordenación de cliente.</span><span class="sxs-lookup"><span data-stu-id="92f91-888">The  <xref:System.Collections.Generic.List%601.Sort%2A> methods enable you to sort with the default comparer for the object type in the list, or specify a customer sort method.</span></span>  
  
 <span data-ttu-id="92f91-889">[Lista\<T >. Sort()](xref:System.Collections.Generic.List`1.Sort*) ordena los elementos de la lista completa utilizando el comparador predeterminado del tipo de objeto contenidos en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-889">[List\<T>.Sort()](xref:System.Collections.Generic.List`1.Sort*) Sorts the elements in the entire list using the default comparer of the object type held in the list.</span></span>  
  
 <span data-ttu-id="92f91-890">[Lista\<T >. Ordenación M (comparación\<T > comparación)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) ordena los elementos de la lista completa utilizando el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="92f91-890">[List\<T>.Sort M(Comparison\<T> comparison)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) Sorts the elements in the entire list using the specified comparer.</span></span>  
  
 <span data-ttu-id="92f91-891">[Lista\<T >. Sort (IComparer\<T > comparador)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) ordena los elementos de toda la lista utilizando especificado <xref:System.Comparison%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="92f91-891">[List\<T>.Sort(IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in the entire list using the specified <xref:System.Comparison%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92f91-892">[Lista\<T >. Ordenación (Int32 index, recuento de Int32, IComparer\<T > comparador)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) ordena los elementos de un intervalo de elementos de lista usando el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="92f91-892">[List\<T>.Sort(Int32 index, Int32 count, IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in a range of elements in list using the specified comparer.</span></span>  
  
## <a name="parameters"></a><span data-ttu-id="92f91-893">Parámetros</span><span class="sxs-lookup"><span data-stu-id="92f91-893">Parameters</span></span>  
  
|<span data-ttu-id="92f91-894">Parámetro</span><span class="sxs-lookup"><span data-stu-id="92f91-894">Parameter</span></span>|<span data-ttu-id="92f91-895">Tipo</span><span class="sxs-lookup"><span data-stu-id="92f91-895">Type</span></span>|<span data-ttu-id="92f91-896">Descripción</span><span class="sxs-lookup"><span data-stu-id="92f91-896">Description</span></span>|  
|---------------|----------|-----------------|  
|`comparison`|<xref:System.Comparison%601>|<span data-ttu-id="92f91-897">El método de delegado a utilizar al comparar elementos</span><span class="sxs-lookup"><span data-stu-id="92f91-897">The delegate method to use when comparing elements</span></span>|  
|<span data-ttu-id="92f91-898">comparer</span><span class="sxs-lookup"><span data-stu-id="92f91-898">comparer</span></span>|<xref:System.Collections.Generic.IComparer%601>|<span data-ttu-id="92f91-899">El <xref:System.Collections.Generic.IComparer%601> implementación a utilizar al comparar elementos, o null para utilizar el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default>.</span><span class="sxs-lookup"><span data-stu-id="92f91-899">The <xref:System.Collections.Generic.IComparer%601> implementation to use when comparing elements, or null to use the default comparer <xref:System.Collections.Generic.Comparer%601.Default>.</span></span>|  
|`index`|<xref:System.Int32>|<span data-ttu-id="92f91-900">Índice inicial de base cero del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="92f91-900">The zero-based starting index of the range to sort.</span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="92f91-901">Longitud del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="92f91-901">The length of the range to sort.</span></span>|  
  
## <a name="exceptions"></a><span data-ttu-id="92f91-902">Excepciones</span><span class="sxs-lookup"><span data-stu-id="92f91-902">Exceptions</span></span>  
  
|<span data-ttu-id="92f91-903">Excepción</span><span class="sxs-lookup"><span data-stu-id="92f91-903">Exception</span></span>|<span data-ttu-id="92f91-904">Condición</span><span class="sxs-lookup"><span data-stu-id="92f91-904">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="92f91-905">`comparer` no se especifica o `null`y el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> no se puede encontrar la implementación de la <xref:System.IComparable%601?displayProperty=nameWithType> interfaz genérica o <xref:System.IComparable?displayProperty=nameWithType> interfaz de tipo T.</span><span class="sxs-lookup"><span data-stu-id="92f91-905">`comparer` is not specified or `null`, and the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> cannot find implementation of the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface or the <xref:System.IComparable?displayProperty=nameWithType> interface for type T.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="92f91-906">`comparison` es `null`.</span><span class="sxs-lookup"><span data-stu-id="92f91-906">`comparison` is `null`.</span></span>|  
|<xref:System.ArgumentException>|<span data-ttu-id="92f91-907">La implementación de `comparison` o `comparer` produjo un error durante la ordenación.</span><span class="sxs-lookup"><span data-stu-id="92f91-907">The implementation of `comparison` or `comparer` caused an error during the sort.</span></span> <span data-ttu-id="92f91-908">Por ejemplo, es posible que `comparison` no devuelva 0 al comparar un elemento consigo mismo.</span><span class="sxs-lookup"><span data-stu-id="92f91-908">For example, `comparison` might not return 0 when comparing an item with itself.</span></span><br /><br /> <span data-ttu-id="92f91-909">O bien</span><span class="sxs-lookup"><span data-stu-id="92f91-909">-or-</span></span><br /><br /> <span data-ttu-id="92f91-910">`index` y `count` no especifican un intervalo válido en <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="92f91-910">`index` and `count` do not specify a valid range in the <xref:System.Collections.Generic.List%601>.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="92f91-911">`index` es menor que 0 o `count` es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="92f91-911">`index` is less than 0 or `count` is less than 0.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="list.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-912">Ordena los elementos de toda la <see cref="T:System.Collections.Generic.List`1" /> utilizando el comparador predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-912">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-913">Este método utiliza el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para el tipo `T` para determinar el orden de los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-913">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="92f91-914">El <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propiedad comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-914">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-915">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-915">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-916">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-916">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-917">Este método usa la <xref:System.Array.Sort%2A?displayProperty=nameWithType> método, que se aplica la ordenación introspectivas como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="92f91-917">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="92f91-918">Si el tamaño de partición es menos de 16 elementos, utiliza un algoritmo de ordenación de inserción.</span><span class="sxs-lookup"><span data-stu-id="92f91-918">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-919">Si el número de particiones superior a 2 registro *n*, donde *n* es el intervalo de la matriz de entrada, utiliza un algoritmo de Heapsort.</span><span class="sxs-lookup"><span data-stu-id="92f91-919">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-920">En caso contrario, utiliza un algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="92f91-920">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="92f91-921">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-921">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92f91-922">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="92f91-922">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="92f91-923">En promedio, este método es una O (*n* registro *n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>; en el peor de los casos es una O (*n* <sup>2</sup>) operación.</span><span class="sxs-lookup"><span data-stu-id="92f91-923">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-924">En el ejemplo siguiente se agrega algunos nombres para un `List<String>` (objeto), muestra la lista sin ordenar, llama a la <xref:System.Collections.Generic.List%601.Sort%2A> (método) y, a continuación, muestra la lista ordenada.</span><span class="sxs-lookup"><span data-stu-id="92f91-924">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="92f91-925">El código siguiente muestra el <xref:System.Collections.Generic.List%601.Sort> y <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> sobrecargas de método en un objeto comercial simple.</span><span class="sxs-lookup"><span data-stu-id="92f91-925">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="92f91-926">Llamar a la <xref:System.Collections.Generic.List%601.Sort> método implica el uso del comparador predeterminado para el tipo de elemento y el <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> método se implementa mediante el uso de un método anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-926">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-927">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-927">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="92f91-928">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-928">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="92f91-929">La lista se muestran, ordenada y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="92f91-929">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="92f91-930">El <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> sobrecarga del método, a continuación, se usa para buscar dos cadenas que no están en la lista, y el <xref:System.Collections.Generic.List%601.Insert%2A> método se usa para insertarlos.</span><span class="sxs-lookup"><span data-stu-id="92f91-930">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="92f91-931">El valor devuelto de la <xref:System.Collections.Generic.List%601.BinarySearch%2A> método es negativo en cada caso, dado que las cadenas no están en la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-931">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="92f91-932">Tomar el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) de este número negativo se produce el índice del primer elemento de la lista que es mayor que la cadena de búsqueda y, a continuación, insertar en esta ubicación conserva la ordenación orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-932">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="92f91-933">La segunda cadena de búsqueda es mayor que cualquier elemento de la lista, por lo que es la posición de inserción al final de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-933">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-934">El comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o de la interfaz <see cref="T:System.IComparable" /> para el tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-934">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="92f91-935">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar al comparar elementos, o <see langword="null" /> para utilizar el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-935">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-936">Ordena los elementos en la <see cref="T:System.Collections.Generic.List`1" /> completa usando el comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-936">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-937">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.Generic.List%601> se ordenan mediante especificado <xref:System.Collections.Generic.IComparer%601> implementación.</span><span class="sxs-lookup"><span data-stu-id="92f91-937">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="92f91-938">Si `comparer` es `null`, el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-938">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-939">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-939">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-940">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-940">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-941">Este método usa la <xref:System.Array.Sort%2A?displayProperty=nameWithType> método, que se aplica la ordenación introspectivas como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="92f91-941">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="92f91-942">Si el tamaño de partición es menos de 16 elementos, utiliza un algoritmo de ordenación de inserción.</span><span class="sxs-lookup"><span data-stu-id="92f91-942">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-943">Si el número de particiones superior a 2 registro *n*, donde *n* es el intervalo de la matriz de entrada, utiliza un algoritmo de Heapsort.</span><span class="sxs-lookup"><span data-stu-id="92f91-943">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-944">En caso contrario, utiliza un algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="92f91-944">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="92f91-945">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-945">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92f91-946">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="92f91-946">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="92f91-947">En promedio, este método es una O (*n* registro *n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>; en el peor de los casos es una O (*n* <sup>2</sup>) operación.</span><span class="sxs-lookup"><span data-stu-id="92f91-947">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-948">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-948">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="92f91-949">En el ejemplo se define un comparador alternativo para las cadenas denominado DinoCompare, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-949">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="92f91-950">El comparador funciona del siguiente modo: en primer lugar, la comparación se comprueba si hay `null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="92f91-950">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="92f91-951">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="92f91-951">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="92f91-952">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="92f91-952">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="92f91-953">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-953">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="92f91-954">Muestra la lista se ordena utilizando al comparador alternativo y se muestran nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-954">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="92f91-955">El <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> , a continuación, se utiliza la sobrecarga del método para buscar varias cadenas que no se en la lista, empleando el comparador alternativo.</span><span class="sxs-lookup"><span data-stu-id="92f91-955">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="92f91-956">El <xref:System.Collections.Generic.List%601.Insert%2A> método se utiliza para insertar las cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-956">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="92f91-957">Estos dos métodos se encuentran en la función denominada `SearchAndInsert`, junto con el código para tomar el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) del número negativo devuelto por <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> y usarlo como un índice para Insertar la nueva cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-957">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-958">
            <paramref name="comparer" /> es <see langword="null" />, y el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o la interfaz <see cref="T:System.IComparable" /> del tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-958">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-959">La implementación de <paramref name="comparer" /> produjo un error durante la ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-959">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="92f91-960">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-960">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; unit" Usage="list.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="92f91-961">
            <see cref="T:System.Comparison`1" /> que se va a utilizar al comparar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-961">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-962">Ordena los elementos de toda la <see cref="T:System.Collections.Generic.List`1" /> utilizando el <see cref="T:System.Comparison`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-962">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-963">Si `comparison` se proporciona, los elementos de la <xref:System.Collections.Generic.List%601> se ordenan mediante el método representado por el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-963">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="92f91-964">Si `comparison` es `null`, un <xref:System.ArgumentNullException> se produce.</span><span class="sxs-lookup"><span data-stu-id="92f91-964">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="92f91-965">Este método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que aplica la ordenación introspectivas como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="92f91-965">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="92f91-966">Si el tamaño de partición es menos de 16 elementos, utiliza un algoritmo de ordenación de inserción</span><span class="sxs-lookup"><span data-stu-id="92f91-966">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="92f91-967">Si el número de particiones superior a 2 registro *n*, donde *n* es el intervalo de la matriz de entrada, utiliza un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="92f91-967">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-968">En caso contrario, utiliza un algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="92f91-968">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="92f91-969">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-969">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92f91-970">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="92f91-970">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="92f91-971">En promedio, este método es una O (*n* registro *n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>; en el peor de los casos es una O (*n* <sup>2</sup>) operación.</span><span class="sxs-lookup"><span data-stu-id="92f91-971">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-972">El código siguiente muestra el <xref:System.Collections.Generic.List%601.Sort%2A> y <xref:System.Collections.Generic.List%601.Sort%2A> sobrecargas de método en un objeto comercial simple.</span><span class="sxs-lookup"><span data-stu-id="92f91-972">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="92f91-973">Llamar a la <xref:System.Collections.Generic.List%601.Sort%2A> método implica el uso del comparador predeterminado para el tipo de elemento y el <xref:System.Collections.Generic.List%601.Sort%2A> método se implementa mediante un método anónimo.</span><span class="sxs-lookup"><span data-stu-id="92f91-973">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-974">En el ejemplo siguiente se muestra el <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-974">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="92f91-975">En el ejemplo se define un método de comparación alternativo para las cadenas, denominado `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="92f91-975">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="92f91-976">Este método funciona del siguiente modo: en primer lugar, la comparación se comprueba si hay `null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="92f91-976">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="92f91-977">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="92f91-977">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="92f91-978">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="92f91-978">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="92f91-979">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con cuatro cadenas, sin ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-979">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="92f91-980">La lista también incluye una cadena vacía y una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="92f91-980">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="92f91-981">La lista se muestra, se ordena usando un <xref:System.Comparison%601> delegado genérico que representa la `CompareDinosByLength` método y vuelve a aparecer.</span><span class="sxs-lookup"><span data-stu-id="92f91-981">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-982">
            <paramref name="comparison" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-982">
              <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-983">La implementación de <paramref name="comparison" /> ha producido un error durante la ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-983">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="92f91-984">Por ejemplo, es posible que <paramref name="comparison" /> no devuelva 0 al comparar un elemento consigo mismo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-984">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <altmember cref="T:System.Comparison`1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-985">Índice inicial de base cero del intervalo que se va a ordenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-985">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92f91-986">Longitud del intervalo que se va a ordenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-986">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92f91-987">Implementación de <see cref="T:System.Collections.Generic.IComparer`1" /> que se va a utilizar al comparar elementos, o <see langword="null" /> para utilizar el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-987">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-988">Ordena los elementos en un intervalo de elementos de la matriz <see cref="T:System.Collections.Generic.List`1" /> usando el comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-988">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-989">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.Generic.List%601> se ordenan mediante especificado <xref:System.Collections.Generic.IComparer%601> implementación.</span><span class="sxs-lookup"><span data-stu-id="92f91-989">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="92f91-990">Si `comparer` es `null`, el comparador predeterminado <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable%601> interfaz genérica y utiliza esa implementación, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="92f91-990">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="92f91-991">Si no es así, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> comprueba si tipo `T` implementa el <xref:System.IComparable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="92f91-991">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="92f91-992">Si tipo `T` no implementa ninguna de estas interfaces, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-992">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-993">Este método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que aplica la ordenación introspectivas como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="92f91-993">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="92f91-994">Si el tamaño de partición es menos de 16 elementos, utiliza un algoritmo de ordenación de inserción</span><span class="sxs-lookup"><span data-stu-id="92f91-994">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="92f91-995">Si el número de particiones superior a 2 registro *n*, donde *n* es el intervalo de la matriz de entrada, utiliza un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="92f91-995">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="92f91-996">En caso contrario, utiliza un algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="92f91-996">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="92f91-997">Esta implementación realiza a una ordenación inestable; es decir, si dos elementos son iguales, puede que no se conserve su orden.</span><span class="sxs-lookup"><span data-stu-id="92f91-997">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92f91-998">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="92f91-998">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="92f91-999">En promedio, este método es una O (*n* registro *n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>; en el peor de los casos es una O (*n* <sup>2</sup>) operación.</span><span class="sxs-lookup"><span data-stu-id="92f91-999">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-1000">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método y el <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="92f91-1000">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="92f91-1001">En el ejemplo se define un comparador alternativo para las cadenas denominado DinoCompare, que implementa el `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` en Visual C++) interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="92f91-1001">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="92f91-1002">El comparador funciona del siguiente modo: en primer lugar, la comparación se comprueba si hay `null`, y una referencia nula es tratada como menor que un valor no nulo.</span><span class="sxs-lookup"><span data-stu-id="92f91-1002">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="92f91-1003">En segundo lugar, se comparan las longitudes de cadena y la cadena más larga se considera mayor.</span><span class="sxs-lookup"><span data-stu-id="92f91-1003">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="92f91-1004">En tercer lugar, si las longitudes son iguales, se usa la comparación de cadenas normales.</span><span class="sxs-lookup"><span data-stu-id="92f91-1004">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="92f91-1005">Un <xref:System.Collections.Generic.List%601> de cadenas se crean y rellenan con los nombres de cinco dinosaurios herbívoros y tres dinosaurios carnívoros.</span><span class="sxs-lookup"><span data-stu-id="92f91-1005">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="92f91-1006">Dentro de cada uno de los dos grupos, los nombres no están en ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="92f91-1006">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="92f91-1007">Se muestra la lista, se ordena el intervalo de herbívoros utilizando al comparador alternativo y se muestra la lista de nuevo.</span><span class="sxs-lookup"><span data-stu-id="92f91-1007">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="92f91-1008">El <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> , a continuación, se utiliza la sobrecarga del método para buscar sólo el intervalo de herbívoros "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-1008">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="92f91-1009">No se encuentra la cadena y el complemento bit a bit (el ~ operador en C# y Visual C++, `Xor` -1 en Visual Basic) del número negativo devuelto por la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método se utiliza como un índice para insertar la nueva cadena.</span><span class="sxs-lookup"><span data-stu-id="92f91-1009">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-1010">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1010">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="92f91-1011">-o bien- <paramref name="count" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1011">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1012">
            <paramref name="index" /> y <paramref name="count" /> no especifican un intervalo válido en <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1012">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="92f91-1013">-o bien- La implementación de <paramref name="comparer" /> ha producido un error durante la ordenación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1013">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="92f91-1014">Por ejemplo, es posible que <paramref name="comparer" /> no devuelva 0 al comparar un elemento consigo mismo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1014">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92f91-1015">
            <paramref name="comparer" /> es <see langword="null" />, y el comparador predeterminado <see cref="P:System.Collections.Generic.Comparer`1.Default" /> no puede encontrar una implementación de la interfaz genérica <see cref="T:System.IComparable`1" /> o la interfaz <see cref="T:System.IComparable" /> del tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1015">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1016">Obtiene un valor que indica si <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1016">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1017">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1017">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-1018">En la implementación predeterminada de <see cref="T:System.Collections.Generic.List`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1018">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1019">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="92f91-1019">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="92f91-1020">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="92f91-1020">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92f91-1021">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1021">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1022">Devuelve un enumerador que recorre en iteración una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1022">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1023">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> que se puede utilizar para recorrer en iteración la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1023">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1024">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="92f91-1024">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="92f91-1025">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="92f91-1025">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="92f91-1026">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="92f91-1026">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="92f91-1027">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-1027">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="92f91-1028">En esta posición, el <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="92f91-1028">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="92f91-1029">Por lo tanto, debe llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1029">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="92f91-1030">El <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propiedad devuelve el mismo objeto hasta que <xref:System.Collections.IEnumerator.MoveNext%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="92f91-1030">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="92f91-1031"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-1031"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="92f91-1032">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-1032">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="92f91-1033">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-1033">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="92f91-1034">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="92f91-1034">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="92f91-1035">No puede volver a establecer la propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="92f91-1035">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="92f91-1036">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="92f91-1036">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="92f91-1037">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1037">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-1038">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1038">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92f91-1039">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="92f91-1039">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92f91-1040">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="92f91-1040">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92f91-1041">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="92f91-1041">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="92f91-1042">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1042">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="92f91-1043">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1043">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="92f91-1044">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1044">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="92f91-1045">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1045">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1046">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1046">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="92f91-1047">Si el tipo del origen de <xref:System.Collections.ICollection> no puede convertirse automáticamente al tipo del destino de `array`, las implementaciones no genéricas de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, mientras que las implementaciones genéricas inician <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1047">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="92f91-1048">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1048">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-1049">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1049">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-1050">
            <paramref name="arrayIndex" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1050">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1051">
            <paramref name="array" /> es multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1051">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="92f91-1052">-o bien- <paramref name="array" /> no tiene índices basados en cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1052">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="92f91-1053">-o bien- El número de elementos de la colección <see cref="T:System.Collections.ICollection" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final del parámetro <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1053">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="92f91-1054">-o bien- El tipo de la colección <see cref="T:System.Collections.ICollection" /> de origen no puede convertirse automáticamente al tipo del parámetro <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1054">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1055">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1055">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1056">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1056">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-1057">En la implementación predeterminada de <see cref="T:System.Collections.Generic.List`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1057">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1058">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="92f91-1058">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="92f91-1059">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1059">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="92f91-1060">En el caso excepcional donde enumeración sostiene con accesos de escritura, puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="92f91-1060">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92f91-1061">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="92f91-1061">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92f91-1062"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1062"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="92f91-1063">La sincronización es efectiva sólo si todos los subprocesos bloquean este objeto antes de obtener acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-1063">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="92f91-1064">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1064">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1065">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1065">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1066">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1066">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="92f91-1067">En la implementación predeterminada de <see cref="T:System.Collections.Generic.List`1" />, esta propiedad siempre devuelve la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1067">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1068">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="92f91-1068">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="92f91-1069">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1069">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="92f91-1070">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="92f91-1070">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92f91-1071">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="92f91-1071">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92f91-1072"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1072"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="92f91-1073">La sincronización es efectiva sólo si todos los subprocesos bloquean este objeto antes de obtener acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-1073">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="92f91-1074">El código siguiente muestra el uso de la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad para C#, C++ y Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="92f91-1074">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="92f91-1075">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1075">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1076">Devuelve un enumerador que recorre en iteración una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1076">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1077">
            <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1077">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1078">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="92f91-1078">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="92f91-1079">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="92f91-1079">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="92f91-1080">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="92f91-1080">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="92f91-1081">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-1081">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="92f91-1082"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="92f91-1082"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="92f91-1083">En esta posición, el <xref:System.Collections.IEnumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="92f91-1083">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="92f91-1084">Por lo tanto, debe llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1084">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="92f91-1085">El <xref:System.Collections.IEnumerator.Current%2A> propiedad devuelve el mismo objeto hasta que <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="92f91-1085">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="92f91-1086"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-1086"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="92f91-1087">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-1087">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="92f91-1088">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-1088">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="92f91-1089">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="92f91-1089">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92f91-1090">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1090">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="92f91-1091">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="92f91-1091">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="92f91-1092">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1092">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92f91-1093">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1093">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="92f91-1094">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="92f91-1094">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92f91-1095">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="92f91-1095">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92f91-1096">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="92f91-1096">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="92f91-1097">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1097">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-1098">
            <see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1098">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1099">Agrega un elemento a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1099">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1100">Posición en la que se insertó el nuevo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1100">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1101">Si <xref:System.Collections.Generic.List%601.Count%2A> es menor que <xref:System.Collections.Generic.List%601.Capacity%2A>, este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1101">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="92f91-1102">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1102">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1103">
            <paramref name="item" /> es de un tipo que no se puede asignar a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1103">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-1104">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1104">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1105">Determina si <see cref="T:System.Collections.IList" /> contiene un valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1105">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1106">
            <see langword="true" /> si <paramref name="item" /> se encuentra en la matriz <see cref="T:System.Collections.IList" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1106">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1107">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-1107">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-1108">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1108">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-1109">Objeto que se va a buscar en <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1109">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1110">Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1110">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1111">Devuelve el índice de <paramref name="item" /> si se encuentra en la lista; en caso contrario, devuelve -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1111">The index of <paramref name="item" /> if found in the list; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1112">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-1112">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-1113">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1113">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1114">
            <paramref name="item" /> es de un tipo que no se puede asignar a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1114">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-1115">Índice de base cero donde debe insertarse <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1115">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="92f91-1116">Objeto que se va a insertar en <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1116">The object to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1117">Inserta un elemento en la interfaz <see cref="T:System.Collections.IList" />, en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1117">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1118">Si `index` es igual al número de elementos de <xref:System.Collections.IList>, entonces `item` se agrega al final.</span><span class="sxs-lookup"><span data-stu-id="92f91-1118">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="92f91-1119">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1119">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-1120">
            <paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1120">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1121">
            <paramref name="item" /> es de un tipo que no se puede asignar a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1121">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1122">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1122">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1123">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1123">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-1124">En la implementación predeterminada de <see cref="T:System.Collections.Generic.List`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1124">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1125">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="92f91-1125">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="92f91-1126">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="92f91-1126">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92f91-1127">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1127">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1128">Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1128">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1129">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1129">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-1130">En la implementación predeterminada de <see cref="T:System.Collections.Generic.List`1" />, esta propiedad siempre devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1130">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1131">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="92f91-1131">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="92f91-1132">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="92f91-1132">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92f91-1133">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1133">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92f91-1134">Índice de base cero del elemento que se va a obtener o establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1134">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1135">Obtiene o establece el elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1135">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92f91-1136">Elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1136">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1137">El lenguaje C# utiliza el [esto](~/docs/csharp/language-reference/keywords/this.md) palabra clave para definir los indizadores en lugar de implementar la <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92f91-1137">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="92f91-1138">Visual Basic implementa <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="92f91-1138">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="92f91-1139">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="92f91-1139">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92f91-1140">
            <paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1140">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1141">La propiedad ya está establecida y el tipo de <paramref name="value" /> no se puede asignar a la interfaz <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1141">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92f91-1142">Objeto que se va a quitar de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1142">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1143">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1143">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1144">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-1144">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="92f91-1145">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1145">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92f91-1146">
            <paramref name="item" /> es de un tipo que no se puede asignar a <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1146">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="list.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1147">Copia los elementos de <see cref="T:System.Collections.Generic.List`1" /> en una nueva matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1147">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1148">Matriz que contiene copias de los elementos de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1148">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1149">Los elementos se copian utilizando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1149">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="92f91-1150">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1150">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-1151">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.ToArray%2A> método y otros métodos de la <xref:System.Collections.Generic.List%601> clase que operan en intervalos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1151">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="92f91-1152">Al final del ejemplo, el <xref:System.Collections.Generic.List%601.GetRange%2A> método se usa para obtener tres elementos de la lista, a partir de la posición de índice 2.</span><span class="sxs-lookup"><span data-stu-id="92f91-1152">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="92f91-1153">El <xref:System.Collections.Generic.List%601.ToArray%2A> método se llama en el cuadro <xref:System.Collections.Generic.List%601>, creación de una matriz de tres elementos.</span><span class="sxs-lookup"><span data-stu-id="92f91-1153">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="92f91-1154">Se muestran los elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="92f91-1154">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="list.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92f91-1155">Establece la capacidad en el número real de elementos que hay en <see cref="T:System.Collections.Generic.List`1" />, si dicho número es inferior a un valor umbral.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1155">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1156">Este método se puede utilizar para minimizar la sobrecarga de memoria de la colección si ningún elemento nuevo se agregará a la colección.</span><span class="sxs-lookup"><span data-stu-id="92f91-1156">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="92f91-1157">El costo de reasignar y copiar una gran <xref:System.Collections.Generic.List%601> puede ser considerable, sin embargo, por lo que el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método no hace nada si la lista está en más del 90 por ciento de capacidad.</span><span class="sxs-lookup"><span data-stu-id="92f91-1157">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="92f91-1158">Esto evita incurrir en un gran costo de reasignación para lograr una mejora relativamente pequeño.</span><span class="sxs-lookup"><span data-stu-id="92f91-1158">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-1159">El umbral actual del 90 por ciento puede cambiar en futuras versiones.</span><span class="sxs-lookup"><span data-stu-id="92f91-1159">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="92f91-1160">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1160">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="92f91-1161">Para restablecer un <xref:System.Collections.Generic.List%601> a su estado inicial, llame a la <xref:System.Collections.Generic.List%601.Clear%2A> método antes de llamar a la <xref:System.Collections.Generic.List%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-1161">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="92f91-1162">Recortar vacío <xref:System.Collections.Generic.List%601> establece la capacidad de la <xref:System.Collections.Generic.List%601> en la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="92f91-1162">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="92f91-1163">La capacidad también puede establecerse utilizando el <xref:System.Collections.Generic.List%601.Capacity%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="92f91-1163">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-1164">En el ejemplo siguiente se muestra cómo comprobar la capacidad y el recuento de un <xref:System.Collections.Generic.List%601> que contiene un objeto comercial simple y se muestra cómo utilizar el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para quitar una capacidad adicional.</span><span class="sxs-lookup"><span data-stu-id="92f91-1164">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="92f91-1165">En el ejemplo siguiente se muestra el <xref:System.Collections.Generic.List%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="92f91-1165">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="92f91-1166">Varias propiedades y métodos de la <xref:System.Collections.Generic.List%601> clase se utiliza para agregar, insertar y quitar elementos de una lista de cadenas.</span><span class="sxs-lookup"><span data-stu-id="92f91-1166">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="92f91-1167">La <xref:System.Collections.Generic.List%601.TrimExcess%2A> método se usa para reducir la capacidad para que coincida con el recuento y el <xref:System.Collections.Generic.List%601.Capacity%2A> y <xref:System.Collections.Generic.List%601.Count%2A> se muestran las propiedades.</span><span class="sxs-lookup"><span data-stu-id="92f91-1167">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="92f91-1168">Si la capacidad no utilizada hubiera sido menor que el 10 por ciento de la capacidad total, la lista no habría cambió de tamaño.</span><span class="sxs-lookup"><span data-stu-id="92f91-1168">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="92f91-1169">Por último, se borra el contenido de la lista.</span><span class="sxs-lookup"><span data-stu-id="92f91-1169">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.TrueForAll : Predicate&lt;'T&gt; -&gt; bool" Usage="list.TrueForAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="92f91-1170">Delegado <see cref="T:System.Predicate`1" /> que define las condiciones que los elementos deben cumplir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1170">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92f91-1171">Determina si cada elemento de <see cref="T:System.Collections.Generic.List`1" /> cumple las condiciones que define el predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1171">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92f91-1172">Es <see langword="true" /> si cada elemento de <see cref="T:System.Collections.Generic.List`1" /> cumple las condiciones definidas por el predicado especificado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1172">
              <see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92f91-1173">Si la lista no tiene ningún elemento, el valor devuelto es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1173">If the list has no elements, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92f91-1174">El <xref:System.Predicate%601> es un delegado a un método que devuelve `true` si el objeto pasado a coincide con las condiciones definidas en el delegado.</span><span class="sxs-lookup"><span data-stu-id="92f91-1174">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="92f91-1175">Los elementos del elemento actual <xref:System.Collections.Generic.List%601> se pasan individualmente a la <xref:System.Predicate%601> delegado y el procesamiento se detiene cuando el delegado devuelve `false` para cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="92f91-1175">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="92f91-1176">Los elementos se procesan en orden y todas las llamadas se realizan en un solo subproceso.</span><span class="sxs-lookup"><span data-stu-id="92f91-1176">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="92f91-1177">Este método es una O (*n*) operación, donde *n* es <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92f91-1177">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92f91-1178">En el ejemplo siguiente se muestra la <xref:System.Collections.Generic.List%601.TrueForAll%2A> (método) y otros métodos que usan <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="92f91-1178">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="92f91-1179">Un <xref:System.Collections.Generic.List%601> de cadenas se crea, que contiene 8 nombres de dinosaurio, dos de los cuales (en las posiciones 1 y 5) terminan en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-1179">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="92f91-1180">El ejemplo también define un método de predicado de búsqueda denominado `EndsWithSaurus`, que acepta un parámetro de cadena y devuelve un valor booleano de valor que indica si la cadena de entrada termina en "saurus".</span><span class="sxs-lookup"><span data-stu-id="92f91-1180">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="92f91-1181">El <xref:System.Collections.Generic.List%601.TrueForAll%2A> método recorre la lista desde el principio, pasando cada elemento a su vez a la `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="92f91-1181">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="92f91-1182">La búsqueda detiene cuando la `EndsWithSaurus` método `false`.</span><span class="sxs-lookup"><span data-stu-id="92f91-1182">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92f91-1183">En C# y Visual Basic, no es necesario crear la `Predicate<string>` delegar (`Predicate(Of String)` en Visual Basic) explícitamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-1183">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="92f91-1184">Estos lenguajes deducen al delegado correcto del contexto y lo crean automáticamente.</span><span class="sxs-lookup"><span data-stu-id="92f91-1184">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92f91-1185">
            <paramref name="match" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92f91-1185">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>