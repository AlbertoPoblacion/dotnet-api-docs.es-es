<Type Name="SortedSet&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.SortedSet&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2489151c9133a8559cb454d71c94a0cfe6f0638" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct SortedSet&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit SortedSet`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedSet`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure SortedSet(Of T).Enumerator&#xA;Implements IDeserializationCallback, IEnumerator(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class SortedSet&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8fec7-101">Enumera los elementos de un objeto <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8fec7-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fec7-102">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="8fec7-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="8fec7-103">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="8fec7-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8fec7-104"><xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="8fec7-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="8fec7-105">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="8fec7-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="8fec7-106">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un`try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="8fec7-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="8fec7-107">Para deshacerse de él indirectamente, use una construcción de lenguaje como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8fec7-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="8fec7-108">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="8fec7-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="8fec7-109">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="8fec7-109">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8fec7-110">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="8fec7-110">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8fec7-111">En esta posición, el <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="8fec7-111">At this position, the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="8fec7-112">Por lo tanto, debe llamar a la <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="8fec7-112">Therefore, you must call the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8fec7-113"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="8fec7-113"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="8fec7-114"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="8fec7-114"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8fec7-115">Si <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="8fec7-115">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8fec7-116">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="8fec7-116">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8fec7-117">Si la última llamada a <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="8fec7-117">If the last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8fec7-118">No se puede establecer <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> hasta el primer elemento de la colección de nuevo; debe crear un nuevo objeto de enumerador en su lugar.</span><span class="sxs-lookup"><span data-stu-id="8fec7-118">You cannot set <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="8fec7-119">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="8fec7-119">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8fec7-120">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="8fec7-120">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8fec7-121">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="8fec7-121">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8fec7-122">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="8fec7-122">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="8fec7-123">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="8fec7-123">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="8fec7-124">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="8fec7-124">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fec7-125">Obtiene el elemento en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-125">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fec7-126">Elemento de la colección en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-126">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fec7-127">Después de crea un enumerador o después de la <xref:System.Collections.IEnumerator.Reset%2A> método se llama, el <xref:System.Collections.IEnumerator.MoveNext%2A> método debe llamarse para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de la <xref:System.Collections.IEnumerator.Current%2A> propiedad; en caso contrario, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="8fec7-127">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IEnumerator.Current%2A> property; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="8fec7-128"><xref:System.Collections.IEnumerator.Current%2A> también produce una excepción si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="8fec7-128"><xref:System.Collections.IEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="8fec7-129"><xref:System.Collections.IEnumerator.Current%2A> no mueve la posición del enumerador y las llamadas consecutivas a <xref:System.Collections.IEnumerator.Current%2A> devuelven el mismo objeto hasta que <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="8fec7-129"><xref:System.Collections.IEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IEnumerator.Current%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="8fec7-130">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="8fec7-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8fec7-131">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8fec7-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8fec7-132">Si la colección se modifica entre llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> método y obtener el valor de la <xref:System.Collections.IEnumerator.Current%2A> propiedad, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="8fec7-132">If the collection is modified between calling <xref:System.Collections.IEnumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.IEnumerator.Current%2A> property, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fec7-133">Libera todos los recursos que usa <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-133">Releases all resources used by the <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fec7-134">Desplaza el enumerador al siguiente elemento de la colección <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-134">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8fec7-135">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-135">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fec7-136">Después de crea un enumerador, el enumerador se coloca antes del primer elemento de la colección y la primera llamada a la <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> método desplaza el enumerador hasta el primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="8fec7-136">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="8fec7-137">Si <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="8fec7-137">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8fec7-138">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="8fec7-138">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="8fec7-139">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="8fec7-139">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8fec7-140">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador se invalida definitivamente.</span><span class="sxs-lookup"><span data-stu-id="8fec7-140">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fec7-141">La colección se modificó después de que el enumerador se creara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-141">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8fec7-142">Obtiene el elemento en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-142">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8fec7-143">Elemento de la colección en la posición actual del enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-143">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fec7-144">Después de crea un enumerador o después de un <xref:System.Collections.IEnumerator.Reset%2A> se llama, <xref:System.Collections.IEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>; en caso contrario, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="8fec7-144">After an enumerator is created or after a <xref:System.Collections.IEnumerator.Reset%2A> is called, <xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="8fec7-145"><xref:System.Collections.IEnumerator.Current%2A> también produce una excepción si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="8fec7-145"><xref:System.Collections.IEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="8fec7-146"><xref:System.Collections.IEnumerator.Current%2A> no mueve la posición del enumerador y las llamadas consecutivas a <xref:System.Collections.IEnumerator.Current%2A> devuelven el mismo objeto hasta que <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="8fec7-146"><xref:System.Collections.IEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IEnumerator.Current%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="8fec7-147">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="8fec7-147">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8fec7-148">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8fec7-148">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8fec7-149">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="8fec7-149">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fec7-150">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-150">The enumerator is positioned before the first element of the collection or after the last element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8fec7-151">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-151">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fec7-152">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="8fec7-152">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8fec7-153">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8fec7-153">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8fec7-154">La colección se modificó después de que el enumerador se creara.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-154">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="8fec7-155">Origen del evento de deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-155">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fec7-156">Implementa la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" /> y genera el evento de deserialización cuando esta ha finalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-156">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="8fec7-157">El objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> asociado a la instancia de <see cref="T:System.Collections.Generic.SortedSet`1" /> actual no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-157">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="8fec7-158">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información requerida para serializar la instancia de <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-158">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8fec7-159">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la instancia de la <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-159">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8fec7-160">Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar la instancia de <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-160">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8fec7-161">
            <paramref name="info" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8fec7-161">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>