<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Queue`1+Enumerator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">037e736f-f76f-422a-bcb7-5d2d599f851d0a1fa3138f24b1798f487d83adc1015524d3fd0c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a1fa3138f24b1798f487d83adc1015524d3fd0c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc53860cd2661bb7bde6e4b2858fcda4ec4c889</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Enumerates the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Enumera los elementos de un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">En esta posición, el valor de propiedad <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> está sin definir.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">No puede volver a establecer la propiedad <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la colección se modifica entre llamar a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método y obtener el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> propiedad, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Queue`1.Enumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Las implementaciones de las recopilaciones predeterminadas <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Obtiene el elemento en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>The element in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> at the current position of the enumerator.</source>
          <target state="translated">Elemento de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph> en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> produce una <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> en cualquiera de las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>The enumerator is positioned before the first element of the collection.</source>
          <target state="translated">El enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>That happens after an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Esto ocurre después de crea un enumerador o después de la <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método debe llamarse para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</source>
          <target state="translated">La última llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, lo que indica el final de la colección y que el enumerador se coloca después del último elemento de la colección.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> no mueve la posición del enumerador y las llamadas consecutivas a <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> devuelven el mismo objeto hasta que <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Si la colección se modifica entre llamar a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método y obtener el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> propiedad, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> devuelve el elemento que está establecido, aunque el enumerador queda invalidado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Enumerator.Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1.Enumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</source>
          <target state="translated">Desplaza el enumerador al siguiente elemento de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Queue`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el enumerador avanzó con éxito hasta el siguiente elemento; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el enumerador alcanzó el final de la colección.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> advances the enumerator to the first element of the collection.</source>
          <target state="translated">Después de crea un enumerador, el enumerador se coloca antes del primer elemento de la colección y la primera llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> desplaza el enumerador hasta el primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Si la colección se modifica entre llamar a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método y obtener el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> propiedad, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A&gt;</ph> devuelve el elemento que está establecido, aunque el enumerador queda invalidado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La colección se modificó después de que el enumerador se creara.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">Obtiene el elemento en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The element in the collection at the current position of the enumerator.</source>
          <target state="translated">Elemento de la colección en la posición actual del enumerador.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> produce una <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> en cualquiera de las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection.</source>
          <target state="translated">El enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>That happens after an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">Esto ocurre después de crea un enumerador o después de la <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método debe llamarse para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</source>
          <target state="translated">La última llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, lo que indica el final de la colección y que el enumerador se coloca después del último elemento de la colección.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> no mueve la posición del enumerador y las llamadas consecutivas a <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> devuelven el mismo objeto hasta que <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph4">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">Si la colección se modifica entre llamar a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> método y obtener el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> propiedad, <ph id="ph3">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> devuelve el elemento que está establecido, aunque el enumerador queda invalidado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La colección se modificó después de que el enumerador se creara.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>