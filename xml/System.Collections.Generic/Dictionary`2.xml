<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Dictionary`2.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac501d6c6007f8665d72bc06b2e847e42b64121d593.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01d6c6007f8665d72bc06b2e847e42b64121d593</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">Tipo de las claves del diccionario.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">Tipo de los valores del diccionario.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Represents a collection of keys and values.</source>
          <target state="translated">Representa una colección de claves y valores.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class provides a mapping from a set of keys to a set of values.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase genérica proporciona una asignación de un conjunto de claves a un conjunto de valores.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Each addition to the dictionary consists of a value and its associated key.</source>
          <target state="translated">Cada adición al diccionario consta de un valor y de su clave asociada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Retrieving a value by using its key is very fast, close to O(1), because the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class is implemented as a hash table.</source>
          <target state="translated">Recuperar un valor utilizando su clave es muy rápido, cerrar o (1), porque la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase se implementa como una tabla hash.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The speed of retrieval depends on the quality of the hashing algorithm of the type specified for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">La velocidad de recuperación depende de la calidad del algoritmo hash del tipo especificado para <ph id="ph1">`TKey`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As long as an object is used as a key in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, it must not change in any way that affects its hash value.</source>
          <target state="translated">Siempre que un objeto se usa como clave en el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, no debe cambiar de manera que afecta a su valor de hash.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the dictionary's equality comparer.</source>
          <target state="translated">Todas las claves de una <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el comparador de igualdad del diccionario.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">No puede ser una clave <ph id="ph1">`null`</ph>, pero un valor valor puede ser, si el tipo de valor <ph id="ph2">`TValue`</ph> es un tipo de referencia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify an implementation, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">Puede especificar una implementación de la <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz genérica mediante un constructor que acepta un <ph id="ph2">`comparer`</ph> parámetro; si no se especifica una implementación, el comparador de igualdad genérico predeterminado <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> se utiliza.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example, you can use the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Por ejemplo, puede utilizar los comparadores de cadenas entre mayúsculas y minúsculas proporcionados por la <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> clase para crear diccionarios con claves de cadena entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can hold.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es el número de elementos de la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> puede contener.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Para un gran <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> objetos, puede aumentar la capacidad máxima de 2 millones de elementos en un sistema de 64 bits estableciendo la <ph id="ph2">`enabled`</ph> atributo del elemento de configuración para <ph id="ph3">`true`</ph> en el entorno de tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For purposes of enumeration, each item in the dictionary is treated as a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fines de enumeración, cada elemento del diccionario se trata como un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estructura que representa un valor y su clave.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The order in which the items are returned is undefined.</source>
          <target state="translated">El orden en que se devuelven los elementos es indefinido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Since the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a collection of keys and values, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Puesto que la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es una colección de claves y valores, el tipo de elemento no es el tipo de la clave o el tipo del valor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Instead, the element type is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> of the key type and the value type.</source>
          <target state="translated">En su lugar, el tipo de elemento es un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> del tipo de clave y el tipo de valor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción es un contenedor del enumerador, que sólo permite la lectura de la colección, no escribir en él.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Dado que las claves se pueden heredar y su comportamiento puede cambiar, no se puede garantizar su unicidad absoluta mediante comparaciones utilizando el <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">En el ejemplo de código siguiente se crea vacío <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> de cadenas con claves de cadena y usa el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método para agregar algunos elementos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">El ejemplo muestra que la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método produce un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> al intentar agregar una clave duplicada.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">El ejemplo se utiliza la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad (el indizador en C#) para recuperar valores, lo que indica que un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> se produce cuando una clave solicitada no está presente y que muestra que el valor asociado a una clave se puede reemplazar.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> método como una forma más eficaz para recuperar valores si un programa debe probar con frecuencia valores de clave que no están en el diccionario, y muestra cómo utilizar el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> método para comprobar si existe una clave antes de llamar a la <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo se muestra cómo enumerar las claves y valores del diccionario y cómo enumerar las claves y valores por sí solo mediante la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> propiedad y el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Finally, the example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Por último, el ejemplo se muestra la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> puede admitir varios sistemas de lectura al mismo tiempo, siempre y cuando no se modifica la colección.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Aun así, enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</source>
          <target state="translated">En el caso poco frecuente que una enumeración sostiene con accesos de escritura, se debe bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For thread-safe alternatives, see the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class or <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Para alternativas de subprocesos, consulte la <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> clase o <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Estático público (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) miembros de este tipo son seguros para subprocesos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que está vacía, tiene la capacidad inicial predeterminada y utiliza el comparador de igualdad predeterminado para el tipo de clave.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Todas las claves de una <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el comparador de igualdad predeterminado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Como alternativa, puede especificar una implementación de la <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz genérica mediante un constructor que acepta un <ph id="ph2">`comparer`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Si puede calcular el tamaño de la colección, utilizando un constructor que especifica la capacidad inicial, elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">En el ejemplo de código siguiente se crea vacío <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> de cadenas con claves de cadena y usa el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método para agregar algunos elementos.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">El ejemplo muestra que la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método produce un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> al intentar agregar una clave duplicada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> cuyos elementos se copian en el nuevo <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the default equality comparer for the key type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que contiene los elementos copiados de la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> especificada y utiliza el comparador de igualdad predeterminado para el tipo de clave.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the default equality comparer.</source>
          <target state="translated">Todas las claves de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el valor predeterminado comparador de igualdad; Asimismo, todas las claves en el origen de <ph id="ph2">`dictionary`</ph> también debe ser única según el comparador de igualdad predeterminado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">La capacidad inicial del nuevo <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es lo suficientemente grande como para contener todos los elementos de <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Como alternativa, puede especificar una implementación de la <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz genérica mediante un constructor que acepta un <ph id="ph2">`comparer`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de elementos de <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with sorted content from another dictionary.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> un constructor para inicializar una <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con ordena el contenido de otro diccionario.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">El ejemplo de código se crea un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> y lo rellena con datos en un orden aleatorio, a continuación, pasa el <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> a la <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, crear un <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> que está ordenada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Esto es útil si tiene que crear un diccionario ordenado que en algún momento se convierte en estático; copiar los datos de un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> a una <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> mejora la velocidad de recuperación.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contiene una o varias claves duplicadas.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementación de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se va a utilizar para comparar claves o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si se va a utilizar el <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predeterminado para el tipo de la clave.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que está vacía, tiene la capacidad inicial predeterminada y utiliza la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilice este constructor con los comparadores de cadenas entre mayúsculas y minúsculas proporcionados por la <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> clase para crear diccionarios con claves de cadena entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Todas las claves de una <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el comparador especificado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`comparer`</ph> es <ph id="ph2">`null`</ph>, este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Si puede calcular el tamaño de la colección, utilizando un constructor que especifica la capacidad inicial, elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con un comparador de igualdad entre mayúsculas y minúsculas para la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">El ejemplo agrega cuatro elementos, algunos con claves en minúsculas y otros con claves en mayúsculas.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">El ejemplo se intenta agregar un elemento con una clave que solo se diferencia de una clave existente por caso, detecta la excepción resultante y muestra un mensaje de error.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Por último, en el ejemplo se muestra los elementos en el diccionario.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Número inicial de elementos que puede contener la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que está vacía, tiene la capacidad inicial especificada y utiliza el comparador de igualdad predeterminado para el tipo de clave.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Todas las claves de una <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el comparador de igualdad predeterminado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es el número de elementos que pueden agregarse a la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> antes de que sea necesario cambiar el tamaño.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Como alternativa, puede especificar una implementación de la <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz genérica mediante un constructor que acepta un <ph id="ph2">`comparer`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The following code example creates a dictionary with an initial capacity of 4 and populates it with 4 entries.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un diccionario con una capacidad inicial de 4 y lo rellena con 4 entradas.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> cuyos elementos se copian en el nuevo <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementación de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se va a utilizar para comparar claves o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si se va a utilizar el <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predeterminado para el tipo de la clave.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que contiene los elementos copiados de la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> especificada y utiliza la interfaz <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilice este constructor con los comparadores de cadenas entre mayúsculas y minúsculas proporcionados por la <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> clase para crear diccionarios con claves de cadena entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the specified comparer.</source>
          <target state="translated">Todas las claves de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> deben ser únicas conforme especificado comparador; Asimismo, todas las claves en el origen de <ph id="ph2">`dictionary`</ph> también debe ser única según el comparador especificado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>For example, duplicate keys can occur if <ph id="ph1">`comparer`</ph> is one of the case-insensitive string comparers provided by the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class and <ph id="ph3">`dictionary`</ph> does not use a case-insensitive comparer key.</source>
          <target state="translated">Por ejemplo, pueden producirse claves duplicadas si <ph id="ph1">`comparer`</ph> es uno de los comparadores de cadenas entre mayúsculas y minúsculas proporcionados por la <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> clase y <ph id="ph3">`dictionary`</ph> no usa una clave de comparador entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">La capacidad inicial del nuevo <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es lo suficientemente grande como para contener todos los elementos de <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`comparer`</ph> es <ph id="ph2">`null`</ph>, este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de elementos de <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with case-insensitive sorted content from another dictionary.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> un constructor para inicializar una <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con contenido ordenado entre mayúsculas y minúsculas de otro diccionario.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> with a case-insensitive comparer and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, along with a case-insensitive equality comparer, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">El ejemplo de código se crea un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> con un comparador entre mayúsculas y minúsculas y lo rellena con datos en un orden aleatorio, a continuación, pasa el <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> a la <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, junto con un comparador de igualdad entre mayúsculas y minúsculas, crear un <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> que se ordena.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Esto es útil si tiene que crear un diccionario ordenado que en algún momento se convierte en estático; copiar los datos de un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> a una <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> mejora la velocidad de recuperación.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>When you create a new dictionary with a case-insensitive comparer and populate it with entries from a dictionary that uses a case-sensitive comparer, as in this example, an exception occurs if the input dictionary has keys that differ only by case.</source>
          <target state="translated">Cuando se crea un nuevo diccionario con un comparador entre mayúsculas y minúsculas y rellenarla con las entradas de un diccionario que usa a un comparador entre mayúsculas y minúsculas, como en este ejemplo, se produce una excepción si el diccionario de entrada tiene claves que se diferencian sólo por mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contiene una o varias claves duplicadas.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Número inicial de elementos que puede contener la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Implementación de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se va a utilizar para comparar claves o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si se va a utilizar el <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> predeterminado para el tipo de la clave.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> que está vacía, tiene la capacidad inicial especificada y utiliza el <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Utilice este constructor con los comparadores de cadenas entre mayúsculas y minúsculas proporcionados por la <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> clase para crear diccionarios con claves de cadena entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Todas las claves de una <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> debe ser única según el comparador especificado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es el número de elementos que pueden agregarse a la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> antes de que sea necesario cambiar el tamaño.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Cuando se agregan elementos a un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`comparer`</ph> es <ph id="ph2">`null`</ph>, este constructor utiliza el comparador de igualdad genérico predeterminado, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Si tipo <ph id="ph1">`TKey`</ph> implementa el <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, el comparador de igualdad predeterminado utiliza esa implementación.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with an initial capacity of 5 and a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> con una capacidad inicial de 5 y un comparador de igualdad entre mayúsculas y minúsculas para la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">El ejemplo agrega cuatro elementos, algunos con claves en minúsculas y otros con claves en mayúsculas.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">El ejemplo se intenta agregar un elemento con una clave que solo se diferencia de una clave existente por caso, detecta la excepción resultante y muestra un mensaje de error.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Por último, en el ejemplo se muestra los elementos en el diccionario.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene la información necesaria para serializar el <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino de la secuencia serializada asociada a la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> con datos serializados.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object transmitted over a stream.</source>
          <target state="translated">Se llama a este constructor durante la deserialización para reconstituir el objeto transmitido en una secuencia.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serialización XML y SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">Clave del elemento que se va a agregar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">Valor del elemento que se va a agregar.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Agrega la clave y el valor especificados al diccionario.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>; for example, <ph id="ph3">`myCollection[myKey] = myValue`</ph> (in Visual Basic, <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>; por ejemplo, <ph id="ph3">`myCollection[myKey] = myValue`</ph> (en Visual Basic, <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Sin embargo, si la clave especificada ya existe en el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, y establece el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad sobrescribe el valor anterior.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an exception if a value with the specified key already exists.</source>
          <target state="translated">En cambio, la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método produce una excepción si ya existe un valor con la clave especificada.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property value already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> valor de la propiedad ya es igual a la capacidad, la capacidad de la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">No puede ser una clave <ph id="ph1">`null`</ph>, pero un valor valor puede ser si <ph id="ph2">`TValue`</ph> es un tipo de referencia.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> es menor que la capacidad, este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Si se debe aumentar la capacidad para alojar el nuevo elemento, este método se convierte en una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">En el ejemplo de código siguiente se crea vacío <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> de cadenas con claves de cadena y usa el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método para agregar algunos elementos.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">El ejemplo muestra que la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método produce un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> al intentar agregar una clave duplicada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ya existe un elemento con la misma clave en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>Removes all keys and values from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Quita todas las claves y valores de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> propiedad se establece en 0, y también se liberan las referencias a otros objetos desde los elementos de la colección.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">La capacidad permanece sin cambios.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the capacity of the dictionary.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es la capacidad del diccionario.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> that is used to determine equality of keys for the dictionary.</source>
          <target state="translated">Obtiene la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se utiliza para determinar la igualdad de claves para el diccionario.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface implementation that is used to determine equality of keys for the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> and to provide hash values for the keys.</source>
          <target state="translated">Implementación de la interfaz genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> que se utiliza con el fin de determinar la igualdad de claves para la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> actual y para proporcionar los valores hash para las claves.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requiere una implementación de igualdad para determinar si las claves son iguales.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify one, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">Puede especificar una implementación de la <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interfaz genérica mediante un constructor que acepta un <ph id="ph2">`comparer`</ph> parámetro; si no se especifica uno, el comparador de igualdad genérico predeterminado <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> se utiliza.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Clave que se buscará en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains the specified key.</source>
          <target state="translated">Determina si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene la clave especificada.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con la clave especificada; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> método para comprobar si existe una clave antes de llamar a la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</source>
          <target state="translated">También muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> método para recuperar valores, que es una manera eficaz de recuperar valores cuando un programa prueba con frecuencia claves que no están en el diccionario.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Finally, it shows the least efficient way to test whether keys exist, by using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Por último, se muestra la forma menos eficaz para probar si las claves existen, utilizando la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad (el indizador en C#).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase (<ph id="ph2">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Valor que se va a buscar en la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">El valor puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Determina si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un valor específico.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con el valor especificado; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`TValue`</ph>, the type of values in the dictionary.</source>
          <target state="translated">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph2">`TValue`</ph>, el tipo de valores del diccionario.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Es decir, este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de pares clave-valor incluidos en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Número de pares clave-valor incluidos en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can store.</source>
          <target state="translated">La capacidad de un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es el número de elementos que la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> puede almacenar.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> propiedad es el número de elementos que están realmente en la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">La capacidad siempre es mayor o igual que <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> supera la capacidad al agregar elementos, se aumenta la capacidad reasignando automáticamente la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> structure for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> para la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fines de enumeración, cada elemento es un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estructura que representa un valor y su clave.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">En esta posición, el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Para mejorar el rendimiento, el enumerador devuelto por esta propiedad no produce una excepción si se coloca antes del primer elemento o después del último elemento y el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> se accede a la propiedad; el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same element until the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method is called.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> propiedad devuelve el mismo elemento hasta el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">No puede volver a establecer la propiedad <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Las implementaciones predeterminadas de las colecciones del espacio de nombres <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene la información requerida para serializar la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino de la secuencia serializada asociada a la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Implementa la interfaz de <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y devuelve los datos necesarios para serializar la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para proporcionar servicios de serialización.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> acción de seguridad: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiere plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este miembro no puede usarse por código de confianza parcial o transparente.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">Clave del valor que se va a obtener o establecer.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Obtiene o establece el valor asociado a la clave especificada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">Valor asociado a la clave especificada.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the specified key is not found, a get operation throws a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, and a set operation creates a new element with the specified key.</source>
          <target state="translated">Si no se encuentra la clave especificada, en el caso de una operación Get, se producirá una excepción <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph> y, en el caso de una operación Set, se creará un nuevo elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Esta propiedad proporciona la capacidad de obtener acceso a un elemento específico de la colección utilizando la siguiente sintaxis de C#: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>When you set the property value, if the key is in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the value associated with that key is replaced by the assigned value.</source>
          <target state="translated">Al establecer el valor de propiedad, si la clave está en el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, el valor asociado a esa clave se sustituye por el valor asignado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the key is not in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the key and value are added to the dictionary.</source>
          <target state="translated">Si la clave no está en el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, la clave y valor se agregan al diccionario.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">En cambio, la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> método no modifica los elementos existentes.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">No puede ser una clave <ph id="ph1">`null`</ph>, pero un valor valor puede ser, si el tipo de valor <ph id="ph2">`TValue`</ph> es un tipo de referencia.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Obtener o establecer el valor de esta propiedad plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">El siguiente ejemplo de código utiliza el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad (el indizador en C#) para recuperar valores, lo que indica que un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> se produce cuando una clave solicitada no está presente y que muestra que el valor asociado a una clave se puede reemplazar.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">El ejemplo también muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> método como una forma más eficaz para recuperar valores si un programa debe probar con frecuencia valores de clave que no están en el diccionario.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example.</source>
          <target state="translated"><ph id="ph1">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">Se ha recuperado la propiedad y <ph id="ph1">&lt;paramref name="key" /&gt;</ph> no existe en la colección.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtiene una colección que contiene las claves de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph> que contiene las claves de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">El orden de las claves de la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> no está especificado, pero es el mismo orden que los valores asociados en la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> devuelto por la <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> no es una copia estática; en su lugar, el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> hace referencia a las claves de la versión original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">Por consiguiente, los cambios a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continuarán reflejarse en el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The following code example shows how to enumerate the keys in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo enumerar las claves en el diccionario utilizando la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> propiedad y cómo enumerar las claves y valores del diccionario.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed (<ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Este código forma parte de un ejemplo más extenso que puede compilar y ejecutar (<ph id="ph1">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Vea <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Origen del evento de deserialización.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y genera el evento de deserialización cuando esta ha finalizado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance is invalid.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> asociado a la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> actual no es válido.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Clave del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>Removes the value with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Quita el valor con la clave especificada de la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se encuentra y quita correctamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Este método también devuelve <ph id="ph1">&lt;see langword="false" /&gt;</ph> si no se encuentra <ph id="ph2">&lt;paramref name="key" /&gt;</ph> en la colección <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> remains unchanged.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> no contiene un elemento con la clave especificada, el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> permanece sin cambios.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">No se inicia ninguna excepción.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from a dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo quitar un par clave/valor de un diccionario con la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase (<ph id="ph2">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">Copia los elementos <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> en una matriz, comenzando en el índice especificado de la matriz.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Each element copied from a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Cada elemento que se copia desde un <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estructura que representa un valor y su clave.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si el tipo del origen de <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> no puede convertirse automáticamente al tipo del destino de <ph id="ph2">`array`</ph>, las implementaciones no genéricas de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> producir una <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, mientras que las implementaciones genéricas inician una <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> no tiene índices de base cero.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="index" /&gt;</ph> hasta el final de la <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El tipo de la <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> de origen no puede convertirse automáticamente al tipo de la <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtiene un valor que indica si el acceso a la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos).</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el acceso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos); de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Las implementaciones predeterminadas de las colecciones del espacio de nombres <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</source>
          <target state="translated">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que puede hacer que el enumerador produzca una excepción.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propiedad devuelve un objeto que puede utilizarse para sincronizar el acceso a la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">La sincronización es efectiva sólo si todos los subprocesos bloquean el objeto antes de obtener acceso a la colección.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene un objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Las implementaciones predeterminadas de las colecciones del espacio de nombres <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propiedad devuelve un objeto que puede utilizarse para sincronizar el acceso a la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">La sincronización es efectiva sólo si todos los subprocesos bloquean el objeto antes de obtener acceso a la colección.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">El código siguiente muestra el uso de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propiedad para C#, C++ y Visual Basic.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key.</source>
          <target state="translated">Objeto que se va a utilizar como clave.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value.</source>
          <target state="translated">Objeto que se va a utilizar como valor.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Agrega la clave y el valor especificados al diccionario.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el diccionario; por ejemplo, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Sin embargo, si la clave especificada ya existe en el diccionario, al establecer el <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propiedad sobrescribe el valor anterior.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method throws an exception if the specified key already exists.</source>
          <target state="translated">En cambio, la <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> método produce una excepción si la clave especificada ya existe.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> es menor que la capacidad, este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example shows how to access the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class through the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo obtener acceso a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase a través de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">El ejemplo de código crea vacío <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> de cadenas con claves de cadena y usa el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método para agregar algunos elementos.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</source>
          <target state="translated">El ejemplo muestra que la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método produce un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> al intentar agregar una clave duplicada o cuando se proporciona una clave o valor del tipo de datos incorrecto.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example demonstrates the use of several other members of the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">El ejemplo de código muestra el uso de otros miembros de la <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es de un tipo que no se puede asignar al tipo de clave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> de la colección <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph>, the type of values in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo que no se puede asignar a <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph>, que es el tipo de los valores que hay en la colección <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>A value with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ya existe un valor con la misma clave en la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Clave que se buscará en <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Determina si <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contiene un elemento con la clave especificada.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contiene un elemento con la clave especificada; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method returns <ph id="ph1">`false`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Este método devuelve <ph id="ph1">`false`</ph> si <ph id="ph2">`key`</ph> es de un tipo no asignable al tipo de clave <ph id="ph3">`TKey`</ph> de la <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> método de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interactuar con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The example demonstrates that the method returns <ph id="ph1">`false`</ph> if a key of the wrong data type is supplied.</source>
          <target state="translated">En el ejemplo se muestra que el método devuelve <ph id="ph1">`false`</ph> si se proporciona una clave del tipo de datos incorrecto.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Devuelve una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para la colección <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fines de enumeración, cada elemento es un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estructura que representa un valor y su clave.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> método también devuelve el enumerador a esta posición.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property is undefined.</source>
          <target state="translated">En esta posición, el <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a la <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> propiedad devuelve el mismo elemento hasta que el <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para volver a establecer el valor de <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> en el primer elemento de la colección, se puede llamar primero a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> y después a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Las implementaciones predeterminadas de las colecciones del espacio de nombres <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The following code example shows how to enumerate the key/value pairs in the dictionary by using the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++), which hides the use of the enumerator.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo enumerar los pares de clave/valor en el diccionario utilizando la <ph id="ph1">`foreach`</ph> instrucción (<ph id="ph2">`For Each`</ph> en Visual Basic, <ph id="ph3">`for each`</ph> en C++), que oculta el uso del enumerador.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>In particular, note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">En concreto, tenga en cuenta que el enumerador de la <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> devuelve la interfaz <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos en lugar de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtiene un valor que indica si la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> tiene un tamaño fijo.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> tiene un tamaño fijo; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> es de solo lectura; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, esta propiedad siempre devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the value to get.</source>
          <target state="translated">Clave del valor que se va a obtener.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value with the specified key.</source>
          <target state="translated">Obtiene o establece el valor con la clave especificada.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Valor asociado a la clave especificada, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;paramref name="key" /&gt;</ph> no está en el diccionario o si <ph id="ph3">&lt;paramref name="key" /&gt;</ph> es de un tipo no asignable al tipo de clave <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> de <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific value in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Esta propiedad proporciona la capacidad de obtener acceso a un valor específico de la colección utilizando la siguiente sintaxis de C#: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el diccionario; por ejemplo, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Sin embargo, si la clave especificada ya existe en el diccionario, al establecer el <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propiedad sobrescribe el valor anterior.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">En cambio, la <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> método no modifica los elementos existentes.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property.</source>
          <target state="translated">El lenguaje C# utiliza el <bpt id="p1">[</bpt>esto<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> palabra clave para definir los indizadores en lugar de implementar la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Obtener o establecer el valor de esta propiedad plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property (the indexer in C#) of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, and ways the property differs from the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> propiedad (el indizador en C#) de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interactuar con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>y cómo difiere de la propiedad de la <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example shows that, like the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</source>
          <target state="translated">En el ejemplo se muestra que, al igual que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propiedad puede cambiar el valor asociado a una clave existente y puede usarse para agregar un nuevo par clave/valor si la clave especificada no está en el diccionario.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example also shows that unlike the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property does not throw an exception if <ph id="ph3">`key`</ph> is not in the dictionary, returning a null reference instead.</source>
          <target state="translated">El ejemplo también muestra que, a diferencia del <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propiedad, el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propiedad no produce una excepción si <ph id="ph3">`key`</ph> no está en el diccionario, devolviendo una referencia nula en su lugar.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Finally, the example demonstrates that getting the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property returns a null reference if <ph id="ph2">`key`</ph> is not the correct data type, and that setting the property throws an exception if <ph id="ph3">`key`</ph> is not the correct data type.</source>
          <target state="translated">Por último, el ejemplo muestra que obtener la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propiedad devuelve una referencia nula si <ph id="ph2">`key`</ph> no es del tipo de datos correcto y que la configuración de la propiedad produce una excepción si <ph id="ph3">`key`</ph> no es del tipo de datos correcto.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Se está asignando un valor, pero <ph id="ph1">&lt;paramref name="key" /&gt;</ph> es de un tipo no asignable al tipo de clave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Se está asignando un valor, pero <ph id="ph1">&lt;paramref name="value" /&gt;</ph> es de un tipo no asignable al tipo de valor <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Obtiene una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contiene las claves de la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contiene las claves de <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">El orden de las claves en el valor devuelto <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> no está especificado, pero se garantiza que será el mismo orden que los valores correspondientes en el <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> devuelto por la <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the keys in the dictionary.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interactuar con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, para enumerar las claves del diccionario.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">El ejemplo también muestra cómo enumerar los pares clave/valor en el diccionario; Tenga en cuenta que el enumerador de la <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> devuelve la interfaz <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos en lugar de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Clave del elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Quita el elemento con la clave especificada de <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interactuar con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Obtiene una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contiene los valores de la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contiene los valores de <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">El orden de los valores en el valor devuelto <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> no está especificado, pero se garantiza que será el mismo orden que las claves correspondientes en el <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> devuelto por la <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the values in the dictionary.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interactuar con un <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, para mostrar los valores del diccionario.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">El ejemplo también muestra cómo enumerar los pares clave/valor en el diccionario; Tenga en cuenta que el enumerador de la <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> devuelve la interfaz <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos en lugar de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código forma parte de un ejemplo más extenso, con resultados, que se proporcionan para que el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fines de enumeración, cada elemento es un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estructura que representa un valor y su clave.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">El <ph id="ph1">`foreach`</ph> instrucción del lenguaje C# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) oculta la complejidad de los enumeradores.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Por lo tanto, se recomienda el uso de <ph id="ph1">`foreach`</ph>, en lugar de manipular directamente el enumerador.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> método también devuelve el enumerador a esta posición.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">En esta posición, el <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por lo tanto, debe llamar a la <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Para mejorar el rendimiento, el enumerador devuelto por esta propiedad no produce una excepción si se coloca antes del primer elemento o después del último elemento y el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> se accede a la propiedad; el valor de la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> propiedad no está definida.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> propiedad devuelve el mismo elemento hasta que el <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> también devolver <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> no está definido.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para volver a establecer el valor de <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> en el primer elemento de la colección, se puede llamar primero a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> y después a <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">La enumeración en una colección no es un procedimiento seguro para subprocesos ya que el enumerador carece de acceso exclusivo.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Las implementaciones predeterminadas de las colecciones del espacio de nombres <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> no están sincronizadas.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">Clave del valor que se va a obtener.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Cuando este método finaliza, contiene el valor asociado a la clave especificada, si se encuentra la clave; de lo contrario, valor predeterminado para el tipo del parámetro <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parámetro se pasa sin inicializar.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Obtiene el valor asociado a la clave especificada.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contiene un elemento con la clave especificada; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Este método combina la funcionalidad de la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>; for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Si no se encuentra la clave, el <ph id="ph1">`value`</ph> parámetro Obtiene el valor predeterminado adecuado para el tipo de <ph id="ph2">`TValue`</ph>; por ejemplo, 0 (cero) para los tipos de enteros, <ph id="ph3">`false`</ph> para tipos booleanos, y <ph id="ph4">`null`</ph> para tipos de referencia.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method if your code frequently attempts to access keys that are not in the dictionary.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> método si el código intenta obtener acceso a las claves que no están en el diccionario con frecuencia.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Using this method is more efficient than catching the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> thrown by the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Con este método es más eficaz que detectar el <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> producida por la <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Este método plantea una operación o (1).</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</source>
          <target state="translated">En el ejemplo se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> método como una forma más eficaz para recuperar valores en un programa que prueba con frecuencia claves que no están en el diccionario.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>For contrast, the example also shows how the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">Por otra parte, el ejemplo también muestra cómo el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> propiedad (el indizador en C#) produce excepciones al intentar recuperar claves que no existen.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase (<ph id="ph2">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo).</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Gets a collection containing the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtiene una colección que contiene los valores de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph> que contiene los valores de la colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">El orden de los valores en <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> no está especificado, pero es el mismo orden de las claves asociadas en <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> devuelto por la propiedad <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> no es una copia estática; en su lugar, el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> hace referencia a los valores de la versión original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</source>
          <target state="translated">Por consiguiente, los cambios a la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continuarán reflejarse en el <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example shows how to enumerate the values in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">Este ejemplo de código muestra cómo enumerar los valores en el diccionario utilizando la <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> propiedad y cómo enumerar las claves y valores del diccionario.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> clase (<ph id="ph2">`openWith`</ph> es el nombre del diccionario utilizado en este ejemplo).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>