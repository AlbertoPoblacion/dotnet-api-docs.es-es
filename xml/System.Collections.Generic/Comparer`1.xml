<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Comparer`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56f0074415999f9984a7244f1cccee96197dddc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f0074415999f9984a7244f1cccee96197dddc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The type of objects to compare.</source>
          <target state="translated">Tipo de objetos que se van a comparar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Comparer`1">
          <source>Provides a base class for implementations of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> generic interface.</source>
          <target state="translated">Proporciona una clase base para las implementaciones de la interfaz genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Derive from this class to provide a custom implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface for use with collection classes such as the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic classes.</source>
          <target state="translated">Derivar de esta clase para proporcionar una implementación personalizada de la <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interfaz para su uso con las clases de colección, como el <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> y <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> clases genéricas.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The difference between deriving from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class and implementing the <ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface is as follows:</source>
          <target state="translated">La diferencia entre la derivación de la <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase e implementar la <ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interfaz es como sigue:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To specify how two objects should be compared by default, implement the <ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface in your class.</source>
          <target state="translated">Para especificar cómo deben compararse los dos objetos de forma predeterminada, implemente el <ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interfaz en la clase.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This ensures that sort operations will use the default comparison code that you provided.</source>
          <target state="translated">Esto garantiza que las operaciones de ordenación utilizará el código de comparación predeterminado que proporciona.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To define a comparer to use instead of the default comparer, derive from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">Para definir un comparador que se utilizará en lugar del comparador predeterminado, que se derivan de la <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>You can then use this comparer in sort operations that take a comparer as a parameter.</source>
          <target state="translated">A continuación, puede usar a este comparador en operaciones de ordenación que toman a un comparador como un parámetro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The object returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated">El objeto devuelto por la <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> propiedad utiliza la <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica (<ph id="ph3">`IComparable&lt;T&gt;`</ph> en C#, <ph id="ph4">`IComparable(Of T)`</ph> en Visual Basic) para comparar dos objetos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property returns a <ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">Si tipo <ph id="ph1">`T`</ph> no implementa la <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, la <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> propiedad devuelve un <ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> que usa el <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The following example derives a class, <ph id="ph1">`BoxLengthFirst`</ph>, from the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se deriva una clase, <ph id="ph1">`BoxLengthFirst`</ph>, desde la <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This comparer compares two objects of type <ph id="ph1">`Box`</ph>.</source>
          <target state="translated">Este comparador compara dos objetos de tipo <ph id="ph1">`Box`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>It sorts them first by length, then by height, and then by width.</source>
          <target state="translated">Ordena primero por la longitud, alto y, a continuación, en el ancho.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The <ph id="ph1">`Box`</ph> class implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface to control the default comparison between two <ph id="ph3">`Box`</ph> objects.</source>
          <target state="translated">El <ph id="ph1">`Box`</ph> la clase implementa la <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interfaz para controlar la comparación predeterminada entre dos <ph id="ph3">`Box`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This default implementation sorts first by height, then by length, and then by width.</source>
          <target state="translated">Esta implementación predeterminada se ordena primero por el alto, longitud y, a continuación, en el ancho.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The example shows the differences between the two comparisons by sorting a list of <ph id="ph1">`Box`</ph> objects first by using the <ph id="ph2">`BoxLengthFirst`</ph> comparer and then by using the default comparer.</source>
          <target state="translated">En el ejemplo se muestra las diferencias entre las dos comparaciones al ordenar una lista de <ph id="ph1">`Box`</ph> objetos primero mediante el <ph id="ph2">`BoxLengthFirst`</ph> comparador y, a continuación, usando el comparador predeterminado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> may behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> pueden comportarse de manera diferente en cuanto a distinción de referencias culturales y esta característica.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Para las comparaciones de cadenas, la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase es preferible <bpt id="p1">&lt;c&gt;</bpt>comparador<ph id="ph2">&amp;lt;</ph>cadena<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">Propiedades de la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> espacio de nombres y <bpt id="p1">[</bpt>globalización y localización<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The first object to compare.</source>
          <target state="translated">Primer objeto que se va a comparar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The second object to compare.</source>
          <target state="translated">Segundo objeto que se va a comparar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, realiza una comparación de dos objetos del mismo tipo y devuelve un valor que indica si uno es menor, igual o mayor que el otro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Entero con signo que indica los valores relativos de <ph id="ph1">&lt;paramref name="x" /&gt;</ph> y <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es menor que <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es igual a <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es mayor que <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Implement this method to provide a customized sort order comparison for type <ph id="ph1">`T`</ph>.</source>
          <target state="translated">Implemente este método para proporcionar una personalizada para el tipo de comparación de ordenación <ph id="ph1">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The following example defines a comparer of <ph id="ph1">`Box`</ph> objects that can be used instead of the default comparer.</source>
          <target state="translated">En el ejemplo siguiente se define un comparador de <ph id="ph1">`Box`</ph> objetos que se pueden usar el comparador predeterminado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> does not implement either the <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">El tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph> no implementa la interfaz genérica <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> o la interfaz <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Comparing <ph id="ph1">&lt;see langword="null" /&gt;</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">Comparar <ph id="ph1">&lt;see langword="null" /&gt;</ph> con cualquier referencia de tipo, se permite y no genera una excepción.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A null reference is considered to be less than any reference that is not null.</source>
          <target state="translated">Se considera que una referencia nula es menor que cualquier referencia que no sea null.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>For information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">Para obtener información sobre las comparaciones específicas de la referencia cultural, consulte el <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> espacio de nombres y <bpt id="p1">[</bpt>globalización y localización<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The comparison to use.</source>
          <target state="translated">Comparación que se va a utilizar.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>Creates a comparer by using the specified comparison.</source>
          <target state="translated">Crea un comparador mediante la comparación especificada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The new comparer.</source>
          <target state="translated">El nuevo comparador.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Returns a default sort order comparer for the type specified by the generic argument.</source>
          <target state="translated">Devuelve un comparador de criterios de ordenación predeterminado para el tipo especificado por el argumento genérico.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>An object that inherits <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> and serves as a sort order comparer for type <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Objeto que hereda <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> y sirve como un comparador de criterios de ordenación para el tipo <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> returned by this property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> devuelto por esta propiedad utiliza la <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica (<ph id="ph3">`IComparable&lt;T&gt;`</ph> en C#, <ph id="ph4">`IComparable(Of T)`</ph> en Visual Basic) para comparar dos objetos.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, this property returns a <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">Si tipo <ph id="ph1">`T`</ph> no implementa la <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interfaz genérica, esta propiedad devuelve un <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> que usa el <ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property to get an object that performs the default comparison.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> propiedad para obtener un objeto que realiza la comparación predeterminada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>Comparer(Of String)<ept id="p2">&lt;/c&gt;</ept> in Visual Basic).</source>
          <target state="translated">Para las comparaciones de cadenas, la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase es preferible <bpt id="p1">&lt;c&gt;</bpt>comparador<ph id="ph2">&amp;lt;</ph>cadena<ph id="ph3">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>comparador (Of String)<ept id="p2">&lt;/c&gt;</ept> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">Propiedades de la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> espacio de nombres y <bpt id="p1">[</bpt>globalización y localización<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The first object to compare.</source>
          <target state="translated">Primer objeto que se va a comparar.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The second object to compare.</source>
          <target state="translated">Segundo objeto que se va a comparar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</source>
          <target state="translated">Compara dos objetos y devuelve un valor que indica si uno de ellos es menor, igual o mayor que el otro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Entero con signo que indica los valores relativos de <ph id="ph1">&lt;paramref name="x" /&gt;</ph> y <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, como se muestra en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que cero</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es menor que <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Cero</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es igual a <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mayor que cero</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> es mayor que <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be cast to the type specified by the generic argument <ph id="ph3">`T`</ph> of the current instance.</source>
          <target state="translated">Este método es un contenedor para la <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph> método, por lo que <ph id="ph2">`obj`</ph> debe convertirse al tipo especificado por el argumento genérico <ph id="ph3">`T`</ph> de la instancia actual.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>If it cannot be cast to <ph id="ph1">`T`</ph>, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Si no se puede convertir a <ph id="ph1">`T`</ph>, un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">Comparar <ph id="ph1">`null`</ph> con cualquier referencia de tipo, se permite y no genera una excepción.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Al ordenar, <ph id="ph1">`null`</ph> se considera menor que cualquier otro objeto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph> method to compare two objects.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph> método para comparar dos objetos.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> or <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is of a type that cannot be cast to type <ph id="ph3">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">El tipo de <ph id="ph1">&lt;paramref name="x" /&gt;</ph> o <ph id="ph2">&lt;paramref name="y" /&gt;</ph> no se puede convertir al tipo <ph id="ph3">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph> do not implement either the <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> e <ph id="ph2">&lt;paramref name="y" /&gt;</ph> no implementan la interfaz genérica <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, ni la interfaz <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> se comportan de forma diferente en cuanto a distinción de referencias culturales y esta característica.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Para las comparaciones de cadenas, la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase es preferible <bpt id="p1">&lt;c&gt;</bpt>comparador<ph id="ph2">&amp;lt;</ph>cadena<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">Propiedades de la <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> espacio de nombres y <bpt id="p1">[</bpt>globalización y localización<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>