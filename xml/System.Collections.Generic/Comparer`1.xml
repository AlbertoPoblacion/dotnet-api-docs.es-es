<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61e63626b0ffa63451d93d574b0dc718df93ae7a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316949" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="08596-101">Tipo de objetos que se van a comparar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08596-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="08596-102">Proporciona una clase base para las implementaciones de la interfaz genérica <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="08596-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08596-103">Derivar de esta clase para proporcionar una implementación personalizada de la <xref:System.Collections.Generic.IComparer%601> interfaz para su uso con las clases de colección, como el <xref:System.Collections.Generic.SortedList%602> y <xref:System.Collections.Generic.SortedDictionary%602> clases genéricas.</span><span class="sxs-lookup"><span data-stu-id="08596-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="08596-104">La diferencia entre la derivación de la <xref:System.Collections.Generic.Comparer%601> clase e implementar la <xref:System.IComparable?displayProperty=nameWithType> interfaz es como sigue:</span><span class="sxs-lookup"><span data-stu-id="08596-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="08596-105">Para especificar cómo deben compararse los dos objetos de forma predeterminada, implemente el <xref:System.IComparable?displayProperty=nameWithType> interfaz en la clase.</span><span class="sxs-lookup"><span data-stu-id="08596-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="08596-106">Esto garantiza que las operaciones de ordenación utilizará el código de comparación predeterminado que proporciona.</span><span class="sxs-lookup"><span data-stu-id="08596-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="08596-107">Para definir un comparador que se utilizará en lugar del comparador predeterminado, que se derivan de la <xref:System.Collections.Generic.Comparer%601> clase.</span><span class="sxs-lookup"><span data-stu-id="08596-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="08596-108">A continuación, puede usar a este comparador en operaciones de ordenación que toman a un comparador como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="08596-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="08596-109">El objeto devuelto por la <xref:System.Collections.Generic.Comparer%601.Default%2A> propiedad utiliza la <xref:System.IComparable%601?displayProperty=nameWithType> interfaz genérica (`IComparable<T>` en C#, `IComparable(Of T)` en Visual Basic) para comparar dos objetos.</span><span class="sxs-lookup"><span data-stu-id="08596-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="08596-110">Si tipo `T` no implementa la <xref:System.IComparable%601?displayProperty=nameWithType> interfaz genérica, la <xref:System.Collections.Generic.Comparer%601.Default%2A> propiedad devuelve un <xref:System.Collections.Generic.Comparer%601> que usa el <xref:System.IComparable?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="08596-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08596-111">En el ejemplo siguiente se deriva una clase, `BoxLengthFirst`, desde la <xref:System.Collections.Generic.Comparer%601> clase.</span><span class="sxs-lookup"><span data-stu-id="08596-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="08596-112">Este comparador compara dos objetos de tipo `Box`.</span><span class="sxs-lookup"><span data-stu-id="08596-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="08596-113">Ordena primero por la longitud, alto y, a continuación, en el ancho.</span><span class="sxs-lookup"><span data-stu-id="08596-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="08596-114">El `Box` la clase implementa la <xref:System.IComparable%601> interfaz para controlar la comparación predeterminada entre dos `Box` objetos.</span><span class="sxs-lookup"><span data-stu-id="08596-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="08596-115">Esta implementación predeterminada se ordena primero por el alto, longitud y, a continuación, en el ancho.</span><span class="sxs-lookup"><span data-stu-id="08596-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="08596-116">En el ejemplo se muestra las diferencias entre las dos comparaciones al ordenar una lista de `Box` objetos primero mediante el `BoxLengthFirst` comparador y, a continuación, usando el comparador predeterminado.</span><span class="sxs-lookup"><span data-stu-id="08596-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="08596-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> y <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> pueden comportarse de manera diferente en cuanto a distinción de referencias culturales y esta característica.  Para las comparaciones de cadenas, la <see cref="T:System.StringComparer" /> clase es preferible <c>comparador&lt;cadena&gt;</c>.  Propiedades de la <see cref="T:System.StringComparer" /> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.  Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <see cref="T:System.StringComparer" /> instancia.  Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <see cref="N:System.Globalization" /> espacio de nombres y [globalización y Localization](~/docs/standard/globalization-localization/index.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="08596-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="08596-118">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.Comparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="08596-119">Primer objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="08596-120">Segundo objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08596-121">Cuando se reemplaza en una clase derivada, realiza una comparación de dos objetos del mismo tipo y devuelve un valor que indica si uno es menor, igual o mayor que el otro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08596-122">Entero con signo que indica los valores relativos de <paramref name="x" /> y <paramref name="y" />, como se muestra en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="08596-123">
            <list type="table">
              <listheader>
                <term> Valor </term>
                <description> Significado </description>
              </listheader>
              <item>
                <term> Menor que cero </term>
                <description>
                  <paramref name="x" /> es menor que <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Cero </term>
                <description>
                  <paramref name="x" /> es igual a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Mayor que cero </term>
                <description>
                  <paramref name="x" /> es mayor que <paramref name="y" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08596-124">Implemente este método para proporcionar una personalizada para el tipo de comparación de ordenación `T`.</span><span class="sxs-lookup"><span data-stu-id="08596-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08596-125">En el ejemplo siguiente se define un comparador de `Box` objetos que se pueden usar el comparador predeterminado.</span><span class="sxs-lookup"><span data-stu-id="08596-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="08596-126">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.Collections.Generic.Comparer%601> clase.</span><span class="sxs-lookup"><span data-stu-id="08596-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="08596-127">El tipo <paramref name="T" /> no implementa la interfaz genérica <see cref="T:System.IComparable`1" /> o la interfaz <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="08596-128">
            <para>Comparar <see langword="null" /> con cualquier referencia de tipo, se permite y no genera una excepción. Se considera que una referencia nula es menor que cualquier referencia que no sea null.  Para obtener información sobre las comparaciones específicas de la referencia cultural, consulte el <see cref="N:System.Globalization" /> espacio de nombres y [globalización y Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="08596-129">Comparación que se va a utilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08596-130">Crea un comparador mediante la comparación especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08596-131">El nuevo comparador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08596-132">Devuelve un comparador de criterios de ordenación predeterminado para el tipo especificado por el argumento genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08596-133">Objeto que hereda <see cref="T:System.Collections.Generic.Comparer`1" /> y sirve como un comparador de criterios de ordenación para el tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08596-134">El <xref:System.Collections.Generic.Comparer%601> devuelto por esta propiedad utiliza la <xref:System.IComparable%601?displayProperty=nameWithType> interfaz genérica (`IComparable<T>` en C#, `IComparable(Of T)` en Visual Basic) para comparar dos objetos.</span><span class="sxs-lookup"><span data-stu-id="08596-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="08596-135">Si tipo `T` no implementa la <xref:System.IComparable%601?displayProperty=nameWithType> interfaz genérica, esta propiedad devuelve un <xref:System.Collections.Generic.Comparer%601> que usa el <xref:System.IComparable?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="08596-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08596-136">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Collections.Generic.Comparer%601.Default%2A> propiedad para obtener un objeto que realiza la comparación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="08596-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="08596-137">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.Collections.Generic.Comparer%601> clase.</span><span class="sxs-lookup"><span data-stu-id="08596-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="08596-138">
            <para>Para las comparaciones de cadenas, la <see cref="T:System.StringComparer" /> clase es preferible <c>comparador&lt;cadena&gt; </c> (<c>comparador (Of String)</c> en Visual Basic).  Propiedades de la <see cref="T:System.StringComparer" /> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.  Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <see cref="T:System.StringComparer" /> instancia.  Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <see cref="N:System.Globalization" /> espacio de nombres y [globalización y Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="08596-139">Primer objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="08596-140">Segundo objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08596-141">Compara dos objetos y devuelve un valor que indica si uno de ellos es menor, igual o mayor que el otro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="08596-142">Entero con signo que indica los valores relativos de <paramref name="x" /> y <paramref name="y" />, como se muestra en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="08596-143">
            <list type="table">
              <listheader>
                <term> Valor </term>
                <description> Significado </description>
              </listheader>
              <item>
                <term> Menor que cero </term>
                <description>
                  <paramref name="x" /> es menor que <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Cero </term>
                <description>
                  <paramref name="x" /> es igual a <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Mayor que cero </term>
                <description>
                  <paramref name="x" /> es mayor que <paramref name="y" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08596-144">Este método es un contenedor para la <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> método, por lo que `obj` debe convertirse al tipo especificado por el argumento genérico `T` de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="08596-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="08596-145">Si no se puede convertir a `T`, un <xref:System.ArgumentException> se produce.</span><span class="sxs-lookup"><span data-stu-id="08596-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="08596-146">Comparar `null` con cualquier referencia de tipo, se permite y no genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="08596-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="08596-147">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="08596-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08596-148">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> método para comparar dos objetos.</span><span class="sxs-lookup"><span data-stu-id="08596-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="08596-149">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.Collections.Generic.Comparer%601> clase.</span><span class="sxs-lookup"><span data-stu-id="08596-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="08596-150">El tipo de <paramref name="x" /> o <paramref name="y" /> no se puede convertir al tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="08596-151">-o bien- <paramref name="x" /> y <paramref name="y" /> no implementan la interfaz genérica <see cref="T:System.IComparable`1" /> ni la interfaz <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="08596-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> y <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> se comportan de forma diferente en cuanto a distinción de referencias culturales y esta característica.  Para las comparaciones de cadenas, la <see cref="T:System.StringComparer" /> clase es preferible <c>comparador&lt;cadena&gt;</c>.  Propiedades de la <see cref="T:System.StringComparer" /> clase devuelven instancias predefinidas que realizan comparaciones de cadenas con diferentes combinaciones de mayúsculas y minúsculas y distinción de referencias culturales.  Las minúsculas y la distinción de referencias culturales son coherentes entre los miembros de la misma <see cref="T:System.StringComparer" /> instancia.  Para obtener más información sobre las comparaciones específicas de la referencia cultural, consulte el <see cref="N:System.Globalization" /> espacio de nombres y [globalización y Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="08596-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>