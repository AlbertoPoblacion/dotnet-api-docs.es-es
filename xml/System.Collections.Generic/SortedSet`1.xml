<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedSet`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac545aead96c26d3f8e1089f633be9c37a49f3dc313.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45aead96c26d3f8e1089f633be9c37a49f3dc313</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The type of elements in the set.</source>
          <target state="translated">Tipo de elementos del conjunto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Represents a collection of objects that is maintained in sorted order.</source>
          <target state="translated">Representa una colección de objetos que se mantiene en el criterio de ordenación.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object maintains a sorted order without affecting performance as elements are inserted and deleted.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto mantiene un criterio de ordenación sin afectar al rendimiento, tal y como se insertan o eliminan elementos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Duplicate elements are not allowed.</source>
          <target state="translated">No se permiten elementos duplicados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Changing the sort values of existing items is not supported and may lead to unexpected behavior.</source>
          <target state="translated">Cambiar los valores de ordenación de los elementos existentes no se admite y puede provocar un comportamiento inesperado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>For a thread safe alternative to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, see <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></source>
          <target state="translated">Para una alternativa seguro para subprocesos a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, vea <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The following example demonstrates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class that is created with the constructor that takes an <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> as a parameter.</source>
          <target state="translated">En el ejemplo siguiente se muestra un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase que se crea con el constructor que toma un <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> como un parámetro.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This comparer (<ph id="ph1">`ByFileExtension`</ph>) is used to sort a list of file names by their extensions.</source>
          <target state="translated">Este comparador (<ph id="ph1">`ByFileExtension`</ph>) se utiliza para ordenar una lista de nombres de archivo por sus extensiones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This example demonstrates how to create a sorted set of media file names, remove unwanted elements, view a range of elements, and compare the set with another sorted set.</source>
          <target state="translated">En este ejemplo se muestra cómo crear un conjunto ordenado de medios de los nombres de archivo, eliminar elementos no deseados, ver un intervalo de elementos y comparar el conjunto con otro conjunto ordenado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este constructor es una operación o (1).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">Comparador predeterminado que se va a usar para comparar los objetos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that uses a specified comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que usa un comparador especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> does not implement <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, you must specify an <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to be used.</source>
          <target state="translated">Si <ph id="ph1">`comparer`</ph> no implementa <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, debe especificar un <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> objeto que se usará.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The following example defines a comparer (<ph id="ph1">`ByFileExtension`</ph>) that is used to construct a sorted set that sorts file names by their extensions.</source>
          <target state="translated">En el ejemplo siguiente se define un comparador (<ph id="ph1">`ByFileExtension`</ph>) que se utiliza para construir un conjunto ordenado que ordena los nombres de archivo por sus extensiones.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">Colección enumerable que se va a copiar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contiene los elementos copiados de una colección enumerable especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate elements in the enumerable collection are not copied into the new instance of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class, and no exceptions are thrown.</source>
          <target state="translated">Los elementos duplicados en la colección enumerable no se copian en la nueva instancia de la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase y ninguna excepción se produce.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in the <ph id="ph4">`collection`</ph> parameter.</source>
          <target state="translated">Este constructor es una O (<ph id="ph1">`n`</ph> registro <ph id="ph2">`n`</ph>) operación, donde <ph id="ph3">`n`</ph> es el número de elementos de la <ph id="ph4">`collection`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">Colección enumerable que se va a copiar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">Comparador predeterminado que se va a usar para comparar los objetos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contiene los elementos copiados de una colección enumerable especificada y que usa un comparador especificado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that contains the information that is required to serialize the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Objeto que contiene la información necesaria para serializar el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The structure that contains the source and destination of the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Estructura que contiene el origen y el destino de la secuencia serializada asociada al objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contiene datos serializados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</source>
          <target state="translated">Se llama a este constructor durante la deserialización para reconstituir el objeto que se transmite a través de una secuencia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">Elemento que se va a agregar al conjunto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>Adds an element to the set and returns a value that indicates if it was successfully added.</source>
          <target state="translated">Agrega un elemento al conjunto y devuelve un valor que indica si se ha agregado correctamente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is added to the set; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> se agrega al conjunto; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class does not accept duplicate elements.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase no acepta elementos duplicados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">`item`</ph> is already in the set, this method returns <ph id="ph2">`false`</ph> and does not throw an exception.</source>
          <target state="translated">Si <ph id="ph1">`item`</ph> ya está en el conjunto, este método devuelve <ph id="ph2">`false`</ph> y no produce una excepción.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> ya es igual a la capacidad de la <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> del objeto, la capacidad se ajusta automáticamente para alojar el nuevo elemento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The following example adds elements to a sorted set.</source>
          <target state="translated">En el ejemplo siguiente se agrega elementos a un conjunto ordenado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>Removes all elements from the set.</source>
          <target state="translated">Quita todos los elementos del conjunto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> object that is used to order the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> que se usa para ordenar los valores de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The comparer that is used to order the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Comparador que se usa para ordenar los valores de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The returned comparer can be either the default comparer of the type for a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, or the comparer used for its constructor.</source>
          <target state="translated">El comparador devuelto puede ser cualquier el comparador predeterminado del tipo para un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, o el comparador que se utiliza para su constructor.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>The element to locate in the set.</source>
          <target state="translated">Elemento que se debe buscar en el conjunto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>Determines whether the set contains a specific element.</source>
          <target state="translated">Determina si el conjunto contiene un elemento específico.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set contains <ph id="ph2">&lt;paramref name="item" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el conjunto contiene <ph id="ph2">&lt;paramref name="item" /&gt;</ph>; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>This method is an O(ln n) operation.</source>
          <target state="translated">Este método es una operación O (n ln).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Copies a portion or all of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the destination array or at a specified index.</source>
          <target state="translated">Copia una parte o todos los elementos de una <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> en una matriz unidimensional compatible, empezando al principio de la matriz de destino o en un índice especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copia la totalidad de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> en una matriz unidimensional compatible, empezando en el principio de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The indexing of <ph id="ph1">`array`</ph> must be zero-based.</source>
          <target state="translated">La indización de <ph id="ph1">`array`</ph> debe estar basado en cero.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> exceeds the number of elements that the destination array can contain.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> de origen supera el número de elementos que puede contener la matriz de destino.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia toda la <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> en una matriz unidimensional compatible, empezando en el índice especificado de la matriz.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">El número de elementos de la matriz de origen es mayor que el espacio disponible desde el <ph id="ph1">&lt;paramref name="index" /&gt;</ph> hasta el final de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Número de elementos que se van a copiar.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>Copies a specified number of elements from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia un número especificado de elementos de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> a una matriz unidimensional compatible, empezando en el índice especificado de la matriz.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">El número de elementos de la matriz de origen es mayor que el espacio disponible desde el <ph id="ph1">&lt;paramref name="index" /&gt;</ph> hasta el final de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de elementos de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Número de elementos incluidos en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La recuperación del valor de esta propiedad es una operación O(1).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que se puede usar para crear una colección que contiene conjuntos individuales.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que se puede usar para crear una colección que contiene conjuntos individuales.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Un comparador para crear una colección de conjuntos.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> objeto comprueba la igualdad en un solo nivel; sin embargo, puede encadenar comparadores en niveles adicionales para llevar a cabo una comprobación de igualdad más profunda.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Calling this method is an O(1) operation.</source>
          <target state="translated">Llamar a este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The comparer to use for creating the returned comparer.</source>
          <target state="translated">Comparador que se va a usar para crear el comparador devuelto.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object, according to a specified comparer, that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>, según un comparador especificado, que se puede usar para crear una colección que contiene los conjuntos individuales.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Un comparador para crear una colección de conjuntos.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">`memberEqualityComparer`</ph> and the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> must have the same definition of equality.</source>
          <target state="translated">El <ph id="ph1">`memberEqualityComparer`</ph> y actual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> debe tener la misma definición de igualdad.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>You can use the comparer returned by this method in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> constructor to create a hash table of individual sets.</source>
          <target state="translated">Puede usar el comparador devuelto por este método en el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> constructor para crear una tabla hash de conjuntos individuales.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> method to create a set of sets.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> método para crear un conjunto de conjuntos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección de elementos que se van a quitar del objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements that are in a specified collection from the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Quita del objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual todos los elementos que están en la colección especificada.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method removes any element in the current <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> that is also in <ph id="ph2">`other`</ph>.</source>
          <target state="translated">Este método quita cualquier elemento actual <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> que también está disponible en <ph id="ph2">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate values in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Valores duplicados en <ph id="ph1">`other`</ph> se omiten.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de elementos de la <ph id="ph3">`other`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example removes elements from a sorted set that are duplicated in another sorted set.</source>
          <target state="translated">En el ejemplo siguiente se quita elementos de un conjunto ordenado que se duplican en otro conjunto ordenado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>An enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in sorted order.</source>
          <target state="translated">Enumerador que itera por <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> en orden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Any changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> will invalidate the enumerator.</source>
          <target state="translated">Los cambios realizados en el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> invalidará el enumerador.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Este método es una operación O (n de registro).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene la información necesaria para serializar el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino del flujo serializado asociado al objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data that you must have to serialize a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y devuelve los datos necesarios para serializar un objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Llamar a este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para proporcionar servicios de serialización.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The lowest desired value in the view.</source>
          <target state="translated">Valor más bajo deseado en la vista.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The highest desired value in the view.</source>
          <target state="translated">Valor más alto deseado en la vista.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>Returns a view of a subset in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Devuelve una vista de un subconjunto en <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A subset view that contains only the values in the specified range.</source>
          <target state="translated">Una vista de subconjunto que contiene solo los valores del intervalo especificado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method returns a view of the range of elements that fall between <ph id="ph1">`lowerValue`</ph> and <ph id="ph2">`upperValue`</ph>, as defined by the comparer.</source>
          <target state="translated">Este método devuelve una vista del intervalo de elementos que se encuentran entre <ph id="ph1">`lowerValue`</ph> y <ph id="ph2">`upperValue`</ph>, tal y como define el comparador.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method does not copy elements from the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, but provides a window into the underlying <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> itself.</source>
          <target state="translated">Este método no copia los elementos de la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, pero proporciona una ventana en subyacente <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> propio.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>You can make changes in both the view and in the underlying <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated">Puede realizar cambios en la vista y en subyacente <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> method to list only the AVI files from a sorted set of media file names.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> método para mostrar solo el AVI archivos de un conjunto ordenado de nombres de archivo de medios.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The comparer evaluates file names according to their extensions.</source>
          <target state="translated">El comparador evalúa los nombres de archivo según sus extensiones.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The <ph id="ph1">`lowerValue`</ph> is "AVI" and the <ph id="ph2">`upperValue`</ph> is only one value higher, "AVJ", to get the view of all AVI files.</source>
          <target state="translated">El <ph id="ph1">`lowerValue`</ph> es "AVI" y <ph id="ph2">`upperValue`</ph> es solo un valor superior, "AVJ", para obtener la vista de todos los archivos AVI.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> is more than <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> according to the comparer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> es mayor que <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> según el comparador.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A tried operation on the view was outside the range specified by <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> and <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</source>
          <target state="translated">Una operación probada en la vista estaba fuera del intervalo especificado por <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> y <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are also in a specified collection.</source>
          <target state="translated">Modifica el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual para que solo contenga elementos que también estén en una colección especificada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Este método omite cualquier elemento duplicado en <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por el <ph id="ph1">`other`</ph> parámetro es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> y <ph id="ph6">`m`</ph> es el número de elementos de <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of the specified collection.</source>
          <target state="translated">Determina si un objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un subconjunto apropiado de la colección especificada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un subconjunto apropiado de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper subset of any other collection.</source>
          <target state="translated">Un conjunto vacío es un subconjunto apropiado de cualquier otra colección.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty unless the <ph id="ph3">`other`</ph> parameter is also an empty set.</source>
          <target state="translated">Por lo tanto, este método devuelve <ph id="ph1">`true`</ph> si la colección representada por el actual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto está vacío, a menos que el <ph id="ph3">`other`</ph> parámetro también es un conjunto vacío.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Este método devuelve siempre <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> es mayor o igual que el número de elementos de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, then this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por <ph id="ph1">`other`</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> y <ph id="ph6">`m`</ph> es el número de elementos de <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of the specified collection.</source>
          <target state="translated">Determina si un objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un supraconjunto apropiado de la colección especificada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un supraconjunto apropiado de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper superset of any other collection.</source>
          <target state="translated">Un conjunto vacío es un supraconjunto apropiado de cualquier otra colección.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty unless the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection is also empty.</source>
          <target state="translated">Por lo tanto, este método devuelve <ph id="ph1">`true`</ph> si la colección representada por el <ph id="ph2">`other`</ph> parámetro está vacío, a menos que el actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección también está vacía.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Este método devuelve siempre <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> es menor o igual que el número de elementos de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por <ph id="ph1">`other`</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es el número de elementos de <ph id="ph5">`other`</ph> y <ph id="ph6">`m`</ph> es <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of the specified collection.</source>
          <target state="translated">Determina si un objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un subconjunto de la colección especificada.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual es un subconjunto de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty, even if the <ph id="ph3">`other`</ph> parameter is an empty set.</source>
          <target state="translated">Un conjunto vacío es un subconjunto de otra colección, incluido un conjunto vacío; por lo tanto, este método devuelve <ph id="ph1">`true`</ph> si la colección representada por el actual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto está vacío, incluso si la <ph id="ph3">`other`</ph> parámetro es un conjunto vacío.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Este método devuelve siempre <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> es mayor que el número de elementos de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por <ph id="ph1">`other`</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> y <ph id="ph6">`m`</ph> es el número de elementos de <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of the specified collection.</source>
          <target state="translated">Determina si un objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un supraconjunto de la colección especificada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> es un supraconjunto de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>All collections, including the empty set, are supersets of the empty set.</source>
          <target state="translated">Todas las colecciones, incluso el conjunto vacío, son supraconjuntos del conjunto vacío.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty, even if the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty.</source>
          <target state="translated">Por lo tanto, este método devuelve <ph id="ph1">`true`</ph> si la colección representada por el <ph id="ph2">`other`</ph> parámetro está vacío, incluso si la actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto está vacío.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Este método devuelve siempre <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> es menor que el número de elementos de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por <ph id="ph1">`other`</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es el número de elementos de <ph id="ph5">`other`</ph> y <ph id="ph6">`m`</ph> es <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>Gets the maximum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtiene el valor máximo de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, tal y como define el comparador.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>The maximum value in the set.</source>
          <target state="translated">Valor máximo del conjunto.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>Gets the minimum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtiene el valor mínimo de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, tal y como define el comparador.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>The minimum value in the set.</source>
          <target state="translated">Valor mínimo del conjunto.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Origen del evento de deserialización.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y genera el evento de deserialización cuando esta ha finalizado.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Llamar a este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is invalid.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> asociado al objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual no es válido.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and a specified collection share common elements.</source>
          <target state="translated">Determina si el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual y una colección especificada comparten elementos comunes.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="other" /&gt;</ph> comparten al menos un elemento común; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Cualquier duplicar elementos en <ph id="ph1">`other`</ph> se omiten.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es el número de elementos de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">Elemento que se va a quitar.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>Removes a specified item from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Quita un elemento especificado de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is found and successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento se encuentra y quita correctamente; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged and no exception is thrown.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto no contiene el elemento especificado, el objeto permanece sin cambios y se inicia ninguna excepción.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">`item`</ph> can be <ph id="ph2">`null`</ph> for reference types.</source>
          <target state="translated"><ph id="ph1">`item`</ph> puede ser <ph id="ph2">`null`</ph> para tipos de referencia.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Este método es una operación O (n de registro).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Delegado que define las condiciones de los elementos que se van a quitar.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Removes all elements that match the conditions defined by the specified predicate from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Quita de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> todos los elementos que cumplen las condiciones definidas por el predicado especificado.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The number of elements that were removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> collection..</source>
          <target state="translated">Número de elementos que se quitaron de la colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">`match`</ph> must not modify the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`match`</ph> no debe modificar el <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Doing so can cause unexpected results.</source>
          <target state="translated">Si lo hace, puede provocar resultados inesperados.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Llamar a este método es una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The following example removes unwanted elements from a sorted set.</source>
          <target state="translated">En el ejemplo siguiente se quita los elementos no deseados de un conjunto ordenado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that iterates over the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que itera en orden inverso por <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>An enumerator that iterates over the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Un enumerador que itera en orden inverso por <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and the specified collection contain the same elements.</source>
          <target state="translated">Determina si el objeto<ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual y la colección especificada contienen los mismos elementos.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is equal to <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual es igual a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; de lo contrario, false.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores the order of elements and any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Este método omite el orden de los elementos y los elementos duplicados en <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(log<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la colección representada por <ph id="ph1">`other`</ph> es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (registro<ph id="ph4">`n`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operación, donde <ph id="ph4">`n`</ph> es el número de elementos de <ph id="ph5">`other`</ph> y <ph id="ph6">`m`</ph> es <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.</source>
          <target state="translated">Modifica el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual para que únicamente contenga elementos que están presentes en el objeto actual o en la colección especificada, pero no en ambos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Cualquier duplicar elementos en <ph id="ph1">`other`</ph> se omiten.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(n log <ph id="ph4">`m`</ph>) operation.</source>
          <target state="translated">Si el <ph id="ph1">`other`</ph> parámetro es un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> colección con el mismo comparador de igualdad que actual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto, este método es una O (n registro <ph id="ph4">`m`</ph>) operación.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`m`</ph>) + O(<ph id="ph3">`n`</ph> log <ph id="ph4">`n`</ph>) operation, where <ph id="ph5">`n`</ph> is the number of elements in <ph id="ph6">`other`</ph> and <ph id="ph7">`m`</ph> is <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">En caso contrario, este método es una O (<ph id="ph1">`n`</ph> registro <ph id="ph2">`m`</ph>) + N (<ph id="ph3">`n`</ph> registro <ph id="ph4">`n`</ph>) operación, donde <ph id="ph5">`n`</ph> es el número de elementos de <ph id="ph6">`other`</ph> y <ph id="ph7">`m`</ph> es <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Objeto que se va a agregar al objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Agrega un elemento a un objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> es menor que <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Si se debe aumentar la capacidad para alojar el nuevo elemento, este método se convierte en una O (<ph id="ph1">`n`</ph>) operación, donde <ph id="ph2">`n`</ph> es <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtiene un valor que indica si un objeto <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección es de solo lectura; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtiene el valor de esta propiedad es una operación o (1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración una colección.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Matriz unidimensional que constituye el destino de los elementos copiados desde <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">La matriz debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia toda la <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> en una matriz unidimensional compatible, empezando en el índice especificado de la matriz.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">El número de elementos de la matriz de origen es mayor que el espacio disponible desde el <ph id="ph1">&lt;paramref name="index" /&gt;</ph> hasta el final de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtiene un valor que indica si el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el acceso a la interfaz <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene un objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">En la implementación predeterminada de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, esta propiedad siempre devuelve la instancia actual.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Devuelve un enumerador que recorre en iteración una colección.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método es una operación o (1).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Origen del evento de deserialización.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> y genera el evento de deserialización cuando esta ha finalizado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance is invalid.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> asociado a la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual no es válido.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene la información necesaria para serializar la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino de la secuencia serializada asociada a la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and returns the data that you need to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y devuelve los datos necesarios para serializar la instancia de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para proporcionar servicios de serialización.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Colección que se va a comparar con el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains all elements that are present in either the current object or the specified collection.</source>
          <target state="translated">Modifica el objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actual para que contenga todos los elementos que están presentes en el objeto actual o en la colección especificada.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Cualquier duplicar elementos en <ph id="ph1">`other`</ph> se omiten.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>