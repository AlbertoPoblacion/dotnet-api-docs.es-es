<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="762353f1ded7fc016489bf03175a6e5d2e2a0000" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34244585" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa la dirección de un remitente o destinatario de correo electrónico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
El <xref:System.Net.Mail.MailAddress> clase es utilizada por la <xref:System.Net.Mail.SmtpClient> y <xref:System.Net.Mail.MailMessage> clases para almacenar información de dirección para mensajes de correo electrónico.  
  
Una dirección de correo electrónico se compone de un <xref:System.Net.Mail.MailAddress.User%2A> nombre, <xref:System.Net.Mail.MailAddress.Host%2A> nombre y, opcionalmente, un <xref:System.Net.Mail.MailAddress.DisplayName%2A>. La <xref:System.Net.Mail.MailAddress.DisplayName%2A> puede contener caracteres no ASCII si se codifican.  
  
La <xref:System.Net.Mail.MailAddress> clase es compatible con los siguientes formatos de dirección de correo electrónico:  
  
-   Un formato de dirección simple de `user@host`. Si un <xref:System.Net.Mail.MailAddress.DisplayName%2A> no está establecido, este es el formato de dirección de correo electrónico generado.  
  
-   Un formato de nombre Mostrar entrecomillado estándar de `"display name" <user@host>`. Si un <xref:System.Net.Mail.MailAddress.DisplayName%2A> se establece, este es el formato generado.  
  
-   Se agregan corchetes angulares alrededor de la <xref:System.Net.Mail.MailAddress.User%2A> nombre, <xref:System.Net.Mail.MailAddress.Host%2A> nombre para `"display name" user@host` si no están incluidas.  
  
-   Si se agregan comillas alrededor de la <xref:System.Net.Mail.MailAddress.DisplayName%2A> para `display name <user@host>`, si no están incluidas.  
  
-   Se admiten caracteres Unicode en el <xref:System.Net.Mail.MailAddress.DisplayName%2A> propiedad.  
  
-   Un <xref:System.Net.Mail.MailAddress.User%2A> nombre entre comillas. Por ejemplo: `"user name"@host`.  
  
-   Puntos consecutivos y finales en los nombres de usuario. Por ejemplo: `user...name..@host`.  
  
-   Literales de dominio entre corchetes. Por ejemplo: `<user@[my domain]>`.  
  
-   Comentarios. Por ejemplo: `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Los comentarios se quitan antes de la transmisión.  
  
Se utiliza una coma para separar los elementos en una lista de direcciones de correo electrónico. Como resultado, una coma no debe usarse en nombres para mostrar sin comillas en una lista. ¿Se permiten las siguientes direcciones de correo electrónico:
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
No se permitirá la siguiente dirección de correo electrónico:  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Las comillas se pueden incrustar en una cadena entre comillas, pero deben ser de escape. ¿Se permiten las siguientes direcciones de correo electrónico:
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
No se permitirá la siguiente dirección de correo electrónico:  
  
`"John "Jr" Doe" <user@host>`  
  
Si el nombre de usuario está entrecomillado, todo el texto entre el inicio de la cadena (o coma) y la dirección se consideran parte de la <xref:System.Net.Mail.MailAddress.DisplayName%2A>, incluidos los comentarios. Por ejemplo:
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Aunque la <xref:System.Net.Mail.MailAddress> clase acepta una dirección de correo electrónico como servidores de correo electrónico válida, otros no pueden aceptar la dirección de correo electrónico.  
  
La <xref:System.Net.Mail.MailAddress> clase no admite los siguientes formatos de dirección de correo electrónico:  
  
- Mixto nombres para mostrar entre comillas y sin comillas. Por ejemplo: `display "name" <user@host>`.
  
- Grupos, como se define en RFC 2822 sección 3.4 publicada por IETF.  
  
- Los formatos de nombre de usuario obsoletos de `"user"."name"@host`, `user."name"@host` o `"user".name@host`.
  
   
  
## Examples  
En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico mediante el uso de la <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, y <xref:System.Net.Mail.MailMessage> clases.  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.MailAddress" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Elemento <see cref="T:System.String" /> que contiene una dirección de correo electrónico.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.MailAddress" /> mediante la dirección especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `address` parámetro puede contener un nombre para mostrar y la dirección de correo electrónico asociada si se incluye entre corchetes angulares. Por ejemplo:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Se permite el espacio en blanco entre el nombre para mostrar y los corchetes angulares.  
  
 En la tabla siguiente se muestra los valores de propiedad para un <xref:System.Net.Mail.MailAddress> objeto construido utilizando la dirección del ejemplo anterior.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza este constructor para crear un <xref:System.Net.Mail.MailAddress> de objeto para el <xref:System.Net.Mail.MailMessage.Bcc%2A> destinatario de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> es <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">El parámetro <paramref name="address" /> no tiene un formato reconocido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Elemento <see cref="T:System.String" /> que contiene una dirección de correo electrónico.</param>
        <param name="displayName">
          <see cref="T:System.String" /> que contiene el nombre para mostrar asociado a <c>address</c>. Este parámetro puede ser <see langword="null" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.MailAddress" /> utilizando la dirección y el nombre para mostrar que se hayan especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se conserva el espacio en blanco inicial y final en el nombre para mostrar.  
  
 Si `displayName` contiene caracteres no ASCII, el juego de caracteres iso-8859-1 se utiliza para la `displayName` codificación. Codificación de caracteres no ASCII se describe en RFC 1522, que está disponible en [ https://www.ietf.org/ ](https://www.ietf.org/).  
  
 Si `address` contiene un nombre para mostrar, y `displayName` no `null` y no es igual a <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` invalida el valor especificado en `address`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza este constructor para crear <xref:System.Net.Mail.MailAddress> instancias para el remitente y el destinatario de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> es <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">El parámetro <paramref name="address" /> no tiene un formato reconocido.  -o bien- <paramref name="address" /> contiene caracteres no ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">Elemento <see cref="T:System.String" /> que contiene una dirección de correo electrónico.</param>
        <param name="displayName">
          <see cref="T:System.String" /> que contiene el nombre para mostrar asociado a <c>address</c>.</param>
        <param name="displayNameEncoding">
          <see cref="T:System.Text.Encoding" /> que define el juego de caracteres usado para <c>displayName</c>.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.MailAddress" /> utilizando la dirección, el nombre para mostrar y la codificación que se hayan especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se conserva el espacio en blanco inicial y final en el nombre para mostrar.  
  
 Si `address` contiene un nombre para mostrar, y `displayName` no `null` y no es igual a <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` invalida el valor especificado en `address`.  
  
 El <xref:System.Net.Mail.MailAddress.%23ctor%2A> método no comprueba si el `displayName` parámetro es válido. Este método quita adyacentes comillas no se muestra de la <xref:System.Net.Mail.MailAddress.DisplayName%2A> propiedad. Las comillas se agregarán antes de la transmisión, excepto donde <xref:System.Text.Encoding.ASCII%2A> o <xref:System.Text.Encoding.Unicode%2A> se especifica en el `displayNameEncoding` parámetro. La codificación especificada en el `displayNameEncoding` parámetro se aplicará a la <xref:System.Net.Mail.MailAddress.DisplayName%2A> propiedad antes de la transmisión <xref:System.Text.Encoding.ASCII%2A> o <xref:System.Text.Encoding.Unicode%2A> se especifica en el `displayNameEncoding` parámetro. <xref:System.Text.Encoding.UTF8%2A> es la codificación predeterminada si no se especifica ninguno.  
  
 Para obtener más información sobre el formato de dirección de correo electrónico compatibles, consulte <xref:System.Net.Mail.MailAddress>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza este constructor para crear <xref:System.Net.Mail.MailAddress> instancias para el remitente de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> es <see langword="null" />.  -o bien- <paramref name="displayName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> es <see cref="F:System.String.Empty" /> ("").  -o bien- <paramref name="displayName" /> es <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">El parámetro <paramref name="address" /> no tiene un formato reconocido.  -o bien- <paramref name="address" /> contiene caracteres no ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección de correo electrónico especificada en el momento de crear esta instancia.</summary>
        <value>Elemento <see cref="T:System.String" /> que contiene la dirección de correo electrónico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por esta propiedad no incluye la <xref:System.Net.Mail.MailAddress.DisplayName%2A> información.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la dirección de un destinatario del mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre para mostrar creado a partir del nombre para mostrar y de la información de dirección que se especificaron al crear esta instancia.</summary>
        <value>Objeto <see cref="T:System.String" /> que contiene el nombre para mostrar; de lo contrario, <see cref="F:System.String.Empty" /> ("") si no se especificó ningún tipo de información al crear esta instancia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nombres para mostrar que contienen caracteres no ASCII se devuelven en formato legible. Use la <xref:System.Net.Mail.MailAddress.ToString%2A> método para obtener la forma codificada de la <xref:System.Net.Mail.MailAddress.DisplayName%2A>.  
  
 Algunos programas de software que se utilizan para leer correo electrónico muestran la <xref:System.Net.Mail.MailAddress.DisplayName%2A> valor de propiedad en lugar de, o además, la dirección de correo electrónico.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se muestra la <xref:System.Net.Mail.MailAddress.DisplayName%2A> para el destinatario de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>Compara dos direcciones de correo.</summary>
        <returns>Es <see langword="true" /> si las dos direcciones de correo son iguales; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un valor hash de una dirección de correo.</summary>
        <returns>Valor hash entero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Mail.MailAddress.GetHashCode%2A> método devuelve un código hash de la dirección de correo electrónico. Este valor puede utilizarse como clave en las tablas hash.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte correspondiente al host de la dirección que se especificó al crear esta instancia.</summary>
        <value>A <see cref="T:System.String" /> que contiene el nombre del equipo host que acepta el correo electrónico para la <see cref="P:System.Net.Mail.MailAddress.User" /> propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En una dirección de correo electrónico típicos, la cadena de host incluye todas las siguiente información el "`@`" inicio de sesión. Por ejemplo, en `"tsmith@contoso.com"`, el host es `"contoso.com"`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el destino de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una representación en forma de cadena de esta instancia.</summary>
        <returns>Objeto <see cref="T:System.String" /> que incluye el contenido de esta dirección <see cref="T:System.Net.Mail.MailAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta por este método no es necesariamente idéntica a la cadena especificada cuando se creó la instancia. Si el <xref:System.Net.Mail.MailAddress.DisplayName%2A> propiedad no es `null` y no es igual a <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> devuelve una cadena creada mediante la sintaxis siguiente:  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Si <xref:System.Net.Mail.MailAddress.DisplayName%2A> es `null` o es igual a <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> devuelve el valor de la <xref:System.Net.Mail.MailAddress.Address%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el destino de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de usuario a partir de la dirección que se especificó al crear esta instancia.</summary>
        <value>Objeto <see cref="T:System.String" /> que contiene la parte correspondiente al nombre de usuario de <see cref="P:System.Net.Mail.MailAddress.Address" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En una dirección de correo electrónico típicos, la cadena de usuario incluye toda la información anterior del "`@`" inicio de sesión. Por ejemplo, en `"tsmith@contoso.com"`, el usuario es `"tsmith"`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el destino de un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>