<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb9568859c7f00af5e206664fef877aeb64761de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36475453" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite que las aplicaciones envíen correo electrónico con el Protocolo simple de transferencia de correo (SMTP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Net.Mail.SmtpClient> clase se utiliza para enviar correo electrónico a un servidor SMTP para la entrega. El protocolo SMTP se define en RFC 2821, que está disponible en [ https://www.ietf.org ](https://www.ietf.org/).  
  
 Las clases que aparecen en la siguiente tabla se usan para construir mensajes de correo electrónico que se pueden enviar mediante <xref:System.Net.Mail.SmtpClient>.  
  
|Clase|Descripción|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Representa los archivos adjuntos. Esta clase permite adjuntar archivos, secuencias o texto a un mensaje de correo electrónico.|  
|<xref:System.Net.Mail.MailAddress>|Representa la dirección de correo electrónico del remitente y los destinatarios.|  
|<xref:System.Net.Mail.MailMessage>|Representa un mensaje de correo electrónico.|  
  
 Para generar y enviar un mensaje de correo electrónico mediante <xref:System.Net.Mail.SmtpClient>, debe especificar la siguiente información:  
  
-   El servidor de host de SMTP que se utiliza para enviar correo electrónico. Consulte la <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades.  
  
-   Credenciales de autenticación, si es necesario por el servidor SMTP. Vea la propiedad <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
-   La dirección de correo electrónico del remitente. Consulte la <xref:System.Net.Mail.SmtpClient.Send%2A> y <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos que toman un `from` parámetro. Consulte también la <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> propiedad.  
  
-   La dirección de correo electrónico o las direcciones de los destinatarios. Consulte la <xref:System.Net.Mail.SmtpClient.Send%2A> y <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos que toman un `recipient` parámetro. Consulte también la <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> propiedad.  
  
-   El contenido del mensaje. Consulte la <xref:System.Net.Mail.SmtpClient.Send%2A> y <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos que toman un `body` parámetro. Consulte también la <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> propiedad.  
  
 Para incluir un archivo adjunto con un mensaje de correo electrónico, crear los datos adjuntos con el <xref:System.Net.Mail.Attachment> clase y, a continuación, agregarla al mensaje con el <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> propiedad. Según el lector de correo electrónico usado por los destinatarios y el tipo de archivo de los datos adjuntos, es podrían que algunos destinatarios no que pueda leer los datos adjuntos. Para los clientes que no se pueden mostrar los datos adjuntos en su forma original, puede especificar vistas alternativas mediante la <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> propiedad.  
  
 En .NET Framework, puede usar la aplicación o los archivos de configuración de máquina para especificar default host, puerto y valores de las credenciales para todos los <xref:System.Net.Mail.SmtpClient> objetos. Para obtener más información, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .NET core no admite establecer como predeterminados. Como alternativa, debe establecer las propiedades relevantes en <xref:System.Net.Mail.SmtpClient> directamente.  
  
 Para enviar el mensaje de correo electrónico y bloquear mientras se espera para que el correo electrónico que debe transmitirse en el servidor SMTP, utilice uno de sincrónico <xref:System.Net.Mail.SmtpClient.Send%2A> métodos. Para permitir el subproceso principal de su programa continúe ejecutándose mientras se transmite el correo electrónico, utilice uno de los asincrónica <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos. El <xref:System.Net.Mail.SmtpClient.SendCompleted> evento se desencadena cuando una <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación completa. Para recibir este evento, debe agregar una <xref:System.Net.Mail.SendCompletedEventHandler> delegar a <xref:System.Net.Mail.SmtpClient.SendCompleted>. El <xref:System.Net.Mail.SendCompletedEventHandler> delegado debe hacer referencia a un método de devolución de llamada que controle la notificación de <xref:System.Net.Mail.SmtpClient.SendCompleted> eventos. Para cancelar una transmisión de correo electrónico asincrónica, utilice el <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> método.  
  
> [!NOTE]
>  Si hay una transmisión de correo electrónico en curso y se llama <xref:System.Net.Mail.SmtpClient.SendAsync%2A> o <xref:System.Net.Mail.SmtpClient.Send%2A> de nuevo, recibirá un <xref:System.InvalidOperationException>.  
  
 La conexión establecida por la instancia actual de la <xref:System.Net.Mail.SmtpClient> clase en el servidor SMTP puede volver a usar si una aplicación desea enviar varios mensajes al mismo servidor SMTP. Esto es especialmente útil cuando se utiliza la autenticación o cifrado de establecer una conexión con el servidor SMTP. El proceso de autenticar y establecer una sesión de TLS puede ser operaciones costosas. Un requisito para volver a establecer una conexión para cada mensaje al enviar una gran cantidad de correo electrónico en el mismo servidor SMTP podría tener un impacto significativo en el rendimiento. Hay una serie de aplicaciones de correo electrónico de gran volumen que enviar las actualizaciones de estado de correo electrónico, distribuciones de boletín o alertas de correo electrónico. También muchas aplicaciones de cliente de correo electrónico admiten un modo fuera de línea donde los usuarios pueden crear muchos mensajes de correo electrónico que se envían más tarde cuando se establece una conexión al servidor SMTP. Es habitual que un cliente de correo electrónico enviar todos los mensajes SMTP a un servidor SMTP concreto (proporcionado por el proveedor de servicios de Internet) que, a continuación, reenvía este correo electrónico a otros servidores SMTP.  
  
 El <xref:System.Net.Mail.SmtpClient> implementación de la clase de grupos de conexiones SMTP para que pueda evitar la sobrecarga que supone volver a establecer una conexión para cada mensaje en el mismo servidor. Una aplicación puede volver a usar el mismo <xref:System.Net.Mail.SmtpClient> objeto que se va a enviar muchos mensajes de correo electrónico diferentes en el mismo servidor SMTP y en varios servidores SMTP distintos. Como resultado, no hay ninguna manera de determinar si una aplicación ha terminado con el <xref:System.Net.Mail.SmtpClient> objeto y se deben limpiar.  
  
 Al finalizar una sesión de SMTP y el cliente desea finalizar la conexión, debe enviar un mensaje QUIT al servidor para indicar que tiene no hay más mensajes para enviar. Esto permite al servidor liberar los recursos asociados con la conexión desde el cliente y procesar los mensajes que fueron enviados por el cliente.  
  
 El <xref:System.Net.Mail.SmtpClient> clase no tiene ninguna `Finalize` método, por lo que una aplicación debe llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A> para liberar explícitamente a los recursos. El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método recorre en iteración todas las conexiones establecidas con el servidor SMTP especificado en el <xref:System.Net.Mail.SmtpClient.Host%2A> propiedad y envía un mensaje QUIT seguido de la correcta finalización de la conexión TCP. El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método también libera los recursos no administrados utilizados por el <xref:System.Net.Sockets.Socket> y, opcionalmente, desecha los recursos administrados.  
  
 Llame a <xref:System.Net.Mail.SmtpClient.Dispose%2A> cuando haya terminado de usar <xref:System.Net.Mail.SmtpClient>. El método <xref:System.Net.Mail.SmtpClient.Dispose%2A> deja el <xref:System.Net.Mail.SmtpClient> en un estado no utilizable. Después de llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Net.Mail.SmtpClient> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Mail.SmtpClient> estaba ocupando.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico de forma asincrónica.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpClient" /> usando la configuración del archivo de configuración.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades para el nuevo <xref:System.Net.Mail.SmtpClient> mediante la configuración de la aplicación o los archivos de configuración del equipo. Para obtener más información, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Para obtener un ejemplo de la \<mailSettings > nodo de la aplicación o el archivo de configuración del equipo, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">para construir un <see cref="T:System.Net.Mail.SmtpClient" />. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Objeto <see cref="T:System.String" /> que contiene el nombre o la dirección IP del equipo host utilizado para las transacciones SMTP.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpClient" /> que envía correo electrónico con el servidor SMTP especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `host` parámetro se usa para inicializar el valor de la <xref:System.Net.Mail.SmtpClient.Host%2A> propiedad. El <xref:System.Net.Mail.SmtpClient.Credentials%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> las propiedades se inicializan mediante la configuración de la aplicación o los archivos de configuración del equipo. Si `host` es `null` o igual que <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> se inicializa con la configuración de la aplicación o los archivos de configuración del equipo.  
  
 Para obtener más información sobre el uso de la aplicación y los archivos de configuración del equipo, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si se especifica información mediante <xref:System.Net.Mail.SmtpClient> constructores o propiedades, esta información reemplaza el archivo de configuración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">para construir un <see cref="T:System.Net.Mail.SmtpClient" />. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Objeto <see cref="T:System.String" /> que contiene el nombre o la dirección IP del host utilizado para las transacciones SMTP.</param>
        <param name="port">
          <see cref="T:System.Int32" /> mayor que cero que contiene el puerto que se va a usar en <c>host</c>.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Mail.SmtpClient" /> que envía correo electrónico con el servidor SMTP y el puerto especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `host` y `port` parámetros establecerá el valor de la <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades, respectivamente. Si `host` es `null` o igual que <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> se inicializa con la configuración de la aplicación o los archivos de configuración del equipo. Si `port` es cero, <xref:System.Net.Mail.SmtpClient.Port%2A> se inicializa con la configuración de la aplicación o los archivos de configuración del equipo. El <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedad se inicializa con la configuración de la aplicación o los archivos de configuración del equipo.  
  
 Para obtener más información sobre el uso de la aplicación y los archivos de configuración del equipo, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si se especifica información mediante <xref:System.Net.Mail.SmtpClient> constructores o propiedades, esta información reemplaza el archivo de configuración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="port" /> no puede ser menor que cero.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">para especificar el puerto. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifique los certificados que deben utilizarse para establecer la conexión SSL (Secure Sockets Layer).</summary>
        <value>Colección <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, que contiene uno o varios certificados de cliente. El valor predeterminado se deriva de los atributos de configuración de correo de un archivo de configuración.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certificados de cliente son, de forma predeterminada, es opcional; Sin embargo, la configuración del servidor puede requerir que el cliente presentar un certificado válido como parte de la negociación de la conexión inicial.  
  
> [!NOTE]
>  El marco de trabajo se almacena en caché las sesiones SSL que se crean y se intenta reutilizar una sesión almacenada en caché para una nueva solicitud, si es posible. Al intentar reutilizar una sesión SSL, el marco de trabajo usa el primer elemento de <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (si hay alguno), o intenta reutilizar una sesión anónima si <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> está vacía.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se establece una conexión SSL con el servidor SMTP y utiliza la conexión para enviar un correo electrónico.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las credenciales utilizadas para autenticar al remitente.</summary>
        <value>Interfaz <see cref="T:System.Net.ICredentialsByHost" /> que representa las credenciales que se van a utilizar para la autenticación; o <see langword="null" /> si no se han especificado credenciales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algunos servidores SMTP requieren que el cliente se autentique antes de que el servidor enviará correo electrónico en su nombre. Para usar las credenciales de red predeterminadas, puede establecer la <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> a `true` en lugar de establecer esta propiedad. Si el <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propiedad está establecida en `false,` , a continuación, el valor se establece en el <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedad se utilizará para las credenciales al conectarse al servidor. Si el <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propiedad está establecida en `false` y <xref:System.Net.Mail.SmtpClient.Credentials%2A> no se estableció la propiedad, a continuación, se envía correo al servidor de forma anónima.  
  
 Información de credenciales también puede especificarse mediante la aplicación y los archivos de configuración del equipo. Para obtener más información, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si se especifica información mediante la <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedad, esta información reemplaza el archivo de configuración.  
  
> [!CAUTION]
>  Si proporciona credenciales para la autenticación básica, se envían al servidor como texto no cifrado. Esto puede suponer un riesgo de seguridad porque sus credenciales se pueden ver y, a continuación, utilizar otros.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer las credenciales usadas para enviar un correo electrónico.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se puede cambiar el valor de esta propiedad cuando se está enviando un mensaje de correo electrónico.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato de entrega usado por <see cref="T:System.Net.Mail.SmtpClient" /> al enviar correo electrónico.</summary>
        <value>Devuelva <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />.  Formato de entrega usado por <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica la forma en que se controlarán los mensajes de correo electrónico salientes.</summary>
        <value>Enumeración <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> que indica la forma en que deben entregarse los mensajes de correo electrónico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los métodos de entrega son:  
  
-   Un servidor SMTP.  
  
-   Mover el correo electrónico en el directorio de recogida para IIS, lo que le entrega el mensaje.  
  
-   Si mueve el correo electrónico a un directorio especificado por <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> para entregarse más tarde por otra aplicación.  
  
 El valor predeterminado de esta propiedad también puede establecerse en una máquina o un archivo de configuración de aplicación. Los cambios realizados en el <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> el archivo de configuración de reemplazo de propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía un mensaje QUIT al servidor SMTP, finaliza correctamente la conexión TCP y libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La conexión establecida por la instancia actual de la <xref:System.Net.Mail.SmtpClient> clase en el servidor SMTP puede volver a usar si una aplicación desea enviar varios mensajes al mismo servidor SMTP. Esto es especialmente útil cuando se utiliza la autenticación o cifrado de establecer una conexión con el servidor SMTP. El proceso de autenticar y establecer una sesión de TLS puede ser operaciones costosas. Un requisito para volver a establecer una conexión para cada mensaje al enviar una gran cantidad de correo electrónico en el mismo servidor SMTP podría tener un impacto significativo en el rendimiento. Hay una serie de aplicaciones de correo electrónico de gran volumen que enviar las actualizaciones de estado de correo electrónico, distribuciones de boletín o alertas de correo electrónico. También muchas aplicaciones de cliente de correo electrónico admiten un modo fuera de línea donde los usuarios pueden crear muchos mensajes de correo electrónico que se envían más tarde cuando se establece una conexión al servidor SMTP. Es habitual que un cliente de correo electrónico enviar todos los mensajes SMTP a un servidor SMTP concreto (proporcionado por el proveedor de servicios de Internet) que, a continuación, reenvía este correo electrónico a otros servidores SMTP.  
  
 El <xref:System.Net.Mail.SmtpClient> implementación de la clase de grupos de conexiones SMTP para que pueda evitar la sobrecarga que supone volver a establecer una conexión para cada mensaje en el mismo servidor. Una aplicación puede volver a usar el mismo <xref:System.Net.Mail.SmtpClient> objeto que se va a enviar muchos mensajes de correo electrónico diferentes en el mismo servidor SMTP y en varios servidores SMTP distintos. Como resultado, no hay ninguna manera de determinar si una aplicación ha terminado con el <xref:System.Net.Mail.SmtpClient> objeto y se deben limpiar.  
  
 Al finalizar una sesión de SMTP y el cliente desea finalizar la conexión, debe enviar un mensaje QUIT al servidor para indicar que tiene no hay más mensajes para enviar. Esto permite al servidor liberar los recursos asociados con la conexión desde el cliente y procesar los mensajes que fueron enviados por el cliente.  
  
 El <xref:System.Net.Mail.SmtpClient.Dispose%2A> métodos recorre en iteración las conexiones establecidas todas y envíe un mensaje QUIT a cada servidor SMTP, seguido por la correcta finalización de la conexión TCP. Estos métodos también liberar los recursos no administrados utilizados por el <xref:System.Net.Sockets.Socket> y, opcionalmente, desechar los recursos administrados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envía un mensaje QUIT al servidor SMTP, finaliza correctamente la conexión TCP y libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La conexión establecida por la instancia actual de la <xref:System.Net.Mail.SmtpClient> clase en el servidor SMTP puede volver a usar si una aplicación desea enviar varios mensajes al mismo servidor SMTP. Esto es especialmente útil cuando se utiliza la autenticación o cifrado de establecer una conexión con el servidor SMTP. El proceso de autenticar y establecer una sesión de TLS puede ser operaciones costosas. Un requisito para volver a establecer una conexión para cada mensaje al enviar una gran cantidad de correo electrónico en el mismo servidor SMTP podría tener un impacto significativo en el rendimiento. Hay una serie de aplicaciones de correo electrónico de gran volumen que enviar las actualizaciones de estado de correo electrónico, distribuciones de boletín o alertas de correo electrónico. También muchas aplicaciones de cliente de correo electrónico admiten un modo fuera de línea donde los usuarios pueden crear muchos mensajes de correo electrónico que se envían más tarde cuando se establece una conexión al servidor SMTP. Es habitual que un cliente de correo electrónico enviar todos los mensajes SMTP a un servidor SMTP concreto (proporcionado por el proveedor de servicios de Internet) que, a continuación, reenvía este correo electrónico a otros servidores SMTP.  
  
 El <xref:System.Net.Mail.SmtpClient> implementación de la clase de grupos de conexiones SMTP para que pueda evitar la sobrecarga que supone volver a establecer una conexión para cada mensaje en el mismo servidor. Una aplicación puede volver a usar el mismo <xref:System.Net.Mail.SmtpClient> objeto que se va a enviar muchos mensajes de correo electrónico diferentes en el mismo servidor SMTP y en varios servidores SMTP distintos. Como resultado, no hay ninguna manera de determinar si una aplicación ha terminado con el <xref:System.Net.Mail.SmtpClient> objeto y se deben limpiar.  
  
 Al finalizar una sesión de SMTP y el cliente desea finalizar la conexión, debe enviar un mensaje QUIT al servidor para indicar que tiene no hay más mensajes para enviar. Esto permite al servidor liberar los recursos asociados con la conexión desde el cliente y procesar los mensajes que fueron enviados por el cliente.  
  
 Llamar a la <xref:System.Net.Mail.SmtpClient.Dispose%2A> método en un <xref:System.Net.Mail.SmtpClient> objeto que se está ejecutando una asincrónica <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación cancelará la operación de envío como si fuesen el <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> hubiera llamado al método.  
  
 El <xref:System.Net.Mail.SmtpClient> clase no tiene ningún `Finalize` método. Por lo que una aplicación debe llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A> para liberar explícitamente a los recursos.  
  
 El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método recorre en iteración todas las conexiones establecidas con el servidor SMTP especificado en el <xref:System.Net.Mail.SmtpClient.Host%2A> propiedad y envía un mensaje QUIT seguido de la correcta finalización de la conexión TCP. El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método también libera los recursos no administrados utilizados por subyacente <xref:System.Net.Sockets.Socket>.  
  
 Llame a <xref:System.Net.Mail.SmtpClient.Dispose%2A> cuando haya terminado de usar <xref:System.Net.Mail.SmtpClient>. El método <xref:System.Net.Mail.SmtpClient.Dispose%2A> deja el <xref:System.Net.Mail.SmtpClient> en un estado no utilizable. Después de llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Net.Mail.SmtpClient> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Mail.SmtpClient> estaba ocupando.  
  
 Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Realice siempre una llamada a <xref:System.Net.Mail.SmtpClient.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Net.Mail.SmtpClient>. En caso contrario, no se liberarán los recursos que está usando para que el recolector de elementos no utilizados pueda reclamar la memoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
        <summary>Envía un mensaje QUIT al servidor SMTP, finaliza correctamente la conexión TCP, libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Net.Mail.SmtpClient" /> y opcionalmente elimina los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La conexión establecida por la instancia actual de la <xref:System.Net.Mail.SmtpClient> clase en el servidor SMTP puede volver a usar si una aplicación desea enviar varios mensajes al mismo servidor SMTP. Esto es especialmente útil cuando se utiliza la autenticación o cifrado de establecer una conexión con el servidor SMTP. El proceso de autenticar y establecer una sesión de TLS puede ser operaciones costosas. Un requisito para volver a establecer una conexión para cada mensaje al enviar una gran cantidad de correo electrónico en el mismo servidor SMTP podría tener un impacto significativo en el rendimiento. Hay una serie de aplicaciones de correo electrónico de gran volumen que enviar las actualizaciones de estado de correo electrónico, distribuciones de boletín o alertas de correo electrónico. También muchas aplicaciones de cliente de correo electrónico admiten un modo fuera de línea donde los usuarios pueden crear muchos mensajes de correo electrónico que se envían más tarde cuando se establece una conexión al servidor SMTP. Es habitual que un cliente de correo electrónico enviar todos los mensajes SMTP a un servidor SMTP concreto (proporcionado por el proveedor de servicios de Internet) que, a continuación, reenvía este correo electrónico a otros servidores SMTP.  
  
 El <xref:System.Net.Mail.SmtpClient> implementación de la clase de grupos de conexiones SMTP para que pueda evitar la sobrecarga que supone volver a establecer una conexión para cada mensaje en el mismo servidor. Una aplicación puede volver a usar el mismo <xref:System.Net.Mail.SmtpClient> objeto que se va a enviar muchos mensajes de correo electrónico diferentes en el mismo servidor SMTP y en varios servidores SMTP distintos. Como resultado, no hay ninguna manera de determinar si una aplicación ha terminado con el <xref:System.Net.Mail.SmtpClient> objeto y se deben limpiar.  
  
 Al finalizar una sesión de SMTP y el cliente desea finalizar la conexión, debe enviar un mensaje QUIT al servidor para indicar que tiene no hay más mensajes para enviar. Esto permite al servidor liberar los recursos asociados con la conexión desde el cliente y procesar los mensajes que fueron enviados por el cliente.  
  
 Llamar a la <xref:System.Net.Mail.SmtpClient.Dispose%2A> método en un <xref:System.Net.Mail.SmtpClient> objeto que se está ejecutando una asincrónica <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación cancelará la operación de envío como si fuesen el <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> hubiera llamado al método.  
  
 El <xref:System.Net.Mail.SmtpClient> clase no tiene ningún `Finalize` método. Por lo que una aplicación debe llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A> para liberar explícitamente a los recursos.  
  
 El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método recorre en iteración todas las conexiones establecidas con el servidor SMTP especificado en el <xref:System.Net.Mail.SmtpClient.Host%2A> propiedad y envía un mensaje QUIT seguido de la correcta finalización de la conexión TCP. El <xref:System.Net.Mail.SmtpClient.Dispose%2A> método también libera los recursos no administrados utilizados por el <xref:System.Net.Sockets.Socket> y, opcionalmente, desecha los recursos administrados.  
  
 Llame a <xref:System.Net.Mail.SmtpClient.Dispose%2A> cuando haya terminado de usar <xref:System.Net.Mail.SmtpClient>. El método <xref:System.Net.Mail.SmtpClient.Dispose%2A> deja el <xref:System.Net.Mail.SmtpClient> en un estado no utilizable. Después de llamar a <xref:System.Net.Mail.SmtpClient.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Net.Mail.SmtpClient> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Mail.SmtpClient> estaba ocupando.  
  
 Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Realice siempre una llamada a <xref:System.Net.Mail.SmtpClient.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Net.Mail.SmtpClient>. En caso contrario, no se liberarán los recursos que está usando para que el recolector de elementos no utilizados pueda reclamar la memoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifique si el objeto <see cref="T:System.Net.Mail.SmtpClient" /> utiliza SSL (Secure Sockets Layer) para cifrar la conexión.</summary>
        <value>Es <see langword="true" /> si el objeto <see cref="T:System.Net.Mail.SmtpClient" /> utiliza SSL; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad especifica si SSL se usa para tener acceso al servidor de correo SMTP especificado.  
  
 El valor predeterminado de esta propiedad también puede establecerse en una máquina o un archivo de configuración de aplicación. Los cambios realizados en el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> el archivo de configuración de reemplazo de propiedad.  
  
 La <xref:System.Net.Mail.SmtpClient> clase solo admite la extensión de servicio SMTP para SMTP seguro sobre seguridad de la capa de transporte como se define en RFC 3207. En este modo, la sesión de SMTP comienza en un canal no cifrado, a continuación, se emite un comando STARTTLS por el cliente al servidor para cambiar a una comunicación segura mediante SSL. Vea RFC 3207 publicada por Internet Engineering Task Force (IETF) para obtener más información.  
  
 Un método de conexión alternativo es donde se establece por adelantado una sesión SSL antes que cualquier protocolo que se envían comandos. Este método de conexión a veces se denomina SMTP/SSL, SMTP sobre SSL o SMTP y de forma predeterminada usa el puerto 465. Este método de conexión alternativo usando SSL no se admite actualmente.  
  
 Puede usar <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> para especificar los certificados de cliente se deben usar para establecer la conexión SSL. El <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> permite rechazar el certificado proporcionado por el servidor SMTP. El <xref:System.Net.ServicePointManager.SecurityProtocol%2A> propiedad le permite especificar la versión del protocolo SSL para usar.  
  
> [!NOTE]
>  Si el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad está establecida en `true`, y el servidor de correo SMTP no anuncia STARTTLS en la respuesta a la EHLO comando, a continuación, una llamada a la <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos producirán una <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se establece una conexión SSL con el servidor SMTP y utiliza la conexión para enviar un correo electrónico.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre o la dirección IP del host que se utiliza para las transacciones SMTP.</summary>
        <value>Objeto <see cref="T:System.String" /> que contiene el nombre o la dirección IP del equipo que se va a utilizar para las transacciones SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Net.Mail.SmtpClient.Host%2A> propiedad también puede establecerse mediante constructores o la aplicación o el archivo de configuración del equipo. Para obtener más información, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Si se especifica información mediante esta propiedad, esta información reemplaza el archivo de configuración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico con el host y el puerto especificado en un archivo de configuración de aplicación.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor especificado para una operación de establecimiento es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor especificado para una operación de establecimiento es igual a<see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">No se puede cambiar el valor de esta propiedad cuando se está enviando un mensaje de correo electrónico.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de la <xref:System.Net.Mail.SmtpClient> clase puede invalidar la <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> método para realizar más tareas cuando el <xref:System.Net.Mail.SmtpClient.SendCompleted> se produce el evento.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> También permite que las clases derivadas controlen <xref:System.Net.Mail.SmtpClient.SendCompleted> sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar <xref:System.Net.Mail.SmtpClient.SendCompleted> en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> método para que los delegados registrados reciban el <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> eventos.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la carpeta donde las aplicaciones guardan los mensajes de correo que el servidor SMTP local va a procesar.</summary>
        <value>Objeto <see cref="T:System.String" /> que especifica el directorio de recogida de los mensajes de correo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servidor SMTP local (si existe), como IIS envía automáticamente mensajes de correo electrónico en el directorio de recogida.  
  
 El valor predeterminado de esta propiedad también puede establecerse en una máquina o un archivo de configuración de aplicación. Los cambios realizados en el <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> el archivo de configuración de reemplazo de propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el puerto utilizado para las transacciones SMTP.</summary>
        <value>Valor <see cref="T:System.Int32" /> que contiene el número de puerto en el host SMTP. El valor predeterminado es 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Net.Mail.SmtpClient.Port%2A> propiedad también puede establecerse mediante constructores o la aplicación o el archivo de configuración del equipo. Para obtener más información acerca del uso de archivos de configuración, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si se especifica información mediante esta propiedad, esta información reemplaza el archivo de configuración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico con el host y el puerto especificado en un archivo de configuración de aplicación.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de establecimiento es menor o igual a cero.</exception>
        <exception cref="T:System.InvalidOperationException">No se puede cambiar el valor de esta propiedad cuando se está enviando un mensaje de correo electrónico.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Para establecer el <see cref="P:System.Net.Mail.SmtpClient.Port" /> propiedad. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía un mensaje de correo electrónico a un servidor SMTP para su entrega. Estos métodos se bloquean mientras se transmite el mensaje.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Objeto <see cref="T:System.Net.Mail.MailMessage" /> que contiene el mensaje que se va a enviar.</param>
        <summary>Envía el mensaje especificado a un servidor SMTP para su entrega.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se bloquea mientras se transmite el correo electrónico. Puede especificar un valor de tiempo de espera mediante el <xref:System.Net.Mail.SmtpClient.Timeout%2A> propiedad para asegurarse de que el método vuelve después una cantidad especificada de tiempo determinado.  
  
 Antes de llamar a este método, el <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades deben establecerse a través de los archivos de configuración estableciendo las propiedades pertinentes o pasando esta información en el <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.  
  
 No se puede llamar este método si hay un mensaje que se va a enviar de forma asincrónica.  
  
 Si el host SMTP requiere credenciales, debe establecerlas antes de llamar a este método. Para especificar las credenciales, utilice la <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedades.  
  
 Si recibe un <xref:System.Net.Mail.SmtpException> excepción, compruebe el <xref:System.Net.Mail.SmtpException.StatusCode%2A> error en la propiedad para averiguar el motivo de la operación. El <xref:System.Net.Mail.SmtpException> también pueden contener una excepción interna que indica el motivo por el error en la operación.  
  
 Al enviar correo electrónico utilizando <xref:System.Net.Mail.SmtpClient.Send%2A> a varios destinatarios y el protocolo SMTP server acepta algunos destinatarios como válida y rechaza otros, <xref:System.Net.Mail.SmtpClient.Send%2A> envía correo electrónico a los destinatarios aceptados y, a continuación, un <xref:System.Net.Mail.SmtpFailedRecipientsException> se produce (o <xref:System.Net.Mail.SmtpFailedRecipientException> si sólo hay una se rechaza el destinatario). Un <xref:System.Net.Mail.SmtpFailedRecipientsException> contiene una lista de los destinatarios que se rechazaron.
  
> [!NOTE]
>  Si el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad está establecida en `true`, y el servidor de correo SMTP no anuncia STARTTLS en la respuesta a la EHLO comando, a continuación, una llamada a la <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos producirán una <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar este método.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Este objeto <see cref="T:System.Net.Mail.SmtpClient" /> tiene una llamada a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> en curso.  -o bien- <see cref="P:System.Net.Mail.MailMessage.From" /> es <see langword="null" />.  -o bien- No hay ningún destinatario especificado en las propiedades <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> y <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" /> es <see langword="null" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" />es igual a la cadena vacía ("").  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Port" /> es cero, un número negativo o mayor que 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Este objeto se ha eliminado.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Se ha producido un error de conexión al servidor SMTP.  -o bien- Error de autenticación.  -o bien- Se ha agotado el tiempo de espera de la operación. - o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true" /> pero la propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true," /> pero el servidor de correo SMTP no anunció STARTTLS en la respuesta al comando EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">No se pudo entregar <paramref name="message" /> a uno de los destinatarios en <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">No se pudo entregar <paramref name="message" /> a dos o más de los destinatarios en <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">para conectarse al servidor SMTP. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">Objeto <see cref="T:System.String" /> que contiene la información de dirección del remitente del mensaje.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Objeto <see cref="T:System.String" /> que contiene la línea de asunto del mensaje.</param>
        <param name="body">Objeto <see cref="T:System.String" /> que contiene el cuerpo del mensaje.</param>
        <summary>Envía el mensaje de correo electrónico especificado a un servidor SMTP para su entrega. El remitente del mensaje, los destinatarios, el asunto y el cuerpo del mensaje se especifican mediante objetos <see cref="T:System.String" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se bloquea mientras se transmite el correo electrónico. Puede especificar un valor de tiempo de espera mediante el <xref:System.Net.Mail.SmtpClient.Timeout%2A> propiedad para asegurarse de que el método vuelve después una cantidad especificada de tiempo determinado.  
  
 Antes de llamar a este método, el <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades deben establecerse a través de los archivos de configuración estableciendo las propiedades pertinentes o pasando esta información en el <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.  
  
 No se puede llamar este método si hay un mensaje que se va a enviar de forma asincrónica.  
  
 Si el host SMTP requiere credenciales, debe establecerlas antes de llamar a este método. Para especificar las credenciales, utilice la <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedades.  
  
 Si recibe un <xref:System.Net.Mail.SmtpException> excepción, compruebe el <xref:System.Net.Mail.SmtpException.StatusCode%2A> error en la propiedad para averiguar el motivo de la operación. El <xref:System.Net.Mail.SmtpException> también pueden contener una excepción interna que indica el motivo por el error en la operación.  

 Al enviar correo electrónico utilizando <xref:System.Net.Mail.SmtpClient.Send%2A> a varios destinatarios y el protocolo SMTP server acepta algunos destinatarios como válida y rechaza otros, <xref:System.Net.Mail.SmtpClient.Send%2A> envía correo electrónico a los destinatarios aceptados y, a continuación, un <xref:System.Net.Mail.SmtpFailedRecipientsException> se produce (o <xref:System.Net.Mail.SmtpFailedRecipientException> si sólo hay una se rechaza el destinatario). Un <xref:System.Net.Mail.SmtpFailedRecipientsException> contiene una lista de los destinatarios que se rechazaron.
 
> [!NOTE]
>  Si el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad está establecida en `true`, y el servidor de correo SMTP no anuncia STARTTLS en la respuesta a la EHLO comando, a continuación, una llamada a la <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos producirán una <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> es <see langword="null" />.  -o bien- <paramref name="recipients" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> es <see cref="F:System.String.Empty" />.  -o bien- <paramref name="recipients" /> es <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Este objeto <see cref="T:System.Net.Mail.SmtpClient" /> tiene una llamada a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> en curso.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" /> es <see langword="null" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" />es igual a la cadena vacía ("").  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Port" /> es cero, un número negativo o mayor que 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Este objeto se ha eliminado.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Se ha producido un error de conexión al servidor SMTP.  -o bien- Error de autenticación.  -o bien- Se ha agotado el tiempo de espera de la operación. - o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true" /> pero la propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true," /> pero el servidor de correo SMTP no anunció STARTTLS en la respuesta al comando EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">No se pudo entregar <paramref name="message" /> a uno de los destinatarios en <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">No se pudo entregar <paramref name="message" /> a dos o más de los destinatarios en <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">para conectarse al servidor SMTP. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía un mensaje de correo electrónico. Estos métodos no bloquean el subproceso que realiza la llamada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Objeto <see cref="T:System.Net.Mail.MailMessage" /> que contiene el mensaje que se va a enviar.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Envía el mensaje de correo electrónico especificado a un servidor SMTP para su entrega. Este método no bloquea el subproceso que realiza la llamada y permite al llamador pasar un objeto al método que se invoca cuando termina la operación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recibir una notificación cuando se ha enviado el correo electrónico o se ha cancelado la operación, agregue un controlador de eventos para el <xref:System.Net.Mail.SmtpClient.SendCompleted> eventos. Puede cancelar una <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación mediante una llamada a la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> método.  
  
 Después de llamar a <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, debe esperar a que termine antes de intentar enviar otro mensaje de correo electrónico mediante la transmisión de correo electrónico <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Antes de llamar a este método, el <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> debe establecerse a través de los archivos de configuración estableciendo las propiedades pertinentes o pasando esta información en el <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.  
  
 Si el host SMTP requiere credenciales, debe establecerlas antes de llamar a este método. Para especificar las credenciales, utilice la <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedades.  
  
 Si recibe un <xref:System.Net.Mail.SmtpException> excepción, compruebe el <xref:System.Net.Mail.SmtpException.StatusCode%2A> error en la propiedad para averiguar el motivo de la operación. El <xref:System.Net.Mail.SmtpException> también pueden contener una excepción interna que indica el motivo por el error en la operación.  
  
 Al enviar correo electrónico utilizando <xref:System.Net.Mail.SmtpClient.SendAsync%2A> a varios destinatarios, si el servidor SMTP acepta algunos destinatarios como válida y rechaza los otros usuarios, un <xref:System.Net.Mail.SmtpException> se inicia con un <xref:System.NullReferenceException> para la excepción interna. Si esto ocurre, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> no puede enviar correo electrónico a cualquiera de los destinatarios.  
  
 La aplicación puede detectar un error de validación de certificado de servidor mediante el examen de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad pasará el <xref:System.Net.Mail.SendCompletedEventHandler> delegar.  
  
 El <xref:System.Net.Mail.SmtpClient.Timeout%2A> propiedad no tiene ningún efecto en un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> llamar.  
  
 Para enviar correo electrónico y bloquear mientras se transmite al servidor SMTP, utilice uno de los <xref:System.Net.Mail.SmtpClient.Send%2A> métodos.  
  
> [!NOTE]
>  Si el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad está establecida en `true`, y el servidor de correo SMTP no anuncia STARTTLS en la respuesta a la EHLO comando, a continuación, una llamada a la <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos producirán una <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este método.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> es <see langword="null" />.  -o bien- <see cref="P:System.Net.Mail.MailMessage.From" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Este objeto <see cref="T:System.Net.Mail.SmtpClient" /> tiene una llamada a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> en curso.  -o bien- No hay ningún destinatario especificado en las propiedades <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> y <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" /> es <see langword="null" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" />es igual a la cadena vacía ("").  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Port" /> es cero, un número negativo o mayor que 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Este objeto se ha eliminado.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Se ha producido un error de conexión al servidor SMTP.  -o bien- Error de autenticación.  -o bien- Se ha agotado el tiempo de espera de la operación. - o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true" /> pero la propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true," /> pero el servidor de correo SMTP no anunció STARTTLS en la respuesta al comando EHLO.  -o bien- No se pudo entregar <paramref name="message" /> a uno o varios de los destinatarios de <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> o <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">para conectarse al servidor SMTP. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">Objeto <see cref="T:System.String" /> que contiene la información de dirección del remitente del mensaje.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Objeto <see cref="T:System.String" /> que contiene la línea de asunto del mensaje.</param>
        <param name="body">Objeto <see cref="T:System.String" /> que contiene el cuerpo del mensaje.</param>
        <param name="userToken">Objeto definido por el usuario que se pasa al método invocado cuando se completa la operación asincrónica.</param>
        <summary>Envía un mensaje de correo electrónico a un servidor SMTP para su entrega. El remitente del mensaje, los destinatarios, el asunto y el cuerpo del mensaje se especifican mediante objetos <see cref="T:System.String" />. Este método no bloquea el subproceso que realiza la llamada y permite al llamador pasar un objeto al método que se invoca cuando termina la operación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recibir una notificación cuando se ha enviado el correo electrónico o se ha cancelado la operación, agregue un controlador de eventos para el <xref:System.Net.Mail.SmtpClient.SendCompleted> eventos. Puede cancelar una <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación mediante una llamada a la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> método.  
  
 Después de llamar a <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, debe esperar a que termine antes de intentar enviar otro mensaje de correo electrónico mediante la transmisión de correo electrónico <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Antes de llamar a este método, el <xref:System.Net.Mail.SmtpClient.Host%2A> y <xref:System.Net.Mail.SmtpClient.Port%2A> propiedades deben establecerse a través de los archivos de configuración o estableciendo las propiedades o pasando esta información en el <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.  
  
 Si el host SMTP requiere credenciales, debe establecerlas antes de llamar a este método. Para especificar las credenciales, utilice la <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> o <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedad.  
  
 Si recibe un <xref:System.Net.Mail.SmtpException> excepción, compruebe el <xref:System.Net.Mail.SmtpException.StatusCode%2A> error en la propiedad para averiguar el motivo de la operación. El <xref:System.Net.Mail.SmtpException> también pueden contener una excepción interna que indica el motivo por el error en la operación.  
  
 Al enviar correo electrónico utilizando <xref:System.Net.Mail.SmtpClient.SendAsync%2A> a varios destinatarios, si el servidor SMTP acepta algunos destinatarios como válida y rechaza los otros usuarios, un <xref:System.Net.Mail.SmtpException> se inicia con un <xref:System.NullReferenceException> para la excepción interna. Si esto ocurre, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> no puede enviar correo electrónico a cualquiera de los destinatarios.  
  
 La aplicación puede detectar un error de validación de certificado de servidor mediante el examen de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad pasará el <xref:System.Net.Mail.SendCompletedEventHandler> delegar.  
  
 El <xref:System.Net.Mail.SmtpClient.Timeout%2A> propiedad no tiene ningún efecto en un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> llamar.  
  
 Para enviar correo electrónico y bloquear mientras se transmite al servidor SMTP, utilice uno de los <xref:System.Net.Mail.SmtpClient.Send%2A> métodos.  
  
> [!NOTE]
>  Si el <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propiedad está establecida en `true`, y el servidor de correo SMTP no anuncia STARTTLS en la respuesta a la EHLO comando, a continuación, una llamada a la <xref:System.Net.Mail.SmtpClient.Send%2A> o <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos producirán una <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> es <see langword="null" />.  -o bien- <paramref name="recipient" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> es <see cref="F:System.String.Empty" />.  -o bien- <paramref name="recipient" /> es <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Este objeto <see cref="T:System.Net.Mail.SmtpClient" /> tiene una llamada a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> en curso.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" /> es <see langword="null" />.  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Host" />es igual a la cadena vacía ("").  -o bien- La propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> y <see cref="P:System.Net.Mail.SmtpClient.Port" /> es cero, un número negativo o mayor que 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Este objeto se ha eliminado.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Se ha producido un error de conexión al servidor SMTP.  -o bien- Error de autenticación.  -o bien- Se ha agotado el tiempo de espera de la operación. - o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true" /> pero la propiedad <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> se establece en <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> o <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -o bien- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> se establece en <see langword="true," /> pero el servidor de correo SMTP no anunció STARTTLS en la respuesta al comando EHLO.  -o bien- No se ha podido entregar el mensaje a uno o varios de los destinatarios de <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Para conectarse al servidor SMTP. Enumeración asociada: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela una operación asincrónica para enviar un mensaje de correo electrónico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> método para cancelar una pendiente <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operación. Si no hay espera de envío de correo electrónico, este método libera los recursos utilizados para almacenar el correo electrónico. Si no hay ningún mensaje en espera de enviarse, este método no hace nada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico de forma asincrónica. El usuario tiene la opción de cancelar el correo electrónico si no se ha enviado.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se completa una operación de envío de correo electrónico asincrónico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Mail.SmtpClient.SendCompleted> evento se desencadena cada vez que se envía un mensaje de correo electrónico forma asincrónica cuando se complete la operación de envío. Para enviar un mensaje de correo electrónico de forma asincrónica, utilice el <xref:System.Net.Mail.SmtpClient.SendAsync%2A> métodos.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> es el delegado de <xref:System.Net.Mail.SmtpClient.SendCompleted>. La <xref:System.ComponentModel.AsyncCompletedEventArgs> clase proporciona el controlador de eventos y datos de evento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo enviar un mensaje de correo electrónico de forma asincrónica.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía el mensaje especificado a un servidor SMTP para su entrega como una operación asincrónica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Objeto <see cref="T:System.Net.Mail.MailMessage" /> que contiene el mensaje que se va a enviar.</param>
        <summary>Envía el mensaje especificado a un servidor SMTP para su entrega como una operación asincrónica.</summary>
        <returns>Devuelva <see cref="T:System.Threading.Tasks.Task" />.  Objeto de tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task>> objeto se completará una vez que se ha enviado el mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">Objeto <see cref="T:System.String" /> que contiene la información de dirección del remitente del mensaje.</param>
        <param name="recipients">Objeto <see cref="T:System.String" /> que contiene las direcciones a las que se envía el mensaje.</param>
        <param name="subject">Objeto <see cref="T:System.String" /> que contiene la línea de asunto del mensaje.</param>
        <param name="body">Objeto <see cref="T:System.String" /> que contiene el cuerpo del mensaje.</param>
        <summary>Envía el mensaje especificado a un servidor SMTP para su entrega como una operación asincrónica. . El remitente del mensaje, los destinatarios, el asunto y el cuerpo del mensaje se especifican mediante objetos <see cref="T:System.String" />.</summary>
        <returns>Devuelva <see cref="T:System.Threading.Tasks.Task" />.  Objeto de tarea que representa la operación asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta operación no se bloqueará. El valor devuelto <xref:System.Threading.Tasks.Task>> objeto se completará una vez que se ha enviado el mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> es <see langword="null" />.  -o bien- <paramref name="recipients" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> es <see cref="F:System.String.Empty" />.  -o bien- <paramref name="recipients" /> es <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la conexión de red usada para transmitir el mensaje de correo electrónico.</summary>
        <value>Objeto <see cref="T:System.Net.ServicePoint" /> que establece una conexión con la propiedad <see cref="P:System.Net.Mail.SmtpClient.Host" /> utilizada para SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración de la <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> propiedad se crean con los valores predeterminados especificados en la aplicación o los archivos de configuración del equipo y la <xref:System.Net.ServicePointManager> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo tener acceso el <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> propiedad.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Net.Mail.SmtpClient.Host" /> es <see langword="null" /> o una cadena vacía ("").  -o bien- <see cref="P:System.Net.Mail.SmtpClient.Port" /> es cero.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del proveedor de servicios (SPN) que se utiliza para la autenticación cuando se usa la protección extendida.</summary>
        <value>Objeto <see cref="T:System.String" /> que especifica el SPN que se va a usar para la protección extendida. El valor predeterminado para este SPN es el formato "SMTPSVC /&lt;host&gt;" donde &lt;host&gt; es el nombre de host del servidor de correo SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Mail.SmtpClient.TargetName%2A> propiedad se utiliza con la autenticación integrada de Windows cuando una aplicación usa la protección extendida. El <xref:System.Net.Mail.SmtpClient> , a continuación, se puede proporcionar la protección extendida para asegurarse de que las respuestas de desafío de credencial contienen información específica del servicio (un SPN) y, si es necesario, canal específicas información (un token de enlace de canal o CBT). Con esta información en los intercambios de credenciales, los servicios pueden mejorar la protección contra el uso malintencionado de respuestas de desafío de credencial que podría haber obtenido incorrectamente.  
  
 El valor predeterminado de esta propiedad también puede establecerse en una máquina o un archivo de configuración de aplicación. Los cambios realizados en el <xref:System.Net.Mail.SmtpClient.TargetName%2A> el archivo de configuración de reemplazo de propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el intervalo de tiempo a partir del cual se considera que una llamada a <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> sincrónica excede el tiempo de espera.</summary>
        <value>Valor <see cref="T:System.Int32" /> que especifica el valor de tiempo de espera en milisegundos. El valor predeterminado es 100.000 (100 segundos).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, las llamadas a la <xref:System.Net.Mail.SmtpClient.Send%2A> el bloque de método hasta que se complete la operación. Si establece la <xref:System.Net.Mail.SmtpClient.Timeout%2A> propiedad en un valor positivo y un <xref:System.Net.Mail.SmtpClient.Send%2A> no se puede completar la operación en el tiempo asignado, el <xref:System.Net.Mail.SmtpClient> clase produce un <xref:System.Net.Mail.SmtpException> excepción.  
  
 Para enviar un mensaje y continuar la ejecución en el subproceso de la aplicación, use la <xref:System.Net.Mail.SmtpClient.SendAsync%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo obtener y establecer el valor de tiempo de espera.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor que se especificó para una operación de establecimiento era menor que cero.</exception>
        <exception cref="T:System.InvalidOperationException">No se puede cambiar el valor de esta propiedad cuando se está enviando un mensaje de correo electrónico.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si se envían <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> con las solicitudes.</summary>
        <value>Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en cualquier otro caso, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algunos servidores SMTP requieren que el cliente se autentique antes de que el servidor envíe correo electrónico en su nombre. Establezca esta propiedad en `true` cuando esto <xref:System.Net.Mail.SmtpClient> objeto debería, si lo solicita el servidor, autenticarse utilizando las credenciales predeterminadas del usuario que ha iniciado sesión actualmente. Para aplicaciones cliente, este es el comportamiento deseado en la mayoría de los escenarios.  
  
 Información de credenciales también puede especificarse mediante la aplicación y los archivos de configuración del equipo. Para obtener más información, consulte [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Si el <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propiedad está establecida en `false,` , a continuación, el valor se establece en el <xref:System.Net.Mail.SmtpClient.Credentials%2A> propiedad se utilizará para las credenciales al conectarse al servidor. Si el <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propiedad está establecida en `false` y <xref:System.Net.Mail.SmtpClient.Credentials%2A> no se estableció la propiedad, a continuación, se envía correo al servidor de forma anónima.  
  
> [!CAUTION]
>  Si proporciona credenciales para la autenticación básica, se envían al servidor como texto no cifrado. Esto puede suponer un riesgo de seguridad porque sus credenciales se pueden ver y, a continuación, utilizar otros.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se puede cambiar el valor de esta propiedad cuando se está enviando un mensaje de correo electrónico.</exception>
      </Docs>
    </Member>
  </Members>
</Type>