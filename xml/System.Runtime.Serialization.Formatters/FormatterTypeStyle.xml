<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormatterTypeStyle.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e990cc2ba4f28358cd07886e0e7b7aa04f6a7d75.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e990cc2ba4f28358cd07886e0e7b7aa04f6a7d75</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
          <source>Indicates the format in which type descriptions are laid out in the serialized stream.</source>
          <target state="translated">Indica el formato de distribución de las descripciones de tipos en la secuencia serializada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
          <source>Indicates that types can be given to all object members and <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> object members.</source>
          <target state="translated">Indica que se pueden asignar tipos a todos los miembros de objetos y a todos los miembros de objetos de <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
          <source>Indicates that types can be stated only for arrays of objects, object members of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, and <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> non-primitive value types.</source>
          <target state="translated">Indica que sólo pueden establecerse tipos para matrices de objetos, miembros de objetos de tipo <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> y tipos de valor no primitivos de <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>Indicates that strings can be given in the XSD format rather than SOAP.</source>
          <target state="translated">Indica que las cadenas pueden especificarse en formato XSD en lugar de SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>No string IDs are transmitted.</source>
          <target state="translated">No se transmiten los identificadores de cadena.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>The <ph id="ph1">`XsdString`</ph> and <ph id="ph2">`TypesWhenNeeded`</ph> settings are meant for high performance serialization between services built on the same version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">El <ph id="ph1">`XsdString`</ph> y <ph id="ph2">`TypesWhenNeeded`</ph> configuración está diseñada para la serialización de alto rendimiento entre los servicios basados en la misma versión de la <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>These two values do not support VTS (Version Tolerant Serialization) because they intentionally omit type information that VTS uses to skip or add optional fields and properties.</source>
          <target state="translated">Estos dos valores no son compatibles con STB (serialización tolerante a versiones) porque omite de forma intencionada información de tipo que utiliza STB para omitir o agregar campos y propiedades opcionales.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>You should not use the <ph id="ph1">`XsdString`</ph> or <ph id="ph2">`TypesWhenNeeded`</ph> type formats when serializing and deserializing types on a computer running a different version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> than the computer on which the type was serialized.</source>
          <target state="translated">No debe utilizar el <ph id="ph1">`XsdString`</ph> o <ph id="ph2">`TypesWhenNeeded`</ph> escribir le aplica formato al serializar y deserializar los tipos en un equipo que ejecuta una versión diferente de la <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> que el equipo en el que se serializó el tipo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>Serializing and deserializing on computers running different versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> causes the formatter to skip serialization of type information, thus making it impossible for the deserializer to skip optional fields if they are not present in certain types that may exist in the other version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Serializar y deserializar en los equipos que ejecutan versiones distintas de la <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> hace que el formateador va a omitir la serialización de la información de tipo, lo que sea imposible que el deserializador omitir campos opcionales si no están presentes en determinados tipos que pueden existir en la otra versión de la <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
          <source>If you must use <ph id="ph1">`XsdString`</ph> or <ph id="ph2">`TypesWhenNeeded`</ph> in such a scenario, you must provide custom serialization for types that have changed from one version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> to the other.</source>
          <target state="translated">Si debe usar <ph id="ph1">`XsdString`</ph> o <ph id="ph2">`TypesWhenNeeded`</ph> en este escenario, debe proporcionar una serialización personalizada para los tipos que han cambiado desde una versión de la <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> a otro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>