<Type Name="UITypeEditor" FullName="System.Drawing.Design.UITypeEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed89e9fe97c979c766d386a93b2f03c83ed45f84" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36738819" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UITypeEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UITypeEditor" />
  <TypeSignature Language="F#" Value="type UITypeEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase base que se puede utilizar para diseñar editores de valores que proporcionen una interfaz de usuario para representar y modificar los valores de objetos de aquellos tipos de datos que sean compatibles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.Design.UITypeEditor> clase proporciona una clase base que se puede derivar y ampliar para implementar un editor de tipos personalizado para el entorno de tiempo de diseño. Normalmente, el editor de tipos personalizado interactúa con el <xref:System.Windows.Forms.PropertyGrid> control.  
  
 Editores de tipos personalizados son útiles en situaciones donde no es suficiente para seleccionar los valores de determinados tipos de manera eficaz un editor de valores de cuadro de texto.  
  
 Para implementar un editor de tipos de interfaz de usuario de tiempo de diseño personalizado, debe realizar los pasos siguientes:  
  
-   Defina una clase que se derive de <xref:System.Drawing.Design.UITypeEditor>.  
  
-   Invalidar el <xref:System.Drawing.Design.UITypeEditor.EditValue%2A> método para controlar la interfaz de usuario, el procesamiento de entrada de usuario y la asignación de valor.  
  
-   Invalidar el <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> método para informar a la ventana de propiedades del tipo de estilo de editor que se va a utilizar el editor.  
  
 Puede agregar compatibilidad adicional para dibujar la representación en forma de un valor en la ventana Propiedades mediante la realización de los pasos siguientes:  
  
-   Invalidar el <xref:System.Drawing.Design.UITypeEditor.GetPaintValueSupported%2A> método para indicar que el editor permite mostrar la representación del valor.  
  
-   Invalidar el <xref:System.Drawing.Design.UITypeEditor.PaintValue%2A> método para implementar la visualización de la representación del valor.  
  
-   Invalidar el <xref:System.Drawing.Design.UITypeEditor> método de constructor si el editor debe tener el comportamiento de inicialización.  
  
> [!NOTE]
>  La <xref:System.Drawing.Design.UITypeEditor> clase no es compatible con los diseños de derecha a izquierda (RTL).  
  
 Para obtener más información sobre cómo mejorar la compatibilidad en tiempo de diseño, vea [ampliar la compatibilidad de tiempo de diseño](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2). Para obtener más información sobre cómo implementar un <xref:System.Drawing.Design.UITypeEditor>, consulte [User Interface Type editores Overview](http://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra que un <xref:System.Drawing.Design.UITypeEditor> puede asociarse con un integer, double o float propiedad mediante un <xref:System.ComponentModel.EditorAttribute> para proporcionar una interfaz de selección de ángulo de la ventana de propiedades en modo de diseño. Este ejemplo se utiliza la <xref:System.Windows.Forms.Design.IWindowsFormsEditorService> interfaz para mostrar un control de lista desplegable en la ventana de propiedades en modo de diseño. Compile el código y agregue el ensamblado en el cuadro de herramientas mediante el **Personalizar cuadro de herramientas** comando el **herramientas** menú de Visual Studio. Cree una instancia de la `AngleTestControl` y haga clic en el botón de lista desplegable junto a la propiedad de ángulo en la ventana Propiedades para configurar la propiedad mediante el editor.  
  
 [!code-cpp[AngleEditor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AngleEditor/CPP/angleeditor.cpp#1)]
 [!code-csharp[AngleEditor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AngleEditor/CS/angleeditor.cs#1)]
 [!code-vb[AngleEditor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AngleEditor/VB/angleeditor.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">Para obtener acceso completo a los recursos del sistema. Valores de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Estado asociado:</permission>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Windows.Forms.PropertyGrid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITypeEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UITypeEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EditValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Edita el valor del objeto especificado utilizando el estilo del editor indicado por el método <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public object EditValue (IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object EditValue(class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditValue (provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EditValue(IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.EditValue : IServiceProvider * obj -&gt; obj" Usage="uITypeEditor.EditValue (provider, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.</param>
        <param name="value">Objeto que se va a modificar.</param>
        <summary>Edita el valor del objeto especificado utilizando el estilo del editor indicado por el método <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</summary>
        <returns>Nuevo valor del objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método inicia la interfaz de usuario para su edición de valor y llama a la ventana Propiedades cuando un usuario intenta modificar el valor de un tipo que está configurado el editor para editar el valor de. Se proporciona un proveedor de servicios para que el editor puede obtener los servicios necesarios.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public virtual object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EditValue : System.ComponentModel.ITypeDescriptorContext * IServiceProvider * obj -&gt; obj&#xA;override this.EditValue : System.ComponentModel.ITypeDescriptorContext * IServiceProvider * obj -&gt; obj" Usage="uITypeEditor.EditValue (context, provider, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.</param>
        <param name="value">Objeto que se va a modificar.</param>
        <summary>Modifica el valor del objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</summary>
        <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se proporciona un proveedor de servicios para que el editor puede obtener los servicios necesarios.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditStyle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditStyle () As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Design::UITypeEditorEditStyle GetEditStyle();" />
      <MemberSignature Language="F#" Value="member this.GetEditStyle : unit -&gt; System.Drawing.Design.UITypeEditorEditStyle" Usage="uITypeEditor.GetEditStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />.</summary>
        <returns>Valor de enumeración de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo del editor utilizado por el <see cref="T:System.Drawing.Design.UITypeEditor" /> actual. De manera predeterminada, este método devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un <xref:System.Drawing.Design.UITypeEditor> no se invalide e implemente este método, <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> devolverá <xref:System.Drawing.Design.UITypeEditorEditStyle.None> de forma predeterminada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditStyle : System.ComponentModel.ITypeDescriptorContext -&gt; System.Drawing.Design.UITypeEditorEditStyle&#xA;override this.GetEditStyle : System.ComponentModel.ITypeDescriptorContext -&gt; System.Drawing.Design.UITypeEditorEditStyle" Usage="uITypeEditor.GetEditStyle context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <summary>Obtiene el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />.</summary>
        <returns>Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />. Si <see cref="T:System.Drawing.Design.UITypeEditor" /> no admite este método, <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPaintValueSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica si este editor permite dibujar una representación del valor de un objeto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public bool GetPaintValueSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPaintValueSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPaintValueSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPaintValueSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPaintValueSupported : unit -&gt; bool" Usage="uITypeEditor.GetPaintValueSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si este editor permite dibujar una representación del valor de un objeto.</summary>
        <returns>Es <see langword="true" /> si se implementa <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPaintValueSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPaintValueSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPaintValueSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPaintValueSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="uITypeEditor.GetPaintValueSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <summary>Indica si el contexto especificado permite dibujar una representación del valor de un objeto dentro de ese contexto.</summary>
        <returns>Es <see langword="true" /> si se implementa <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="IsDropDownResizable">
      <MemberSignature Language="C#" Value="public virtual bool IsDropDownResizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownResizable" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDropDownResizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDropDownResizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownResizable : bool" Usage="System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el usuario puede cambiar el tamaño de los editores desplegables.</summary>
        <value>Es <see langword="true" /> si se puede cambiar el tamaño de los editores desplegables; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PaintValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dibuja una representación del valor de un objeto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public virtual void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PaintValue (e As PaintValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PaintValue(System::Drawing::Design::PaintValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member PaintValue : System.Drawing.Design.PaintValueEventArgs -&gt; unit&#xA;override this.PaintValue : System.Drawing.Design.PaintValueEventArgs -&gt; unit" Usage="uITypeEditor.PaintValue e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> que indica qué se va a dibujar y dónde.</param>
        <summary>Dibuja una representación del valor de un objeto utilizando el <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Editores deben dibujar dentro de los límites del rectángulo especificado. Este rectángulo indica el área de la ventana de propiedades para dibujar una representación del valor dentro de.  
  
 A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], el rectángulo especificado por <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> se ajustará en función del valor de PPP del sistema cuando el archivo app.config contiene la entrada siguiente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public void PaintValue (object value, System.Drawing.Graphics canvas, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintValue(object value, class System.Drawing.Graphics canvas, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintValue(System::Object ^ value, System::Drawing::Graphics ^ canvas, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.PaintValue : obj * System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="uITypeEditor.PaintValue (value, canvas, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="canvas" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="value">Objeto cuyo valor va a mostrar este editor de tipos.</param>
        <param name="canvas">Lienzo en el que se dibuja la representación del valor de un objeto.</param>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> dentro de cuyos límites se dibuja el valor.</param>
        <summary>Dibuja una representación del valor del objeto especificado en el lienzo indicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Editores deben dibujar dentro de los límites del rectángulo especificado. Este rectángulo indica el área de la ventana de propiedades para dibujar una representación del valor dentro de.  
  
 A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], el rectángulo especificado por <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> se ajustará en función del valor de PPP del sistema cuando el archivo app.config contiene la entrada siguiente:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>