<Type Name="IconEditor" FullName="System.Drawing.Design.IconEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6b7fa333247beeb3423097f860f55f9f49bd073" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39862916" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IconEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IconEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class IconEditor&#xA;Inherits UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconEditor : System::Drawing::Design::UITypeEditor" />
  <TypeSignature Language="F#" Value="type IconEditor = class&#xA;    inherit UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase <see cref="T:System.Drawing.Design.UITypeEditor" /> para elegir un icono visualmente.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Para obtener acceso a código no administrado. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExtensionsString">
      <MemberSignature Language="C#" Value="protected static string CreateExtensionsString (string[] extensions, string sep);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateExtensionsString(string[] extensions, string sep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateExtensionsString (extensions As String(), sep As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ CreateExtensionsString(cli::array &lt;System::String ^&gt; ^ extensions, System::String ^ sep);" />
      <MemberSignature Language="F#" Value="static member CreateExtensionsString : string[] * string -&gt; string" Usage="System.Drawing.Design.IconEditor.CreateExtensionsString (extensions, sep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensions" Type="System.String[]" />
        <Parameter Name="sep" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extensions">Matriz de cadenas que contiene las extensiones de archivo válidas.</param>
        <param name="sep">Cadena que especifica el carácter separador.</param>
        <summary>Crea una cadena que representa las extensiones de archivo válidas para los iconos.</summary>
        <returns>Cadena que contiene las extensiones de archivo de icono o <see langword="null" /> si la referencia <paramref name="extensions" /> es <see langword="null" /> o está vacía.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta por la <xref:System.Drawing.Design.IconEditor.CreateExtensionsString%2A> método se utiliza en el <xref:System.Windows.Forms.OpenFileDialog> para elegir los archivos de icono.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterEntry">
      <MemberSignature Language="C#" Value="protected static string CreateFilterEntry (System.Drawing.Design.IconEditor e);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateFilterEntry(class System.Drawing.Design.IconEditor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateFilterEntry (e As IconEditor) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ CreateFilterEntry(System::Drawing::Design::IconEditor ^ e);" />
      <MemberSignature Language="F#" Value="static member CreateFilterEntry : System.Drawing.Design.IconEditor -&gt; string" Usage="System.Drawing.Design.IconEditor.CreateFilterEntry e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.IconEditor" />
      </Parameters>
      <Docs>
        <param name="e">Clase <see cref="T:System.Drawing.Design.IconEditor" /> para la que se va a crear la cadena de filtro.</param>
        <summary>Crea una cadena de filtro para el cuadro de diálogo de archivos.</summary>
        <returns>Cadena de filtro creada a partir de la cadena que devuelve <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena devuelta por la <xref:System.Drawing.Design.IconEditor.CreateFilterEntry%2A> método se utiliza en el <xref:System.Windows.Forms.OpenFileDialog> para filtrar los archivos de icono.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EditValue : System.ComponentModel.ITypeDescriptorContext * IServiceProvider * obj -&gt; obj&#xA;override this.EditValue : System.ComponentModel.ITypeDescriptorContext * IServiceProvider * obj -&gt; obj" Usage="iconEditor.EditValue (context, provider, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
        <param name="provider">Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición.</param>
        <param name="value">Instancia del valor que se va a editar.</param>
        <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
        <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se proporciona un proveedor de servicios para poder obtener todos los servicios de edición necesarios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditStyle : System.ComponentModel.ITypeDescriptorContext -&gt; System.Drawing.Design.UITypeEditorEditStyle&#xA;override this.GetEditStyle : System.ComponentModel.ITypeDescriptorContext -&gt; System.Drawing.Design.UITypeEditorEditStyle" Usage="iconEditor.GetEditStyle context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
        <summary>Recupera el estilo de edición del método <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
        <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Drawing.Design.IconEditor.EditValue%2A> no se admite el método, el <xref:System.Drawing.Design.IconEditor.GetEditStyle%2A> método devolverá <xref:System.Drawing.Design.UITypeEditorEditStyle.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="protected virtual string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="abstract member GetExtensions : unit -&gt; string[]&#xA;override this.GetExtensions : unit -&gt; string[]" Usage="iconEditor.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matriz de extensiones de archivo válidas para los iconos.</summary>
        <returns>Matriz de extensiones de archivo válidas para los iconos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileDialogDescription">
      <MemberSignature Language="C#" Value="protected virtual string GetFileDialogDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetFileDialogDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetFileDialogDescription" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFileDialogDescription () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetFileDialogDescription();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDialogDescription : unit -&gt; string&#xA;override this.GetFileDialogDescription : unit -&gt; string" Usage="iconEditor.GetFileDialogDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene la descripción del filtro predeterminado de la lista de archivos proporcionado por este editor.</summary>
        <returns>Descripción del tipo de archivos predeterminado a partir del cual se va a filtrar la lista de archivos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public override bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPaintValueSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPaintValueSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPaintValueSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPaintValueSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="iconEditor.GetPaintValueSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
        <summary>Determina si este editor permite dibujar una representación del valor de un objeto.</summary>
        <returns>Es <see langword="true" /> si se implementa <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Icon LoadFromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Drawing.Icon LoadFromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Icon ^ LoadFromStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member LoadFromStream : System.IO.Stream -&gt; System.Drawing.Icon&#xA;override this.LoadFromStream : System.IO.Stream -&gt; System.Drawing.Icon" Usage="iconEditor.LoadFromStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Secuencia de origen a partir de la cual se va a crear el icono.</param>
        <summary>Crea un nuevo objeto <see cref="T:System.Drawing.Icon" /> a partir de la secuencia dada.</summary>
        <returns>Colección <see cref="T:System.Drawing.Icon" /> creada recientemente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public override void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PaintValue (e As PaintValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PaintValue(System::Drawing::Design::PaintValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member PaintValue : System.Drawing.Design.PaintValueEventArgs -&gt; unit&#xA;override this.PaintValue : System.Drawing.Design.PaintValueEventArgs -&gt; unit" Usage="iconEditor.PaintValue e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Qué pintar y dónde pintarlo.</param>
        <summary>Dibuja un valor representativo del objeto dado en el lienzo proporcionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El dibujo se debe realizar en el interior del rectángulo proporcionado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>