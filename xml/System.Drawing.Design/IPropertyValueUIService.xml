<Type Name="IPropertyValueUIService" FullName="System.Drawing.Design.IPropertyValueUIService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ec57ce9f116552c535cbe9e74de1a7e158edf39" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37658836" /></Metadata><TypeSignature Language="C#" Value="public interface IPropertyValueUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyValueUIService" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IPropertyValueUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyValueUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyValueUIService" />
  <TypeSignature Language="F#" Value="type IPropertyValueUIService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz para administrar las imágenes, información sobre herramientas y controladores de eventos de las propiedades de un componente que se muestra en un explorador de propiedades.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar un componente de la <xref:System.Drawing.Design.IPropertyValueUIService> interfaz para proporcionar <xref:System.Drawing.Design.PropertyValueUIItem> objetos de las propiedades del componente. Un <xref:System.Drawing.Design.PropertyValueUIItem> asociado con una propiedad puede proporcionar una imagen, una información sobre herramientas y un controlador de eventos para el evento que se desencadena cuando se hace clic en la imagen asociada a la propiedad.  
  
 El <xref:System.Drawing.Design.IPropertyValueUIService> interfaz proporciona métodos para agregar, quitar y recuperar <xref:System.Drawing.Design.PropertyValueUIHandler> delegados a o desde una lista interna. Cuando se muestran las propiedades de un componente en un explorador de propiedades, cada <xref:System.Drawing.Design.PropertyValueUIHandler> en la lista tiene la oportunidad de proporcionar un <xref:System.Drawing.Design.PropertyValueUIItem> para cada propiedad del componente.  
  
 Cuando un explorador de propiedades se establece para mostrar las propiedades de un objeto, llama a la <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> método de esta interfaz para cada propiedad del componente, pasando un <xref:System.ComponentModel.PropertyDescriptor> que representa la propiedad. El <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> método llama a cada uno <xref:System.Drawing.Design.PropertyValueUIHandler> que se ha agregado al servicio. Cada <xref:System.Drawing.Design.PropertyValueUIHandler> puede agregar un <xref:System.Drawing.Design.PropertyValueUIItem> a la <xref:System.Collections.ArrayList> parámetro pasado con la `valueUIItemList` elementos de parámetro para proporcionar la interfaz de usuario para la propiedad representada por el <xref:System.ComponentModel.PropertyDescriptor> pasa el `propDesc` parámetro.  
  
 Un <xref:System.Drawing.Design.PropertyValueUIItem> puede contener una imagen para mostrarla junto al nombre de la propiedad, una cadena de información sobre herramientas y un controlador de eventos que se invoca cuando se hace doble clic en la imagen asociada con la propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un componente que obtiene una instancia de la <xref:System.Drawing.Design.IPropertyValueUIService> interfaz y agrega un <xref:System.Drawing.Design.PropertyValueUIHandler> al servicio. El controlador proporciona una <xref:System.Drawing.Design.PropertyValueUIItem> objeto para las propiedades del componente denominado `HorizontalMargin` o `VerticalMargin`. El <xref:System.Drawing.Design.PropertyValueUIItem> para estas propiedades proporciona una imagen, una información sobre herramientas y un controlador de eventos que se muestra un cuadro de mensaje cuando se hace clic en la imagen para la propiedad. La imagen y la información sobre herramientas se muestran en un <xref:System.Windows.Forms.PropertyGrid> cuando la cuadrícula muestra estas propiedades del componente.  
  
 [!code-cpp[IPropertyValueUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#1)]
 [!code-csharp[IPropertyValueUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#1)]
 [!code-vb[IPropertyValueUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
  </Docs>
  <Members>
    <Member MemberName="AddPropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.AddPropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Controlador de interfaz de usuario de valores de propiedades que se van a agregar.</param>
        <summary>Agrega el objeto <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> especificado a este servicio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> es llamado, cada controlador agregado a este servicio se llama y tiene la oportunidad de agregar un icono para la propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyUIValueItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems(class System.ComponentModel.ITypeDescriptorContext context, class System.ComponentModel.PropertyDescriptor propDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyUIValueItems (context As ITypeDescriptorContext, propDesc As PropertyDescriptor) As PropertyValueUIItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Design::PropertyValueUIItem ^&gt; ^ GetPropertyUIValueItems(System::ComponentModel::ITypeDescriptorContext ^ context, System::ComponentModel::PropertyDescriptor ^ propDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyUIValueItems : System.ComponentModel.ITypeDescriptorContext * System.ComponentModel.PropertyDescriptor -&gt; System.Drawing.Design.PropertyValueUIItem[]" Usage="iPropertyValueUIService.GetPropertyUIValueItems (context, propDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <param name="propDesc">Un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> que indica la propiedad que tiene que coincidir con las propiedades que se van a devolver.</param>
        <summary>Obtiene los objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> que se ajustan al contexto especificado y a las características del descriptor de propiedades.</summary>
        <returns>Una matriz de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> que coinciden con los parámetros especificados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyValueUIItemsChanged">
      <MemberSignature Language="C#" Value="public void NotifyPropertyValueUIItemsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyPropertyValueUIItemsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyPropertyValueUIItemsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyPropertyValueUIItemsChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyPropertyValueUIItemsChanged : unit -&gt; unit" Usage="iPropertyValueUIService.NotifyPropertyValueUIItemsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica a la implementación de <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> que se ha modificado la lista global de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyUIValueItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler PropertyUIValueItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyUIValueItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event PropertyUIValueItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyUIValueItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyUIValueItemsChanged : EventHandler " Usage="member this.PropertyUIValueItemsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se origina cuando se modifica la lista de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los componentes que actuar <xref:System.Drawing.Design.PropertyValueUIItem> pueden llamar objetos <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> cuando cambian su lista de elementos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member RemovePropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.RemovePropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Controlador que se va a quitar.</param>
        <summary>Quita el objeto <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> especificado del servicio de interfaz de usuario de valores de propiedades.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
  </Members>
</Type>