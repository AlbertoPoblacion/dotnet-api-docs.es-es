<Type Name="IDataPointFilter" FullName="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dc551a6c0e0f5d454edee63d62b3a688a4f7203" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36359389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Expone el método <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />, que permite realizar un filtrado personalizado de los datos de <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interfaz expone el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método, que toma un punto de datos específico dentro de una serie y devuelve un `Boolean` valor que determina si se filtrarán ese punto de datos.  
  
 Para realizar un filtrado personalizado:  
  
-   Derivar una clase nueva o existente de esta interfaz.  
  
-   Invalidar el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método para proporcionar la lógica de filtrado personalizada.  
  
-   Para iniciar la operación de filtrado, llame a uno de los `Filter` métodos en el <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> clase que toma un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objeto como su primer parámetro.  
  
 Para el código fuente de ejemplo, vea el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Windows.Forms.DataVisualization.Charting.DataPoint point, class System.Windows.Forms.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ point, System::Windows::Forms::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que se va a filtrar.</param>
        <param name="series">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> al que pertenece el punto de datos.</param>
        <param name="pointIndex">Índice del punto de datos, que determina su posición en la serie.</param>
        <summary>Determina si se filtrará un punto de datos determinado de la serie.</summary>
        <returns>Es <see langword="True" /> si se quita el punto de datos; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se debe llamar para cada punto de datos en una serie y devuelve un `Boolean` valor que indica si se debe filtrar un punto de datos.  
  
 Para proporcionar filtrado personalizado, derive una clase nueva o existente de la <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interfaz y, a continuación, implementar este método. Especificar criterios personalizados para la lógica de coincidencia, a continuación, devolver `true` o `false` para marcar los puntos de datos que desea filtrar. Después de que este método se ha implementado, use uno de los `Filter` definiciones de método en el <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> clase que toma un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objeto como un parámetro para realizar el filtrado.  
  
 Los puntos filtrados, de forma predeterminada, se quitan de una serie. También se pueden mostrar como puntos vacíos estableciendo el valor de la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> propiedad `true`.  
  
 Los puntos filtrados también se pueden marcar como filtrados si no coinciden con los criterios de filtrado, determinado por la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>