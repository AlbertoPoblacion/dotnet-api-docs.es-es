<Type Name="Point3D" FullName="System.Windows.Forms.DataVisualization.Charting.Point3D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="644d1ff4fb2b97ce191a9bc3673818e16490d19a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39919778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Point3D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Point3D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />
  <TypeSignature Language="VB.NET" Value="Public Class Point3D" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point3D" />
  <TypeSignature Language="F#" Value="type Point3D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa las coordenadas de un punto de datos tridimensional (3D). Esta clase se usa al realizar dibujos personalizados con gráficos 3D.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier punto utilizado en un dibujo 3D personalizado, que se logra mediante GDI +, debe transformar relativo, Y y Z (3D) las coordenadas X en relativa X e Y (2D) coordina mediante la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método. Mediante una llamada a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, los valores X e Y-de la <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> se cambian los objetos para que reflejen el espacio de 3 dimensiones. Nuevo X e Y, a continuación, se pueden usar puntos de las llamadas al método GDI +, el valor de Z, a continuación, se descarta: después de que se está cambiando a coordenadas de píxel absolutas mediante el <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> método.  
  
 Tenga en cuenta que la coordenada Z puede ser menor que cero (que se encuentra detrás de un área del gráfico) o mayor que 100 (situada delante de un área del gráfico).  
  
 Para habilitar los gráficos 3D y trabajar con los estilos, utilice el <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> propiedad. La <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> clase no se utiliza para estilos 3D.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Point3D : single * single * single -&gt; System.Windows.Forms.DataVisualization.Charting.Point3D" Usage="new System.Windows.Forms.DataVisualization.Charting.Point3D (x, y, z)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordenada X del punto 3D.</param>
        <param name="y">Coordenada Y del punto 3D.</param>
        <param name="z">Coordenada Z, que representa la profundidad del punto 3D.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" /> con las coordenadas X, Y y Z especificadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointF">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF PointF { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF PointF" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberSignature Language="VB.NET" Value="Public Property PointF As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF PointF { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberSignature Language="F#" Value="member this.PointF : System.Drawing.PointF with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una estructura <see cref="T:System.Drawing.PointF" />, que almacena las coordenadas Y e X de un punto 3D.</summary>
        <value>Estructura <see cref="T:System.Drawing.PointF" />, que almacena las coordenadas X e Y de un punto 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier punto utilizado en un dibujo 3D personalizado, que se logra mediante GDI +, debe transformar de X, Y y Z (3D) coordenadas X e Y (2D) coordina mediante la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método. Este método toma una matriz de <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objetos como su único parámetro. Mediante una llamada a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, los valores de propiedad X e Y se cambian para reflejar el espacio de 3 dimensiones.  
  
 Estas nuevas coordenadas X e Y son entonces convierten en coordenadas absolutas, mediante un método, como el <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> método. Después de convertir las coordenadas, la <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> propiedad de cada objeto Point3D puede usarse para cualquier método GDI + que toman un <xref:System.Drawing.PointF> objeto como parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.X : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la coordenada X de un punto 3D.</summary>
        <value>Valor <see langword="float" /> que representa la coordenada X de un punto 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier punto utilizado en un dibujo 3D personalizado, que se logra mediante GDI +, debe transformar de X, Y y Z (3D) coordenadas X e Y (2D) coordina mediante la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método. Este método toma una matriz de objetos Point3D como su único parámetro. Mediante una llamada a la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método, los valores de propiedad X e Y se cambian para reflejar el espacio de 3 dimensiones.  
  
 Estas nuevas coordenadas X e Y son entonces convierten en coordenadas absolutas mediante el <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> método. A continuación, se utilizan para llamadas a métodos GDI +.  
  
 Relativa coordenada X puede obtenerse a partir de un valor de eje mediante una llamada a la <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Y : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la coordenada Y de un punto 3D.</summary>
        <value>Valor <see langword="float" /> que representa la coordenada Y de un punto 3D.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier punto utilizado en un dibujo 3D personalizado, que se logra mediante GDI +, debe transformar de X, Y y Z (3D) coordenadas X e Y (2D) coordina mediante la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método. Este método toma una matriz de objetos Point3D como su único parámetro. Mediante una llamada a la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método, los valores de propiedad X e Y se cambian para reflejar el espacio de 3 dimensiones.  
  
 Estas nuevas coordenadas X e Y son entonces convierten en coordenadas absolutas mediante el uso de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> método. A continuación, se utilizan para llamadas a métodos GDI +.  
  
 Puede obtenerse una coordenada Y relativa de un valor de eje mediante la <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Z : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la coordenada Z de un punto 3D.</summary>
        <value>Coordenada Z de un punto 3D, que se mide como un porcentaje de la profundidad del área del gráfico relevante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad Z siempre se expresa como un porcentaje de profundidad del área de gráfico relevante. Con los gráficos 3D, las coordenadas Z son relativas y tienen un valor de 0 para el plano posterior del área del gráfico y un valor de 100 para el plano delantero del área del gráfico.  
  
 **Tenga en cuenta** propiedad Z este puede ser menor que cero (que se encuentra detrás de un área del gráfico) o mayor que 100 (situada delante de un área del gráfico).  
  
 Cualquier punto utilizado en un dibujo 3D personalizado, que se logra mediante GDI +, debe transformar de X, Y y Z (3D) coordenadas X e Y (2D) coordina mediante la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método. Este método toma una matriz de objetos Point3D como su único parámetro. Mediante una llamada a la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> método, los valores de propiedad X e Y se cambian para reflejar el espacio de 3 dimensiones.  
  
 Estas nuevas coordenadas X e Y son entonces convierten en coordenadas absolutas mediante el uso de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> método. A continuación, se utilizan para llamadas a métodos GDI +.  
  
 Se pueden obtener las coordenadas Z relativas en serie mediante el uso de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> métodos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>