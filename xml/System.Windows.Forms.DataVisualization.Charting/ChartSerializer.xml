<Type Name="ChartSerializer" FullName="System.Windows.Forms.DataVisualization.Charting.ChartSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b48c3a0d04711100f9c5cbf030363e408e7bfc0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite la serialización del control <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase se expone como la <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer%2A> propiedad de la raíz <xref:System.Windows.Forms.DataVisualization.Charting.Chart> clase.  
  
 Serialización guarda el estado del gráfico y también proporciona la opción para cargar los datos serializados en el gráfico. Todas las propiedades de gráfico se pueden conservar, incluidos los datos del gráfico. Además, se pueden restablecer todas las propiedades de gráfico marcadas para la serialización.  
  
 Esta clase se puede usar opcionalmente al administrar el estado de vista definido por el usuario. Uno de sus `Load` métodos se pueden utilizar para cargar el estado de vista y uno de los `Save` métodos pueden utilizarse al establecer el estado de vista.  
  
 El formato XML o binario se puede utilizar para almacenar los datos serializados. XML se utiliza de forma predeterminada, pero puede cambiar el formato con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad.  
  
 Propiedades del gráfico se guardan y se cargan mediante la `Save` y `Load` métodos, respectivamente. Tenga en cuenta que sólo las propiedades con valores no predeterminados se guardarán. Datos se pueden guardar y cargar utilizando un archivo, transmitir por secuencias, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> y <xref:System.Xml.XmlReader> objetos. Al guardar o cargar datos mediante un objeto derivado de la <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> o <xref:System.Xml.XmlWriter> las clases, el formato de los datos deben ser XML.  
  
 En la lista siguiente describe tres técnicas, desde básica a avanzada, utiliza para definir los datos serializables. Tenga en cuenta que también es posible definir datos no serializables. Esta técnica se describe en el párrafo siguiente.  
  
-   Serializar el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> mediante la `Save` y `Load` métodos, sin especificar ninguna propiedad serializable. Todas las propiedades de gráfico con valores no predeterminados, que incluye los datos del gráfico, que se van a serializar.  
  
-   Serializar las propiedades de gráfico especificadas por la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad. El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad agrupa las propiedades de gráfico deben serializarse en categorías como datos, apariencia y así sucesivamente. Tenga en cuenta que los nombres de <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> y <xref:System.Windows.Forms.DataVisualization.Charting.Series> objetos se serializan automáticamente; los datos serializados, a continuación, se aplican a las áreas del gráfico existente y serie cuando se cargan.  
  
> [!IMPORTANT]
>  El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad se implementa internamente el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> de control como el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad  
  
-   Serialización de las propiedades de gráfico especificadas por la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad. Se trata de una lista separada por comas de todas las propiedades de gráfico que son serializables. Después de esta propiedad se establece en un valor explícito, es responsabilidad del desarrollador para especificar todas las propiedades que se guarde. En otras palabras, a diferencia del <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad, los nombres de las áreas del gráfico y de series no conservará automáticamente. El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedades también se pueden usar conjuntamente. Sin embargo, asegúrese de que <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> se concatena consigo cuando se establece, en caso contrario, las propiedades de gráfico especificadas por la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad que se va a reemplazar.  
  
 Para prohibir ciertas propiedades que se va a serializar, utilice la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad. Cuando se establece una propiedad como serializable y no serializable, lo que es común cuando se utiliza caracteres comodín, el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad tiene prioridad. Sin embargo, precedencia también depende de cuántos caracteres comodín se utilizaron cuando se especificó una propiedad.  
  
 De forma predeterminada, las propiedades serializables se restablecen a sus valores predeterminados antes de cargarse. Este comportamiento se puede cambiar utilizando la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad. El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset%2A> método también se puede utilizar para restablecer explícitamente las propiedades de gráfico con sus valores predeterminados.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SerializationContents Content { System::Windows::Forms::DataVisualization::Charting::SerializationContents get(); void set(System::Windows::Forms::DataVisualization::Charting::SerializationContents value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de contenido del gráfico que se va a serializar.</summary>
        <value>Valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationContents" /> que representa el contenido del gráfico que se serializará durante una operación de carga, guardado o restablecimiento. De forma predeterminada, se conservan todas las propiedades de gráfico que no sean predeterminadas, incluyendo los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se serializarán todas las propiedades del gráfico cuando se da alguna de las `Save` y `Load` se llaman a métodos. Para proporcionar más control sobre lo que se serializa, utilice la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad. Tenga en cuenta que la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades también se pueden usar junto con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad.  
  
 **Importante** el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad determina los tipos de características del gráfico, por ejemplo, "aspecto", deben serializarse y en realidad se implementa internamente como la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad. Esto significa que esa configuración el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad y, a continuación, establecer el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad dará como resultado la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> valor de propiedad que se va a invalidar, a menos que <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> se concatena. Vea el código de ejemplo siguiente para obtener un ejemplo de este procedimiento.  
  
 Si establece la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad, todos los <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> y <xref:System.Windows.Forms.DataVisualization.Charting.Series> nombres de los objetos se serializan automáticamente; esto significa que se aplicará a los objetos existentes al cargar los datos serializados que pertenecen a las áreas del gráfico y de series.  
  
 Establecer esta propiedad afecta a todas las de carga, guarde y operaciones de restablecimiento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SerializationFormat Format { System::Windows::Forms::DataVisualization::Charting::SerializationFormat get(); void set(System::Windows::Forms::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato usado cuando se serializa el gráfico.</summary>
        <value>Valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationFormat" /> que representa el formato de los datos serializados. El valor predeterminado es XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se puede serializar datos en un formato binario o de XML. Formato binario es compacto y requiere menos almacenamiento que XML. XML, sin embargo, es un formato de texto que es legible.  
  
 Al guardar o cargar los datos serializados, el formato debe ser XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.GetContentString(System.Windows.Forms.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Windows::Forms::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Windows.Forms.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Contenido serializable.</param>
        <param name="serializable">
          Es <see langword="True" />para obtener una cadena serializable; es <see langword="false" /> para obtener una cadena no serializable.</param>
        <summary>Devuelve una clase serializable o no serializable o nombres de propiedad, según el valor concreto de la marca.</summary>
        <returns>Valor <see langword="string" /> que representa la clase serializable o no serializable o los nombres de propiedad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si las propiedades de objeto se restablecen a los valores predeterminados antes de la carga.</summary>
        <value>
          Es <see langword="True" /> si las propiedades de objeto se restablecen a los valores predeterminados antes de la carga; de lo contrario, es <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si el serializador de gráfico está en modo de creación de plantilla.</summary>
        <value>
          Es <see langword="True" /> si el serializador de gráfico está en modo de creación de plantilla; de lo contrario, es <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si las propiedades y los elementos XML desconocidos se pasarán por alto sin producir una excepción.</summary>
        <value>
          Es <see langword="True" /> si las propiedades y los elementos XML desconocidos se pasarán por alto sin producir una excepción; de lo contrario, es <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carga datos serializados en el control <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Objeto derivado de la clase <see cref="T:System.IO.Stream" />; por ejemplo, un objeto <see cref="T:System.IO.MemoryStream" />.</param>
        <summary>Carga datos serializados en el control desde un objeto derivado de la clase <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método para cargar los datos serializados en el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control.  
  
 Cuando se produce una operación de carga, propiedades serializables son, de forma predeterminada, en primer lugar restablecen con sus valores predeterminados antes de que se establecen en los valores almacenados, si se guardan. Para cambiar este comportamiento, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad.  
  
 De forma predeterminada, se cargarán todas las propiedades de gráfico serializadas. Para cargar propiedades serializadas concretas, establezca el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> o <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades antes de cargar los datos.  
  
 Tenga en cuenta que, cuando se guardan los datos mediante un `Save` método, solo las propiedades que tienen valores predeterminados no son realmente se serializan.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Lector, como <see cref="T:System.IO.StringReader" />, que se deriva de la clase <see cref="T:System.IO.TextReader" /> abstracta.</param>
        <summary>Carga datos serializados en el control desde un objeto de lector que deriva de la clase <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método para cargar los datos serializados en el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control.  
  
 Cuando se produce una operación de carga, de forma predeterminada las propiedades serializables se restablecen primero a sus valores predeterminados antes de que se establecen en los valores almacenados, si se guardan. Para cambiar este comportamiento, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad.  
  
 De forma predeterminada, se cargarán todas las propiedades de gráfico serializadas. Estableciendo la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> o <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> se pueden cargar las propiedades de un conjunto específico de propiedades.  
  
 Si usa esta definición, tenga en cuenta que el formato, que se establece mediante el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad, debe ser XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Ruta de acceso absoluta o relativa del archivo usado para almacenar los datos serializados. Si se especifica una ruta de acceso relativa, se considerará relativa al directorio actual.</param>
        <summary>Carga datos serializados guardados en disco en el control <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método para cargar los datos serializados en el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control.  
  
 Cuando se produce una operación de carga, propiedades serializables son, de forma predeterminada, en primer lugar restablecen con sus valores predeterminados antes de que se establecen en los valores almacenados, si se guardan. Para cambiar este comportamiento, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad.  
  
 De forma predeterminada, se cargarán todas las propiedades de gráfico serializadas. Para cargar propiedades serializadas concretas, establezca el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> o <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades antes de cargar los datos.  
  
 Tenga en cuenta que, cuando se guardan los datos mediante un `Save` método, solo las propiedades que tienen valores predeterminados no son realmente se serializan.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Objeto del cual se leen los datos almacenados. El objeto se deriva de la clase <see cref="T:System.Xml.XmlReader" /> y puede ser un objeto de .NET Framework o un objeto definido por el usuario.</param>
        <summary>Carga datos serializados en el control desde un objeto derivado de la clase <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método para cargar los datos serializados en el <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control.  
  
 Cuando se produce una operación de carga, de forma predeterminada propiedades serializables se restablecen primero a sus valores predeterminados antes de que se establecen en los valores almacenados, si se guardan. Para cambiar este comportamiento, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad.  
  
 De forma predeterminada, se cargarán todas las propiedades de gráfico serializadas. Si establece la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> o <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> se pueden cargar las propiedades de un conjunto específico de propiedades.  
  
 Al utilizar esta definición, el formato debe ser XML; se puede cambiar el formato con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad.  
  
 Cuando se trabaja con archivos de texto en formato XML, para fines de simplificar la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load%2A> método en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las propiedades de gráfico que no se serializarán.</summary>
        <value>Expresión <see langword="string" /> separada por comas que representa las propiedades de gráfico que no se serializarán. La sintaxis es "Clase.Propiedad[,Clase.Propiedad]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada todas las propiedades de gráfico estarán serializar cuando el `Save` y `Load` se llaman a métodos. Puede usar el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad para limitar las características del gráfico deben serializarse, junto con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedades.  
  
 Esta propiedad determina qué características del gráfico no se serializarán. Caracteres comodín se pueden utilizar en la expresión de cadena, de la misma manera que el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad. Por ejemplo, para excluir cualquier gráfico `BackColor` propiedades de la serialización, establezca esta propiedad en "*. Color de fondo".  
  
 A veces, una propiedad puede establecerse para estar serializada y no serializada, lo que es común cuando se utiliza caracteres comodín. El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expresión tiene una prioridad más baja en comparación con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expresión. Sin embargo, tenga en cuenta que se da menos peso a expresiones de cadena que utilizan caracteres comodín. Por ejemplo, si la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad se establece en "*. BackColor"y la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad está establecida en <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, B todos los`ackColor` propiedades excepto <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> objetos que se van a serializar.  
  
 Si el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> se ha establecido la propiedad, la prioridad depende de cuántos caracteres comodín se utilizan en el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expresión. Por ejemplo, si se establece la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad <xref:System.Windows.Forms.DataVisualization.Charting.SerializationContents.Appearance> dará como resultado la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad que contiene un "*. Nuevo\*"expresión. Si el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad se establece en "\*. Nuevo\*", todos los `Back*` propiedades de gráfico como `BackColor`, `BackGradient`, y así sucesivamente, todavía se van a serializar. Esto es porque el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> valor de propiedad tiene mayor prioridad cuando se compara con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad.  
  
 Esta propiedad afecta todas guardar, cargar y restablecer las operaciones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece todas las propiedades de gráfico marcadas para la serialización.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, este método restablece todas las propiedades de gráfico con sus valores predeterminados.  
  
 Para limitar las propiedades de gráfico que se restablecen a sus valores predeterminados, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades.  
  
 Tenga en cuenta que este método también se denomina automáticamente cuando un `Load` se utiliza el método y la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propiedad está establecida en `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Guarda las propiedades de gráfico que tienen valores no predeterminados. Se pueden serializar todas las propiedades de gráfico; esto incluye los datos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Objeto derivado de la clase <see cref="T:System.IO.Stream" />, como <see cref="T:System.IO.MemoryStream" />, que se usa para guardar propiedades de gráfico.</param>
        <summary>Guarda datos y propiedades de gráfico con valores no predeterminados en un objeto que se deriva de la clase <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se serializarán todas las propiedades de gráfico con valores no predeterminados, que incluye puntos de datos, cuando se llama a este método. Para controlar características del gráfico a serializar, utilice la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades.  
  
 Si este método se usa para guardar propiedades de apariencia como una plantilla, asegúrese de que el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propiedad de la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer> objeto se establece primero en `true` antes de llamar a este método.  
  
 Serialización de un gráfico como una plantilla se produce de forma diferente de la serialización no es de plantilla; serialización de plantilla se concentra en las propiedades de apariencia.  
  
 Cuando se serializa una plantilla, el <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> método se puede utilizar para cargar la plantilla, para proporcionar las propiedades de apariencia de un gráfico.  
  
 Plantillas pueden usarse para simular las paletas personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto derivado de la clase <see cref="T:System.IO.TextWriter" />, por ejemplo <see cref="T:System.IO.StringWriter" />, que se usa para guardar propiedades de gráfico.</param>
        <summary>Guarda datos y propiedades de gráfico con valores no predeterminados en el objeto dado que se deriva de la clase <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se serializarán todas las propiedades de gráfico con valores no predeterminados, que incluye puntos de datos, cuando se llama a este método. Para controlar qué características del gráfico se serializan, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades.  
  
 Al utilizar esta definición, el formato debe ser XML; el formato se puede establecer con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Ruta de acceso absoluta o relativa del archivo usado para almacenar los datos serializados. Tenga en cuenta que si se especifica una ruta de acceso relativa, se considerará relativa al directorio actual.</param>
        <summary>Guarda datos y propiedades de gráfico con valores no predeterminados en el archivo dado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se serializarán todas las propiedades de gráfico con valores no predeterminados, que incluye puntos de datos, cuando se llama a este método. Para controlar las características de gráfico para que sea serializados use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades.  
  
 De forma predeterminada los datos se guardan en formato XML. Para guardar los datos en un formato binario, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad.  
  
 Tenga en cuenta que los permisos de escritura deben estar habilitados para el directorio donde se almacena el archivo. De forma predeterminada, se trata de la carpeta Bin de la aplicación.  
  
 Si se está usando este método para guardar las propiedades de apariencia como una plantilla, asegúrese de que el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propiedad se establece primero en `true` antes de llamar a este método.  
  
 Serialización de un gráfico como una plantilla variará en función de serialización no es de plantilla, principalmente porque la serialización de plantilla se concentra en las propiedades de apariencia.  
  
 Cuando se serializa una plantilla, el <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> método se puede utilizar para cargar la plantilla, para proporcionar las propiedades de apariencia de un gráfico.  
  
 Plantillas pueden usarse para simular las paletas personalizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto derivado de <see cref="T:System.Xml.XmlWriter" /> que se usa para guardar propiedades <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />.</param>
        <summary>Guarda datos y propiedades de gráfico con valores no predeterminados en el objeto dado que se deriva de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se serializarán todas las propiedades de gráfico con valores no predeterminados, que incluye puntos de datos, cuando se llama a este método. Para controlar qué características del gráfico se serializan, use la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedades.  
  
 Al utilizar esta definición, el formato debe ser XML; se puede cambiar el formato con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> propiedad.  
  
 Cuando se trabaja con archivos de texto en formato XML, para fines de simplificar la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> método en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las propiedades de gráfico que se pueden serializar.</summary>
        <value>Expresión <see langword="string" /> separada por comas que representa las propiedades de gráfico que se van a serializar. La sintaxis es "Clase.Propiedad[,Clase.Propiedad]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada todas las propiedades de gráfico estarán serializar cuando el `Save` y `Load` se llaman a métodos. Puede usar el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad para limitar las características del gráfico deben serializarse, junto con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> y <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedades.  
  
 El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad determina qué características del gráfico que se van a serializar. Caracteres comodín se pueden utilizar en la expresión de cadena, de la misma manera que el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad. Por ejemplo, para serializar cualquier gráfico `BackColor` propiedades, establezca esta propiedad en "*. Color de fondo".  
  
 Si <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> o <xref:System.Windows.Forms.DataVisualization.Charting.Series> secundario se especifican propiedades, a continuación, los nombres de todos los <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> y <xref:System.Windows.Forms.DataVisualization.Charting.Series> objetos deben especificarse también para permitir que los datos persistentes que se aplicará a existente <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> y <xref:System.Windows.Forms.DataVisualization.Charting.Series> objetos; es decir, debe especificar expresiones de "las expresiones ChartArea.Name" y "Series.Name". Vea el código de ejemplo siguiente para obtener un ejemplo de este procedimiento. De forma similar, si se utilizan varias áreas de gráfico, el <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> propiedad de todos los trazados <xref:System.Windows.Forms.DataVisualization.Charting.Series> también debe estar guardado.  
  
 A veces, una propiedad puede establecerse para estar serializada y no serializada, lo que es común cuando se utiliza caracteres comodín. El <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expresión tiene una prioridad más baja en comparación con el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expresión. Sin embargo, tenga en cuenta que se da menos peso a expresiones de cadena que utilizan caracteres comodín. Por ejemplo, si la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad se establece en "*. BackColor"y la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propiedad está establecida en <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, B todos los`ackColor` propiedades excepto <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> objetos que se van a serializar.  
  
 Si establece la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad, el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad se establecerá internamente. Si el <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> propiedad ya está establecida, pero otra propiedad debe serializarse, asegúrese de que al concatenar la <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propiedad al especificar esa propiedad adicional. Vea el código de ejemplo siguiente para obtener un ejemplo de este procedimiento.  
  
 Esta propiedad afecta todas guardar, cargar y restablecer las operaciones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>