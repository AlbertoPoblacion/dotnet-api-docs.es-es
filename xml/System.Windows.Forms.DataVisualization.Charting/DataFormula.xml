<Type Name="DataFormula" FullName="System.Windows.Forms.DataVisualization.Charting.DataFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8a123fb96364b81421c45b7f53e00d7077b5a2d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30628309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona propiedades y métodos para preparar datos de la serie con el fin de realizar análisis técnico, aplicar fórmulas a los datos de la serie y preparar datos de salida que se mostrarán como un gráfico. Los cálculos reales se realizan en la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFormula ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataFormula();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySeriesValues">
      <MemberSignature Language="C#" Value="public void CopySeriesValues (string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySeriesValues(string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySeriesValues (inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySeriesValues(System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeries">Lista separada por comas de nombres de serie de datos de entrada y nombres opcionales de valores X e Y.</param>
        <param name="outputSeries">Lista separada por comas de nombres de serie de datos de salida y nombres opcionales de valores X e Y.</param>
        <summary>Copia una serie o el valor X o Y especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FinancialFormula">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Llama a un método desde una fórmula.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="inputSeries">Serie de entrada en la que se realiza el cálculo.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre de fórmula y la serie de entrada especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="inputSeries">Lista separada por comas de nombres de serie de entrada y nombres opcionales de valores X e Y.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre de fórmula y la serie de entrada especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="inputSeries">Serie de entrada en la que se realiza el cálculo.</param>
        <param name="outputSeries">La serie de salida en la que se almacena el resultado del cálculo.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre de fórmula, y los nombres de la serie de entrada y de salida especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="inputSeries">Lista separada por comas de nombres de serie de entrada y nombres opcionales de valores X e Y.</param>
        <param name="outputSeries">Una lista separada por comas de nombres de serie de salida y nombres de valores X e Y opcionales.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre de fórmula, la serie de entrada y la serie de salida especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="parameters">Los parámetros asociados con la fórmula.</param>
        <param name="inputSeries">Serie de entrada en la que se realiza el cálculo.</param>
        <param name="outputSeries">La serie de salida en la que se almacena el resultado del cálculo.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre y los parámetros de fórmula, y los nombres de las serie de entrada y de salida especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Nombre de la fórmula que se va a llamar.</param>
        <param name="parameters">Los parámetros asociados con la fórmula.</param>
        <param name="inputSeries">Lista separada por comas de nombres de serie de entrada y nombres opcionales de valores X e Y.</param>
        <param name="outputSeries">Una lista separada por comas de nombres de serie de salida y nombres de valores X e Y opcionales.</param>
        <summary>Llama a un método desde un módulo de fórmula con el nombre de fórmula y los parámetros especificados, usando las series de entrada y de salida indicadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyPointIgnored">
      <MemberSignature Language="C#" Value="public bool IsEmptyPointIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyPointIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmptyPointIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyPointIgnored { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si se omiten los puntos vacíos al realizar los cálculos.</summary>
        <value>
          <see langword="true" /> si se omiten los puntos vacíos mientras se realizan cálculos; <see langword="false" /> si los puntos vacíos se tratan como ceros.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartFromFirst">
      <MemberSignature Language="C#" Value="public bool IsStartFromFirst { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartFromFirst" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartFromFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartFromFirst { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una marca que indica si fórmulas como "media móvil" van a empezar en cero.</summary>
        <value>
          Es <see langword="true" /> si fórmulas como "media móvil" empiezan en cero; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statistics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statistics As StatisticFormula" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ Statistics { System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StatisticFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia a la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</summary>
        <value>Una referencia al objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>