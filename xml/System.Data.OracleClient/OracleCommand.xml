<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10eee-101">Representa una instrucción SQL o un procedimiento almacenado que se van a ejecutar en una base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-101">Represents an SQL statement or stored procedure to execute against a database.</span></span> <span data-ttu-id="10eee-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="10eee-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-103">Este tipo está en desuso y se quitará en una versión futura de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="10eee-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="10eee-104">Para obtener más información, consulte [Oracle y ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="10eee-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="10eee-105">La <xref:System.Data.OracleClient.OracleCommand> clase proporciona los métodos siguientes para ejecutar comandos en un origen de datos:</span><span class="sxs-lookup"><span data-stu-id="10eee-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="10eee-106">Elemento</span><span class="sxs-lookup"><span data-stu-id="10eee-106">Item</span></span>|<span data-ttu-id="10eee-107">Descripción</span><span class="sxs-lookup"><span data-stu-id="10eee-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="10eee-108">Ejecuta comandos que devuelven filas.</span><span class="sxs-lookup"><span data-stu-id="10eee-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="10eee-109">Ejecuta una instrucción SQL en <xref:System.Data.OracleClient.OracleCommand.Connection%2A> y devuelve el número de filas afectadas.</span><span class="sxs-lookup"><span data-stu-id="10eee-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="10eee-110">Ejecuta comandos como instrucciones SQL INSERT, DELETE, UPDATE y conjunto.</span><span class="sxs-lookup"><span data-stu-id="10eee-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="10eee-111">Recupera un único valor (por ejemplo, un valor agregado) de una base de datos como un tipo de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="10eee-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="10eee-112">Recupera un único valor (por ejemplo, un valor agregado) de una base de datos como un tipo de datos específico de Oracle.</span><span class="sxs-lookup"><span data-stu-id="10eee-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="10eee-113">Puede restablecer el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad y volver a utilizar el <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="10eee-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="10eee-114">Si la ejecución del comando produce un irrecuperable <xref:System.Data.OracleClient.OracleException>, el <xref:System.Data.OracleClient.OracleConnection> puede cierre.</span><span class="sxs-lookup"><span data-stu-id="10eee-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="10eee-115">Sin embargo, el usuario puede volver a abrir la conexión y continuar.</span><span class="sxs-lookup"><span data-stu-id="10eee-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="10eee-116">A diferencia de la **comando** objeto en los otros proveedores de datos de .NET Framework (SQL Server, OLE DB y ODBC), el <xref:System.Data.OracleClient.OracleCommand> objeto no admite un <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="10eee-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="10eee-117">Establecer un tiempo de espera de comando no tiene ningún efecto y el valor devuelto siempre es cero.</span><span class="sxs-lookup"><span data-stu-id="10eee-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-118">En el ejemplo siguiente se usa el <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> método <xref:System.Data.OracleClient.OracleCommand>, junto con <xref:System.Data.OracleClient.OracleDataReader> y <xref:System.Data.OracleClient.OracleConnection>, para seleccionar filas de una tabla.</span><span class="sxs-lookup"><span data-stu-id="10eee-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10eee-119">Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-120">Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-121">El constructor base inicializa todos los campos con sus valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="10eee-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="10eee-122">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="10eee-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="10eee-123">Propiedades</span><span class="sxs-lookup"><span data-stu-id="10eee-123">Properties</span></span>|<span data-ttu-id="10eee-124">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="10eee-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="10eee-125">Una cadena vacía ("")</span><span class="sxs-lookup"><span data-stu-id="10eee-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="10eee-126">nulo</span><span class="sxs-lookup"><span data-stu-id="10eee-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="10eee-127">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="10eee-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="10eee-128">Texto de la consulta.</span><span class="sxs-lookup"><span data-stu-id="10eee-128">The text of the query.</span></span></param>
        <summary><span data-ttu-id="10eee-129">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleCommand" /> con el texto de la consulta.</span><span class="sxs-lookup"><span data-stu-id="10eee-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="10eee-130">Texto de la consulta.</span><span class="sxs-lookup"><span data-stu-id="10eee-130">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="10eee-131">Objeto <see cref="T:System.Data.OracleClient.OracleConnection" /> que representa la conexión a una base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <summary><span data-ttu-id="10eee-132">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleCommand" /> con el texto de la consulta y un objeto <see cref="T:System.Data.OracleClient.OracleConnection" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10eee-133">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="10eee-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="10eee-134">Texto de la consulta.</span><span class="sxs-lookup"><span data-stu-id="10eee-134">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="10eee-135">Objeto <see cref="T:System.Data.OracleClient.OracleConnection" /> que representa la conexión a una base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <param name="tx"><span data-ttu-id="10eee-136"><see cref="T:System.Data.OracleClient.OracleTransaction" /> donde se ejecuta <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="10eee-137">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleCommand" /> con el texto de la consulta, un objeto <see cref="T:System.Data.OracleClient.OracleConnection" /> y un objeto <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-138">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de esta implementación de la <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="10eee-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="10eee-139">Propiedades</span><span class="sxs-lookup"><span data-stu-id="10eee-139">Properties</span></span>|<span data-ttu-id="10eee-140">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="10eee-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="10eee-141">Un nuevo <xref:System.Data.OracleClient.OracleConnection> que es el valor para el `connection` parámetro.</span><span class="sxs-lookup"><span data-stu-id="10eee-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="10eee-142">Puede cambiar el valor de cualquiera de estos parámetros estableciendo la propiedad relacionada.</span><span class="sxs-lookup"><span data-stu-id="10eee-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-143">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="10eee-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-144">Intenta cancelar la ejecución de un objeto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-145">Si no hay que cancelar nada, no ocurre nada.</span><span class="sxs-lookup"><span data-stu-id="10eee-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="10eee-146">Sin embargo, si hay un comando en ejecución y el intento de cancelarlo no tiene éxito, no se genera ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="10eee-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-147">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand>, se ejecuta y, a continuación, cancela la ejecución.</span><span class="sxs-lookup"><span data-stu-id="10eee-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="10eee-148">Para lograr esto, se pasa al método una cadena que es una instrucción SELECT de SQL y una cadena que se utiliza para conectarse a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-149">Crea una copia de este objeto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span></span></summary>
        <returns><span data-ttu-id="10eee-150">Nuevo objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> en el que todos los valores de propiedad coinciden con los originales.</span><span class="sxs-lookup"><span data-stu-id="10eee-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-151">Obtiene o establece la instrucción SQL o el procedimiento almacenado que se va a ejecutar en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span></span></summary>
        <value><span data-ttu-id="10eee-152">Instrucción de SQL o procedimiento almacenado que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="10eee-152">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="10eee-153">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="10eee-153">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-154">Cuando el <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad debe establecerse en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="10eee-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="10eee-155">El usuario puede ser necesario usar la sintaxis de carácter de escape si el nombre del procedimiento almacenado contiene caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="10eee-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="10eee-156">El comando ejecuta este procedimiento almacenado cuando se llama a uno de los métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="10eee-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="10eee-157">El proveedor de datos de .NET Framework para Oracle no admite el marcador de posición de signo de interrogación (?) para pasar parámetros a una instrucción SQL llama a un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="10eee-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="10eee-158">En este caso, se deben usar parámetros con nombre.</span><span class="sxs-lookup"><span data-stu-id="10eee-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="10eee-159">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="10eee-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="10eee-160">Al utilizar parámetros con nombre en una instrucción SQL llama un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, debe preceder al nombre de parámetro con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="10eee-161">Sin embargo, en un procedimiento almacenado, o cuando se hace referencia a un parámetro con nombre en otra parte en el código (por ejemplo, al agregar <xref:System.Data.OracleClient.OracleParameter> objetos a la <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propiedad), no preceder el parámetro con nombre con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="10eee-162">El proveedor de datos de .NET Framework para Oracle proporciona automáticamente los dos puntos.</span><span class="sxs-lookup"><span data-stu-id="10eee-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-163">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="10eee-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-164">Obtiene o establece el tiempo de espera antes de terminar el intento de ejecutar un comando y generar un error.</span><span class="sxs-lookup"><span data-stu-id="10eee-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="10eee-165">Tiempo (en segundos) que se debe esperar para que se ejecute el comando.</span><span class="sxs-lookup"><span data-stu-id="10eee-165">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="10eee-166">El valor predeterminado es 30 segundos.</span><span class="sxs-lookup"><span data-stu-id="10eee-166">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-167">Un <xref:System.ArgumentException> se genera si asignado <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> valor de la propiedad es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="10eee-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-168">Obtiene o establece un valor que indica cómo se interpreta la propiedad <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="10eee-169">Uno de los valores de <see cref="T:System.Data.CommandType" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-169">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="10eee-170">El valor predeterminado es <see langword="Text" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-170">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-171">Cuando el <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, debe establecer el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad a la sintaxis de llamada completa de Oracle.</span><span class="sxs-lookup"><span data-stu-id="10eee-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="10eee-172">El comando, a continuación, ejecuta este procedimiento almacenado cuando se llama a uno de los métodos Execute (por ejemplo, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> o <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="10eee-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="10eee-173">El <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> y <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedades no pueden establecerse si la conexión actual está realizando una operación execute o fetch.</span><span class="sxs-lookup"><span data-stu-id="10eee-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="10eee-174">El proveedor de datos de .NET Framework para Oracle no admite el marcador de posición de signo de interrogación (?) para pasar parámetros a una instrucción SQL llama a un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="10eee-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="10eee-175">En este caso, se deben usar parámetros con nombre.</span><span class="sxs-lookup"><span data-stu-id="10eee-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="10eee-176">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="10eee-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="10eee-177">Al utilizar parámetros con nombre en una instrucción SQL llama un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, debe preceder al nombre de parámetro con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="10eee-178">Sin embargo, en un procedimiento almacenado, o cuando se hace referencia a un parámetro con nombre en otra parte en el código (por ejemplo, al agregar <xref:System.Data.OracleClient.OracleParameter> objetos a la <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propiedad), no preceder el parámetro con nombre con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="10eee-179">El proveedor de datos de .NET Framework para Oracle proporciona automáticamente los dos puntos.</span><span class="sxs-lookup"><span data-stu-id="10eee-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-180">En el ejemplo siguiente se crea una instancia de una clase derivada <xref:System.Data.OracleClient.OracleCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="10eee-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10eee-181">El valor no es un <see cref="T:System.Data.CommandType" /> válido.</span><span class="sxs-lookup"><span data-stu-id="10eee-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-182">Obtiene o establece la interfaz <see cref="T:System.Data.OracleClient.OracleConnection" /> que usa esta instancia de <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <value><span data-ttu-id="10eee-183">Conexión a un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-183">The connection to a data source.</span></span> <span data-ttu-id="10eee-184">El valor predeterminado es un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="10eee-184">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-185">No se puede establecer la <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, y <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedades si la conexión actual está realizando una operación execute o fetch.</span><span class="sxs-lookup"><span data-stu-id="10eee-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="10eee-186">Si se establece <xref:System.Data.OracleClient.OracleCommand.Connection%2A> mientras se realiza una transacción y el valor de la propiedad <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> no es null, se genera una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="10eee-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="10eee-187">Si establece <xref:System.Data.OracleClient.OracleCommand.Connection%2A> después de que la transacción se ha confirmado o revertido y el <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propiedad no es null, el <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> , a continuación, se establece la propiedad en un valor null.</span><span class="sxs-lookup"><span data-stu-id="10eee-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-188">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="10eee-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10eee-189">La propiedad <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> cambió mientras se realizaba una transacción.</span><span class="sxs-lookup"><span data-stu-id="10eee-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-190">Crea una nueva instancia de un objeto <see cref="T:System.Data.OracleClient.OracleParameter" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="10eee-191">Un objeto <see cref="T:System.Data.OracleClient.OracleParameter" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-192">El <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> método es una versión fuertemente tipada de <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="10eee-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-193">Obtiene o establece un valor que indica si el objeto de comando debe estar visible en un control de interfaz personalizado.</span><span class="sxs-lookup"><span data-stu-id="10eee-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span></span></summary>
        <value>
          <span data-ttu-id="10eee-194"><see langword="true" /> si el objeto de comando debe estar visible en un control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-194"><see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span></span> <span data-ttu-id="10eee-195">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-195">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-196">Ejecuta una instrucción SQL en <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> y devuelve el número de filas afectadas.</span><span class="sxs-lookup"><span data-stu-id="10eee-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="10eee-197">Para las instrucciones UPDATE, INSERT y DELETE, el valor devuelto corresponde al número de filas afectadas por el comando.</span><span class="sxs-lookup"><span data-stu-id="10eee-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="10eee-198">Para las instrucciones CREATE TABLE y DROP TABLE, el valor devuelto es 0.</span><span class="sxs-lookup"><span data-stu-id="10eee-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="10eee-199">Para los demás tipos de instrucciones, el valor devuelto es -1.</span><span class="sxs-lookup"><span data-stu-id="10eee-199">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-200">Puede usar <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> para realizar operaciones de catálogo (por ejemplo, consultar la estructura de una base de datos o crear objetos de base de datos como tablas) o para cambiar los datos en una base de datos sin usar un <xref:System.Data.DataSet>, por ejecutar UPDATE, INSERT o DELETE.</span><span class="sxs-lookup"><span data-stu-id="10eee-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="10eee-201">Aunque <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> no devolver ninguna fila, los parámetros de salida o valores devueltos asignados a los parámetros se rellenan con datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="10eee-202">Para las instrucciones UPDATE, INSERT y DELETE, el valor devuelto corresponde al número de filas afectadas por el comando.</span><span class="sxs-lookup"><span data-stu-id="10eee-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="10eee-203">Para las instrucciones CREATE TABLE y DROP TABLE, el valor devuelto es 0.</span><span class="sxs-lookup"><span data-stu-id="10eee-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="10eee-204">Para los demás tipos de instrucciones, el valor devuelto es -1.</span><span class="sxs-lookup"><span data-stu-id="10eee-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="10eee-205">Si se produce una reversión, el valor devuelto también es -1.</span><span class="sxs-lookup"><span data-stu-id="10eee-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-206">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y, a continuación, se ejecuta mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="10eee-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="10eee-207">En el ejemplo se pasa una cadena que es una instrucción SQL (como UPDATE, INSERT o DELETE) y una cadena que se utiliza para conectarse a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10eee-208">La conexión no existe.</span><span class="sxs-lookup"><span data-stu-id="10eee-208">The connection does not exist.</span></span>  
  
 <span data-ttu-id="10eee-209">O bien</span><span class="sxs-lookup"><span data-stu-id="10eee-209">-or-</span></span>  
  
 <span data-ttu-id="10eee-210">La conexión no está abierta.</span><span class="sxs-lookup"><span data-stu-id="10eee-210">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid"><span data-ttu-id="10eee-211">Representación en forma de cadena base64 del identificador de fila real del servidor.</span><span class="sxs-lookup"><span data-stu-id="10eee-211">A base64 string representation of the actual row ID in the server.</span></span></param>
        <summary><span data-ttu-id="10eee-212">Ejecuta una instrucción SQL en <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> y devuelve el número de filas afectadas.</span><span class="sxs-lookup"><span data-stu-id="10eee-212">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="10eee-213">Para las instrucciones UPDATE, INSERT y DELETE, el valor devuelto corresponde al número de filas afectadas por el comando.</span><span class="sxs-lookup"><span data-stu-id="10eee-213">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="10eee-214">Para las instrucciones CREATE TABLE y DROP TABLE, el valor devuelto es 0.</span><span class="sxs-lookup"><span data-stu-id="10eee-214">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="10eee-215">Para los demás tipos de instrucciones, el valor devuelto es -1.</span><span class="sxs-lookup"><span data-stu-id="10eee-215">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-216">Puede usar <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> para realizar operaciones de catálogo (por ejemplo, consultar la estructura de una base de datos o crear objetos de base de datos como tablas) o para cambiar los datos en una base de datos sin usar un <xref:System.Data.DataSet>, por ejecutar UPDATE, INSERT o DELETE.</span><span class="sxs-lookup"><span data-stu-id="10eee-216">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="10eee-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> difiere de <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> en que devuelve `rowid` como un parámetro de salida si está ejecutando una instrucción INSERT, DELETE o UPDATE que afecte a exactamente una fila.</span><span class="sxs-lookup"><span data-stu-id="10eee-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="10eee-218">Esto permite identificar de forma única una fila de la base de datos de Oracle, que le permiten aumentar el rendimiento en las consultas posteriores, relacionados.</span><span class="sxs-lookup"><span data-stu-id="10eee-218">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="10eee-219">Aunque <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> no devolver ninguna fila, los parámetros de salida o valores devueltos asignados a los parámetros se rellenan con datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-219">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10eee-220">La conexión no existe.</span><span class="sxs-lookup"><span data-stu-id="10eee-220">The connection does not exist.</span></span>  
  
 <span data-ttu-id="10eee-221">O bien</span><span class="sxs-lookup"><span data-stu-id="10eee-221">-or-</span></span>  
  
 <span data-ttu-id="10eee-222">La conexión no está abierta.</span><span class="sxs-lookup"><span data-stu-id="10eee-222">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-223">Ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados que devuelve la consulta como un tipo de datos específico de Oracle.</span><span class="sxs-lookup"><span data-stu-id="10eee-223">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span></span> <span data-ttu-id="10eee-224">Las columnas o filas adicionales no se tienen en cuenta.</span><span class="sxs-lookup"><span data-stu-id="10eee-224">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="10eee-225">Primera columna de la primera fila del conjunto de resultados como un tipo de datos específico de Oracle, o referencia nula si el resultado es <see langword="REF CURSOR" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-225">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-226">Use la <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> método para recuperar un único valor (por ejemplo, un valor agregado) de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-226">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="10eee-227">Esto requiere menos código que el uso de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> método y, a continuación, realizar las operaciones necesarias para generar un único valor de los datos devueltos por una <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="10eee-227">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="10eee-228">Una típica <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> se puede aplicar el formato de consulta como en el siguiente ejemplo de C#:</span><span class="sxs-lookup"><span data-stu-id="10eee-228">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10eee-229">Envía una propiedad <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a la propiedad <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> y compila un objeto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-229">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-230">Envía una propiedad <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a la propiedad <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> y compila un objeto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-230">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="10eee-231">Un objeto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-231">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-232">Cuando el <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad debe establecerse en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="10eee-232">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="10eee-233">El comando, a continuación, ejecuta este procedimiento almacenado cuando se llama a <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="10eee-233">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="10eee-234">Más de un <xref:System.Data.OracleClient.OracleDataReader> pueden estar abiertos en un momento dado.</span><span class="sxs-lookup"><span data-stu-id="10eee-234">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-235">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand>y, a continuación, se ejecuta pasando una cadena que es una instrucción SELECT de SQL y una cadena que se utiliza para conectarse al origen de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-235">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="10eee-236">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-236">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="10eee-237">Envía <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> a <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> y crea un objeto <see cref="T:System.Data.OracleClient.OracleDataReader" /> con uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-237">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="10eee-238">Un objeto <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-238">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-239">Si se espera que la instrucción SQL para devolver una única fila, se especifica `SingleRow` como la <xref:System.Data.CommandBehavior> valor puede mejorar el rendimiento de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="10eee-239">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="10eee-240">Cuando el <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad debe establecerse en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="10eee-240">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="10eee-241">El comando, a continuación, ejecuta este procedimiento almacenado cuando se llama a <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="10eee-241">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="10eee-242">El <xref:System.Data.OracleClient.OracleDataReader> admite un modo especial que permite que los valores binarios grandes se lean eficazmente.</span><span class="sxs-lookup"><span data-stu-id="10eee-242">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="10eee-243">Para obtener más información, consulte el `SequentialAccess` para <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="10eee-243">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="10eee-244">Más de un <xref:System.Data.OracleClient.OracleDataReader> pueden estar abiertos en un momento dado.</span><span class="sxs-lookup"><span data-stu-id="10eee-244">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-245">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand>y, a continuación, se ejecuta pasando una cadena que es una instrucción SELECT de SQL y una cadena que se utiliza para conectarse a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-245">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="10eee-246"><xref:System.Data.CommandBehavior> a continuación, se establece en <xref:System.Data.CommandBehavior.CloseConnection>.</span><span class="sxs-lookup"><span data-stu-id="10eee-246"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-247">Ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados devuelto por la consulta como un tipo de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="10eee-247">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span></span> <span data-ttu-id="10eee-248">Las columnas o filas adicionales no se tienen en cuenta.</span><span class="sxs-lookup"><span data-stu-id="10eee-248">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="10eee-249">Primera columna de la primera fila del conjunto de resultados en forma de tipo de datos de .NET Framework, o referencia nula si el conjunto de resultados está vacío o si el resultado es <see langword="REF CURSOR" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-249">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-250">Use la <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> método para recuperar un único valor (por ejemplo, un valor agregado) de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-250">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="10eee-251">Esto requiere menos código que el uso de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> método y, a continuación, realizar las operaciones necesarias para generar un único valor de los datos devueltos por una <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="10eee-251">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="10eee-252">Una típica <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> se puede aplicar el formato de consulta como en el siguiente ejemplo de C#:</span><span class="sxs-lookup"><span data-stu-id="10eee-252">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="10eee-253">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y, a continuación, se ejecuta mediante <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="10eee-253">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="10eee-254">En el ejemplo se pasa una cadena que es una instrucción SQL que devuelve un resultado agregado y una cadena que se utiliza para conectarse a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-254">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-255">Obtiene la estructura <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-255">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="10eee-256">Parámetros de la instrucción SQL o procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="10eee-256">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="10eee-257">El valor predeterminado es una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="10eee-257">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-258">Cuando el <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propiedad debe establecerse en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="10eee-258">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="10eee-259">El usuario puede ser necesario usar la sintaxis de carácter de escape si el nombre del procedimiento almacenado contiene caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="10eee-259">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="10eee-260">El comando ejecuta este procedimiento almacenado cuando se llama a uno de los métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="10eee-260">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="10eee-261">El proveedor de datos de .NET Framework para Oracle no admite el marcador de posición de signo de interrogación (?) para pasar parámetros a una instrucción SQL llama a un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="10eee-261">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="10eee-262">En este caso, se deben usar parámetros con nombre.</span><span class="sxs-lookup"><span data-stu-id="10eee-262">In this case, named parameters must be used.</span></span> <span data-ttu-id="10eee-263">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="10eee-263">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="10eee-264">Al utilizar parámetros con nombre en una instrucción SQL llama un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, debe preceder al nombre de parámetro con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-264">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="10eee-265">Sin embargo, en un procedimiento almacenado, o cuando se hace referencia a un parámetro con nombre en otra parte en el código (por ejemplo, al agregar <xref:System.Data.OracleClient.OracleParameter> objetos a la <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propiedad), no preceder el parámetro con nombre con un signo de dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="10eee-265">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="10eee-266">El proveedor de datos de .NET Framework para Oracle proporciona automáticamente los dos puntos.</span><span class="sxs-lookup"><span data-stu-id="10eee-266">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10eee-267">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y se muestran sus parámetros.</span><span class="sxs-lookup"><span data-stu-id="10eee-267">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="10eee-268">Para lograr esto, se pasa al método un <xref:System.Data.OracleClient.OracleConnection>, una cadena de consulta que es una instrucción SELECT de SQL y una matriz de <xref:System.Data.OracleClient.OracleParameter> objetos.</span><span class="sxs-lookup"><span data-stu-id="10eee-268">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-269">Crea una versión preparada (o compilada) del comando en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="10eee-269">Creates a prepared (or compiled) version of the command at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-270">Antes de llamar a <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, especifique el tipo de datos de cada parámetro en la instrucción para estar preparado.</span><span class="sxs-lookup"><span data-stu-id="10eee-270">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10eee-271"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> no está establecido.</span><span class="sxs-lookup"><span data-stu-id="10eee-271">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="10eee-272">O bien</span><span class="sxs-lookup"><span data-stu-id="10eee-272">-or-</span></span>  
  
 <span data-ttu-id="10eee-273"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> no es <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-273">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10eee-274">Restablece el valor predeterminado de la propiedad <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-274">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-275">El valor predeterminado de la <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> es 30 segundos.</span><span class="sxs-lookup"><span data-stu-id="10eee-275">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-276">Obtiene o establece la transacción <see cref="T:System.Data.OracleClient.OracleTransaction" /> en la que se ejecuta <see cref="T:System.Data.OracleClient.OracleCommand" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-276">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="10eee-277">Una clase <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-277">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span> <span data-ttu-id="10eee-278">El valor predeterminado es un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="10eee-278">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-279">No se puede establecer el <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propiedad si ya se ha establecido en un valor específico, y el comando se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="10eee-279">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="10eee-280">Si establece la propiedad de transacción en una <xref:System.Data.OracleClient.OracleTransaction> objeto que no está conectado a la misma <xref:System.Data.OracleClient.OracleConnection> como la <xref:System.Data.OracleClient.OracleCommand> de objeto, se producirá una excepción la próxima vez que se intente ejecutar una instrucción.</span><span class="sxs-lookup"><span data-stu-id="10eee-280">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10eee-281">Obtiene o establece un valor que especifica cómo debe aplicar el método <see langword="Update" /> los resultados de comando al objeto <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-281">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <value><span data-ttu-id="10eee-282">Uno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10eee-283">El valor predeterminado <xref:System.Data.UpdateRowSource> valor es `Both` a menos que el comando se genera automáticamente (como en el caso de los <xref:System.Data.OracleClient.OracleCommandBuilder>), en cuyo caso el valor predeterminado es `None`.</span><span class="sxs-lookup"><span data-stu-id="10eee-283">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="10eee-284">Para obtener más información sobre el uso de la <xref:System.Data.UpdateRowSource> propiedad, vea [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).</span><span class="sxs-lookup"><span data-stu-id="10eee-284">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10eee-285">El valor insertado no era ninguno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="10eee-285">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>