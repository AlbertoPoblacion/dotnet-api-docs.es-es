<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleCommandBuilder.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e58edd034b786cad53ea671d0425b05edcbb32f6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e58edd034b786cad53ea671d0425b05edcbb32f6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> con la base de datos asociada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">Este tipo está en desuso y se quitará en una versión futura de .NET Framework.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Oracle y ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> associated with the database.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> asociado a la base de datos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>However, you can create an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> object that generates SQL statements for single-table updates by setting the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> objeto que genera instrucciones SQL para las actualizaciones de tabla única estableciendo la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Then, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> generates any additional SQL statements that you do not set.</source>
          <target state="translated">A continuación, la <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> genera las demás instrucciones SQL que no se establece.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The relationship between an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and its corresponding <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> is always one-to-one.</source>
          <target state="translated">La relación entre un <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> y su correspondiente <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> siempre es uno a uno.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>To create this correspondence, you set the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> object.</source>
          <target state="translated">Para crear esta correspondencia, se establece la <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This causes the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> to register itself as a listener, which produces the output of <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that affect the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esto hace que la <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registrarse a sí mismo como un agente de escucha, lo que produce la salida de <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> eventos que afectan a la <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata.</source>
          <target state="translated">Para generar instrucciones INSERT, UPDATE o DELETE, el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> usa el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> propiedad para recuperar un conjunto de metadatos requerido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> también usa el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> propiedades al que hace referencia el <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> se desasocie de la <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>, y los comandos generados dejan de usarse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, along with <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, to select rows from a database.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, junto con <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, para seleccionar filas de una base de datos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The example is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">En el ejemplo se pasa un inicializado <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, una cadena de conexión, una cadena de consulta que es una instrucción SELECT de SQL y una cadena que es el nombre de la tabla de base de datos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>.</source>
          <target state="translated">El ejemplo crea un <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object to associate with this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> que se va a asociar con <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> con el objeto <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> asociado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Establece u obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> para una instancia de la clase <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Establece u obtiene una cadena que se utiliza como separador de catálogo para una instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object for which this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> object will generate SQL statements.</source>
          <target state="translated">Obtiene o establece un objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> para el que este objeto <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> va a generar instrucciones SQL.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object that is associated with this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> asociado a <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> que hace referencia al procedimiento almacenado del que se va a derivar la información de parámetros.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated">Los parámetros derivados se agregan a la colección de <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object.</source>
          <target state="translated">Recupera información de parámetro del procedimiento almacenado especificado en <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> y rellena la colección de <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> overwrites any existing parameter information for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> sobrescribe cualquier información de parámetros existente para la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> requires an extra call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> requiere una llamada adicional a la base de datos para obtener la información.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">Si la información de parámetros se conoce de antemano, resulta más eficaz para rellenar la colección de parámetros estableciendo la información de manera explícita.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>You can only use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> with stored procedures.</source>
          <target state="translated">Sólo se puede utilizar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> con los procedimientos almacenados.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> to populate the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">No se puede utilizar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> para rellenar la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameterCollection&gt;</ph> con instrucciones de Transact-SQL arbitrarias, como una instrucción SELECT parametrizada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>configurar parámetros y tipos de datos de parámetro<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The command text is not a valid stored procedure name, or the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> specified was not <ph id="ph2">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>.</source>
          <target state="translated">El texto del comando no es un nombre de procedimiento almacenado válido o el <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> especificado no era <ph id="ph2">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">Si es false, genera <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">Si es false, genera <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">Si es false, genera <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> valor y, a continuación, establezca la explícitamente en el <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">Identificador original sin comillas.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Versión entrecomillada del identificador.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">Carácter que se va a utilizar como separador de esquema.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">Generalmente, los servidores de base de datos indican el esquema para un identificador separando el nombre del esquema del identificador con algún carácter.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as Person:CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Por ejemplo, SQL Server utiliza un signo de dos puntos, creando identificadores completos como persona: NombreCliente, donde "Persona" es el nombre del esquema y "NombreCliente" es el identificador.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">Al establecer esta propiedad permite a los programadores modificar este comportamiento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Identificador del que se van a quitar las comillas incrustadas.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>