<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e58edd034b786cad53ea671d0425b05edcbb32f6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be15e-101">Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <see cref="T:System.Data.DataSet" /> con la base de datos asociada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be15e-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="be15e-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be15e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-103">Este tipo está en desuso y se quitará en una versión futura de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="be15e-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="be15e-104">Para obtener más información, consulte [Oracle y ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="be15e-105">El <xref:System.Data.OracleClient.OracleDataAdapter> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <xref:System.Data.DataSet> asociado a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="be15e-105">The <xref:System.Data.OracleClient.OracleDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> associated with the database.</span></span> <span data-ttu-id="be15e-106">Sin embargo, puede crear un <xref:System.Data.OracleClient.OracleCommandBuilder> objeto que genera instrucciones SQL para las actualizaciones de tabla única estableciendo la <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-106">However, you can create an <xref:System.Data.OracleClient.OracleCommandBuilder> object that generates SQL statements for single-table updates by setting the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="be15e-107">A continuación, la <xref:System.Data.OracleClient.OracleCommandBuilder> genera las demás instrucciones SQL que no se establece.</span><span class="sxs-lookup"><span data-stu-id="be15e-107">Then, the <xref:System.Data.OracleClient.OracleCommandBuilder> generates any additional SQL statements that you do not set.</span></span>  
  
 <span data-ttu-id="be15e-108">La relación entre un <xref:System.Data.OracleClient.OracleDataAdapter> y su correspondiente <xref:System.Data.OracleClient.OracleCommandBuilder> siempre es uno a uno.</span><span class="sxs-lookup"><span data-stu-id="be15e-108">The relationship between an <xref:System.Data.OracleClient.OracleDataAdapter> and its corresponding <xref:System.Data.OracleClient.OracleCommandBuilder> is always one-to-one.</span></span> <span data-ttu-id="be15e-109">Para crear esta correspondencia, se establece la <xref:System.Data.OracleClient.OracleDataAdapter> propiedad de la <xref:System.Data.OracleClient.OracleCommandBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="be15e-109">To create this correspondence, you set the <xref:System.Data.OracleClient.OracleDataAdapter> property of the <xref:System.Data.OracleClient.OracleCommandBuilder> object.</span></span> <span data-ttu-id="be15e-110">Esto hace que la <xref:System.Data.OracleClient.OracleCommandBuilder> registrarse a sí mismo como un agente de escucha, lo que produce la salida de <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> eventos que afectan a la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="be15e-110">This causes the <xref:System.Data.OracleClient.OracleCommandBuilder> to register itself as a listener, which produces the output of <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that affect the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="be15e-111">Para generar instrucciones INSERT, UPDATE o DELETE, el <xref:System.Data.OracleClient.OracleCommandBuilder> usa el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad para recuperar un conjunto de metadatos requerido.</span><span class="sxs-lookup"><span data-stu-id="be15e-111">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.OracleClient.OracleCommandBuilder> uses the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata.</span></span>  
  
 <span data-ttu-id="be15e-112">El <xref:System.Data.OracleClient.OracleCommandBuilder> también usa el <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, y <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propiedades al que hace referencia el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-112">The <xref:System.Data.OracleClient.OracleCommandBuilder> also uses the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, and <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> properties referenced by the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-113">Si se llama a <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, <xref:System.Data.OracleClient.OracleCommandBuilder> se desasocie de la <xref:System.Data.OracleClient.OracleDataAdapter>, y los comandos generados dejan de usarse.</span><span class="sxs-lookup"><span data-stu-id="be15e-113">If you call <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, the <xref:System.Data.OracleClient.OracleCommandBuilder> is disassociated from the <xref:System.Data.OracleClient.OracleDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be15e-114">En el ejemplo siguiente se utiliza <xref:System.Data.OracleClient.OracleCommand>, junto con <xref:System.Data.OracleClient.OracleDataAdapter> y <xref:System.Data.OracleClient.OracleConnection>, para seleccionar filas de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="be15e-114">The following example uses <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataAdapter> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a database.</span></span> <span data-ttu-id="be15e-115">En el ejemplo se pasa un inicializado <xref:System.Data.DataSet>, una cadena de conexión, una cadena de consulta que es una instrucción SELECT de SQL y una cadena que es el nombre de la tabla de base de datos.</span><span class="sxs-lookup"><span data-stu-id="be15e-115">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the database table.</span></span> <span data-ttu-id="be15e-116">El ejemplo crea un <xref:System.Data.OracleClient.OracleCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="be15e-116">The example then creates an <xref:System.Data.OracleClient.OracleCommandBuilder>.</span></span>  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-117">Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-117">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be15e-118">Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-118">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-119">El <xref:System.Data.OracleClient.OracleCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.OracleClient.OracleDataAdapter> especificado en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="be15e-119">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="be15e-120">Cuando se crea una nueva instancia de <xref:System.Data.OracleClient.OracleCommandBuilder>, cualquier existente <xref:System.Data.OracleClient.OracleCommandBuilder> asociada a esta <xref:System.Data.OracleClient.OracleDataAdapter> se libera.</span><span class="sxs-lookup"><span data-stu-id="be15e-120">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="be15e-121">Objeto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> que se va a asociar con <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-121">An <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object to associate with this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-122">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> con el objeto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> asociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-122">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> class with the associated <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-123">El <xref:System.Data.OracleClient.OracleCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.OracleClient.OracleDataAdapter> especificado en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="be15e-123">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="be15e-124">Cuando se crea una nueva instancia de <xref:System.Data.OracleClient.OracleCommandBuilder>, cualquier existente <xref:System.Data.OracleClient.OracleCommandBuilder> asociada a esta <xref:System.Data.OracleClient.OracleDataAdapter> se libera.</span><span class="sxs-lookup"><span data-stu-id="be15e-124">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-125">Establece u obtiene el objeto <see cref="T:System.Data.Common.CatalogLocation" /> para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be15e-126">Un objeto <see cref="T:System.Data.Common.CatalogLocation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-127">Establece u obtiene una cadena que se utiliza como separador de catálogo para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be15e-128">Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-129">Obtiene o establece un objeto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> para el que este objeto <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> va a generar instrucciones SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-129">Gets or sets an <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object for which this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> object will generate SQL statements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be15e-130">Objeto <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> asociado a <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-130">An <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object that is associated with this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-131">El <xref:System.Data.OracleClient.OracleCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.OracleClient.OracleDataAdapter> especificado en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="be15e-131">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="be15e-132">Cuando se crea una nueva instancia de <xref:System.Data.OracleClient.OracleCommandBuilder>, cualquier existente <xref:System.Data.OracleClient.OracleCommandBuilder> asociada a esta <xref:System.Data.OracleClient.OracleDataAdapter> se libera.</span><span class="sxs-lookup"><span data-stu-id="be15e-132">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="be15e-133">
            <see cref="T:System.Data.OracleClient.OracleCommand" /> que hace referencia al procedimiento almacenado del que se va a derivar la información de parámetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-133">The <see cref="T:System.Data.OracleClient.OracleCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="be15e-134">Los parámetros derivados se agregan a la colección de <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> del objeto <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-134">The derived parameters are added to the <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> collection of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-135">Recupera información de parámetro del procedimiento almacenado especificado en <see cref="T:System.Data.OracleClient.OracleCommand" /> y rellena la colección de <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> del objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OracleClient.OracleCommand" /> and populates the <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-136"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> sobrescribe cualquier información de parámetros existente para la <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="be15e-136"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="be15e-137"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> requiere una llamada adicional a la base de datos para obtener la información.</span><span class="sxs-lookup"><span data-stu-id="be15e-137"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> requires an extra call to the database to obtain the information.</span></span> <span data-ttu-id="be15e-138">Si la información de parámetros se conoce de antemano, resulta más eficaz para rellenar la colección de parámetros estableciendo la información de manera explícita.</span><span class="sxs-lookup"><span data-stu-id="be15e-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="be15e-139">Sólo se puede utilizar <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> con los procedimientos almacenados.</span><span class="sxs-lookup"><span data-stu-id="be15e-139">You can only use <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="be15e-140">No se puede utilizar <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> para rellenar la <xref:System.Data.OracleClient.OracleParameterCollection> con instrucciones de Transact-SQL arbitrarias, como una instrucción SELECT parametrizada.</span><span class="sxs-lookup"><span data-stu-id="be15e-140">You cannot use <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.OracleClient.OracleParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="be15e-141">Para obtener más información, consulte [configurar parámetros y tipos de datos de parámetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-141">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be15e-142">El texto del comando no es un nombre de procedimiento almacenado válido o el <see cref="T:System.Data.CommandType" /> especificado no era <see cref="F:System.Data.CommandType.StoredProcedure" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-142">The command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not <see cref="F:System.Data.CommandType.StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-143">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-143">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-144">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-144">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-145">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-145">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-146">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-146">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-147">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-147">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-148">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-148">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be15e-149">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-149">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-150">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-150">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-151">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-151">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-152">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-152">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-153">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-153">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-154">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-154">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-155">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-155">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="be15e-156">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-156">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="be15e-157">Si es false, genera @p1, @p2, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-157">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-158">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar eliminaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-158">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-159">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-159">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-160">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-160">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-161">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-161">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-162">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-162">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-163">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-163">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-164">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="be15e-164">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="be15e-165">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="be15e-165">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="be15e-166">.</span><span class="sxs-lookup"><span data-stu-id="be15e-166">.</span></span> <span data-ttu-id="be15e-167">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="be15e-167">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="be15e-168">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="be15e-168">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="be15e-169">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="be15e-169">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="be15e-170">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="be15e-170">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="be15e-171">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-171">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-172">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar inserciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-172">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-173">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-173">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-174">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-174">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-175">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-175">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-176">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-176">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-177">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-177">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be15e-178">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar inserciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-178">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-179">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar inserciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-179">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-180">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-180">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-181">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-181">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-182">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-182">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-183">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-183">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-184">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-184">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="be15e-185">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-185">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="be15e-186">Si es false, genera @p1, @p2, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-186">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-187">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar inserciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-187">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-188">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar inserciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-188">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-189">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-189">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-190">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-190">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-191">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-191">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-192">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-192">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-193">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="be15e-193">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="be15e-194">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="be15e-194">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="be15e-195">.</span><span class="sxs-lookup"><span data-stu-id="be15e-195">.</span></span> <span data-ttu-id="be15e-196">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="be15e-196">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="be15e-197">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="be15e-197">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="be15e-198">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="be15e-198">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="be15e-199">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="be15e-199">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="be15e-200">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-200">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-201">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-201">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-202">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-202">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-203">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-203">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-204">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-204">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-205">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-205">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-206">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-206">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be15e-207">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-207">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-208">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-208">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-209">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-209">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-210">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-210">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-211">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-211">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-212">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-212">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-213">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-213">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="be15e-214">Si es true, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-214">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="be15e-215">Si es false, genera @p1, @p2, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-215">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-216">Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar actualizaciones en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-216">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-217">Objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-217">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-218">Puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.OracleClient.OracleCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="be15e-218">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="be15e-219">También puede usar <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="be15e-219">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="be15e-220">Por ejemplo, puede llamar a <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> y modificar el <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valor y, a continuación, establezca la explícitamente en el <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="be15e-220">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="be15e-221">Las instrucciones SQL se generan por primera vez cuando la aplicación llama una <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="be15e-221">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="be15e-222">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="be15e-222">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="be15e-223">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="be15e-223">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="be15e-224">.</span><span class="sxs-lookup"><span data-stu-id="be15e-224">.</span></span> <span data-ttu-id="be15e-225">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="be15e-225">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="be15e-226">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="be15e-226">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="be15e-227">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="be15e-227">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="be15e-228">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="be15e-228">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="be15e-229">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="be15e-229">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="be15e-230">Identificador original sin comillas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-230">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-231">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-231">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-232">Versión entrecomillada del identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-232">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="be15e-233">Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-233">Embedded quotes within the identifier are properly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be15e-234">Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-234">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be15e-235">Carácter que se va a utilizar como separador de esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-235">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be15e-236">Generalmente, los servidores de base de datos indican el esquema para un identificador separando el nombre del esquema del identificador con algún carácter.</span><span class="sxs-lookup"><span data-stu-id="be15e-236">Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="be15e-237">Por ejemplo, SQL Server utiliza un signo de dos puntos, creando identificadores completos como persona: NombreCliente, donde "Persona" es el nombre del esquema y "NombreCliente" es el identificador.</span><span class="sxs-lookup"><span data-stu-id="be15e-237">For example, SQL Server uses a colon, creating complete identifiers such as Person:CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="be15e-238">Al establecer esta propiedad permite a los programadores modificar este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="be15e-238">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="be15e-239">Identificador del que se van a quitar las comillas incrustadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-239">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be15e-240">Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-240">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be15e-241">Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be15e-241">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>