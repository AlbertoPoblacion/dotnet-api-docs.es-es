<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7fa285b2eb8e74d96ac0fc161882363b9909835" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una conexión abierta a una base de datos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este tipo está en desuso y se quitará en una versión futura de .NET Framework. Para obtener más información, consulte [Oracle y ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Un <xref:System.Data.OracleClient.OracleConnection> objeto representa una conexión única a una base de datos de Oracle. En el caso de un sistema de base de datos cliente/servidor, es equivalente a una conexión de red al servidor.  
  
 Una aplicación que crea una instancia de la <xref:System.Data.OracleClient.OracleConnection> puede establecer la demanda de seguridad declarativo o imperativo que requiere todos los llamadores directos e indirectos tengan los permisos adecuados en el código de objeto. <xref:System.Data.OracleClient.OracleConnection> crea las peticiones de seguridad mediante la <xref:System.Data.OracleClient.OraclePermission> objeto. Los usuarios pueden comprobar que su código tiene los permisos adecuados mediante la <xref:System.Data.OracleClient.OraclePermissionAttribute> objeto. Los usuarios y administradores pueden utilizar también Code Access Security Policy Tool (Caspol.exe) para modificar la directiva de seguridad en el equipo, usuario y niveles de empresa. Para más información, consulte [Seguridad](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).  
  
> [!NOTE]
>  A diferencia de la **conexión** objeto en los otros proveedores de datos de .NET Framework (SQL Server, OLE DB y ODBC), <xref:System.Data.OracleClient.OracleConnection> no admite un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> propiedad. Establecer un tiempo de espera de conexión como una propiedad o en la cadena de conexión no tiene ningún efecto y el valor devuelto siempre es cero. <xref:System.Data.OracleClient.OracleConnection> tampoco admite un <xref:System.Data.OracleClient.OracleConnection.Database%2A> propiedad o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> método.  
  
 Si el <xref:System.Data.OracleClient.OracleConnection> objeto queda fuera del ámbito, permanece abierta. Por lo tanto, siempre debería cerrar <xref:System.Data.OracleClient.OracleConnection> objetos mediante una llamada a <xref:System.Data.OracleClient.OracleConnection.Close%2A> o **Dispose**, o mediante el <xref:System.Data.OracleClient.OracleConnection> objeto dentro de un `Using` instrucción. En caso contrario, la colección de elementos no utilizados podría no liberarlos inmediatamente. Tales demoras pueden provocar errores si se alcanza el número máximo de conexiones cuando un número de conexiones está esperando a ser eliminada por el recolector de elementos no utilizados. Por el contrario, se cierran las conexiones mediante una llamada a <xref:System.Data.OracleClient.OracleConnection.Close%2A> utiliza recursos nativos de manera más eficaz, mejorar la escalabilidad y mejora el rendimiento general de la aplicación. Para asegurarse de que siempre se cierran las conexiones, abra la conexión dentro de un `Using` bloque.  
  
> [!NOTE]
>  Para implementar aplicaciones de alto rendimiento, a menudo necesitará usar la agrupación de conexiones. Sin embargo, cuando se usa el proveedor de datos de .NET Framework para Oracle, no es necesario habilitar la agrupación de conexiones porque el proveedor encarga de ello automáticamente.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleCommand> y <xref:System.Data.OracleClient.OracleConnection>. El <xref:System.Data.OracleClient.OracleConnection> se abre y se establece como el <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> propiedad. El ejemplo, a continuación, se llama <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>y cierra la conexión. Para lograr esto, el <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> se pasa una cadena de conexión y una cadena de consulta que es una instrucción INSERT de SQL.  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea y abre un <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Conexión utilizada para abrir la base de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleConnection" /> con la cadena de conexión especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea y abre un <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia una transacción en la base de datos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia una transacción en la base de datos.</summary>
        <returns>Objeto que representa la nueva transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para confirmar o revertir la transacción, debe utilizar explícitamente la <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> métodos.  
  
 Para asegurarse de que el proveedor de datos de .NET Framework para el modelo de administración de transacciones de Oracle se realiza correctamente, evite el uso de otros modelos de administración de transacciones, como los proporcionados por la base de datos.  
  
> [!NOTE]
>  Si no especifica un nivel de aislamiento, se utiliza el nivel de aislamiento predeterminado. Para especificar un nivel de aislamiento con el <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> método, use la <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> sobrecarga.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleConnection> y <xref:System.Data.OracleClient.OracleTransaction>. También muestra cómo utilizar el <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, y <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> métodos.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se admiten transacciones paralelas.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il">Nivel de aislamiento de transacción de esta conexión.</param>
        <summary>Inicia una transacción en la base de datos con el valor de <see cref="T:System.Data.IsolationLevel" /> especificado.</summary>
        <returns>Objeto que representa la nueva transacción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para confirmar o revertir la transacción, debe utilizar explícitamente la <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> métodos.  
  
 Para asegurarse de que el proveedor de datos de .NET Framework para el modelo de administración de transacciones de Oracle se realiza correctamente, evite el uso de otros modelos de administración de transacciones, como los proporcionados por la base de datos.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleConnection> y <xref:System.Data.OracleClient.OracleTransaction>. También muestra cómo utilizar el <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, y <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> métodos.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se admiten transacciones paralelas.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nombre de la base de datos que se utiliza en lugar de la actual.</param>
        <summary>Cambia la base de datos actual de una conexión <see cref="T:System.Data.OracleClient.OracleConnection" /> abierta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `value` parámetro debe contener un nombre de base de datos válido y no puede contener un valor null, una cadena vacía (""), o una cadena con solo los caracteres en blanco.  
  
> [!NOTE]
>  A diferencia de la **conexión** objeto en los otros proveedores de datos de .NET Framework (SQL Server, OLE DB y ODBC), <xref:System.Data.OracleClient.OracleConnection> no admite un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> propiedad. Establecer un tiempo de espera de conexión como una propiedad o en la cadena de conexión no tiene ningún efecto y el valor devuelto siempre es cero. <xref:System.Data.OracleClient.OracleConnection> tampoco admite un <xref:System.Data.OracleClient.OracleConnection.Database%2A> propiedad o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El nombre de la base de datos no es válido.</exception>
        <exception cref="T:System.InvalidOperationException">La conexión no está abierta.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">No se puede modificar la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vacía la agrupación de conexiones.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> restablece (o vacía) la agrupación de conexiones. Si las conexiones están en uso en el momento de la llamada, se marcan adecuadamente y que son descarta cuando <xref:System.Data.OracleClient.OracleConnection.Close%2A> se llama en ellos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Objeto <see cref="T:System.Data.OracleClient.OracleConnection" /> que se va a quitar de la agrupación.</param>
        <summary>Vacía la agrupación de conexiones asociada a la conexión especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> método borra la agrupación de conexiones que está asociada `connection`. Si las conexiones adicionales asociadas con `connection` están en uso en el momento de la llamada, se marcan adecuadamente y son descarta cuando <xref:System.Data.OracleClient.OracleConnection.Close%2A> se llama en ellos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra la conexión con la base de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleConnection.Close%2A> método revierte todas las transacciones pendientes. A continuación, libera la conexión al grupo de conexiones o se cierra la conexión si la agrupación de conexiones está deshabilitada.  
  
 Una aplicación puede llamar a <xref:System.Data.OracleClient.OracleConnection.Close%2A> más de una vez sin que se genere una excepción.  
  
> [!NOTE]
>  Cuando se usa el proveedor de datos de .NET Framework para Oracle, no es necesario habilitar la agrupación de conexiones porque el proveedor encarga de ello automáticamente.  
  
> [!CAUTION]
>  No llame a <xref:System.Data.OracleClient.OracleConnection.Close%2A> en un <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, o cualquier otro objeto administrado en el `Finalize` método de la clase. En un finalizador, sólo se deberían liberar recursos no administrados que pertenezcan directamente a su clase. Si la clase no dispone de recursos no administrados, no incluya un método `Finalize` en la definición de clase. Para obtener más información, consulte [recolección](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena que se utiliza para abrir una base de datos de Oracle.</summary>
        <value>Cadena de conexión de Oracle que incluye valores, como el nombre del servidor, necesarios para establecer la conexión inicial. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> se puede establecer únicamente cuando se cierra la conexión.  
  
 Puede usar el <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> propiedad para conectarse a una base de datos. En el ejemplo siguiente se muestra la cadena de conexión típica.  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 Muchos de los valores especificados en la cadena tienen propiedades correspondientes de sólo lectura (por ejemplo, `Data Source=MyServer`, que corresponde a la <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> propiedad). Cuando se establece la cadena de conexión, se actualizan todas estas propiedades, a menos que se detecta un error, en cuyo caso ninguna de las propiedades se actualizan. <xref:System.Data.OracleClient.OracleConnection> propiedades devuelven sólo valores predeterminados o los valores especificados en la <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
 Restablecer el <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> en una conexión cerrada, se restablecen todas las conexión cadena valores (y propiedades relacionadas), incluida la contraseña.  
  
 La cadena de conexión se analiza inmediatamente después de que se va a establecer. Si el análisis revela errores de sintaxis, una excepción en tiempo de ejecución, como <xref:System.ArgumentException>, se genera. Otros errores se pueden encontrar cuando se realiza un intento para abrir la conexión.  
  
 El formato básico de una cadena de conexión es una serie de pares de palabra clave/valor separados por punto y coma. El signo igual (=) asocia cada palabra clave a su valor. Para incluir valores que contengan un punto y coma, un carácter de comilla simple o un carácter de comillas dobles, el valor debe estar entre comillas dobles. Si el valor contiene un punto y coma y un carácter de comillas dobles, el valor puede estar entre comillas simples. Las comillas simples también es útil si el valor comienza con un carácter de comillas dobles. Por el contrario, las comillas dobles pueden utilizarse si el valor comienza con una comilla simple. Si el valor contiene caracteres de comillas simples y comillas dobles, el carácter de comilla que se encierra el valor deberá duplicarse cada vez que aparezca dentro del valor.  
  
 Para incluir antes o espacios finales en el valor de cadena, el valor debe incluirse entre comillas simples o dobles comillas. Se omiten los espacios iniciales o finales alrededor de integer, Boolean o valores enumerados, incluso si entre comillas. Sin embargo, se conservan los espacios dentro de una palabra clave de literales de cadena o un valor. Pueden utilizar comillas simples o dobles dentro de una cadena de conexión sin usar delimitadores a menos que un carácter de comillas es el primer o último carácter en el valor, por ejemplo, `Data Source= my'Server` o `Data Source= my"Server`.  
  
 Para incluir un signo igual (=) en una palabra clave o valor, debe ir precedida de otro signo igual. Por ejemplo, en la cadena de conexión hipotética  
  
```  
"key==word=value"  
```  
  
 la palabra clave es "key = word" y el valor es "value".  
  
 Si una palabra clave específica de un par palabra clave-valor se produce más de una vez en una cadena de conexión, se utiliza la última aparición en el conjunto de valores.  
  
 Palabras clave distinguen mayúsculas de minúsculas.  
  
 En la tabla siguiente se muestra los nombres válidos para los valores dentro de la <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|nombre|Default|Descripción|  
|----------|-------------|-----------------|  
|Origen de datos<br /><br /> O bien<br /><br /> Servidor||El nombre o dirección de red de la instancia de Oracle que se va a conectar.|  
|Seguridad integrada|'false'|Si la conexión es una conexión segura o no.<br /><br /> Valores reconocidos son `true` (se recomienda encarecidamente), `false`, `yes`, y `no`.|  
|Contraseña||La contraseña de inicio de sesión la cuenta de Oracle. Para mantener un alto nivel de seguridad, se recomienda encarecidamente que utilice en su lugar la palabra clave de seguridad integrada.|  
|Persist Security Info|'false'|Cuando se establece en `false` o `no` (se recomienda encarecidamente), información de seguridad confidencial, como la contraseña no se devuelve como parte de la conexión si la conexión está abierta o alguna vez ha abierto <xref:System.Data.OracleClient.OracleConnection.State%2A>. Si se restablece la cadena de conexión, restablecen todos los valores de cadena de conexión, incluida la contraseña.<br /><br /> Los valores reconocidos son `true`, `false`, `yes` y `no`.|  
|Unicode|'false'|Especifica si el proveedor de datos de .NET Framework para Oracle utiliza llamadas de API de modo UTF16. Esta palabra clave se ignora, excepto cuando se utiliza software de cliente de Oracle9i.|  
|Id. de usuario||La cuenta de inicio de sesión de Oracle. Para mantener un alto nivel de seguridad, se recomienda encarecidamente que utilice en su lugar la palabra clave de seguridad integrada.|  
  
 En la tabla siguiente se muestra los nombres válidos para los valores dentro de la agrupación de conexiones del <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|nombre|Default|Descripción|  
|----------|-------------|-----------------|  
|Duración de la conexión|0|Cuando una conexión se devuelve al grupo, su hora de creación se compara con la hora actual y, si ese marco temporal (en segundos) supera el valor especificado por `Connection Lifetime`, la conexión se destruye. Esto resulta de utilidad en configuraciones agrupadas para forzar el equilibrio de carga entre un servidor en ejecución y uno que acaba de conectarse.<br /><br /> Un valor de cero hace que las conexiones agrupadas tengan el tiempo de espera de conexión máximo.|  
|Dar de alta|'true'|Cuando `true` o `yes`, el concentrador inscribe automáticamente la conexión en el contexto de transacción actual del subproceso de creación.<br /><br /> Los valores reconocidos son `true`, `false`, `yes` y `no`.|  
|Max Pool Size|100|El número máximo de conexiones permitido en el grupo. Establecer el `Max Pool Size` valor de la <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> puede afectar al rendimiento. Si va a crear y activamente use más de 100 conexiones, debe aumentar `Max Pool Size` en un valor que se aproxime al uso de conexiones estables para la aplicación.|  
|Min Pool Size|0|El número mínimo de conexiones permitido en la agrupación.|  
|Agrupación|'true'|Cuando `true` o `yes`, la <xref:System.Data.OracleClient.OracleConnection> objeto se extrae del grupo adecuado o, si es necesario, se crea y se agrega al grupo adecuado.<br /><br /> Los valores reconocidos son `true`, `false`, `yes` y `no`.|  
  
 Al establecer la palabra clave o valores que requieren un valor booleano de agrupación de conexiones, se puede utilizar 'yes' en lugar de 'true' y 'no' en lugar de 'false'. Valores enteros se representan como cadenas.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleConnection> y establece algunas de sus propiedades en la cadena de conexión.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tiempo de espera para establecer una conexión antes de detener el intento y generar un error.</summary>
        <value>El tiempo (en segundos) que se debe esperar para que se abra una conexión. El valor predeterminado es 15 segundos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede establecer la cantidad de tiempo de espera de una conexión en tiempo de espera mediante el uso de la `Connect Timeout` o `Connection Timeout` palabras clave en la cadena de conexión. Un valor de 0 indica sin límite y debería evitarse en un <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> porque espera indefinidamente a que un intento de conexión.  
  
> [!NOTE]
>  A diferencia de la `Connection` objeto en los otros proveedores de datos de .NET Framework (SQL Server, OLE DB y ODBC), <xref:System.Data.OracleClient.OracleConnection> no admite un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> propiedad. Establecer un tiempo de espera de conexión con una propiedad o en la cadena de conexión no tiene ningún efecto y el valor devuelto siempre es cero. <xref:System.Data.OracleClient.OracleConnection> tampoco admite un <xref:System.Data.OracleClient.OracleConnection.Database%2A> propiedad o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor especificado es menor que 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea y devuelve un objeto <see cref="T:System.Data.OracleClient.OracleCommand" /> asociado a <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>Un objeto <see cref="T:System.Data.OracleClient.OracleCommand" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la base de datos actual o de la que se va a utilizar una vez que se abre la conexión.</summary>
        <value>Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleConnection.Database%2A> propiedad se actualiza dinámicamente. Si cambia la base de datos actual mediante una instrucción SQL o el <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> método, se envía un mensaje informativo y la propiedad se actualiza automáticamente.  
  
> [!NOTE]
>  A diferencia de la `Connection` objeto en los otros proveedores de datos de .NET Framework (SQL Server, OLE DB y ODBC), <xref:System.Data.OracleClient.OracleConnection> no admite un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> propiedad. Establecer un tiempo de espera de conexión con una propiedad o en la cadena de conexión no tiene ningún efecto y el valor devuelto siempre es cero. <xref:System.Data.OracleClient.OracleConnection> tampoco admite un <xref:System.Data.OracleClient.OracleConnection.Database%2A> propiedad o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del servidor Oracle con el que se va a establecer la conexión.</summary>
        <value>Nombre del servidor Oracle con el que se va a establecer la conexión. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleConnection> y se muestran algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction">Referencia a una transacción <see cref="T:System.EnterpriseServices.ITransaction" /> existente en la que se va a dar de alta.</param>
        <summary>Se da de alta en la transacción especificada como una transacción distribuida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nuevo en ADO.NET 2.0 es la compatibilidad para usar el <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> método dar de alta en una transacción distribuida. Dado que se da de alta una conexión en un <xref:System.Transactions.Transaction> instancia, **EnlistTransaction** aprovecha la funcionalidad disponible en el <xref:System.Transactions> espacio de nombres para la administración de transacciones distribuidas, lo que preferible **EnlistDistributedTransaction** para este propósito. Para obtener más información, consulte [transacciones distribuidas](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Aún puede dar de alta en una transacción distribuida existente mediante el  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> método si la inscripción automática está deshabilitada. La inscripción en una transacción distribuida existente garantiza que, si la transacción se confirma o revierte, las modificaciones realizadas por el código en el origen de datos son también confirmadas o revertidas.  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Devuelve una excepción si el <xref:System.Data.OracleClient.OracleConnection> ya se ha iniciado una transacción mediante <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>. Sin embargo, si la transacción es una transacción local iniciada en el origen de datos (por ejemplo, al ejecutar de forma explícita la instrucción BEGIN TRANSACTION mediante un <xref:System.Data.OracleClient.OracleCommand> objeto), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> revierte la transacción local y se da de alta en la transacción distribuida existente cuando se le solicite. No recibirá aviso de que se revirtió la transacción local, y el responsable de administrar las transacciones locales no iniciada mediante <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Referencia a una transacción <see cref="T:System.Transactions.Transaction" /> existente en la que se va a dar de alta.</param>
        <summary>Se da de alta en la transacción especificada como una transacción distribuida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nuevo en ADO.NET 2.0 es la compatibilidad para usar el  
  
 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> método para dar de alta en una transacción distribuida. Porque se da de alta una conexión en un <xref:System.Transactions.Transaction> instancia, **EnlistTransaction** aprovecha la funcionalidad disponible en la <xref:System.Transactions> espacio de nombres para la administración de transacciones distribuidas, lo que preferible **EnlistDistributedTransaction**, que usa un **System.EnterpriseServices.ITransaction** objeto. También tiene una semántica ligeramente diferente: una vez que una conexión se inscribe explícitamente en una transacción, no se puede dar de baja o dado de alta en otra transacción hasta que finaliza la primera transacción. Para obtener más información sobre las transacciones distribuidas, consulte [transacciones distribuidas](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OracleClient.OracleConnection" /> utilizando la cadena especificada para el nombre del esquema.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las consultas que utilizan <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> distinguen mayúsculas de minúsculas. Debido a un tratamiento de casos de Oracle cuando se crea un esquema por primera vez, esto puede provocar resultados inesperados.  
  
 Si el esquema se creó sin comillas`,` Oracle almacena el nombre del objeto en mayúsculas. Si el esquema se creó con comillas, Oracle almacena el nombre del objeto en la grafía proporcionada.  
  
 Por ejemplo, suponga que crea una tabla llamada MyTable, utilizando una de las dos instrucciones siguientes:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Para recuperar información sobre esta tabla a través de la **GetSchema** método en el primer caso, tendría que pasar "MYTABLE" como argumento. En el segundo caso, tendría que pasar "MyTable" como argumento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="collectionName" /> que se especifica es null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Especifica el nombre del esquema que se va a devolver.</param>
        <param name="restrictionValues">Conjunto de valores de restricción para el esquema solicitado.</param>
        <summary>Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.OracleClient.OracleConnection" /> utilizando la cadena especificada para el nombre del esquema y la matriz de cadena determinada para los valores de restricción.</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `restrictionValues` parámetro puede proporcionar una profundidad n de valores que se especifican en la colección de restricciones para una recopilación específica. Para establecer los valores en una restricción dada y no establecer los valores de otras restricciones, debe establecer las anteriores restricciones en null y, a continuación, especificar el valor apropiado para la restricción de que desea especificar un valor para.  
  
 Un ejemplo de esto es la colección "Tables". Si la colección "Tables" tiene 3 restricciones: base de datos, el propietario y el nombre de la tabla; y desea obtener únicamente las tablas asociadas al propietario "Carl", a continuación, deberá pasar los valores siguientes (como mínimo): null y "Carl". Si no se pasa un valor de restricción, se usan los valores predeterminados para esa restricción. Esta es la misma asignación que pasar null, que es diferente de pasar una cadena vacía para el valor del parámetro. En ese caso, la cadena vacía ("") se considera que el valor para el parámetro especificado.  
  
 Las consultas que utilizan <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> distinguen mayúsculas de minúsculas. Debido a un tratamiento de casos de Oracle cuando se crea un esquema por primera vez, esto puede provocar resultados inesperados.  
  
 Si el esquema se creó sin comillas`,` Oracle almacena el nombre del objeto en mayúsculas. Si el esquema se creó con comillas, Oracle almacena el nombre del objeto en la grafía proporcionada.  
  
 Por ejemplo, suponga que crea una tabla llamada MyTable, utilizando una de las dos instrucciones siguientes:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Para recuperar información sobre esta tabla a través de la **GetSchema** método en el primer caso, tendría que pasar "MYTABLE" como argumento. En el segundo caso, tendría que pasar "MyTable" como argumento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="collectionName" /> que se especifica es null.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando Oracle envía un mensaje de advertencia o de información.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el proveedor de datos de .NET Framework para Oracle utiliza el Oracle Call Interface (OCI), siempre que el proveedor de datos recibe un mensaje Success With Info, un <xref:System.Data.OracleClient.OracleConnection.InfoMessage> se genera el evento. Un ejemplo sería crear un procedimiento almacenado que contiene un error de sintaxis. La llamada a la <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> método se realizaría correctamente. Sin embargo un <xref:System.Data.OracleClient.OracleConnection.InfoMessage> se puede generar eventos que le informa del error de sintaxis.  
  
 Los clientes que deseen procesar las advertencias o mensajes informativos enviados por el servidor deben crear un <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegado para que escuche a este evento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre una conexión a una base de datos con la configuración de propiedades especificada en <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleConnection> dibuja una conexión abierta del grupo de conexiones si está disponible. En caso contrario, Establece una nueva conexión con la base de datos.  
  
> [!NOTE]
>  Si el <xref:System.Data.OracleClient.OracleConnection> sale del ámbito, la conexión que representa no se cierra automáticamente. Por lo tanto, debe cerrar la conexión explícitamente mediante una llamada a <xref:System.Data.OracleClient.OracleConnection.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La conexión no está abierta.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">No se puede modificar la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena que contiene la versión del servidor al que está conectado el cliente.</summary>
        <value>Versión del servidor conectado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> propiedad está en formato de la versión de Oracle. Por ejemplo, el formato de una versión Oracle8 es una cadena con el formato "8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production."  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleConnection> y se muestran algunas de sus propiedades de solo lectura.  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La conexión está cerrada.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual de la conexión.</summary>
        <value>Combinación bit a bit de los valores de <see cref="T:System.Data.ConnectionState" />. El valor predeterminado es <see langword="Closed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los cambios de estado permitidos son:  
  
-   De `Closed` a `Open`, usando la `Open` método de la <xref:System.Data.OracleClient.OracleConnection> objeto.  
  
-   De `Open` a `Closed`, usando la <xref:System.Data.OracleClient.OracleConnection.Close%2A> método de la <xref:System.Data.OracleClient.OracleConnection> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una instancia de una clase derivada, <xref:System.Data.OracleClient.OracleConnection>, establece su <xref:System.Data.IDbConnection.ConnectionString%2A>y muestra su <xref:System.Data.OracleClient.OracleConnection.State%2A>.  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
        <returns>Un nuevo objeto que es una copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleConnection> se convierte en una interfaz <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>