<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a1f88c6563adb647d5ba1c206e814ee7d52cec0" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733348" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> administrado diseñado para funcionar con el tipo de datos <see langword="BFILE" /> de Oracle. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` es de tipo de datos Oracle `LOB` tipo de datos que contiene una referencia a datos binarios con un tamaño máximo de 4 gigabytes. Oracle `BFILE` difiere de otro Oracle `LOB` tipos de datos en que sus datos se almacenan en un archivo físico en el sistema operativo en lugar de en el servidor. Tenga en cuenta que el `BFILE` tipo de datos proporciona acceso de solo lectura a los datos. Por lo tanto, heredan los métodos de escritura de la <xref:System.IO.Stream> clase no se admiten.  
  
 Otras características de un `BFILE` tipo de datos que lo distinguen de un `LOB` son que el tipo de datos:  
  
-   contiene datos no estructurados.  
  
-   admite el troceo en el servidor.  
  
-   utiliza semántica de copia de referencia. Por ejemplo, si realiza una operación de copia en un `BFILE`, solo el `BFILE` se copia el localizador (que es una referencia al archivo). Los datos del archivo no se copian.  
  
 El `BFILE` se debe usar el tipo de datos para hacer referencia a `LOB`s que son de gran tamaño y por lo tanto, no es práctico almacenar en la base de datos. Hay sobrecarga de comunicación, servidor y cliente para usar un `BFILE` tipo de datos en comparación con el `LOB` tipo de datos. Resulta más eficaz para tener acceso a un `BFILE` si sólo necesita obtener una pequeña cantidad de datos. Resulta más eficaz para tener acceso a base de datos residente `LOB`s si necesita obtener el objeto completo.  
  
 Cada distinto de NULL <xref:System.Data.OracleClient.OracleBFile> objeto está asociado con dos entidades que definen la ubicación del archivo físico subyacente:  
  
-   Un objeto DIRECTORY de Oracle, que es un alias de base de datos de un directorio del sistema de archivos, y  
  
-   el nombre de archivo del archivo físico subyacente, que se encuentra en el directorio asociado con el objeto DIRECTORY.  
  
 Después de un `BFILE` está creado, puede recuperar su localizador en forma de un <xref:System.Data.OracleClient.OracleBFile> objeto utilizando el <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> o <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> métodos.  
  
 Para obtener un <xref:System.Data.OracleClient.OracleBFile> de objeto, llame a la <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> método.  
  
 El archivo físico que un <xref:System.Data.OracleClient.OracleBFile> objeto está asociado con no es necesario que exista hasta que intente obtener acceso a él. Una aplicación puede enlazar un <xref:System.Data.OracleClient.OracleBFile> en un archivo que no existe, cree el archivo físico en la ubicación esperada y, a continuación, llamar a <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  
  
 Cualquier intento de obtener acceso a un cerrado <xref:System.Data.OracleClient.OracleBFile> utilizando el <xref:System.Data.OracleClient.OracleBFile.Read%2A> o <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos vuelve a abrir un <xref:System.Data.OracleClient.OracleBFile> transmitir automáticamente.  
  
 En el ejemplo de C# siguiente se muestra cómo puede crear un `BFILE` en Oracle tabla y, a continuación, recuperarlo en forma de un <xref:System.Data.OracleClient.OracleBFile> objeto. En el ejemplo se muestra el uso de la <xref:System.Data.OracleClient.OracleDataReader> objeto y el <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> y <xref:System.Data.OracleClient.OracleBFile.Read%2A> métodos.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 Para obtener más información sobre la creación y uso de Oracle `BFILE`, vea el tema correspondiente en la documentación de Oracle.  
  
> [!NOTE]
>  El `BeginWrite`, `EndWrite`, y `WriteByte` métodos, que se heredan de la `System.IO.Stream` de clases, no se admiten porque la `BFILE` es de tipo de datos de solo lectura.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se puede leer la secuencia <see langword="BFILE" />.</summary>
        <value><see langword="false" /> si <see langword="BFILE" /> está cerrado o se ha desechado; de lo contrario, <see langword="true" />. Siempre es <see langword="true" /> para <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se pueden realizar operaciones de búsqueda hacia delante y de búsqueda hacia atrás.</summary>
        <value><see langword="false" /> si <see langword="BFILE" /> está cerrado o se ha desechado; de lo contrario, <see langword="true" />. Siempre es <see langword="true" /> para <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto admite escritura.</summary>
        <value>Siempre devuelve <see langword="false" /> porque el tipo de datos <see langword="BFILE" /> de Oracle es de sólo lectura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de este objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> asociada al mismo archivo físico que el original.</summary>
        <returns>Nuevo objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> asociado al mismo archivo físico que el objeto <see langword="OracleBFile" /> original.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las propiedades del nuevo <xref:System.Data.OracleClient.OracleBFile> objeto inicialmente tiene los mismos valores que las del objeto original. Sin embargo, después de la <xref:System.Data.OracleClient.OracleBFile.Clone%2A> está completa, cada uno de ellos <xref:System.Data.OracleClient.OracleBFile> es independiente del otro objeto. Por ejemplo, cambiar el valor de la <xref:System.Data.OracleClient.OracleBFile.Position%2A> propiedad en el original <xref:System.Data.OracleClient.OracleBFile> no cambia el valor de <xref:System.Data.OracleClient.OracleBFile.Position%2A> en la copia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Data.OracleClient.OracleConnection" /> que utiliza esta instancia de <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Conexión a un origen de datos. El valor predeterminado es un valor nulo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copia datos desde <see cref="T:System.Data.OracleClient.OracleBFile" /> a un <see cref="T:System.Data.OracleClient.OracleLob" /> de destino.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination"><see cref="T:System.Data.OracleClient.OracleLob" /> de destino.</param>
        <summary>Copia todo el contenido de <see cref="T:System.Data.OracleClient.OracleBFile" /> al principio de un <see cref="T:System.Data.OracleClient.OracleLob" /> de destino.</summary>
        <returns>Número de bytes que se han copiado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos de datos subyacente del origen de <xref:System.Data.OracleClient.OracleBFile> y el destino <xref:System.Data.OracleClient.OracleLob> deben ser compatibles. Por ejemplo, no se puede copiar los datos binarios en un destino <xref:System.Data.OracleClient.OracleLob> que tiene un tipo de datos de caracteres.  
  
 Debe tener acceso de escritura en el destino <xref:System.Data.OracleClient.OracleLob> para el <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operación se ejecute correctamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El <see langword="OracleLob" /> de destino es una referencia a objeto nula.</exception>
        <exception cref="T:System.InvalidOperationException">El destino es un <see langword="OracleLob" /> nulo.  
  
O bien 
La conexión a la que está asociado <see langword="OracleBFile" /> está cerrada.</exception>
        <exception cref="T:System.ObjectDisposedException">El objeto <see langword="OracleBFile" /> está cerrado o se ha desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination"><see cref="T:System.Data.OracleClient.OracleLob" /> de destino.</param>
        <param name="destinationOffset">Posición de desplazamiento en la que se va a copiar.</param>
        <summary>Copia todo el contenido de <see cref="T:System.Data.OracleClient.OracleBFile" /> en un <see cref="T:System.Data.OracleClient.OracleLob" /> de destino en el desplazamiento especificado.</summary>
        <returns>Número de bytes que se han copiado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos de datos subyacente del origen de <xref:System.Data.OracleClient.OracleBFile> y el destino <xref:System.Data.OracleClient.OracleLob> deben ser compatibles. Por ejemplo, no se puede copiar los datos binarios en un destino <xref:System.Data.OracleClient.OracleLob> que tiene un tipo de datos de caracteres.  
  
 Debe tener acceso de escritura en el destino <xref:System.Data.OracleClient.OracleLob> para el <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operación se ejecute correctamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El <see langword="OracleLob" /> de destino es una referencia a objeto nula.</exception>
        <exception cref="T:System.InvalidOperationException">El destino es un <see langword="OracleLob" /> nulo.  
  
O bien 
La conexión a la que está asociado <see langword="OracleBFile" /> está cerrada.</exception>
        <exception cref="T:System.ObjectDisposedException">El objeto <see langword="OracleBFile" /> está cerrado o se ha desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">Desplazamiento del que se va a copiar.</param>
        <param name="destination"><see cref="T:System.Data.OracleClient.OracleLob" /> de destino.</param>
        <param name="destinationOffset">Posición de desplazamiento en la que se va a copiar.</param>
        <param name="amount">Cantidad de datos, en bytes que se va a copiar.</param>
        <summary>Copia desde <see cref="T:System.Data.OracleClient.OracleBFile" /> a un <see cref="T:System.Data.OracleClient.OracleLob" /> de destino, con la cantidad de datos especificada y los desplazamientos de origen y de destino.</summary>
        <returns>Número de bytes que se han copiado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos de datos subyacente del origen de <xref:System.Data.OracleClient.OracleBFile> y el destino <xref:System.Data.OracleClient.OracleLob> deben ser compatibles. Por ejemplo, no se puede copiar los datos binarios en un destino <xref:System.Data.OracleClient.OracleLob> que tiene un tipo de datos de caracteres.  
  
 Debe tener acceso de escritura en el destino <xref:System.Data.OracleClient.OracleLob> para el <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operación se ejecute correctamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor del parámetro de cantidad es menor que cero o mayor que 4 gigabytes.</exception>
        <exception cref="T:System.ArgumentNullException">El <see langword="OracleLob" /> de destino es una referencia a objeto nula.</exception>
        <exception cref="T:System.InvalidOperationException">El destino es un <see langword="OracleLob" /> nulo.  
  
O bien 
La conexión a la que está asociado <see langword="OracleBFile" /> está cerrada.</exception>
        <exception cref="T:System.ObjectDisposedException">El objeto <see langword="OracleBFile" /> está cerrado o se ha desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del objeto DIRECTORY, al que está asociado un objeto <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Nombre del objeto DIRECTORY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada distinto de NULL <xref:System.Data.OracleClient.OracleBFile> objeto está asociado con dos entidades que definen la ubicación del archivo físico subyacente:  
  
-   Un objeto DIRECTORY de Oracle, que es un alias de base de datos de un directorio del sistema de archivos, y  
  
-   el nombre de archivo del archivo físico subyacente, que se encuentra en el directorio asociado con el objeto DIRECTORY.  
  
 El <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> propiedad devuelve el nombre del objeto de directorio de la base de datos de Oracle.  
  
 Para obtener más información sobre la creación y uso de Oracle `BFILE`, vea el tema correspondiente en la documentación de Oracle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Se ha intentado llamar a <see langword="DirectoryName" /> en un objeto <see langword="OracleBFile" /> cerrado o desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleBFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos usados por este objeto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si en el sistema operativo hay un archivo físico con datos <see langword="BFILE" />.</summary>
        <value>Es <see langword="true" /> si hay un archivo físico con datos <see langword="BFILE" />; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> está cerrado o se ha desechado.</exception>
        <exception cref="T:System.InvalidOperationException">La conexión a la que está asociado <see langword="BFILE" /> está cerrada.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de <see langword="BFILE" /> sin la ruta de acceso.</summary>
        <value>Nombre de BFILE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para <xref:System.Data.OracleClient.OracleBFile.Null>, se devuelve una cadena vacía.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> está cerrado o se ha desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No se admite en la actualidad.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> es una secuencia <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</summary>
        <value>Es <see langword="true" /> si el objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> es una secuencia <see cref="F:System.Data.OracleClient.OracleBFile.Null" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que devuelve la longitud en bytes del archivo físico al que está asociado el objeto <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Valor largo que representa la longitud del archivo físico en bytes.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Se llamó a algún método después de cerrar o desechar la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa un objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> nulo que no está enlazado a un archivo físico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> puede ser útil cuando desea realizar una operación de comparación en un <xref:System.Data.OracleClient.OracleBFile> para determinar la nulabilidad.  
  
 Cualquier intento de realizar una operación de lectura en un <xref:System.Data.OracleClient.OracleBFile.Null> objeto se realiza correctamente, pero no devuelve ningún dato. Cualquier intento de realizar una operación de escritura en un <xref:System.Data.OracleClient.OracleBFile.Null> objeto genera una excepción. Seleccionar un `BFILE` devuelve la columna que contiene un valor null <xref:System.Data.OracleClient.OracleBFile.Null>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la actual posición de lectura en la secuencia <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Posición actual en la secuencia <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se admite la búsqueda de cualquier ubicación más allá de la longitud de la secuencia.  
  
 El `Position` propiedad no mantener un seguimiento del número de bytes de la secuencia que se han consumido, omitido, o ambos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Se ha intentado establecer una posición con un valor negativo o mayor que la longitud de la secuencia.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó a algún método después de cerrar o desechar la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Matriz de bytes. Cuando este método devuelve un valor, el búfer contiene la matriz de bytes especificada con valores entre <paramref name="offset" /> y (<paramref name="offset" /> + <paramref name="count" />) reemplazada por los bytes leídos desde el origen actual.</param>
        <param name="offset">Desplazamiento en bytes de base cero de <paramref name="buffer" /> donde se comienza a almacenar los datos leídos de la secuencia actual.</param>
        <param name="count">Número máximo de bytes que se deben leer de la secuencia actual.</param>
        <summary>Lee una secuencia de bytes en la secuencia <see cref="T:System.Data.OracleClient.OracleBFile" /> actual y hace avanzar la posición dentro de la secuencia en función del número de bytes leídos.</summary>
        <returns>Número total de bytes leídos en el búfer. Puede ser menor que el número de bytes solicitado si dicho número de bytes no está disponible en la actualidad, o cero si se ha alcanzado el final del archivo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleBFile.Read%2A> método lee un máximo de `count` secuencia de bytes del actual y almacenarlas en `buffer` comenzando por `offset`. La posición actual dentro de la secuencia se avanza por el número de bytes leídos; Sin embargo, si se produce una excepción, la posición actual dentro de la secuencia permanece sin cambios. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Devuelve el número de bytes leídos. El valor devuelto es cero, solo si la posición está al final de la secuencia. <xref:System.Data.OracleClient.OracleBFile.Read%2A> se bloqueará hasta que se puede leer al menos un byte de datos, en caso de que no hay datos disponibles. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Devuelve 0 solo cuando se alcanza el final del archivo. <xref:System.Data.OracleClient.OracleBFile.Read%2A> es gratis devolver menos bytes de los solicitados, incluso si no se alcanzó el final de la secuencia.  
  
 Cualquier intento de obtener acceso a un cerrado <xref:System.Data.OracleClient.OracleBFile> utilizando el <xref:System.Data.OracleClient.OracleBFile.Read%2A> o <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos vuelve a abrir un <xref:System.Data.OracleClient.OracleBFile> transmitir automáticamente.  
  
 El siguiente ejemplo de C# supone este esquema en una tabla de Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 En el ejemplo se muestra cómo utilizar el <xref:System.Data.OracleClient.OracleBFile.Read%2A> y <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos para acceder a un <xref:System.Data.OracleClient.OracleBFile> objeto.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> o <paramref name="count" /> es negativo.</exception>
        <exception cref="T:System.InvalidOperationException">La conexión a la que está asociado <see langword="BFILE" /> está cerrada.</exception>
        <exception cref="T:System.IO.IOException">Error de E/S.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó a algún método después de cerrar o desechar la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Desplazamiento de bytes con respecto al origen. Si <paramref name="offset" /> es negativo, la nueva posición precederá a la posición especificada por <paramref name="origin" /> el número de bytes especificado mediante <paramref name="offset" />. Si <paramref name="offset" />es cero, la nueva posición será la especificada por <paramref name="origin" />. Si <paramref name="offset" /> es positivo, la nueva posición seguirá a la posición especificada por <paramref name="origin" /> el número de bytes especificado mediante <paramref name="offset" />.</param>
        <param name="origin">Valor de tipo <see langword="System.IO.SeekOrigin" /> que indica el punto de referencia utilizado para obtener la nueva posición.</param>
        <summary>Establece la posición en la secuencia <see cref="T:System.Data.OracleClient.OracleBFile" /> actual.</summary>
        <returns>La nueva posición dentro de la secuencia actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `offset` es negativo, la nueva posición debe preceder a la posición especificada por `origin` por el número de bytes especificado por `offset`. Si `offset` es cero, la nueva posición es necesaria que sea la posición especificada por `origin`. Si `offset` es positivo, se requiere para seguir a la posición especificada por la nueva posición `origin` por el número de bytes especificado por `offset`.  
  
 No se admite la búsqueda de cualquier ubicación más allá de la longitud de la secuencia.  
  
 Cualquier intento de obtener acceso a un cerrado <xref:System.Data.OracleClient.OracleBFile> utilizando el <xref:System.Data.OracleClient.OracleBFile.Read%2A> o <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos vuelve a abrir un <xref:System.Data.OracleClient.OracleBFile> transmitir automáticamente.  
  
 El siguiente ejemplo de C# supone este esquema en una tabla de Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 En el ejemplo se muestra cómo utilizar el <xref:System.Data.OracleClient.OracleBFile.Read%2A> y <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos para acceder a un <xref:System.Data.OracleClient.OracleBFile> objeto.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Se ha intentado establecer una posición con un valor negativo o mayor que la longitud de la secuencia.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó a algún método después de cerrar o desechar la secuencia.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">Alias del objeto de directorio que contiene un archivo físico.</param>
        <param name="file">Nombre del archivo del sistema operativo.</param>
        <summary>Enlaza el objeto <see cref="T:System.Data.OracleClient.OracleBFile" /> a otro archivo del sistema operativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operación debe estar dentro de una transacción se realice correctamente. Basta con llamar a <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> en un `BFILE` asocia el <xref:System.Data.OracleClient.OracleBFile> objeto con un archivo diferente, pero no actualiza la tabla de Oracle. Para actualizar la tabla de Oracle después de llamar a <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, debe llamar a la `Update` método de la <xref:System.Data.OracleClient.OracleDataAdapter> y, a continuación, confirmar la transacción.  
  
 Una vez que recupere el <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> o <xref:System.Data.OracleClient.OracleBFile.FileName%2A> propiedad, se almacenan en caché el <xref:System.Data.OracleClient.OracleBFile> objeto y no se ven afectadas por cualquier clonado <xref:System.Data.OracleClient.OracleBFile> las llamadas a los objetos <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, o los cambios realizados en el `BFILE` en la base de datos. En otras palabras, no es posible que representan los valores reales de la `BFILE` objeto en el servidor.  
  
 Además, recuperar cualquiera de las propiedades (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> o <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) hace que ambos valores de propiedad que se recuperan del servidor y se almacenan en caché el <xref:System.Data.OracleClient.OracleBFile> objeto.  
  
 El siguiente ejemplo de C# supone este esquema en una tabla de Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 En el ejemplo se muestra cómo utilizar el <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> y <xref:System.Data.OracleClient.OracleBFile.Seek%2A> métodos para acceder a un <xref:System.Data.OracleClient.OracleBFile> objeto.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La operación debe estar dentro de una transacción.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">No se admite en la actualidad.</param>
        <summary>No se admite en la actualidad.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Excepción que se produce cuando un método invocado no es compatible o cuando se intenta leer, buscar o escribir en una secuencia que no es compatible con las funciones invocadas.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" /> que contiene los datos de <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value><see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" /> que contiene los datos de <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.OracleClient.OracleBFile.Value%2A> propiedad lee todo el `BFILE` al mismo tiempo.  
  
> [!NOTE]
>  Una ventaja de utilizar `BFILE`s es la capacidad de recuperar grandes cantidades de datos en fragmentos en el cliente. Sin embargo, cuando usa <xref:System.Data.OracleClient.OracleBFile.Value%2A>, obtener todos los datos de la columna BFILE como un bloque contiguo, lo que puede aumentar considerablemente la sobrecarga de la aplicación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">No se admite en la actualidad.</param>
        <param name="offset">No se admite en la actualidad.</param>
        <param name="count">No se admite en la actualidad.</param>
        <summary>No se admite en la actualidad.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Excepción que se produce cuando un método invocado no es compatible o cuando se intenta leer, buscar o escribir en una secuencia que no es compatible con las funciones invocadas.</exception>
      </Docs>
    </Member>
  </Members>
</Type>