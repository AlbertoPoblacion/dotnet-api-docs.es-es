<Type Name="ZipFile" FullName="System.IO.Compression.ZipFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75175136f64bfabb93d529c2753a2da754a4f576" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56062255" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFile" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFile abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos estáticos para crear, extraer y abrir archivos zip.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Para usar el <xref:System.IO.Compression.ZipFile> (clase), debe agregar una referencia a la `System.IO.Compression.FileSystem` ensamblado del proyecto; de lo contrario, obtendrá el siguiente mensaje de error al intentar compilar: **El nombre 'ZipFile' no existe en el contexto actual**. Para obtener más información sobre cómo agregar una referencia al proyecto en Visual Studio, vea [Cómo: Agregar o quitar referencias con el Administrador de referencias](https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb)  
  
 Los métodos para manipular archivos zip y sus archivos están repartidos entre tres clases: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> y <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|Para...|Use…|  
|---------|----------|  
|Crea un archivo zip desde un directorio|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extraiga el contenido de un archivo zip en un directorio|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Agregar nuevos archivos a un archivo zip existentes|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Recuperar un archivo en un archivo zip|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Recuperar todos los archivos en un archivo zip|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Para abrir una secuencia a un archivo individual contenidos en un archivo zip|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Eliminar un archivo de un archivo zip|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 No puede usar el <xref:System.IO.Compression.ZipFile> o <xref:System.IO.Compression.ZipFileExtensions> las clases de [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicaciones. En [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] las aplicaciones, debe utilizar las siguientes clases para trabajar con archivos comprimidos.  
  
-   <xref:System.IO.Compression.ZipArchive>  
  
-   <xref:System.IO.Compression.ZipArchiveEntry>  
  
-   <xref:System.IO.Compression.DeflateStream>  
  
-   <xref:System.IO.Compression.GZipStream>  
  
   
  
## Examples  
 En este ejemplo se muestra cómo crear y extraer un archivo zip mediante el <xref:System.IO.Compression.ZipFile> clase. Comprime el contenido de una carpeta en un archivo zip y, a continuación, extrae el contenido a una nueva carpeta.  
  
> [!TIP]
>  Para usar la clase <xref:System.IO.Compression.ZipFile>, debe hacer referencia al ensamblado `System.IO.Compression.FileSystem` del proyecto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb">Procedimiento para agregar o quitar referencias mediante el Administrador de referencias</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un archivo zip que contiene los archivos y directorios del directorio especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateFromDirectory (sourceDirectoryName As String, destinationArchiveFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">La ruta de acceso al directorio que se va a almacenar, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="destinationArchiveFileName">La ruta de acceso del archivo que se creará, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <summary>Crea un archivo zip que contiene los archivos y directorios del directorio especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se conserva la estructura de directorios del sistema de archivos en el archivo. Si el directorio está vacío, se crea un archivo vacío. Esta sobrecarga del método no incluye el directorio base en el archivo y no permite especificar un nivel de compresión. Si desea incluir el directorio base o especificar una llamada a nivel de compresión del <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29> sobrecarga del método.  
  
 Si ya existe el archivo, un <xref:System.IO.IOException> es una excepción. Si ya existe una entrada con el nombre especificado en el archivo, se crea una segunda entrada con un nombre idéntico.  
  
 Si no se puede agregar un archivo en el directorio al archivo, el archivo quedo incompleto y no válidos y el método produce una <xref:System.IO.IOException> excepción.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo crear y extraer un archivo zip mediante el <xref:System.IO.Compression.ZipFile> clase. Comprime el contenido de una carpeta en un archivo zip y, a continuación, extrae el contenido a una nueva carpeta. Para usar la clase <xref:System.IO.Compression.ZipFile>, debe hacer referencia al ensamblado `System.IO.Compression.FileSystem` del proyecto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="sourceDirectoryName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ya existe.  
  
O bien 
Un archivo en el directorio especificado no se pudo abrir.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> especifica un directorio.  
  
O bien 
El llamador no tiene el permiso necesario para tener acceso al directorio especificado en <paramref name="sourceDirectoryName" /> o al archivo especificado en <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato no válido.  
  
O bien 
El archivo zip no admite escritura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">La ruta de acceso al directorio que se va a almacenar, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="destinationArchiveFileName">La ruta de acceso del archivo que se creará, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al crear la entrada.</param>
        <param name="includeBaseDirectory"><see langword="true" /> para incluir el nombre de directorio de <paramref name="sourceDirectoryName" /> en la raíz del archivo; <see langword="false" /> para incluir solo el contenido del directorio.</param>
        <summary>Crea un archivo zip que contiene los archivos y directorios del directorio especificado, utiliza el nivel de compresión especificado y, opcionalmente, incluye el directorio base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se conserva la estructura de directorios del sistema de archivos en el archivo. Si el directorio está vacío, se crea un archivo vacío. Utilice esta sobrecarga del método para especificar el nivel de compresión y si se debe incluir el directorio base en el archivo.  
  
 Si ya existe el archivo, un <xref:System.IO.IOException> es una excepción. Si ya existe una entrada con el nombre especificado en el archivo, se crea una segunda entrada con un nombre idéntico.  
  
 Si no se puede agregar un archivo en el directorio al archivo, el archivo quedo incompleto y no válidos y el método produce una <xref:System.IO.IOException> excepción.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo crear y extraer un archivo zip mediante el <xref:System.IO.Compression.ZipFile> clase. Comprime el contenido de una carpeta en un archivo zip y, a continuación, extrae el contenido a una nueva carpeta. Al comprimir el archivo, se incluye el directorio base y el nivel de compresión se establece para hacer hincapié en la velocidad de la operación a través de la eficacia. Para usar la clase <xref:System.IO.Compression.ZipFile>, debe hacer referencia al ensamblado `System.IO.Compression.FileSystem` del proyecto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="sourceDirectoryName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ya existe.  
  
O bien 
Un archivo en el directorio especificado no se pudo abrir.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> especifica un directorio.  
  
O bien 
El llamador no tiene el permiso necesario para tener acceso al directorio especificado en <paramref name="sourceDirectoryName" /> o al archivo especificado en <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato no válido.  
  
O bien 
El archivo zip no admite escritura.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">La ruta de acceso al directorio que se va a almacenar, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="destinationArchiveFileName">La ruta de acceso del archivo que se creará, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al crear la entrada.</param>
        <param name="includeBaseDirectory"><see langword="true" /> para incluir el nombre de directorio de <paramref name="sourceDirectoryName" /> en la raíz del archivo; <see langword="false" /> para incluir solo el contenido del directorio.</param>
        <param name="entryNameEncoding">Codificación que se va a usar al leer o escribir nombres de entrada en este archivo. Especifique un valor para este parámetro únicamente cuando se necesite una codificación para la interoperabilidad con herramientas y bibliotecas de archivos zip que no admiten la codificación UTF-8 para los nombres de entrada.</param>
        <summary>Crea un archivo zip que contiene los archivos y directorios del directorio especificado, utiliza el nivel de compresión y la codificación de caracteres especificados para los nombres de entrada y, opcionalmente, incluye el directorio base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se conserva la estructura de directorios del sistema de archivos en el archivo. Si el directorio está vacío, se crea un archivo vacío. Utilice esta sobrecarga del método para especificar el nivel de compresión y codificación de caracteres y si se debe incluir el directorio base en el archivo.  
  
 Si ya existe el archivo, un <xref:System.IO.IOException> es una excepción. Si ya existe una entrada con el nombre especificado en el archivo, se crea una segunda entrada con un nombre idéntico.  
  
 Si no se puede agregar un archivo en el directorio al archivo, el archivo quedo incompleto y no válidos y el método produce una <xref:System.IO.IOException> excepción.  
  
 Si `entryNameEncoding` se establece en un valor distinto `null`, los nombres de entrada se codifican mediante la codificación especificada. Si la codificación especificada es un UTF-8, el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local) se establece para cada entrada,  
  
 Si `entryNameEncoding` está establecido en `null`, los nombres de entrada están codificados según las reglas siguientes:  
  
-   Para los nombres de entrada que contienen caracteres fuera del intervalo ASCII, se establece la marca de codificación de idioma y UTF-8 se usa para codificar el nombre de la entrada.  
  
-   Para los nombres de entrada que contienen únicamente caracteres ASCII, se establece la marca de codificación de idioma y la página de códigos predeterminada actual se usa para codificar los nombres de entrada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.  
  
O bien 
 <paramref name="entryNameEncoding" /> se establece en una codificación Unicode distinta de UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="sourceDirectoryName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" /> ya existe.  
  
O bien 
Un archivo en el directorio especificado no se pudo abrir.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" /> especifica un directorio.  
  
O bien 
El llamador no tiene el permiso necesario para tener acceso al directorio especificado en <paramref name="sourceDirectoryName" /> o al archivo especificado en <paramref name="destinationArchiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> o <paramref name="destinationArchiveFileName" /> contiene un formato no válido.  
  
O bien 
El archivo zip no admite escritura.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrae todos los archivos del archivo zip especificado a un directorio del sistema de archivos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">La ruta de acceso al archivo que se va a extraer.</param>
        <param name="destinationDirectoryName">La ruta de acceso al directorio en el que se van a colocar los archivos extraídos, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <summary>Extrae todos los archivos del archivo zip especificado a un directorio del sistema de archivos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método crea el directorio especificado y todos los subdirectorios. El directorio de destino no puede existir ya. Las excepciones relacionadas con validación de las rutas de acceso en el `destinationDirectoryName` o `sourceArchiveFileName` parámetros que se producen antes de la extracción. En caso contrario, si se produce un error durante la extracción, el archivo permanece parcialmente extraído. Cada archivo extraído tiene la misma ruta de acceso relativa al directorio especificado por `destinationDirectoryName` como origen de entrada tiene a la raíz del archivo.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo crear y extraer un archivo zip mediante el <xref:System.IO.Compression.ZipFile> clase. Comprime el contenido de una carpeta en un archivo zip y extrae el contenido a una nueva carpeta. Para usar la clase <xref:System.IO.Compression.ZipFile>, debe hacer referencia al ensamblado `System.IO.Compression.FileSystem` del proyecto.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">La ruta de acceso en <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> supera la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException">El directorio que especifica <paramref name="destinationDirectoryName" /> ya existe.  
  
O bien 
El nombre de una entrada en el archivo es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco, o contiene al menos un carácter no válido.  
  
O bien 
La extracción de una entrada del archivo crearía un archivo que está fuera del directorio especificado por <paramref name="destinationDirectoryName" />. (Por ejemplo, esto puede ocurrir si el nombre de la entrada contiene descriptores de acceso del directorio primario). 
O bien 
Una entrada de archivo que extraer tiene el mismo nombre que una entrada que ya ha sido extraída del mismo archivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El llamador no tiene el permiso necesario para tener acceso al archivo o el directorio de destino.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> contiene un formato no válido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encontró <paramref name="sourceArchiveFileName" />.</exception>
        <exception cref="T:System.IO.InvalidDataException">El archivo especificado por <paramref name="sourceArchiveFileName" /> no es un archivo zip válido.  
  
O bien 
Una entrada de archivo no se encontró o se dañó.  
  
O bien 
Una entrada de archivo se ha comprimido mediante un método de compresión que no se admite.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">La ruta de acceso al archivo que se va a extraer.</param>
        <param name="destinationDirectoryName">La ruta de acceso al directorio en el que se van a colocar los archivos extraídos, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="entryNameEncoding">Codificación que se va a usar al leer o escribir nombres de entrada en este archivo. Especifique un valor para este parámetro únicamente cuando se necesite una codificación para la interoperabilidad con herramientas y bibliotecas de archivos zip que no admiten la codificación UTF-8 para los nombres de entrada.</param>
        <summary>Extrae todos los archivos de archivo zip especificado a un directorio del sistema de archivos y utiliza la codificación de caracteres especificada para los nombres de entrada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método crea el directorio especificado y todos los subdirectorios. El directorio de destino no puede existir ya. Las excepciones relacionadas con validación de las rutas de acceso en el `destinationDirectoryName` o `sourceArchiveFileName` parámetros que se producen antes de la extracción. En caso contrario, si se produce un error durante la extracción, el archivo permanece parcialmente extraído. Cada archivo extraído tiene la misma ruta de acceso relativa al directorio especificado por `destinationDirectoryName` como origen de entrada tiene a la raíz del archivo.  
  
 Si `entryNameEncoding` se establece en un valor distinto `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Para los nombres de entrada donde no se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local), los nombres de entrada se descodifican mediante la codificación especificada.  
  
-   Para las entradas donde se establece la marca de codificación de idioma, los nombres de entrada se descodifican mediante UTF-8.  
  
 Si `entryNameEncoding` está establecido en `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Para las entradas que no se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local), los nombres de entrada se descodifican mediante el uso de la página de códigos predeterminada actual.  
  
-   Para las entradas donde se establece la marca de codificación de idioma, los nombres de entrada se descodifican mediante UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.  
  
O bien 
 <paramref name="entryNameEncoding" /> se establece en una codificación Unicode distinta de UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">La ruta de acceso en <paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> supera la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException">El directorio que especifica <paramref name="destinationDirectoryName" /> ya existe.  
  
O bien 
El nombre de una entrada en el archivo es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco, o contiene al menos un carácter no válido.  
  
O bien 
La extracción de una entrada del archivo crearía un archivo que está fuera del directorio especificado por <paramref name="destinationDirectoryName" />. (Por ejemplo, esto puede ocurrir si el nombre de la entrada contiene descriptores de acceso del directorio primario). 
O bien 
Una entrada de archivo que extraer tiene el mismo nombre que una entrada que ya ha sido extraída del mismo archivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El llamador no tiene el permiso necesario para tener acceso al archivo o el directorio de destino.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> o <paramref name="sourceArchiveFileName" /> contiene un formato no válido.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encontró <paramref name="sourceArchiveFileName" />.</exception>
        <exception cref="T:System.IO.InvalidDataException">El archivo especificado por <paramref name="sourceArchiveFileName" /> no es un archivo zip válido.  
  
O bien 
Una entrada de archivo no se encontró o se dañó.  
  
O bien 
Una entrada de archivo se ha comprimido mediante un método de compresión que no se admite.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="entryNameEncoding">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre un archivo .zip en la ruta de acceso especificada y en el modo especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">La ruta de acceso al archivo para abrir, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="mode">Uno de los valores de enumeración que especifica las acciones que se permiten en las entradas del archivo abierto.</param>
        <summary>Abre un archivo .zip en la ruta de acceso especificada y en el modo especificado.</summary>
        <returns>El archivo zip abierto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Read>, el archivo se abrió con <xref:System.IO.FileMode.Open> desde el <xref:System.IO.FileMode> enumeración como el valor del modo de archivo. Si no existe el archivo, un <xref:System.IO.FileNotFoundException> es una excepción. Establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Read> equivale a llamar a la <xref:System.IO.Compression.ZipFile.OpenRead%2A> método.  
  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Create>, el archivo se abrió con <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> como el valor del modo de archivo. Si ya existe el archivo, un <xref:System.IO.IOException> se produce.  
  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Update>, el archivo se abrió con <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> como el valor del modo de archivo. Si el archivo existe, se abre. Se pueden modificar las entradas existentes y se pueden crear nuevas entradas. Si el archivo no existe, se crea un nuevo archivo; Sin embargo, crear un archivo zip en <xref:System.IO.Compression.ZipArchiveMode.Update> modo no es tan eficaz como para crearlo en <xref:System.IO.Compression.ZipArchiveMode.Create> modo.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo abrir un archivo zip en el modo de actualización y agregar una entrada al archivo.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="archiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="archiveFileName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException">No se pudo abrir <paramref name="archiveFileName" />.  
  
O bien 
 <paramref name="mode" /> está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, pero el archivo especificado en <paramref name="archiveFileName" /> ya existe.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> especifica un directorio.  
  
O bien 
El autor de la llamada no tiene el permiso necesario para obtener acceso al archivo que se especifica en <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> especifica un valor no válido.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, pero el archivo especificado en <paramref name="archiveFileName" /> no se encuentra.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> contiene un formato no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> no se puede interpretar como archivo zip.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, pero falta una entrada o está dañada y no se puede leer.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, pero una entrada es demasiado grande para caber en la memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Encoding) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">La ruta de acceso al archivo para abrir, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <param name="mode">Uno de los valores de enumeración que especifica las acciones que se permiten en las entradas del archivo abierto.</param>
        <param name="entryNameEncoding">Codificación que se va a usar al leer o escribir nombres de entrada en este archivo. Especifique un valor para este parámetro únicamente cuando se necesite una codificación para la interoperabilidad con herramientas y bibliotecas de archivos zip que no admiten la codificación UTF-8 para los nombres de entrada.</param>
        <summary>Abre un archivo zip en la ruta de acceso especificada, en el modo especificado, y usando la codificación de caracteres especificada para los nombres de entrada.</summary>
        <returns>El archivo zip abierto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Read>, el archivo se abrió con <xref:System.IO.FileMode.Open?displayProperty=nameWithType> como el valor del modo de archivo. Si no existe el archivo, un <xref:System.IO.FileNotFoundException> es una excepción. Establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Read> equivale a llamar a la <xref:System.IO.Compression.ZipFile.OpenRead%2A> método.  
  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Create>, el archivo se abrió con <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> como el valor del modo de archivo. Si ya existe el archivo, un <xref:System.IO.IOException> se produce.  
  
 Al establecer el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Update>, el archivo se abrió con <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> como el valor del modo de archivo. Si el archivo existe, se abre. Se pueden modificar las entradas existentes y se pueden crear nuevas entradas. Si el archivo no existe, se crea un nuevo archivo; Sin embargo, crear un archivo zip en <xref:System.IO.Compression.ZipArchiveMode.Update> modo no es tan eficaz como para crearlo en <xref:System.IO.Compression.ZipArchiveMode.Create> modo.  
  
 Al abrir un archivo zip para leer y `entryNameEncoding` está establecido en `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Cuando no se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local), la página de códigos predeterminada actual se utiliza para descodificar el nombre de la entrada.  
  
-   Cuando se establece la marca de codificación de idioma, UTF-8 se utiliza para descodificar el nombre de la entrada.  
  
 Al abrir un archivo zip para leer y `entryNameEncoding` se establece en un valor distinto `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Cuando la marca de codificación de idioma no se establece, especificado `entryNameEncoding` se utiliza para descodificar el nombre de la entrada.  
  
-   Cuando se establece la marca de codificación de idioma, UTF-8 se utiliza para descodificar el nombre de la entrada.  
  
 Al escribir archivar los archivos y `entryNameEncoding` está establecido en `null`, los nombres de entrada están codificados según las reglas siguientes:  
  
-   Para los nombres de entrada que contienen caracteres fuera del intervalo ASCII, se establece la marca de codificación de idioma y los nombres de entrada se codifican mediante UTF-8.  
  
-   Para los nombres de entrada que contienen únicamente caracteres ASCII, no se establece la marca de codificación de idioma y los nombres de entrada se codifican mediante la página de códigos predeterminada actual.  
  
 Al escribir archivar los archivos y `entryNameEncoding` se establece en un valor distinto `null`, especificado `entryNameEncoding` se usa para codificar los nombres de entrada en bytes. Se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local) solo cuando la codificación especificada es una codificación UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.  
  
O bien 
 <paramref name="entryNameEncoding" /> se establece en una codificación Unicode distinta de UTF-8.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="archiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="archiveFileName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException">No se pudo abrir <paramref name="archiveFileName" />.  
  
O bien 
 <paramref name="mode" /> está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, pero el archivo especificado en <paramref name="archiveFileName" /> ya existe.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> especifica un directorio.  
  
O bien 
El autor de la llamada no tiene el permiso necesario para obtener acceso al archivo que se especifica en <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> especifica un valor no válido.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, pero el archivo especificado en <paramref name="archiveFileName" /> no se encuentra.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> contiene un formato no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> no se puede interpretar como archivo zip.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, pero falta una entrada o está dañada y no se puede leer.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, pero una entrada es demasiado grande para caber en la memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive OpenRead(string archiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRead (archiveFileName As String) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ OpenRead(System::String ^ archiveFileName);" />
      <MemberSignature Language="F#" Value="static member OpenRead : string -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.OpenRead archiveFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">La ruta de acceso al archivo para abrir, especificada como una ruta de acceso relativa o absoluta. Una ruta de acceso relativa se interpreta en relación con el directorio de trabajo actual.</param>
        <summary>Abre un archivo zip para leer en la ruta de acceso especificada.</summary>
        <returns>El archivo zip abierto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es equivalente a llamar a la <xref:System.IO.Compression.ZipFile.Open%2A> método y estableciendo el `mode` parámetro <xref:System.IO.Compression.ZipArchiveMode.Read>. El archivo se abrió con <xref:System.IO.FileMode.Open?displayProperty=nameWithType> como el valor del modo de archivo. Si no existe el archivo, un <xref:System.IO.FileNotFoundException> es una excepción.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo abrir un archivo zip para leer.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" /> es <see cref="F:System.String.Empty" />, contiene solo espacios en blanco o contiene al menos un carácter no válido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">En <paramref name="archiveFileName" />, la ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">El valor de <paramref name="archiveFileName" /> no es válido o no existe (por ejemplo, se encuentra en una unidad no asignada).</exception>
        <exception cref="T:System.IO.IOException">No se pudo abrir <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" /> especifica un directorio.  
  
O bien 
El autor de la llamada no tiene el permiso necesario para obtener acceso al archivo que se especifica en <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado en <paramref name="archiveFileName" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" /> contiene un formato no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> no se puede interpretar como archivo zip.</exception>
      </Docs>
    </Member>
  </Members>
</Type>