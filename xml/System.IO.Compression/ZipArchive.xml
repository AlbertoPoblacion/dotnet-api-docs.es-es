<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ca7e4e3069c106cecf652e28ece1a38bfc4d892" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541637" /></Metadata><TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <TypeSignature Language="F#" Value="type ZipArchive = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un paquete de archivos comprimidos en formato de archivo zip.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los métodos para manipular archivos zip y sus entradas de archivo están repartidos entre tres clases: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive>, y <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|En|Usar|  
|--------|---------|  
|Crea un archivo zip desde un directorio|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Extraiga el contenido de un archivo zip en un directorio|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Agregar nuevos archivos a un archivo zip existentes|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Recuperar un archivo de un archivo zip|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Recuperar todos los archivos de un archivo zip|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Abrir una secuencia en un único archivo contenido en un archivo zip|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Eliminar un archivo de un archivo zip|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 Cuando se crea una nueva entrada, el archivo se comprime y agregar al paquete zip. El <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> método le permite especificar una jerarquía de directorios, al agregar la entrada. Incluir la ruta de acceso relativa de la nueva entrada en el paquete zip. Por ejemplo, crear una nueva entrada con una ruta de acceso relativa de `AddedFolder\NewFile.txt` crea un archivo de texto comprimido en un directorio denominado AddedFolder.  
  
 Si se hace referencia el `System.IO.Compression.FileSystem` ensamblado en el proyecto, puede tener acceso a los cuatro métodos de extensión (desde el <xref:System.IO.Compression.ZipFileExtensions> clase) para el <xref:System.IO.Compression.ZipArchive> clase: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)>, <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)>, y <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)> (disponible en .NET Core 2.0 y versiones posteriores). Estos métodos de extensión permiten comprimir y descomprimir el contenido de la entrada a un archivo. El `System.IO.Compression.FileSystem` ensamblado no está disponible para [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicaciones. En [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicaciones, puede comprimir y descomprimir los archivos mediante el uso de la <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream> clase, o bien puede usar el [!INCLUDE[wrt](~/includes/wrt-md.md)] tipos [compresor](https://go.microsoft.com/fwlink/p/?LinkID=246357) y [descompresor](https://go.microsoft.com/fwlink/p/?LinkID=246358).  
  
   
  
## Examples  
 El primer ejemplo muestra cómo crear una nueva entrada y escribir en él mediante el uso de una secuencia.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 El ejemplo siguiente muestra cómo abrir un archivo zip y recorrer en iteración la colección de entradas.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 El tercer ejemplo muestra cómo usar los métodos de extensión para crear una nueva entrada en un archivo zip desde un archivo existente y extraiga el contenido del archivo. Debe hacer referencia a la `System.IO.Compression.FileSystem` ensamblado para ejecutar el código.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Secuencia que contiene el archivo que se va a leer.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> a partir de la secuencia especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">La secuencia ya está cerrada no admite lectura.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no está en el formato de archivo zip.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">Flujo de entrada o de salida.</param>
        <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> a partir de la secuencia especificada y con el modo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Read>, la secuencia debe admitir la lectura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Create>, la secuencia debe admitir la escritura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Update>, la secuencia debe admitir la lectura, escritura y búsqueda.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> es un valor no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Flujo de entrada o de salida.</param>
        <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
        <param name="leaveOpen"><see langword="true" /> para dejar el flujo abierto después de desechar el objeto <see cref="T:System.IO.Compression.ZipArchive" />; de lo contrario, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> en el flujo especificado para el modo especificado y, opcionalmente, deja el flujo abierto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Read>, la secuencia debe admitir la lectura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Create>, la secuencia debe admitir la escritura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Update>, la secuencia debe admitir la lectura, escritura y búsqueda.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> es un valor no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen, entryNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">Flujo de entrada o de salida.</param>
        <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
        <param name="leaveOpen"><see langword="true" /> para dejar el flujo abierto después de desechar el objeto <see cref="T:System.IO.Compression.ZipArchive" />; de lo contrario, <see langword="false" />.</param>
        <param name="entryNameEncoding">Codificación que se va a usar al leer o escribir nombres de entrada en este archivo. Especifique un valor para este parámetro únicamente cuando se necesite una codificación para la interoperabilidad con herramientas y bibliotecas de archivos zip que no admiten la codificación UTF-8 para los nombres de entrada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> en el flujo especificado para el modo especificado, usa la codificación especificada para los nombres de entrada y opcionalmente deja el flujo abierto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Read>, la secuencia debe admitir la lectura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Create>, la secuencia debe admitir la escritura. Si el `mode` parámetro se establece en <xref:System.IO.Compression.ZipArchiveMode.Update>, la secuencia debe admitir la lectura, escritura y búsqueda.  
  
 Al abrir un archivo zip para leer y `entryNameEncoding` está establecido en `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Cuando no se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local), la página de códigos predeterminada actual se utiliza para descodificar el nombre de la entrada.  
  
-   Cuando se establece la marca de codificación de idioma, UTF-8 se utiliza para descodificar el nombre de la entrada.  
  
 Al abrir un archivo zip para leer y `entryNameEncoding` se establece en un valor distinto `null`, descodificación de nombres de entrada según las reglas siguientes:  
  
-   Cuando la marca de codificación de idioma no se establece, especificado `entryNameEncoding` se utiliza para descodificar el nombre de la entrada.  
  
-   Cuando se establece la marca de codificación de idioma, UTF-8 se utiliza para descodificar el nombre de la entrada.  
  
 Al escribir archivar los archivos y `entryNameEncoding` está establecido en `null`, los nombres de entrada están codificados según las reglas siguientes:  
  
-   Para los nombres de entrada que contienen caracteres fuera del intervalo ASCII, se establece la marca de codificación de idioma y los nombres de entrada se codifican mediante UTF-8.  
  
-   Para los nombres de entrada que contienen únicamente caracteres ASCII, no se establece la marca de codificación de idioma y los nombres de entrada se codifican mediante la página de códigos predeterminada actual.  
  
 Al escribir archivar los archivos y `entryNameEncoding` se establece en un valor distinto `null`, especificado `entryNameEncoding` se usa para codificar los nombres de entrada en bytes. Se establece el lenguaje de codificación de marca (en el indicador de uso general de bits del encabezado del archivo local) solo cuando la codificación especificada es una codificación UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> es un valor no válido.</exception>
        <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.  
  
O bien 
 <paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una entrada vacía en el archivo zip.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que especifica el nombre de la entrada que se va a crear.</param>
        <summary>Crea una entrada vacía en el archivo zip con la ruta de acceso y el nombre de entrada especificados.</summary>
        <returns>Una entrada vacía en el archivo zip.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `entryName` cadena debe reflejar la ruta de acceso relativa de la entrada que desee crear en el archivo zip. No hay ninguna restricción en la cadena proporcionada. Sin embargo, si no tiene el formato como una ruta de acceso relativa, se crea la entrada, pero puede obtener una excepción cuando se extrae el contenido del archivo zip. Si ya existe una entrada con el nombre y ruta de acceso especificada en el archivo, se crea una segunda entrada con el mismo nombre y ruta de acceso.  
  
 El valor de la <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> se establece la propiedad de la nueva entrada a la hora actual. La entrada se comprime utilizando el nivel de compresión predeterminada del algoritmo de compresión subyacente. Si desea especificar un nivel de compresión diferentes, utilice el <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> método.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear una entrada y escribir en él mediante el uso de una secuencia.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El archivo zip no admite escritura.</exception>
        <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry (entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que especifica el nombre de la entrada que se va a crear.</param>
        <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al crear la entrada.</param>
        <summary>Crea una entrada vacía en el archivo zip con el nombre de entrada y el nivel de compresión especificados.</summary>
        <returns>Una entrada vacía en el archivo zip.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `entryName` cadena debe reflejar la ruta de acceso relativa de la entrada que desee crear en el archivo zip. No hay ninguna restricción en la cadena proporcionada. Sin embargo, si no tiene el formato como una ruta de acceso relativa, se crea la entrada, pero puede obtener una excepción cuando se extrae el contenido del archivo zip. Si ya existe una entrada con el nombre especificado en el archivo, se crea una segunda entrada con el mismo nombre.  
  
 El valor de la <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> se establece la propiedad de la nueva entrada a la hora actual. Establecer el `compressionLevel` parámetro <xref:System.IO.Compression.CompressionLevel.Optimal> si desea que el archivo que se va a comprimir tanto como sea posible. Establecer el `compressionLevel` parámetro <xref:System.IO.Compression.CompressionLevel.Fastest> solo si le preocupa que la operación de compresión no se completará con la rapidez suficiente para su escenario.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear una entrada con el nivel de compresión óptima. También escribe en la nueva entrada mediante el uso de una secuencia.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El archivo zip no admite escritura.</exception>
        <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libera todos los recursos utilizados por el objeto <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="zipArchive.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método termina de escribir el archivo y libera todos los recursos utilizados por la <xref:System.IO.Compression.ZipArchive> objeto. A menos que construya el objeto mediante el uso de la <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> sobrecarga de constructor y establezca su `leaveOpen` parámetro `true`, todos los flujos subyacentes están cerrados y ya no está disponible para las operaciones de escritura posterior.  
  
 Cuando haya terminado de utilizar esta instancia de <xref:System.IO.Compression.ZipArchive>, llame a <xref:System.IO.Compression.ZipArchive.Dispose> para liberar todos los recursos utilizados por esta instancia. Debe eliminar las demás referencias a este <xref:System.IO.Compression.ZipArchive> para que el recolector de elementos no utilizados pueda reclamar la memoria de la instancia en lugar de mantener activo para la finalización de la instancia.  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> las llamadas del <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> método, que contiene el código para liberar recursos no administrados y no administrados. Para obtener más información, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="zipArchive.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> para terminar de escribir el archivo y liberar recursos no administrados y administrados; <see langword="false" /> para liberar solo recursos no administrados.</param>
        <summary>Llamado por los métodos <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> y <see cref="M:System.Object.Finalize" /> para liberar los recursos no administrados utilizados por la instancia actual de la clase de <see cref="T:System.IO.Compression.ZipArchive" /> , y termina opcionalmente de escribir el archivo y libera los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `disposing` está establecido en `true`, todos los flujos subyacentes están cerrados y ya no está disponible para las operaciones de escritura posterior, a menos que construya el objeto mediante el uso de la <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> sobrecarga de constructor y establezca su `leaveOpen` parámetro `true`.  
  
 Se llama a este método solo por el público <xref:System.IO.Compression.ZipArchive.Dispose> y <xref:System.Object.Finalize> métodos; no llame a este método directamente.  
  
 Al implementar el patrón de dispose, el parámetro booleano de la <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> método se debe utilizar como sigue:  
  
-   El <xref:System.IO.Compression.ZipArchive.Dispose> debe llamar al método del objeto actual <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> con el parámetro booleano establecido en `true` para liberar los recursos administrados y no administrados.  
  
-   El <xref:System.Object.Finalize> debe llamar al método del objeto actual <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> con el parámetro booleano establecido en `false` para liberar únicamente recursos no administrados.
  
 Para obtener más información, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;" Usage="System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de entradas que están actualmente en el archivo zip.</summary>
        <value>La colección de entradas que están actualmente en el archivo zip.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.IO.Compression.ZipArchive.Entries%2A> propiedad para recuperar toda la colección de entradas. Use el <xref:System.IO.Compression.ZipArchive.GetEntry%2A> método para recuperar una sola entrada por nombre.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo abrir un archivo zip y recorrer en iteración la colección de entradas.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">El archivo zip no admite lectura.</exception>
        <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
        <exception cref="T:System.IO.InvalidDataException">El archivo zip está dañado y sus entradas no pueden recuperarse.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.GetEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.GetEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que identifica la entrada a recuperar.</param>
        <summary>Recupera un contenedor para la entrada especificada en el archivo zip.</summary>
        <returns>Un contenedor para la entrada especificada en el archivo; <see langword="null" /> si la entrada no existe en el archivo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si varias entradas que tienen el nombre especificado existen en el archivo, se devuelve la primera de ellas. El nombre de la entrada se compara con `entryName` mediante la comparación ordinal.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Compression.ZipArchive.GetEntry%2A> método para recuperar una entrada.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">El archivo zip no admite lectura.</exception>
        <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
        <exception cref="T:System.IO.InvalidDataException">El archivo zip está dañado y sus entradas no pueden recuperarse.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IO.Compression.ZipArchiveMode" Usage="System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que describe el tipo de acción que el archivo zip puede realizar en las entradas.</summary>
        <value>Uno de los valores de enumeración que describe el tipo de acción (lectura, creación o actualización) que puede realizar el archivo zip en las entradas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Especifique un valor para el <xref:System.IO.Compression.ZipArchive> propiedad cuando se crea una instancia de la <xref:System.IO.Compression.ZipArchive> clase. Use la <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> o <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> constructor para proporcionar un valor para el <xref:System.IO.Compression.ZipArchive.Mode%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
