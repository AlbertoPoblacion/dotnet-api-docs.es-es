<Type Name="EmulateRecognizeCompletedEventArgs" FullName="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7158c0d232c950bb40741c28fe1845808de7a970" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64096105" /></Metadata><TypeSignature Language="C#" Value="public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmulateRecognizeCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EmulateRecognizeCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmulateRecognizeCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type EmulateRecognizeCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see langword="EmulateRecognizeCompleted" /> de las clases <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> y <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una instancia de <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> se crea cuando el <xref:System.Speech.Recognition.SpeechRecognitionEngine> objeto genera el <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> eventos. Para obtener información sobre el resultado de reconocimiento, tener acceso a la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propiedad en el controlador para el evento.  
  
 Emulación es el proceso por el que el texto, en lugar de audio, es la entrada para un motor de reconocimiento de voz. Para omitir las entradas de audio para un <xref:System.Speech.Recognition.SpeechRecognitionEngine> objeto durante la emulación, use el <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> método.  
  
 Si el motor de reconocimiento de voz encuentra una excepción durante la operación de reconocimiento, la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad se establece en la excepción y la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propiedad está establecida en `null`.  
  
 <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> se deriva de <xref:System.ComponentModel.AsyncCompletedEventArgs>.  
  
   
  
## Examples  
 En el ejemplo siguiente se agrega un controlador de eventos para el <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> eventos a un <xref:System.Speech.Recognition.SpeechRecognitionEngine>. El controlador obtiene el texto reconocido desde el <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propiedad.  
  
```csharp  
  
private SpeechRecognitionEngine sre;  
  
// Initialize the speech recognition engine.   
private void Initialize()  
{  
  sre = new SpeechRecognitionEngine();  
  
  // Add a handler for the EmulateRecognizeCompleted event.  
  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  
  
  // Add other initialization code here.  
}  
  
// Handle the EmulateRecognizeCompleted event.   
void sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  string phrase = e.Result.Text;  
  
  // Add event handler code here.  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
  </Docs>
  <Members>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognitionResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.RecognitionResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As RecognitionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::RecognitionResult ^ Result { System::Speech::Recognition::RecognitionResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : System.Speech.Recognition.RecognitionResult" Usage="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognitionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los resultados de reconocimiento emulado.</summary>
        <value>Información detallada sobre los resultados de reconocimiento, o <see langword="null" /> si se ha producido un error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Speech.Recognition.RecognitionResult> objeto derive de <xref:System.Speech.Recognition.RecognizedPhrase> y contiene información completa acerca de una frase devuelta por una operación de reconocimiento. Puede obtener una lista de todos los candidatos de reconocimiento de la <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> propiedad.  
  
 Si el reconocedor encuentra una excepción durante la operación de reconocimiento, la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad se establece en la excepción y la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propiedad está establecida en `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>