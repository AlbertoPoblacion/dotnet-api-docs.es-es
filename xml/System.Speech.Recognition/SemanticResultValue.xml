<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43a39ed0f55bc0bd6fb2611e68b4c6335ada2d9c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36409136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="48b23-101">Representa un valor semántico y, opcionalmente, asocia el valor a un componente de una gramática de reconocimiento de voz.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48b23-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-102">El uso de <xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> objetos, junto con <xref:System.Speech.Recognition.GrammarBuilder> y <xref:System.Speech.Recognition.Choices>, es la manera más fácil diseñar una estructura de semántica de un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="48b23-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="48b23-103">Se tiene acceso a información semántica una frase obteniendo una instancia de <xref:System.Speech.Recognition.SemanticValue>hasta la <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propiedad <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="48b23-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48b23-104">Valores administrados por <xref:System.Speech.Recognition.SemanticResultValue> objetos se definen mediante <xref:System.Object> instancias pasan a sus constructores.</span><span class="sxs-lookup"><span data-stu-id="48b23-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="48b23-105">El tipo subyacente de este <xref:System.Object> debe ser `bool`, `int`, `float`, o `string`.</span><span class="sxs-lookup"><span data-stu-id="48b23-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="48b23-106">Cualquier otro tipo impedirá la construcción de un <xref:System.Speech.Recognition.Grammar> instancia con la <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="48b23-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="48b23-107">El uso normal de un <xref:System.Speech.Recognition.SemanticResultValue> instancia asocia la instancia a un componente reconocible de un <xref:System.Speech.Recognition.Grammar>, por ejemplo, una frase, una regla, o un <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="48b23-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="48b23-108">Si el componente asociado se usa como parte de una operación de reconocimiento, el <xref:System.Speech.Recognition.SemanticResultValue> se utiliza para definir un valor en la semántica de la frase devuelta.</span><span class="sxs-lookup"><span data-stu-id="48b23-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="48b23-109">Hay dos métodos básicos para asociar un <xref:System.Speech.Recognition.SemanticResultValue> instancia con un elemento de gramática, según el constructor utilizado para crear la <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="48b23-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="48b23-110">Si solo el valor (especificado por una instancia de <xref:System.Object>) se utiliza para construir un <xref:System.Speech.Recognition.SemanticResultValue> objeto, el <xref:System.Speech.Recognition.SemanticResultValue> está asociado con el componente de gramática que le preceden, además un <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="48b23-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="48b23-111">Por ejemplo, en el fragmento de código siguiente, si un <xref:System.Speech.Recognition.Grammar> construido mediante este <xref:System.Speech.Recognition.GrammarBuilder> instancia reconoce la palabra "plano", un valor de `true` se establece en la semántica de frase reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="48b23-112">Para obtener más información, vea la descripción de <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="48b23-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="48b23-113">Si es una frase de valor de cadena o específicos de <xref:System.Speech.Recognition.GrammarBuilder> instancia se usa, junto con un <xref:System.Object> que especifica un <xref:System.Speech.Recognition.SemanticResultValue> valor, que el valor se asocia automáticamente con la frase de valor de cadena o la <xref:System.Speech.Recognition.GrammarBuilder> instancia.</span><span class="sxs-lookup"><span data-stu-id="48b23-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="48b23-114">Si la frase o <xref:System.Speech.Recognition.GrammarBuilder> objeto se usa en el proceso de reconocimiento, el valor se asignará a la semántica de la frase reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="48b23-115">En el ejemplo siguiente se muestra cómo hacerlo y es funcionalmente equivalente al ejemplo anterior, que utiliza llamadas explícitas a <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> y <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="48b23-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="48b23-116">Si la lógica de reconocimiento utiliza la palabra "plano", el valor `true` se agregará a la semántica reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="48b23-117">Para obtener más información, vea la descripción de <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> y <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="48b23-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="48b23-118">Que va a usar un <xref:System.Speech.Recognition.Grammar> en el reconocimiento de todos los <xref:System.Speech.Recognition.SemanticResultValue> instancias deben estar asociadas a uno de los <xref:System.Speech.Recognition.SemanticValue> objetos utilizados por esa <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="48b23-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="48b23-119">Esto se realiza mediante la asociación de una clave semántica con las <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="48b23-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="48b23-120">Claves semántica se pueden adjuntar explícitamente a un <xref:System.Speech.Recognition.SemanticResultValue>, utilizando un <xref:System.Speech.Recognition.SemanticResultKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="48b23-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="48b23-121"><xref:System.Speech.Recognition.SemanticResultValue> instancias explícitamente no se adjunta a una clave se adjuntan a la clave raíz de manera predeterminada <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="48b23-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="48b23-122">Después de un <xref:System.Speech.Recognition.SemanticResultValue> se ha utilizado para establecer el <xref:System.Speech.Recognition.SemanticValue.Value%2A>, independientemente de que se etiqueta con la clave raíz de forma predeterminada, o por cualquier determinado <xref:System.Speech.Recognition.SemanticResultKey>, ese valor no debe modificarse o se producirá una excepción durante las operaciones de reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="48b23-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="48b23-123">En el ejemplo siguiente, se producirá una excepción porque establece y, a continuación, modifica la raíz <xref:System.Speech.Recognition.SemanticValue.Value%2A> de un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="48b23-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="48b23-124">Por otro lado, se permite el código en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="48b23-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="48b23-125">Aunque definen varias instancias de <xref:System.Speech.Recognition.SemanticResultValue>, se incluyen en un <xref:System.Speech.Recognition.Choices> objeto y solo se se podrá usar para establecer el valor de la clave `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="48b23-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="48b23-126">Para obtener más información sobre el uso de <xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> los objetos, vea [SemanticResultValue descripción y los objetos de SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) y [mediante un SemanticResultKey para extraer un SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) en el [Guía de programación de voz de sistema de .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="48b23-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48b23-127">El ejemplo siguiente devuelve un <xref:System.Speech.Recognition.Grammar> que reconoce el comando "Set/cambiar/Alter primer o segundo plano...</span><span class="sxs-lookup"><span data-stu-id="48b23-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="48b23-128">[lista de colores] ".</span><span class="sxs-lookup"><span data-stu-id="48b23-128">[color list]".</span></span>  <span data-ttu-id="48b23-129"><xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> instancias (junto con <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos) se utilizan para definir la semántica que se puede analizar en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="48b23-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="48b23-130">La semántica analizada determinará qué color se solicitó y si se puede modificar el primer o segundo plano.</span><span class="sxs-lookup"><span data-stu-id="48b23-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48b23-131">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-132">El `SemanticResultValue` constructores admiten la especificación de un <xref:System.Object> instancia con un tipo de datos subyacente de `bool`, `int`, `float`, o `string`.</span><span class="sxs-lookup"><span data-stu-id="48b23-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="48b23-133">Puede crear un constructor un `SemanticResultValue` perteneciente a cualquiera de los dos casos:</span><span class="sxs-lookup"><span data-stu-id="48b23-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="48b23-134">El `SemanticResultValue` instancia debe estar explícitamente asociada con un elemento de gramática cuando se usa un <xref:System.Speech.Recognition.GrammarBuilder> para construir un <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="48b23-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="48b23-135">El `SemanticResultValue` ya está asociado con una frase de valor de cadena o un <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="48b23-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="48b23-136">El valor que administra <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="48b23-137">Debe ser del tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b23-138">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SemanticResultValue" /> y especifica un valor semántico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-139">Un `SemanticResultValue` devuelta por este constructor no está asociado con ningún elemento de gramática determinada.</span><span class="sxs-lookup"><span data-stu-id="48b23-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="48b23-140">La asociación debe hacerse explícita mediante la instancia de `SemanticResultValue` junto con <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="48b23-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="48b23-141">Por ejemplo, en el fragmento de código siguiente, si un <xref:System.Speech.Recognition.Grammar> construido mediante este <xref:System.Speech.Recognition.GrammarBuilder> instancia reconoce la palabra "plano", un valor de `true` se establece en la semántica de frase reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="48b23-142">El ejemplo siguiente devuelve un <xref:System.Speech.Recognition.Grammar> que reconoce el comando "Set/cambiar/Alter primer o segundo plano...</span><span class="sxs-lookup"><span data-stu-id="48b23-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="48b23-143">[lista de colores] ".</span><span class="sxs-lookup"><span data-stu-id="48b23-143">[color list]".</span></span> <span data-ttu-id="48b23-144"><xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> instancias (junto con <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos) se utilizan para definir la semántica que se puede analizar en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="48b23-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="48b23-145">La semántica analizada determinará qué color se solicitó y si se puede modificar el primer o segundo plano.</span><span class="sxs-lookup"><span data-stu-id="48b23-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="48b23-146">Un componente de la gramática que se usará en el reconocimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="48b23-147">El valor que administra <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="48b23-148">Debe ser del tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b23-149">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SemanticResultValue" /> y asocia un valor semántico con un objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-150">Si especifica el elemento de gramática por <xref:System.Speech.Recognition.GrammarBuilder> se usa en la lógica de reconocimiento, `value` se establecerá en la semántica de la salida reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="48b23-151">En el fragmento de código siguiente, si la lógica de reconocimiento se construye con el <xref:System.Speech.Recognition.GrammarBuilder> instancia (`myGb`) usa el <xref:System.Speech.Recognition.Choices> objeto (`myChoice`) identificar la entrada, el valor `true` se agrega a la semántica reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="48b23-152">Como <xref:System.Speech.Recognition.GrammarBuilder> admite la conversión implícita para <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, y <xref:System.Speech.Recognition.SemanticResultKey>, este constructor puede seguir usando estos objetos también.</span><span class="sxs-lookup"><span data-stu-id="48b23-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48b23-153">El ejemplo siguiente devuelve un <xref:System.Speech.Recognition.Grammar> que reconoce el comando "Set/cambiar/Alter primer o segundo plano...</span><span class="sxs-lookup"><span data-stu-id="48b23-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="48b23-154">[lista de colores] ".</span><span class="sxs-lookup"><span data-stu-id="48b23-154">[color list]".</span></span> <span data-ttu-id="48b23-155"><xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> instancias (junto con <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos) se utilizan para definir la semántica que se puede analizar en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="48b23-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="48b23-156">La semántica analizada determinará qué color se solicitó y si se puede modificar el primer o segundo plano.</span><span class="sxs-lookup"><span data-stu-id="48b23-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="48b23-157">Una frase que se usará en el reconocimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="48b23-158">El valor que administra <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="48b23-159">Debe ser del tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> o <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b23-160">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.SemanticResultValue" /> y asocia un valor semántico con un objeto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-161">Si la cadena especificada por `phrase` se usa en la lógica de reconocimiento, `value` se establecerá en la semántica de la salida reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="48b23-162">En el siguiente fragmento de código, si la lógica de reconocimiento se construyó con el <xref:System.Speech.Recognition.GrammarBuilder> instancia (`myGb`) utiliza la cadena "Mi hipoteca" identificar la entrada, el valor `true` se agregará a la semántica reconocida.</span><span class="sxs-lookup"><span data-stu-id="48b23-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="48b23-163">El ejemplo siguiente devuelve un <xref:System.Speech.Recognition.Grammar> que reconoce el comando "Set/cambiar/Alter primer o segundo plano...</span><span class="sxs-lookup"><span data-stu-id="48b23-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="48b23-164">[lista de colores] ".</span><span class="sxs-lookup"><span data-stu-id="48b23-164">[color list]".</span></span> <span data-ttu-id="48b23-165"><xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> instancias (junto con <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos) se utilizan para definir la semántica que se puede analizar en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="48b23-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="48b23-166">La semántica analizada determinará qué color se solicitó y si se puede modificar el primer o segundo plano.</span><span class="sxs-lookup"><span data-stu-id="48b23-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48b23-167">Devuelve una instancia de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construida a partir de la instancia de <see cref="T:System.Speech.Recognition.SemanticResultValue" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b23-168">Devuelve una instancia de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construida a partir de la instancia de <see cref="T:System.Speech.Recognition.SemanticResultValue" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b23-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b23-169">El uso de <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> equivale a utilizar el <xref:System.Speech.Recognition.GrammarBuilder> constructor que toma un <xref:System.Speech.Recognition.SemanticResultValue> como un argumento (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="48b23-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48b23-170">En el ejemplo siguiente se crea <xref:System.Speech.Recognition.Grammar> objetos que admiten los comandos para cambiar el color de fondo.</span><span class="sxs-lookup"><span data-stu-id="48b23-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="48b23-171">A <xref:System.Speech.Recognition.Choices> objeto (`colorChoice`) que contiene la lista de opciones para los colores de fondo se rellena mediante la <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> método con <xref:System.Speech.Recognition.GrammarBuilder> instancias que se obtienen de la <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> método en el `SemanticResultValue` objetos creados de cadenas de color.</span><span class="sxs-lookup"><span data-stu-id="48b23-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="48b23-172">A <xref:System.Speech.Recognition.GrammarBuilder> , a continuación, se obtiene mediante una llamada a <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> en un <xref:System.Speech.Recognition.SemanticResultKey> instancia, que se usará en la clave de las opciones de semántica en el `colorChoice` instancia.</span><span class="sxs-lookup"><span data-stu-id="48b23-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>