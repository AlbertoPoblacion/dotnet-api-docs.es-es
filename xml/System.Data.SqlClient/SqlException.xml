<Type Name="SqlException" FullName="System.Data.SqlClient.SqlException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="982763b78dfe67e06f4b1f8f79fe8a34bb68d3a4" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911498" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlException extends System.Data.Common.DbException" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlException&#xA;Inherits DbException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlException sealed : System::Data::Common::DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La excepción que se produce cuando SQL Server devuelve una advertencia o un error. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase se crea siempre que el proveedor de datos de .NET Framework para SQL Server encuentra un error generado en el servidor. (Los errores en el cliente se producen como excepciones estándar de common language runtime). <xref:System.Data.SqlClient.SqlException> siempre contiene al menos una instancia de <xref:System.Data.SqlClient.SqlError>.  
  
 Los mensajes que tienen una gravedad de nivel de 10 o menos son informativos e indican problemas ocasionados por errores en la información que un usuario ha escrito. Niveles de gravedad entre 11 y 16 son generados por el usuario y pueden ser corregidos por el usuario. Los niveles de gravedad entre 17 y 25 indican errores de software o hardware. Cuando un nivel 17, 18 o 19 error se produce, puede seguir trabajando, aunque es posible que no pueda ejecutar una instrucción determinada.  
  
 La conexión <xref:System.Data.SqlClient.SqlConnection> permanece abierta cuando el nivel de gravedad es 19 o inferior. Cuando el nivel de gravedad es 20 o superior, el servidor normalmente cierra el <xref:System.Data.SqlClient.SqlConnection>. Sin embargo, el usuario puede volver a abrir la conexión y continuar. En ambos casos, el método que ejecuta el comando genera una excepción <xref:System.Data.SqlClient.SqlException>.  
  
 Para obtener información acerca de los mensajes de advertencia e informativos enviados por SQL Server, vea la sección de solución de problemas de libros en pantalla de SQL Server. La <xref:System.Data.SqlClient.SqlException> clase se asigna a la gravedad de SQL Server.  
  
 La siguiente es información general acerca del control de excepciones. El código debe detectar excepciones para evitar que la aplicación falle y permiten mostrar un mensaje de error relevantes para el usuario.  Puede utilizar transacciones de base de datos para asegurarse de que los datos sean coherentes, independientemente de lo que ocurre en la aplicación de cliente (incluido un bloqueo). Características como System.Transaction.TransactionScope o al método BeginTransaction (en System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection y System.Data.SqlClient.SqlConnection) aseguran de datos coherente, independientemente de las excepciones iniciadas por un proveedor. Las transacciones pueden producirá un error, por lo que detectar errores y vuelva a intentar la transacción.  
  
 Tenga en cuenta que .NET Framework 4.5 a partir <xref:System.Data.SqlClient.SqlException> puede devolver interior <xref:System.ComponentModel.Win32Exception>.  
  
 La clase de excepción de .net proveedor de datos de marco de trabajo informa de errores específicos del proveedor. Por ejemplo System.Data.Odbc tiene OdbcException, System.Data.OleDb tiene OleDbException y System.Data.SqlClient tiene SqlException. Para obtener el mejor grado de detalle del error, detectar estas excepciones y utilizar a los miembros de estas clases de excepción para obtener detalles del error.  
  
 Además de los errores específicos del proveedor, tipo de proveedor de datos de .NET Framework puede producir excepciones de .NET Framework como System.OutOfMemoryException y System.Threading.ThreadAbortException. Recuperación de estas excepciones puede no ser posible.  
  
 La entrada incorrecta puede provocar un tipo de proveedor de datos de .NET Framework generar una excepción como System.ArgumentException o en System.IndexOutOfRangeException.  Llamar a un método en el momento incorrecto puede provocar System.InvalidOperationException.  
  
 Por lo tanto, por lo general, escribir un controlador de excepciones que detecta cualquier proveedor de excepciones específicas, así como las excepciones de common language runtime.  Pueden sumarse como sigue:  
  
```csharp  
try {  
   // code here  
}  
catch (SqlException odbcEx) {  
   // Handle more specific SqlException exception here.  
}  
catch (Exception ex) {  
   // Handle generic ones here.  
}  
  
```  
  
 O:  
  
```csharp  
try {  
   // code here  
}  
catch (Exception ex) {  
   if (ex is SqlException) {  
      // Handle more specific SqlException exception here.  
   }  
   else {  
      // Handle generic ones here.  
   }  
}  
  
```  
  
 También es posible que una llamada de método de proveedor de datos de .NET Framework produce un error en un subproceso ThreadPool con ningún código de usuario en la pila. En este caso y cuando se usa llamadas de método asincrónico, debe registrar el <xref:System.AppDomain.UnhandledException> eventos para controlar las excepciones y evitar el bloqueo de aplicación.  
  
   
  
## Examples  
 El ejemplo siguiente genera un <xref:System.Data.SqlClient.SqlException> y, a continuación, se muestra la excepción.  
  
 [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlError" />
    <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public byte Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Class" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Class { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nivel de gravedad del error que devuelve el proveedor de datos de .NET Framework para SQL Server.</summary>
        <value>Valor del 1 al 25 que indica el nivel de gravedad del error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los mensajes que tienen una gravedad de nivel de 10 o menos son informativos e indican problemas ocasionados por errores en la información que un usuario ha escrito. Niveles de gravedad entre 11 y 16 son generados por el usuario y pueden ser corregidos por el usuario. Los niveles de gravedad entre 17 y 25 indican errores de software o hardware. Cuando un nivel 17, 18 o 19 error se produce, puede seguir trabajando, aunque es posible que no pueda ejecutar una instrucción determinada.  
  
 La conexión <xref:System.Data.SqlClient.SqlConnection> permanece abierta cuando el nivel de gravedad es 19 o inferior. Cuando el nivel de gravedad es 20 o superior, el servidor normalmente cierra el <xref:System.Data.SqlClient.SqlConnection>. Sin embargo, el usuario puede volver a abrir la conexión y continuar. En ambos casos, el método que ejecuta el comando genera una excepción <xref:System.Data.SqlClient.SqlException>.  
  
 Para obtener información acerca de los mensajes de advertencia e informativos enviados por SQL Server, vea la sección de solución de problemas de la documentación de SQL Server.  
  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.Class%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador de la conexión de cliente Para obtener más información, consulte [Traza de datos en ADO.NET](~/docs/framework/data/adonet/data-tracing.md).</summary>
        <value>Devuelve el identificador de la conexión de cliente</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener un ejemplo de código, vea <xref:System.Data.SqlClient.SqlException.ToString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As SqlErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlErrorCollection ^ Errors { System::Data::SqlClient::SqlErrorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de uno o varios objetos <see cref="T:System.Data.SqlClient.SqlError" /> que proporcionan información detallada sobre las excepciones que genera el proveedor de datos de .NET Framework para SQL Server.</summary>
        <value>Instancias recopiladas de la clase <see cref="T:System.Data.SqlClient.SqlError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlErrorCollection> clase siempre contiene al menos una instancia de la <xref:System.Data.SqlClient.SqlError> clase.  
  
 Se trata de un contenedor para <xref:System.Data.SqlClient.SqlErrorCollection>. Para obtener más información sobre los errores del motor de SQL Server, vea los libros en pantalla de SQL Server.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
        <altmember cref="T:System.Data.SqlClient.SqlError" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
        <summary>Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetObjectData` establece `SerializationInfo` con todos los datos del objeto de excepción destinados a la serialización. Durante la deserialización, la excepción se reconstituye a partir de la información `SerializationInfo` transmitida en la secuencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="si" /> es una referencia null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de línea del procedimiento almacenado o lote de comandos de Transact-SQL que ha generado el error.</summary>
        <value>Número de línea del procedimiento almacenado o lote de comandos de Transact-SQL que ha generado el error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La línea de la numeración empieza en 1; Si se devuelve 0, el número de línea no es aplicable.  
  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.LineNumber%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Number" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número que identifica el tipo de error.</summary>
        <value>Número que identifica el tipo de error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.Number%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad. Para obtener más información sobre los errores del motor de SQL Server, vea los libros en pantalla de SQL Server.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Procedure">
      <MemberSignature Language="C#" Value="public string Procedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Procedure" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Procedure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Procedure As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Procedure { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del procedimiento almacenado o llamada a procedimiento remoto (RPC) que ha generado el error.</summary>
        <value>Nombre del procedimiento almacenado o RPC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.Procedure%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Server { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del equipo que ejecuta la instancia de SQL Server que ha generado el error.</summary>
        <value>Nombre del equipo que ejecuta una instancia de SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.Server%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del proveedor que ha generado el error.</summary>
        <value>Nombre del proveedor que ha generado el error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.Source%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public byte State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte State { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un código de error numérico de SQL Server que representa un error, una advertencia o el mensaje "datos no encontrados". Para obtener más información sobre cómo descodificar estos valores, vea los Libros en pantalla de SQL Server.</summary>
        <value>Número que representa el código de error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de un contenedor para la <xref:System.Data.SqlClient.SqlError.State%2A> propiedad del primer <xref:System.Data.SqlClient.SqlError> en el <xref:System.Data.SqlClient.SqlException.Errors%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada una <xref:System.Data.SqlClient.SqlError> dentro de la <xref:System.Data.SqlClient.SqlErrorCollection> colección.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el objeto <see cref="T:System.Data.SqlClient.SqlException" /> actual e incluye el identificador de la conexión de cliente (para obtener más información, vea <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />).</summary>
        <returns>Cadena que representa el <see cref="T:System.Data.SqlClient.SqlException" />objeto<see cref="T:System.String" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de C# siguiente se muestra cómo un intento de conexión a un servidor válido pero hace de la base de datos no existe un <xref:System.Data.SqlClient.SqlException>, que incluye el identificador de conexión de cliente:  
  
```  
using System.Data.SqlClient;  
using System;  
  
public class A {  
   public static void Main() {  
      SqlConnection connection = new SqlConnection();  
      connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true";  
      try {  
         connection.Open();  
      }  
      catch (SqlException p) {  
         Console.WriteLine("{0}", p.ClientConnectionId);  
         Console.WriteLine("{0}", p.ToString());  
      }  
      connection.Close();  
   }  
}  
```  
  
 El siguiente ejemplo de Visual Basic es funcionalmente equivalente del ejemplo anterior (C#):  
  
```  
Imports System.Data.SqlClient  
Imports System  
  
Module Module1  
  
    Sub Main()  
        Dim connection As New SqlConnection()  
        connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true"  
        Try  
            connection.Open()  
        Catch p As SqlException  
            Console.WriteLine("{0}", p.ClientConnectionId)  
            Console.WriteLine("{0}", p.ToString())  
        End Try  
        connection.Close()  
    End Sub  
  
End Module  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>