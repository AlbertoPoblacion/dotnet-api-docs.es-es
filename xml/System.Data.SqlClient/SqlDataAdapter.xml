<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1726d52926b1d27b1e8f07b0470e982a2eb73063" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0111f-101">Representa un conjunto de comandos de datos y una conexión de base de datos que se utilizan para rellenar un <see cref="T:System.Data.DataSet" /> y actualizar una base de datos de SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0111f-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server database.</span>
      </span>
      <span data-ttu-id="0111f-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0111f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-103">El <xref:System.Data.SqlClient.SqlDataAdapter>, actúa como puente entre un <xref:System.Data.DataSet> y SQL Server para recuperar y guardar los datos.</span><span class="sxs-lookup"><span data-stu-id="0111f-103">The <xref:System.Data.SqlClient.SqlDataAdapter>, serves as a bridge between a <xref:System.Data.DataSet> and SQL Server for retrieving and saving data.</span></span> <span data-ttu-id="0111f-104">El <xref:System.Data.SqlClient.SqlDataAdapter> proporciona este puente mediante la asignación de <xref:System.Data.Common.DbDataAdapter.Fill%2A>, que cambia los datos en el <xref:System.Data.DataSet> para que coincida con los datos del origen de datos, y <xref:System.Data.Common.DbDataAdapter.Update%2A>, que cambia los datos en el origen de datos para que coincida con los datos en el <xref:System.Data.DataSet>, mediante el instrucciones de Transact-SQL adecuadas en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="0111f-104">The <xref:System.Data.SqlClient.SqlDataAdapter> provides this bridge by mapping <xref:System.Data.Common.DbDataAdapter.Fill%2A>, which changes the data in the <xref:System.Data.DataSet> to match the data in the data source, and <xref:System.Data.Common.DbDataAdapter.Update%2A>, which changes the data in the data source to match the data in the <xref:System.Data.DataSet>, using the appropriate Transact-SQL statements against the data source.</span></span> <span data-ttu-id="0111f-105">La actualización se realiza por fila.</span><span class="sxs-lookup"><span data-stu-id="0111f-105">The update is performed on a by-row basis.</span></span> <span data-ttu-id="0111f-106">Para cada fila insertada, modificada y eliminada, el <xref:System.Data.Common.DbDataAdapter.Update%2A> método determina el tipo de cambio que se ha realizado en ella (`Insert`, `Update`, o `Delete`).</span><span class="sxs-lookup"><span data-stu-id="0111f-106">For every inserted, modified, and deleted row, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method determines the type of change that has been performed on it (`Insert`, `Update`, or `Delete`).</span></span> <span data-ttu-id="0111f-107">Según el tipo de cambio, el `Insert`, `Update`, o `Delete` plantilla del comando se ejecuta para propagar la fila modificada en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="0111f-107">Depending on the type of change, the `Insert`, `Update`, or `Delete` command template executes to propagate the modified row to the data source.</span></span> <span data-ttu-id="0111f-108">Cuando el <xref:System.Data.SqlClient.SqlDataAdapter> rellena un <xref:System.Data.DataSet>, crea las tablas y columnas necesarias para los datos devueltos si aún no existen.</span><span class="sxs-lookup"><span data-stu-id="0111f-108">When the <xref:System.Data.SqlClient.SqlDataAdapter> fills a <xref:System.Data.DataSet>, it creates the necessary tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="0111f-109">Sin embargo, la información de clave principal no se incluye en el esquema creado implícitamente a menos que la <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad está establecida en <xref:System.Data.MissingSchemaAction.AddWithKey>.</span><span class="sxs-lookup"><span data-stu-id="0111f-109">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="0111f-110">También puede tener la <xref:System.Data.SqlClient.SqlDataAdapter> cree el esquema de la <xref:System.Data.DataSet>, incluida la información de clave principal, antes de llenarlo con datos mediante `FillSchema`.</span><span class="sxs-lookup"><span data-stu-id="0111f-110">You may also have the <xref:System.Data.SqlClient.SqlDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using `FillSchema`.</span></span> <span data-ttu-id="0111f-111">Para obtener más información, consulte [agregar restricciones existentes a un conjunto de datos](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span><span class="sxs-lookup"><span data-stu-id="0111f-111">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="0111f-112"><xref:System.Data.SqlClient.SqlDataAdapter> se utiliza junto con <xref:System.Data.SqlClient.SqlConnection> y <xref:System.Data.SqlClient.SqlCommand> para aumentar el rendimiento cuando se conecta a una base de datos de SQL Server.</span><span class="sxs-lookup"><span data-stu-id="0111f-112"><xref:System.Data.SqlClient.SqlDataAdapter> is used in conjunction with <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a SQL Server database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0111f-113">Si está utilizando procedimientos almacenados de SQL Server para editar o eliminar datos con `DataAdapter`, asegúrese de que no utiliza SET NOCOUNT ON en la definición del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="0111f-113">If you are using SQL Server stored procedures to edit or delete data using a `DataAdapter`, make sure that you do not use SET NOCOUNT ON in the stored procedure definition.</span></span> <span data-ttu-id="0111f-114">Esto hace que el recuento de filas afectadas vuelva a cero, lo que `DataAdapter` interpreta como un conflicto de simultaneidad.</span><span class="sxs-lookup"><span data-stu-id="0111f-114">This causes the rows affected count returned to be zero, which the `DataAdapter` interprets as a concurrency conflict.</span></span> <span data-ttu-id="0111f-115">En este caso, se iniciará una <xref:System.Data.DBConcurrencyException>.</span><span class="sxs-lookup"><span data-stu-id="0111f-115">In this event, a <xref:System.Data.DBConcurrencyException> will be thrown.</span></span>  
  
 <span data-ttu-id="0111f-116">El <xref:System.Data.SqlClient.SqlDataAdapter> también incluye el <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, y <xref:System.Data.Common.DataAdapter.TableMappings%2A> propiedades para facilitar la carga y la actualización de datos.</span><span class="sxs-lookup"><span data-stu-id="0111f-116">The <xref:System.Data.SqlClient.SqlDataAdapter> also includes the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="0111f-117">Cuando una instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se crea la lectura y escritura propiedades se establecen en sus valores iniciales.</span><span class="sxs-lookup"><span data-stu-id="0111f-117">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the read/write properties are set to initial values.</span></span> <span data-ttu-id="0111f-118">Para obtener una lista de estos valores, consulte el <xref:System.Data.SqlClient.SqlDataAdapter> constructor.</span><span class="sxs-lookup"><span data-stu-id="0111f-118">For a list of these values, see the <xref:System.Data.SqlClient.SqlDataAdapter> constructor.</span></span>  
  
 <span data-ttu-id="0111f-119">El <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, y <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> son plantillas genéricas que se rellenan automáticamente con los valores individuales de todas las filas modificadas mediante el mecanismo de parámetros.</span><span class="sxs-lookup"><span data-stu-id="0111f-119">The <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.</span></span>  
  
 <span data-ttu-id="0111f-120">Para cada columna que propaga al origen de datos en <xref:System.Data.Common.DbDataAdapter.Update%2A>, debe agregar un parámetro a la `InsertCommand`, `UpdateCommand`, o `DeleteCommand`.</span><span class="sxs-lookup"><span data-stu-id="0111f-120">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to the `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="0111f-121">El <xref:System.Data.Common.DbParameter.SourceColumn%2A> propiedad de la <xref:System.Data.Common.DbParameter> objeto debe establecerse en el nombre de la columna.</span><span class="sxs-lookup"><span data-stu-id="0111f-121">The <xref:System.Data.Common.DbParameter.SourceColumn%2A> property of the <xref:System.Data.Common.DbParameter> object should be set to the name of the column.</span></span> <span data-ttu-id="0111f-122">Este valor indica que el valor del parámetro no se establece manualmente, sino que se toma de la columna concreta en la fila procesada actualmente.</span><span class="sxs-lookup"><span data-stu-id="0111f-122">This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0111f-123">Un <xref:System.InvalidOperationException> se producirá si el <xref:System.Data.Common.DbDataAdapter.Fill%2A> se llama al método y la tabla contiene un tipo definido por el usuario que no está disponible en el equipo cliente.</span><span class="sxs-lookup"><span data-stu-id="0111f-123">An <xref:System.InvalidOperationException> will occur if the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method is called and the table contains a user-defined type that is not available on the client computer.</span></span> <span data-ttu-id="0111f-124">Para obtener más información, consulte [Creating and Using User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=139492) en libros en pantalla de SQL Server.</span><span class="sxs-lookup"><span data-stu-id="0111f-124">For more information, see [Creating and Using User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=139492) in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-125">En el ejemplo siguiente se usa el <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, y <xref:System.Data.SqlClient.SqlConnection> para seleccionar los registros de una base de datos y rellenar un <xref:System.Data.DataSet> con las filas seleccionadas.</span><span class="sxs-lookup"><span data-stu-id="0111f-125">The following example uses the <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="0111f-126">El relleno <xref:System.Data.DataSet> , a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="0111f-126">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="0111f-127">Para lograr esto, se pasa al método un inicializado <xref:System.Data.DataSet>, una cadena de conexión y una cadena de consulta que es una instrucción SELECT de Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="0111f-127">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-128">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-128">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0111f-129">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-129">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-130">Cuando una instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se crea los siguientes propiedades se establecen en los siguientes valores iniciales de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="0111f-130">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="0111f-131">Propiedades</span><span class="sxs-lookup"><span data-stu-id="0111f-131">Properties</span></span>|<span data-ttu-id="0111f-132">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="0111f-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="0111f-133">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="0111f-133">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-134">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-134">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::Data::SqlClient::SqlCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <span data-ttu-id="0111f-135">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> que es un procedimiento almacenado o una instrucción SELECT de Transact-SQL que se establece como la propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> de <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-135">A <see cref="T:System.Data.SqlClient.SqlCommand" /> that is a Transact-SQL SELECT statement or stored procedure and is set as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0111f-136">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> con el objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> especificado como propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-136">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with the specified <see cref="T:System.Data.SqlClient.SqlCommand" /> as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-137">Esta implementación de la <xref:System.Data.SqlClient.SqlDataAdapter> constructor establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propiedad en el valor especificado en el `selectCommand` parámetro.</span><span class="sxs-lookup"><span data-stu-id="0111f-137">This implementation of the <xref:System.Data.SqlClient.SqlDataAdapter> constructor sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="0111f-138">Cuando una instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se crea los siguientes propiedades se establecen en los siguientes valores iniciales de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="0111f-138">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="0111f-139">Propiedades</span><span class="sxs-lookup"><span data-stu-id="0111f-139">Properties</span></span>|<span data-ttu-id="0111f-140">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="0111f-140">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="0111f-141">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="0111f-141">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 <span data-ttu-id="0111f-142">Cuando <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (o cualquiera de las demás propiedades de comando) se asigna a creado anteriormente <xref:System.Data.SqlClient.SqlCommand>, el <xref:System.Data.SqlClient.SqlCommand> no se clonan.</span><span class="sxs-lookup"><span data-stu-id="0111f-142">When <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (or any of the other command properties) is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="0111f-143">El <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-143">The <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-144">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-144">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::Data::SqlClient::SqlConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="0111f-145">
            <see cref="T:System.String" /> que es un procedimiento almacenado o una instrucción SELECT de Transact-SQL y que será utilizado por la propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> de <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-145">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnection">
          <span data-ttu-id="0111f-146">
            <see cref="T:System.Data.SqlClient.SqlConnection" /> que representa la conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-146">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection.</span>
          </span>
          <span data-ttu-id="0111f-147">Si la cadena de conexión no usa <see langword="Integrated Security = true" />, puede usar <see cref="T:System.Data.SqlClient.SqlCredential" /> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-147">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0111f-148">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> con una propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> y un objeto <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-148">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a <see cref="T:System.Data.SqlClient.SqlConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-149">Esta implementación de la <xref:System.Data.SqlClient.SqlDataAdapter> abre y cierra un <xref:System.Data.SqlClient.SqlConnection> si no está ya abierto.</span><span class="sxs-lookup"><span data-stu-id="0111f-149">This implementation of the <xref:System.Data.SqlClient.SqlDataAdapter> opens and closes a <xref:System.Data.SqlClient.SqlConnection> if it is not already open.</span></span> <span data-ttu-id="0111f-150">Esto puede resultar útil en una aplicación que debe llamar a la <xref:System.Data.Common.DbDataAdapter.Fill%2A> método para dos o más <xref:System.Data.SqlClient.SqlDataAdapter> objetos.</span><span class="sxs-lookup"><span data-stu-id="0111f-150">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.SqlClient.SqlDataAdapter> objects.</span></span> <span data-ttu-id="0111f-151">Si el <xref:System.Data.SqlClient.SqlConnection> está ya abierto, debe llamar explícitamente a **cerrar** o **Dispose** para cerrarlo.</span><span class="sxs-lookup"><span data-stu-id="0111f-151">If the <xref:System.Data.SqlClient.SqlConnection> is already open, you must explicitly call **Close** or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="0111f-152">Cuando una instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se crea los siguientes propiedades se establecen en los siguientes valores iniciales de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="0111f-152">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="0111f-153">Propiedades</span><span class="sxs-lookup"><span data-stu-id="0111f-153">Properties</span></span>|<span data-ttu-id="0111f-154">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="0111f-154">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="0111f-155">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="0111f-155">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-156">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-156">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * string -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="0111f-157">
            <see cref="T:System.String" /> que es un procedimiento almacenado o una instrucción SELECT de Transact-SQL y que será utilizado por la propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> de <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-157">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnectionString">
          <span data-ttu-id="0111f-158">La cadena de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-158">The connection string.</span>
          </span>
          <span data-ttu-id="0111f-159">Si la cadena de conexión no usa <see langword="Integrated Security = true" />, puede usar <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> y <see cref="T:System.Data.SqlClient.SqlCredential" /> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-159">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0111f-160">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> con una propiedad <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> y una cadena de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-160">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-161">Esta sobrecarga de la <xref:System.Data.SqlClient.SqlDataAdapter> constructor utiliza el `selectCommandText` parámetro para establecer el <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="0111f-161">This overload of the <xref:System.Data.SqlClient.SqlDataAdapter> constructor uses the `selectCommandText` parameter to set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="0111f-162">El <xref:System.Data.SqlClient.SqlDataAdapter> creará y mantendrá la conexión creada con la `selectConnectionString` parámetro.</span><span class="sxs-lookup"><span data-stu-id="0111f-162">The <xref:System.Data.SqlClient.SqlDataAdapter> will create and maintain the connection created with the `selectConnectionString` parameter.</span></span>  
  
 <span data-ttu-id="0111f-163">Cuando una instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se crea los siguientes propiedades se establecen en los siguientes valores iniciales de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="0111f-163">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="0111f-164">Propiedades</span><span class="sxs-lookup"><span data-stu-id="0111f-164">Properties</span></span>|<span data-ttu-id="0111f-165">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="0111f-165">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="0111f-166">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="0111f-166">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-167">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-167">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="sqlDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberSignature Language="F#" Value="override this.ClearBatch : unit -&gt; unit" Usage="sqlDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="sqlDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="sqlDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ DeleteCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-168">Obtiene o establece un procedimiento almacenado o una instrucción de Transact-SQL para eliminar registros de un conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-168">Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-169">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> que se utiliza durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar los registros de la base de datos correspondientes a las filas eliminadas en <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-169">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-170">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-170">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-171">A continuación, se generan los comandos adicionales que no se establecen mediante el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-171">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-172">Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="0111f-172">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0111f-173">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="0111f-173">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="0111f-174">Cuando <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> se asigna a creado anteriormente <xref:System.Data.SqlClient.SqlCommand>, el <xref:System.Data.SqlClient.SqlCommand> no se clonan.</span><span class="sxs-lookup"><span data-stu-id="0111f-174">When <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="0111f-175">El <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-175">The <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="0111f-176">Para cada columna que propaga al origen de datos en <xref:System.Data.Common.DbDataAdapter.Update%2A>, debe agregar un parámetro a la `InsertCommand`, `UpdateCommand`, o `DeleteCommand`.</span><span class="sxs-lookup"><span data-stu-id="0111f-176">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to the `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="0111f-177">El `SourceColumn` propiedad del parámetro debe establecerse en el nombre de la columna.</span><span class="sxs-lookup"><span data-stu-id="0111f-177">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="0111f-178">Esto indica que el valor del parámetro no se establece manualmente, sino que se toma de la columna concreta en la fila procesada actualmente.</span><span class="sxs-lookup"><span data-stu-id="0111f-178">This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-179">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, y <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-179">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="0111f-180">Se supone que ya ha creado un <xref:System.Data.SqlClient.SqlConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-180">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="override this.ExecuteBatch : unit -&gt; int" Usage="sqlDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="sqlDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="sqlDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberSignature Language="F#" Value="override this.InitializeBatching : unit -&gt; unit" Usage="sqlDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ InsertCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-181">Obtiene o establece un procedimiento almacenado o una instrucción de Transact-SQL para insertar nuevos registros en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-181">Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-182">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> que se utiliza durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar en la base de datos los registros correspondientes a las nuevas filas en <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-182">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records into the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-183">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-183">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-184">A continuación, se generan los comandos adicionales que no se establecen mediante el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-184">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-185">Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="0111f-185">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0111f-186">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="0111f-186">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="0111f-187">Cuando <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> se asigna a creado anteriormente <xref:System.Data.SqlClient.SqlCommand>, el <xref:System.Data.SqlClient.SqlCommand> no se clonan.</span><span class="sxs-lookup"><span data-stu-id="0111f-187">When <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="0111f-188">El <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-188">The <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="0111f-189">Si la ejecución de este comando devuelve filas, estas filas se pueden agregar a la <xref:System.Data.DataSet> según cómo configure la **UpdatedRowSource** propiedad de la <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-189">If execution of this command returns rows, these rows can be added to the <xref:System.Data.DataSet> depending on how you set the **UpdatedRowSource** property of the <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="0111f-190">Para cada columna que propaga al origen de datos en <xref:System.Data.Common.DbDataAdapter.Update%2A>, debe agregar un parámetro a `InsertCommand`, `UpdateCommand`, o `DeleteCommand`.</span><span class="sxs-lookup"><span data-stu-id="0111f-190">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="0111f-191">El `SourceColumn` propiedad del parámetro debe establecerse en el nombre de la columna.</span><span class="sxs-lookup"><span data-stu-id="0111f-191">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="0111f-192">Esto indica que el valor del parámetro no se establece manualmente, sino que se toma de la columna concreta en la fila procesada actualmente.</span><span class="sxs-lookup"><span data-stu-id="0111f-192">This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-193">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, y <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-193">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="0111f-194">Se supone que ya ha creado un <xref:System.Data.SqlClient.SqlConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-194">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As SqlRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-195">Se produce durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> después de que se ejecute un comando en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-195">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="0111f-196">Se ha realizado un intento de actualización, de manera que se inicia el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-196">The attempt to update is made, so the event fires.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-197">Cuando se usa <xref:System.Data.Common.DbDataAdapter.Update%2A>, hay dos eventos que se producen por cada fila de datos actualizada.</span><span class="sxs-lookup"><span data-stu-id="0111f-197">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="0111f-198">El orden de ejecución es el siguiente:</span><span class="sxs-lookup"><span data-stu-id="0111f-198">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="0111f-199">Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="0111f-199">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="0111f-200">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-200">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="0111f-201">Ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="0111f-201">The command executes.</span></span>  
  
4.  <span data-ttu-id="0111f-202">Si el comando se establece en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="0111f-202">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="0111f-203">Si no hay parámetros de salida, se colocan en la <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="0111f-203">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="0111f-204">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-204">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="0111f-205">Se llama a <xref:System.Data.DataRow.AcceptChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-205"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-206">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> y <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> eventos.</span><span class="sxs-lookup"><span data-stu-id="0111f-206">The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.</span></span>  
  
 <span data-ttu-id="0111f-207">El <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> evento devuelve este resultado:</span><span class="sxs-lookup"><span data-stu-id="0111f-207">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:</span></span>  
  
 <span data-ttu-id="0111f-208">argumentos del evento: (SqlCommand commandType = 2 status = 0)</span><span class="sxs-lookup"><span data-stu-id="0111f-208">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</span></span>  
  
 <span data-ttu-id="0111f-209">El <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> evento devuelve este resultado:</span><span class="sxs-lookup"><span data-stu-id="0111f-209">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:</span></span>  
  
 <span data-ttu-id="0111f-210">argumentos del evento: (SqlCommand commandType = 2 recordsAffected = 1 row=System.Data.DataRow[37] estado = 0)</span><span class="sxs-lookup"><span data-stu-id="0111f-210">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As SqlRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-211">Se produce durante el método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, antes de que se ejecute un comando en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-211">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="0111f-212">Se ha realizado un intento de actualización, de manera que se inicia el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-212">The attempt to update is made, so the event fires.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-213">Cuando se usa <xref:System.Data.Common.DbDataAdapter.Update%2A>, hay dos eventos que se producen por cada fila de datos actualizada.</span><span class="sxs-lookup"><span data-stu-id="0111f-213">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="0111f-214">El orden de ejecución es el siguiente:</span><span class="sxs-lookup"><span data-stu-id="0111f-214">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="0111f-215">Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="0111f-215">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="0111f-216">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-216">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="0111f-217">Ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="0111f-217">The command executes.</span></span>  
  
4.  <span data-ttu-id="0111f-218">Si el comando se establece en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="0111f-218">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="0111f-219">Si no hay parámetros de salida, se colocan en la <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="0111f-219">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="0111f-220">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-220">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="0111f-221">Se llama a <xref:System.Data.DataRow.AcceptChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="0111f-221"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-222">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> y <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> eventos.</span><span class="sxs-lookup"><span data-stu-id="0111f-222">The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.</span></span>  
  
 <span data-ttu-id="0111f-223">El <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> evento devuelve este resultado:</span><span class="sxs-lookup"><span data-stu-id="0111f-223">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:</span></span>  
  
 <span data-ttu-id="0111f-224">argumentos del evento: (SqlCommand commandType = 2 status = 0)</span><span class="sxs-lookup"><span data-stu-id="0111f-224">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</span></span>  
  
 <span data-ttu-id="0111f-225">El <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> evento devuelve este resultado:</span><span class="sxs-lookup"><span data-stu-id="0111f-225">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:</span></span>  
  
 <span data-ttu-id="0111f-226">argumentos del evento: (SqlCommand commandType = 2 recordsAffected = 1 row=System.Data.DataRow[37] estado = 0)</span><span class="sxs-lookup"><span data-stu-id="0111f-226">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ SelectCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-227">Obtiene o establece un procedimiento almacenado o una instrucción de Transact-SQL para seleccionar registros en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-227">Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-228">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> que se utiliza durante <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> para seleccionar registros en la base de datos y colocarlos en el <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-228">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from the database for placement in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-229">Cuando <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> se asigna a creado anteriormente <xref:System.Data.SqlClient.SqlCommand>, el <xref:System.Data.SqlClient.SqlCommand> no se clonan.</span><span class="sxs-lookup"><span data-stu-id="0111f-229">When <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="0111f-230">El <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-230">The <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="0111f-231">Si el <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> no devuelve ninguna fila, ninguna de las tablas se agrega a la <xref:System.Data.DataSet>, y no se genera ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="0111f-231">If the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-232">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, y <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-232">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="0111f-233">Se supone que ya ha creado un <xref:System.Data.SqlClient.SqlConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-233">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-234">Para una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-234">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-235">
            <see cref="T:System.Data.IDbCommand" /> que se usa durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros en el origen de datos para las filas eliminadas en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-235">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-236">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="0111f-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0111f-237">Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="0111f-237">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-238">Para una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-238">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-239">
            <see cref="T:System.Data.IDbCommand" /> que se usa durante la ejecución del método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para las nuevas filas del conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-239">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-240">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="0111f-240">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0111f-241">Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="0111f-241">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-242">Para una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-242">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-243">
            <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-243">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-244">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="0111f-244">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0111f-245">Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="0111f-245">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-246">Para una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-246">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-247">
            <see cref="T:System.Data.IDbCommand" /> que se usa durante la ejecución del método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para las filas modificadas del conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-247">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-248">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="0111f-248">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0111f-249">Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="0111f-249">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0111f-250">Para una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-250">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0111f-251">Un nuevo objeto que es una copia de la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-251">A new object that is a copy of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-252">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="0111f-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0111f-253">Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlDataAdapter> se convierte en una interfaz <xref:System.ICloneable>.</span><span class="sxs-lookup"><span data-stu-id="0111f-253">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberSignature Language="F#" Value="override this.TerminateBatching : unit -&gt; unit" Usage="sqlDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-254">Obtiene o establece el número de filas procesadas en cada acción de ida y vuelta al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-254">Gets or sets the number of rows that are processed in each round-trip to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-255">El número de filas que se van a procesar por lote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-255">The number of rows to process per-batch.</span>
          </span>
          <span data-ttu-id="0111f-256">
            <list type="table">
              <listheader>
                <term> Valor es </term>
                <description> efecto </description>
              </listheader>
              <item>
                <term> 0 </term>
                <description> no hay ningún límite en el tamaño de lote...  </description>
              </item>
              <item>
                <term> 1 </term>
                <description> deshabilita la actualización por lotes.  </description>
              </item>
              <item>
                <term> &gt;1 </term>
                <description> los cambios se envían utilizando los lotes de <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> operaciones a la vez.  </description>
              </item>
            </list>  Si se establece en un valor distinto de 1, todos los comandos asociados a la <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> tienen por qué tener sus ** UpdatedRowSource ** propiedad establecida en <see langword="None" /> o <see langword="OutputParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-256">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size..  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt;1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> have to have their **UpdatedRowSource** property set to <see langword="None" /> or <see langword="OutputParameters" />.</span>
          </span>
          <span data-ttu-id="0111f-257">De lo contrario, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-257">An exception is thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-258">Obtiene o establece un valor que habilita o deshabilita la compatibilidad con el procesamiento por lotes, y especifica el número de comandos que se pueden ejecutar en un lote.</span><span class="sxs-lookup"><span data-stu-id="0111f-258">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span>  
  
 <span data-ttu-id="0111f-259">Use la <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> propiedad que se va a actualizar un origen de datos con los cambios de un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="0111f-259">Use the <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0111f-260">Esto puede aumentar el rendimiento de la aplicación reduciendo el número de ida y vuelta al servidor.</span><span class="sxs-lookup"><span data-stu-id="0111f-260">This can increase application performance by reducing the number of round-trips to the server.</span></span>  
  
 <span data-ttu-id="0111f-261">Si se ejecuta un lote demasiado grande, el rendimiento podría verse afectado.</span><span class="sxs-lookup"><span data-stu-id="0111f-261">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="0111f-262">Por tanto, es conveniente realizar pruebas a fin de determinar el valor óptimo del tamaño del lote antes de implementar la aplicación.</span><span class="sxs-lookup"><span data-stu-id="0111f-262">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="0111f-263">Un <xref:System.ArgumentOutOfRangeException> se produce si el valor se establece en un número menor que cero.</span><span class="sxs-lookup"><span data-stu-id="0111f-263">An <xref:System.ArgumentOutOfRangeException> is thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ UpdateCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0111f-264">Obtiene o establece un procedimiento almacenado o una instrucción de Transact-SQL para actualizar los registros del origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-264">Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0111f-265">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> que se utiliza durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar los registros de la base de datos correspondientes a las filas modificadas en <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0111f-265">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0111f-266">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> puede generar automáticamente si se establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propiedad y use el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-266">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-267">A continuación, se generan los comandos adicionales que no se establecen mediante el <xref:System.Data.SqlClient.SqlCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="0111f-267">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="0111f-268">Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="0111f-268">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0111f-269">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="0111f-269">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="0111f-270">Cuando <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> se asigna a creado anteriormente <xref:System.Data.SqlClient.SqlCommand>, el <xref:System.Data.SqlClient.SqlCommand> no se clonan.</span><span class="sxs-lookup"><span data-stu-id="0111f-270">When <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="0111f-271">El <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-271">The <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0111f-272">Si la ejecución de este comando devuelve filas, las filas actualizadas se pueden combinar con la <xref:System.Data.DataSet> según cómo configure la **UpdatedRowSource** propiedad de la <xref:System.Data.SqlClient.SqlCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-272">If execution of this command returns rows, the updated rows may be merged with the <xref:System.Data.DataSet> depending on how you set the **UpdatedRowSource** property of the <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="0111f-273">Para cada columna que propaga al origen de datos en <xref:System.Data.Common.DbDataAdapter.Update%2A>, debe agregar un parámetro a `InsertCommand`, `UpdateCommand`, o `DeleteCommand`.</span><span class="sxs-lookup"><span data-stu-id="0111f-273">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span>  
  
 <span data-ttu-id="0111f-274">El `SourceColumn` propiedad del parámetro debe establecerse en el nombre de la columna.</span><span class="sxs-lookup"><span data-stu-id="0111f-274">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="0111f-275">Esto indica que el valor del parámetro no es establecer manualmente, pero tomado de la columna concreta en la fila procesada actualmente.</span><span class="sxs-lookup"><span data-stu-id="0111f-275">This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0111f-276">En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlDataAdapter> y establece la <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> y <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="0111f-276">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="0111f-277">Se supone que ya ha creado un <xref:System.Data.SqlClient.SqlConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="0111f-277">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>