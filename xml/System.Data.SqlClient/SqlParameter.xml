<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b77abb964fc22cc3ca4ea5e480a7c854f8d4200f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30392189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un parámetro de un objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> y, de manera opcional, su asignación a columnas de <see cref="T:System.Data.DataSet" />. Esta clase no puede heredarse. Para más información sobre los parámetros, vea [Configurar parámetros y tipos de datos de parámetros](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En los nombres de parámetros no se distinguen mayúsculas de minúsculas.  
  
> [!NOTE]
>  Sin nombre, también denominado ordinal, no se admiten los parámetros por el proveedor de datos de .NET Framework para SQL Server.  
  
 Para obtener más información, junto con el código de ejemplo adicional que muestra cómo utilizar parámetros, vea el [comandos y parámetros](~/docs/framework/data/adonet/commands-and-parameters.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea varias instancias de <xref:System.Data.SqlClient.SqlParameter> a través de la <xref:System.Data.SqlClient.SqlParameterCollection> colección dentro de la <xref:System.Data.SqlClient.SqlDataAdapter>. Estos parámetros se utilizan para seleccionar datos del origen de datos y poner los datos en el <xref:System.Data.DataSet>. En este ejemplo se da por supuesto que una <xref:System.Data.DataSet> y un <xref:System.Data.SqlClient.SqlDataAdapter> ya se ha creado mediante la conexión, comandos y esquema adecuado. Para obtener más información y ejemplos adicionales sobre el uso de parámetros, vea [recuperar y modificar datos en ADO.NET](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) y [configurar parámetros y tipos de datos de parámetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.SqlDbType" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> que usa el nombre de parámetro y el tipo de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de datos y, si procede, **tamaño** y <xref:System.Data.SqlClient.SqlParameter.Precision%2A> se deduce del valor de la `dbType` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dbType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="value">
          <see cref="T:System.Object" /> que es el valor de <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> que usa el nombre de parámetro y un valor del nuevo elemento <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se especifica un <xref:System.Object> en el `value` parámetro, el <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> se deduce del tipo de Microsoft .NET Framework de la <xref:System.Object>.  
  
 Tenga cuidado cuando utilice esta sobrecarga de la <xref:System.Data.SqlClient.SqlParameter> constructor para especificar valores de parámetro de número entero. Dado que esta sobrecarga toma un parámetro `value` de tipo <xref:System.Object>, cuando el valor entero sea cero se debe convertir en un tipo <xref:System.Object>, tal como se muestra en el siguiente ejemplo de C#.  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 Si no realiza esta conversión, el compilador supone que se está intentando llamar a la `SqlParameter` (`string`, `SqlDbType`) sobrecarga del constructor.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.SqlDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> que usa el nombre del parámetro, el <see cref="T:System.Data.SqlDbType" /> y el tamaño.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El **tamaño** se deduce del valor de la `dbType` parámetro si no se establece explícitamente el `size` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dbType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.SqlDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="sourceColumn">Nombre de la columna de origen (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) si este <see cref="T:System.Data.SqlClient.SqlParameter" /> se usa en una llamada a <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> que usa el nombre del parámetro, el <see cref="T:System.Data.SqlDbType" />, el tamaño y el nombre de la columna de origen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El **tamaño** se deduce del valor de la `dbType` parámetro si no se establece explícitamente el `size` parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dbType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.SqlDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="isNullable">
          <see langword="true" /> si el valor del campo puede ser null; de lo contrario, <see langword="false" />.</param>
        <param name="precision">Número total de dígitos situados a la izquierda y a la derecha del separador decimal con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
        <param name="scale">Número total de posiciones decimales con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
        <param name="sourceColumn">Nombre de la columna de origen (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) si este <see cref="T:System.Data.SqlClient.SqlParameter" /> se usa en una llamada a <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="value">
          <see cref="T:System.Object" /> que es el valor de <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> con el nombre, tipo, tamaño, <see cref="T:System.Data.ParameterDirection" />, precisión, escala, columna de origen, <see cref="T:System.Data.DataRowVersion" /> y valor del parámetro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El **tamaño** y <xref:System.Data.SqlClient.SqlParameter.Precision%2A> se deduce del valor de la `dbType` parámetro si no se establece explícitamente el `size` y `precision` parámetros.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor proporcionado en el parámetro <paramref name="dbType" /> es un tipo de datos de back-end no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nombre del parámetro que se va a asignar.</param>
        <param name="dbType">Uno de los valores de <see cref="T:System.Data.SqlDbType" />.</param>
        <param name="size">Longitud del parámetro.</param>
        <param name="direction">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="precision">Número total de dígitos situados a la izquierda y a la derecha del separador decimal con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
        <param name="scale">Número total de posiciones decimales con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
        <param name="sourceColumn">Nombre de la columna de origen (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) si este <see cref="T:System.Data.SqlClient.SqlParameter" /> se usa en una llamada a <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</param>
        <param name="value">
          <see cref="T:System.Object" /> que es el valor de <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <param name="xmlSchemaCollectionDatabase">Nombre de la base de datos donde se encuentra la colección de esquemas para esta instancia XML.</param>
        <param name="xmlSchemaCollectionOwningSchema">Esquema relacional propietario donde se encuentra la colección de esquemas para esta instancia XML.</param>
        <param name="xmlSchemaCollectionName">Nombre de la colección de esquemas para este parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlClient.SqlParameter" /> que utiliza el nombre del parámetro, el tipo del parámetro, la longitud del parámetro, la dirección, la precisión, la escala, el nombre de la columna de origen, uno de los valores de <see cref="T:System.Data.DataRowVersion" />, un valor Boolean para la asignación de la columna de origen, el valor de <see langword="SqlParameter" />, el nombre de la base de datos en la que se encuentra la colección de esquemas para esta instancia de XML, el esquema relacional propietario en el que se ubica la colección de esquemas para esta instancia de XML y el nombre de la colección de esquemas para este parámetro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.Size%2A> y <xref:System.Data.SqlClient.SqlParameter.Precision%2A> se deduce del valor de la `dbType` parámetro si no se establece explícitamente el `size` y `precision` parámetros.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Globalization.CompareInfo" /> que define cómo se deben realizar las comparaciones de cadenas para este parámetro.</summary>
        <value>Un objeto <see cref="T:System.Globalization.CompareInfo" /> que define la comparación de cadenas para este parámetro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Data.SqlDbType" /> del parámetro.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.SqlDbType" />. El valor predeterminado es <see langword="NVarChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> y <xref:System.Data.SqlClient.SqlParameter.DbType%2A> están vinculadas. Por consiguiente, establecer el <xref:System.Data.SqlClient.SqlParameter.DbType%2A> cambios el <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> a un apoyo <xref:System.Data.SqlDbType>.  
  
 Para obtener una lista de los tipos de datos admitidos, consulte la correspondiente <xref:System.Data.SqlDbType> miembro. Para obtener más información, consulte [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el parámetro es sólo de entrada, sólo de salida, bidireccional, o un valor devuelto de un procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. El valor predeterminado es <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Data.ParameterDirection> es la salida y la ejecución del asociado <xref:System.Data.SqlClient.SqlCommand> no devuelve un valor, la <xref:System.Data.SqlClient.SqlParameter> contiene un valor null.  
  
 `Output`, `InputOut`, y `ReturnValue` parámetros devueltos por una llamada a <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> no son accesibles hasta que se cierra el <xref:System.Data.SqlClient.SqlDataReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [Comandos y parámetros](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [Parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server y ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aplica el cifrado de un parámetro al usar [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine). Si SQL Server informa al controlador de que el parámetro no tiene que estar cifrado, se producirá un error en la consulta que usa el parámetro. Esta propiedad ofrece protección adicional contra los ataques de seguridad que implican un SQL Server en peligro al proporcionar metadatos de cifrado incorrectos al cliente, lo que puede provocar la divulgación de los datos.</summary>
        <value>
          <see langword="true" /> Si el parámetro tiene un cifrado de forzar columna; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el parámetro acepta valores null. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> no se usa para validar el valor del parámetro y no impedirá el envío o la recepción de un valor null al ejecutar un comando.</summary>
        <value>
          <see langword="true" /> si se aceptan valores null; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores NULL se controlan mediante la <xref:System.DBNull> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador de configuración regional que determina las convenciones y el idioma de una región determinada.</summary>
        <value>Devuelve el identificador de configuración regional asociado al parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración regional identifica las convenciones y el idioma para una región geográfica determinada. La página de códigos utilizada para codificar una cadena concreta (juego de caracteres) se basa en la configuración regional utilizada por esa cadena o el entorno que lo generó. Esta propiedad establece (para los parámetros de entrada) u obtiene (para los parámetros de salida) la configuración regional que se adjuntará a una cadena al intercambiar datos con el servidor. Esta propiedad se utiliza normalmente junto con la <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> propiedad.  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el desplazamiento hasta la propiedad <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
        <value>El desplazamiento hasta <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Offset` propiedad se utiliza para fragmentar en el cliente datos binarios y de cadena. Por ejemplo, para insertar 10 MB de texto en una columna en un servidor, un usuario podría ejecutar 10 inserciones parametrizadas de fragmentos de 1 MB, cuando se desplaza el valor de `Offset` en cada iteración 1 MB.  
  
 `Offset` Especifica el número de bytes para los tipos binarios y el número de caracteres para cadenas. El recuento de cadenas no incluye el carácter de terminación.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <value>Nombre del objeto <see cref="T:System.Data.SqlClient.SqlParameter" />. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> se especifica en el formulario @paramname. Debe establecer <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> antes de ejecutar un <xref:System.Data.SqlClient.SqlCommand> que se basa en parámetros.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
        <value>El número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. El valor predeterminado es 0. Esto indica que el proveedor de datos establece la precisión de <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.Precision%2A> propiedad se usa en los parámetros que tienen un <xref:System.Data.SqlDbType> de `Decimal`.  
  
 No es necesario especificar valores para la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> y <xref:System.Data.SqlClient.SqlParameter.Scale%2A> propiedades de parámetros de entrada, puesto que se puede deducir del valor del parámetro. `Precision` y `Scale` son necesarios para los parámetros output y para escenarios donde es necesario especificar los metadatos completos de un parámetro sin indicar un valor, como especificar un valor null con una precisión y escala concretas.  
  
> [!NOTE]
>  No se admite el uso de esta propiedad para convertir datos pasados a la base de datos. Para redondear, truncar o convertir los datos antes de pasar a la base de datos de lo contrario, utilice la <xref:System.Math> clase que forma parte de la `System` espacio de nombres para asignar un valor para el parámetro `Value` propiedad.  
  
> [!NOTE]
>  Los proveedores de datos de Microsoft .NET Framework que se incluyen con la versión 1.0 de .NET Framework no comprueban la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> o <xref:System.Data.SqlClient.SqlParameter.Scale%2A> de <xref:System.Decimal> valores de parámetro. Esto puede provocar que se va a insertar en el origen de datos con los datos truncados. Si está utilizando la versión 1.0 de .NET Framework, es necesario validar la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> y <xref:System.Data.SqlClient.SqlParameter.Scale%2A> de <xref:System.Decimal> valores antes de establecer el valor del parámetro. Cuando se usa .NET Framework versión 1.1 o una versión posterior, se produce una excepción si una <xref:System.Decimal> se establece el valor del parámetro con un válido <xref:System.Data.SqlClient.SqlParameter.Precision%2A>. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> valores que superen el <xref:System.Decimal> se truncan la escala del parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece el tipo asociado a este <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se ejecuta un comando que incluye valores de parámetro, código puede establecer explícitamente el tipo de un parámetro o el parámetro puede deducir su tipo a partir de su valor. Llamar a este método restablece el parámetro para que pueda volver a deducir su tipo a partir del valor pasado en el parámetro. Llamar a este método afecta tanto a la <xref:System.Data.SqlClient.SqlParameter.DbType%2A> y <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> propiedades de la <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece el tipo asociado a este <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se ejecuta un comando que incluye valores de parámetro, código puede establecer explícitamente el tipo de un parámetro o el parámetro puede deducir su tipo a partir de su valor. Llamar a este método restablece el parámetro para que pueda volver a deducir su tipo a partir del valor pasado en el parámetro. Llamar a este método afecta tanto a la <xref:System.Data.SqlClient.SqlParameter.DbType%2A> y <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> propiedades de la <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de posiciones decimales con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
        <value>El número de posiciones decimales con que se resuelve <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.Scale%2A> propiedad se usa en los parámetros que tienen un <xref:System.Data.SqlDbType> de `Decimal`.  
  
> [!WARNING]
>  Los datos se pueden truncar si el <xref:System.Data.SqlClient.SqlParameter.Scale%2A> propiedad no se especifica explícitamente y los datos en el servidor no caben en la escala de 0 (valor predeterminado).  
  
 No es necesario especificar valores para la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> y <xref:System.Data.SqlClient.SqlParameter.Scale%2A> propiedades de parámetros de entrada, puesto que se puede deducir del valor del parámetro. `Precision` y `Scale` son necesarios para los parámetros output y para escenarios donde es necesario especificar los metadatos completos de un parámetro sin indicar un valor, como especificar un valor null con una precisión y escala concretas.  
  
> [!NOTE]
>  No se admite el uso de esta propiedad para convertir datos pasados a la base de datos. Para redondear, truncar o convertir los datos antes de pasar a la base de datos de lo contrario, utilice la <xref:System.Math> clase que forma parte de la `System` espacio de nombres para asignar un valor para el parámetro `Value` propiedad.  
  
> [!NOTE]
>  Proveedores de datos de .NET framework que se incluyen con la versión 1.0 de .NET Framework no comprueban la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> o <xref:System.Data.SqlClient.SqlParameter.Scale%2A> de <xref:System.Decimal> valores de parámetro. Esto puede producir datos truncados a insertar en el origen de datos. Si está utilizando la versión 1.0 de .NET Framework, es necesario validar la <xref:System.Data.SqlClient.SqlParameter.Precision%2A> y <xref:System.Data.SqlClient.SqlParameter> de <xref:System.Decimal> valores antes de establecer el valor del parámetro. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> valores que superen el <xref:System.Decimal> se truncan la escala del parámetro.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño máximo, en bytes, de los datos de la columna.</summary>
        <value>Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores devueltos no se ven afectados por esta propiedad; parámetros de retorno de procedimientos almacenados siempre son enteros de tamaño fijo.  
  
 Para los parámetros de salida con un tipo de longitud variable (nvarchar, por ejemplo), el tamaño del parámetro define el tamaño del búfer que contiene el parámetro de salida. El parámetro de salida se puede truncar a un tamaño especificado con <xref:System.Data.SqlClient.SqlParameter.Size%2A>. Para los tipos de caracteres, el tamaño se especifica con <xref:System.Data.SqlClient.SqlParameter.Size%2A> es en caracteres.  
  
 El <xref:System.Data.SqlClient.SqlParameter.Size%2A> propiedad se utiliza para tipos binarios y de cadena. Para los parámetros de tipo `SqlType.String`, `Size` significa la longitud en caracteres Unicode. Para los parámetros de tipo `SqlType.Xml`, `Size` se omite.  
  
 Para datos de cadena de los tipos de datos y ANSI el <xref:System.Data.SqlClient.SqlParameter.Size%2A> propiedad hace referencia al número de bytes. Para los datos de cadena Unicode, <xref:System.Data.SqlClient.SqlParameter.Size%2A> hace referencia al número de caracteres. El recuento de cadenas no incluye el carácter de terminación.  
  
 Para los tipos de datos de longitud variable, <xref:System.Data.SqlClient.SqlParameter.Size%2A> describe la cantidad máxima de datos que se va a transmitir al servidor. Por ejemplo, para un valor de cadena Unicode, <xref:System.Data.SqlClient.SqlParameter.Size%2A> podría utilizarse para limitar la cantidad de datos que se envían al servidor a los cien primeros caracteres.  
  
 Si no establece explícitamente, el tamaño se infiere del tamaño real del valor del parámetro especificado.  
  
 Si la parte fraccionaria del valor del parámetro es mayor que el tamaño, el valor se truncará para ajustarse al tamaño.  
  
 Para una longitud fija tipos de datos, el valor de <xref:System.Data.SqlClient.SqlParameter.Size%2A> se omite. Se puede recuperar con fines informativos y devuelve la cantidad máxima de bytes que el proveedor utiliza al transmitir el valor del parámetro al servidor.  
  
 Para obtener información sobre el streaming, vea [compatibilidad con Streaming de SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" /> y que se usa para cargar o devolver el <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> está establecido en algo distinto de una cadena vacía, el valor del parámetro se recupera de la columna con el <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> nombre. Si <xref:System.Data.SqlClient.SqlParameter.Direction%2A> está establecido en `Input`, el valor se toma de la <xref:System.Data.DataSet>. Si <xref:System.Data.SqlClient.SqlParameter.Direction%2A> se establece en `Output`, el valor se toma del origen de datos. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> de `InputOutput` es una combinación de ambos.  
  
 Para obtener más información sobre cómo usar el <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> propiedad, vea [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md) y [actualizar orígenes de datos con DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece u obtiene un valor que indica si la columna de origen acepta valores null. Esto permite a <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> generar correctamente instrucciones Update para las columnas que aceptan valores NULL.</summary>
        <value>
          <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> utiliza el <xref:System.Data.SqlClient.SqlCommandBuilder> para generar correctamente los comandos de actualización cuando se trabaja con columnas que aceptan valores NULL. Por lo general, uso de <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> se limita a los desarrolladores que heredan de <xref:System.Data.SqlClient.SqlCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> Esta propiedad se utiliza para determinar si la columna de origen acepta valores NULL y establece esta propiedad en `true` si no acepta valores NULL, y `false` si no lo está. Cuando <xref:System.Data.SqlClient.SqlCommandBuilder> está generando su instrucción Update, examina la <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> para cada parámetro. Si la propiedad es `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> genera una cláusula WHERE como la siguiente (en esta expresión de consulta, "FieldName" representa el nombre del campo):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Si <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> para el campo es false, <xref:System.Data.SqlClient.SqlCommandBuilder> genera la siguiente cláusula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Además, @IsNull_FieldName contiene 1 si el campo de origen contiene null y 0 si no es así. Este mecanismo permite optimizar el rendimiento de SQL Server y proporciona código común que funciona en varios proveedores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar al cargar <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. El valor predeterminado es <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se usa en el `SqlDataAdapter.UpdateCommand` durante una actualización para determinar si se usa el valor original o del actual para un valor de parámetro. Esto permite que las claves principales se actualiza. Esta propiedad se establece en la versión de la <xref:System.Data.DataRow> utilizado por el `DataRow.Item` propiedad, o uno de los `DataRow.GetChildRows` métodos de la <xref:System.Data.DataRow> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Data.SqlDbType" /> del parámetro.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.SqlDbType" />. El valor predeterminado es <see langword="NVarChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> y <xref:System.Data.SqlClient.SqlParameter.DbType%2A> están vinculadas. Por consiguiente, establecer el <xref:System.Data.SqlClient.SqlParameter.DbType%2A> cambios el <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> a un apoyo <xref:System.Data.SqlDbType>.  
  
 Para obtener una lista de los tipos de datos admitidos, consulte la correspondiente <xref:System.Data.SqlDbType> miembro. Para obtener más información, consulte [parámetros de DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 Para obtener información sobre el streaming, vea [compatibilidad con Streaming de SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro como tipo SQL.</summary>
        <value>
          <see cref="T:System.Object" /> que es el valor del parámetro, mediante tipos SQL. El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los parámetros de entrada, el valor se enlaza a la <xref:System.Data.SqlClient.SqlCommand> que se envía al servidor. Para obtener resultados y parámetros de valor devuelto, el valor se establece en la realización de la <xref:System.Data.SqlClient.SqlCommand> y después la <xref:System.Data.SqlClient.SqlDataReader> está cerrado.  
  
 Esta propiedad se puede establecer en null o <xref:System.DBNull.Value?displayProperty=nameWithType>. Utilice <xref:System.DBNull.Value?displayProperty=nameWithType> para enviar un valor NULL como valor del parámetro. Utilice null o no establezca <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> que se usará el valor predeterminado para el parámetro.  
  
 Si la aplicación especifica el tipo de base de datos, el valor enlazado se convierte a ese tipo cuando el proveedor envía los datos al servidor. El proveedor intenta convertir cualquier tipo de valor si es compatible con la <xref:System.IConvertible> interfaz. Pueden producirse errores de conversión si el tipo especificado no es compatible con el valor.  
  
 Tanto el <xref:System.Data.SqlClient.SqlParameter.DbType%2A> y <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> las propiedades se pueden inferir estableciendo la <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>.  
  
 El <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> propiedad sobrescribe `SqlDataAdapter.UpdateCommand`.  
  
 Use la <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> propiedad para devolver valores de parámetro como common language runtime (CLR) tipos.  
  
 Para obtener información sobre el streaming, vea [compatibilidad con Streaming de SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Un nuevo objeto <see cref="T:System.Object" /> que es una copia de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.SqlClient.SqlParameter> se convierte en una interfaz <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una cadena que contiene la propiedad <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</summary>
        <returns>Una cadena que contiene la propiedad <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de tipo para un parámetro con valores de tabla.</summary>
        <value>El nombre de tipo del parámetro con valores de tabla especificado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una <see langword="string" /> que representa como parámetro un tipo definido por el usuario.</summary>
        <value>Una <see langword="string" /> que representa el nombre completo de un tipo definido por el usuario en la base de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para un ejemplo que muestra <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, consulte [recuperar datos UDT](http://msdn.microsoft.com/library/ms131080.aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del parámetro.</summary>
        <value>
          <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los parámetros de entrada, el valor se enlaza a la <xref:System.Data.SqlClient.SqlCommand> que se envía al servidor. Para obtener resultados y parámetros de valor devuelto, el valor se establece en la realización de la <xref:System.Data.SqlClient.SqlCommand> y después la <xref:System.Data.SqlClient.SqlDataReader> está cerrado.  
  
 Esta propiedad se puede establecer en null o <xref:System.DBNull.Value>. Utilice <xref:System.DBNull.Value> para enviar un valor NULL como valor del parámetro. Utilice null o no establezca <xref:System.Data.SqlClient.SqlParameter.Value%2A> que se usará el valor predeterminado para el parámetro.  
  
 Se produce una excepción si los datos XML que no son de Unicode se pasan como una cadena.  
  
 Si la aplicación especifica el tipo de base de datos, el valor enlazado se convierte a ese tipo cuando el proveedor envía los datos al servidor. El proveedor intenta convertir cualquier tipo de valor si es compatible con la <xref:System.IConvertible> interfaz. Pueden producirse errores de conversión si el tipo especificado no es compatible con el valor.  
  
 Tanto el <xref:System.Data.SqlClient.SqlParameter.DbType%2A> y <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> las propiedades se pueden inferir estableciendo el valor.  
  
 El <xref:System.Data.SqlClient.SqlParameter.Value%2A> propiedad sobrescribe `SqlDataAdapter.UpdateCommand`.  
  
 Para obtener información sobre el streaming, vea [compatibilidad con Streaming de SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.SqlClient.SqlParameter> y establece algunas de sus propiedades.  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la base de datos donde se encuentra la colección de esquemas para esta instancia XML.</summary>
        <value>Nombre de la base de datos donde se encuentra la colección de esquemas para esta instancia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este valor es nulo (`Nothing` en Microsoft Visual Basic) si la colección está definida dentro de la base de datos actual. También es null si no hay ninguna colección de esquemas, en cuyo caso <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> y <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> también son null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la colección de esquemas para esta instancia XML.</summary>
        <value>Nombre de la colección de esquemas para esta instancia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este valor es nulo (`Nothing` en Microsoft Visual Basic) si no hay ninguna colección de esquemas asociada. Si el valor es null, entonces <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> y <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> también son null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esquema relacional propietario donde se encuentra la colección de esquemas para esta instancia XML.</summary>
        <value>El esquema relacional de propiedad para esta instancia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este valor es nulo (`Nothing` en Microsoft Visual Basic) si la colección está definida dentro de la base de datos actual. También es null si no hay ninguna colección de esquemas, en cuyo caso <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> y <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> también son null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>