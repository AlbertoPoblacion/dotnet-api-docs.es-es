<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c83c563de4e2500f12149fe24a87813d206f6765" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.SqlClient.SqlDependency" /> object represents a query notification dependency between an application and an instance of SQL Server. An application can create a <see cref="T:System.Data.SqlClient.SqlDependency" /> object and register to receive notifications via the <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> event handler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> es ideal para escenarios, donde la aplicación ASP.NET o servicio de nivel intermedio debe mantener cierta información en caché en memoria de caché. <xref:System.Data.SqlClient.SqlDependency> permite recibir notificaciones cuando cambian los datos originales en la base de datos para que se puede actualizar la memoria caché.  
  
 Para establecer una dependencia, debe asociar un <xref:System.Data.SqlClient.SqlDependency> objeto a uno o varios <xref:System.Data.SqlClient.SqlCommand> objetos. Para recibir notificaciones, es necesario suscribirse a la <xref:System.Data.SqlClient.SqlDependency.OnChange> eventos. Para obtener más información acerca de los requisitos para crear consultas para las notificaciones, vea "Creating a Query for Notification" en libros en pantalla de SQL Server.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> se ha diseñado para usarse en ASP.NET o servicios de nivel intermedio donde hay un número relativamente pequeño de servidores con dependencias activas a la base de datos. No se diseñó para su uso en aplicaciones cliente, donde podrían tener cientos o miles de equipos cliente <xref:System.Data.SqlClient.SqlDependency> objetos configurado para un servidor de base de datos única. Si está desarrollando una aplicación que necesite las notificaciones de subsegundo confiables cuando cambian los datos, revise las secciones **planear una estrategia eficaz de notificaciones de consulta** y **alternativas a la consulta Las notificaciones** en el [planear notificaciones](http://go.microsoft.com/fwlink/?LinkId=211984) tema en libros en pantalla de SQL Server.  
  
 Para obtener más información, consulte [notificaciones de consulta en SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) y "Building Notification Solutions" en libros en pantalla de SQL Server.  
  
> [!NOTE]
>  El <xref:System.Data.SqlClient.SqlDependency.OnChange> pueden generarse eventos en un subproceso distinto del subproceso que inició la ejecución del comando.  
  
 Las notificaciones de consulta solo son compatibles con las instrucciones SELECT que cumplen ciertos requisitos específicos. En la tabla siguiente se proporcionan vínculos a la documentación sobre Service Broker y las notificaciones de consulta de los Libros en pantalla de SQL Server.  
  
 **Libros en pantalla de SQL Server**  
  
-   [Crear una consulta de notificación](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Consideraciones de seguridad para Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Seguridad y protección (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Consideraciones de seguridad para Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Permisos de notificaciones de consulta](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Consideraciones internacionales para Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Consideraciones de diseño de soluciones (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [InfoCenter para desarrolladores de Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guía del desarrollador (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class with the default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor inicializa el <xref:System.Data.SqlClient.SqlDependency> objeto con el nombre predeterminado del servicio de Service Broker y el tiempo de espera. En algún momento después de la construcción, debe usar el <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> para asociar uno o más comandos a este <xref:System.Data.SqlClient.SqlDependency> objeto.  
  
 Las notificaciones de consulta solo son compatibles con las instrucciones SELECT que cumplen ciertos requisitos específicos. En la tabla siguiente se proporcionan vínculos a la documentación sobre Service Broker y las notificaciones de consulta de los Libros en pantalla de SQL Server.  
  
 **Libros en pantalla de SQL Server**  
  
-   [Crear una consulta de notificación](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Consideraciones de seguridad para Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Seguridad y protección (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Consideraciones de seguridad para Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Permisos de notificaciones de consulta](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Consideraciones internacionales para Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Consideraciones de diseño de soluciones (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [InfoCenter para desarrolladores de Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guía del desarrollador (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor will set up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class and associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internamente, este constructor crea una instancia de la <xref:System.Data.Sql.SqlNotificationRequest> clase y lo asocia a un <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Las notificaciones de consulta solo son compatibles con las instrucciones SELECT que cumplen ciertos requisitos específicos. En la tabla siguiente se proporcionan vínculos a la documentación sobre Service Broker y las notificaciones de consulta de los Libros en pantalla de SQL Server.  
  
 **Libros en pantalla de SQL Server**  
  
-   [Crear una consulta de notificación](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Consideraciones de seguridad para Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Seguridad y protección (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Consideraciones de seguridad para Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Permisos de notificaciones de consulta](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Consideraciones internacionales para Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Consideraciones de diseño de soluciones (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [InfoCenter para desarrolladores de Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guía del desarrollador (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor sets up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <param name="options">The notification request options to be used by this dependency.  <c>null</c> to use the default service.</param>
        <param name="timeout">The time-out for this notification in seconds. The default is 0, indicating that the server's time-out should be used.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class, associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter, and specifies notification options and a time-out value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las notificaciones de consulta solo son compatibles con las instrucciones SELECT que cumplen ciertos requisitos específicos. En la tabla siguiente se proporcionan vínculos a la documentación sobre Service Broker y las notificaciones de consulta de los Libros en pantalla de SQL Server.  
  
 **Libros en pantalla de SQL Server**  
  
-   [Crear una consulta de notificación](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Consideraciones de seguridad para Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Seguridad y protección (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Consideraciones de seguridad para Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Permisos de notificaciones de consulta](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Consideraciones internacionales para Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Consideraciones de diseño de soluciones (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [InfoCenter para desarrolladores de Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guía del desarrollador (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The time-out value is less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.  An attempt was made to create a **SqlDependency** instance from within SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> object containing a statement that is valid for notifications.</param>
        <summary>Associates a <see cref="T:System.Data.SqlClient.SqlCommand" /> object with this <see cref="T:System.Data.SqlClient.SqlDependency" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las notificaciones de consulta solo son compatibles con las instrucciones SELECT que cumplen ciertos requisitos específicos. En la tabla siguiente se proporcionan vínculos a la documentación sobre Service Broker y las notificaciones de consulta de los Libros en pantalla de SQL Server.  
  
 **Libros en pantalla de SQL Server**  
  
-   [Crear una consulta de notificación](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Consideraciones de seguridad para Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Seguridad y protección (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Consideraciones de seguridad para Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Permisos de notificaciones de consulta](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Consideraciones internacionales para Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Consideraciones de diseño de soluciones (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [InfoCenter para desarrolladores de Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Guía del desarrollador (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is null.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether one of the result sets associated with the dependency has changed.</summary>
        <value>Ha cambiado un valor booleano que indica si se establece uno de los resultados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no usa el <xref:System.Data.SqlClient.SqlDependency.OnChange> eventos, puede comprobar el <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propiedad para determinar si los resultados de consulta han cambiado.  
  
 El <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propiedad implica necesariamente un cambio en los datos. Otras circunstancias, como el tiempo de espera ha expirado y no se pudo establecer la solicitud de notificación, también generará un evento de cambio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that uniquely identifies this instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
        <value>Una representación de cadena de un GUID que se genera para cada instancia de la <see cref="T:System.Data.SqlClient.SqlDependency" /> clase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlDependency.Id%2A> propiedad se utiliza para identificar de forma única un determinado <xref:System.Data.SqlClient.SqlDependency> instancia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a notification is received for any of the commands associated with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> se produce cuando cambian los resultados para el comando asociado. Si no usas <xref:System.Data.SqlClient.SqlDependency.OnChange>, puede comprobar el <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propiedad para determinar si los resultados de consulta han cambiado.  
  
 El <xref:System.Data.SqlClient.SqlDependency.OnChange> eventos implica necesariamente un cambio en los datos. Otras circunstancias, como tiempo de espera ha expirado y no se pudo establecer la solicitud de notificación, también generan <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Starts the listener for receiving dependency change notifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.SqlClient.SqlDependency> agente de escucha se reiniciará cuando se produce un error en la conexión de SQL Server.  
  
 Varias llamadas a la <xref:System.Data.SqlClient.SqlDependency.Start%2A> método, se puede realizar las siguientes restricciones:  
  
-   Varias llamadas con parámetros idénticos (la misma cadena de conexión y credenciales de Windows en el subproceso de llamada) son válidas.  
  
-   Varias llamadas con cadenas de conexión diferentes son válidas siempre que:  
  
    -   Cada cadena de conexión especifica una base de datos diferente, o  
  
    -   Cada cadena de conexión especifica un usuario diferente, o  
  
    -   Las llamadas proceden de distintos dominios de aplicación.  
  
 Puede realizar la <xref:System.Data.SqlClient.SqlDependency> funcionan correctamente para las aplicaciones que utilizan varios subprocesos para representar las credenciales de usuario diferente sin tener que proporcionar el rol dbo al grupo, ya que diferentes usuarios pueden suscribirse y escuchar (mediante <xref:System.Web.Caching.SqlCacheDependency> o <xref:System.Data.SqlClient.SqlCommand>) a una cola de notificación creada por un administrador. Cuando se inicia el dominio de aplicación correspondiente, llame a Start con las credenciales (Windows) de un usuario que tenga permiso para inicializar el servicio/cola (los permisos CREATE QUEUE y creación de un servicio para la base de datos). Asegúrese de que el inicio solo se llama una vez por dominio de aplicación, en caso contrario, se produce una excepción de ambigüedad.  El subproceso de usuario debe tener permiso para suscribirse a la notificación (el permiso SUBSCRIBE QUERY NOTIFICATIONS para la base de datos). <xref:System.Data.SqlClient.SqlDependency> se asociará a la solicitud de suscripción de un usuario sin privilegios de administrador a la cola o el servicio creado por el administrador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método inicia el agente de escucha para el <xref:System.AppDomain> para recibir notificaciones de dependencia desde la instancia de SQL Server especificado por el `connectionString` parámetro. Este método puede llamarse varias veces con cadenas de conexión diferentes para varios servidores.  
  
 Para obtener comentarios adicionales, consulte <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter with a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <param name="queue">An existing SQL Server Service Broker queue to be used. If <see langword="null" />, the default queue is used.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método inicia el agente de escucha para el <xref:System.AppDomain> para recibir notificaciones de dependencia desde la instancia de SQL Server especificado por el `connectionString` parámetro. Este método puede llamarse varias veces con cadenas de conexión diferentes para varios servidores.  
  
 Si no se especifica ningún nombre de cola, <xref:System.Data.SqlClient.SqlDependency> crea una cola temporal y el servicio en el servidor que se usa para todo el proceso, incluso si el proceso implica más de uno <xref:System.AppDomain>. La cola y el servicio se quitan automáticamente tras el cierre de la aplicación.  
  
 Para obtener comentarios adicionales, consulte <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter but a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.SqlClient.SqlDependency> agente de escucha se reiniciará cuando se produce un error en la conexión de SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there are is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlDependency.Stop%2A> método debe llamarse para cada <xref:System.Data.SqlClient.SqlDependency.Start%2A> llamar. Un agente de escucha determinado solo se cierra completamente cuando recibe el mismo número de <xref:System.Data.SqlClient.SqlDependency.Stop%2A> solicita como <xref:System.Data.SqlClient.SqlDependency.Start%2A> solicitudes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">An underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <param name="queue">The SQL Server Service Broker queue that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.SqlClient.SqlDependency.Stop%2A> método debe llamarse para cada <xref:System.Data.SqlClient.SqlDependency.Start%2A> llamar. Un agente de escucha determinado solo se cierra completamente cuando recibe el mismo número de <xref:System.Data.SqlClient.SqlDependency.Stop%2A> solicita como <xref:System.Data.SqlClient.SqlDependency.Start%2A> solicitudes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">And underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
  </Members>
</Type>