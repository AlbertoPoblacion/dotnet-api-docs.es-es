<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopy.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac568f7a233c4b460fccda736cf959d4ee579b49a05.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f7a233c4b460fccda736cf959d4ee579b49a05</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Lets you efficiently bulk load a SQL Server table with data from another source.</source>
          <target state="translated">Permite realizar eficazmente la carga masiva de una tabla de SQL Server con datos procedentes de otro origen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Microsoft SQL Server includes a popular command-prompt utility named <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> for moving data from one table to another, whether on a single server or between servers.</source>
          <target state="translated">Microsoft SQL Server incluye una conocida utilidad de línea de comandos denominada <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> para mover datos de una tabla a otra, ya sea en un solo servidor o entre servidores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class lets you write managed code solutions that provide similar functionality.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> clase le permite escribir soluciones de código administrado que ofrecen una funcionalidad similar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>There are other ways to load data into a SQL Server table (INSERT statements, for example), but <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> offers a significant performance advantage over them.</source>
          <target state="translated">Hay otras maneras de cargar datos en una tabla de SQL Server (instrucciones INSERT, por ejemplo), pero <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> ofrece una importante ventaja de rendimiento sobre ellas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class can be used to write data only to SQL Server tables.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> sólo se puede utilizar para escribir datos en tablas SQL Server.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance or read with a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Sin embargo, el origen de datos no se limita a SQL Server; puede utilizarse cualquier origen de datos, siempre y cuando pueden cargarse los datos en un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instancia o leerse con una <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> will fail when bulk loading a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column of type <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> se producirá un error cuando la carga masiva una <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna de tipo <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> en un servidor SQL Server se agrega la columna cuyo tipo es uno de los tipos de fecha y hora en SQL Server 2008.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The following console application demonstrates how to load data using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class.</source>
          <target state="translated">En la siguiente aplicación de consola se demuestra cómo cargar datos mediante la clase <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> se utiliza para copiar los datos de la <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> tabla el <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> base de datos a una tabla similar en la misma base de datos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy operation.</source>
          <target state="translated">Instancia ya abierta de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> que se utilizará para realizar la copia masiva.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Si la cadena de conexión no usa <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, puede usar <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the specified open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> utilizando la instancia abierta especificada de <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Because the connection is already open when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is initialized, the connection remains open after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">Dado que la conexión ya está abierta cuando el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> se inicializa la instancia, la conexión permanece abierta después de la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instancia está cerrada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">`connection`</ph> argument is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Si el <ph id="ph1">`connection`</ph> del argumento es null, un <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos mediante una conexión que ya está abierta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> se utiliza para copiar los datos de la <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> tabla el <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> base de datos a una tabla similar en la misma base de datos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This example is for demonstration purposes only.</source>
          <target state="translated">Este ejemplo solamente sirve de demostración.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>You would not use <ph id="ph1">`SqlBulkCopy`</ph> to move data from one table to another in the same database in a production application.</source>
          <target state="translated">No se usan <ph id="ph1">`SqlBulkCopy`</ph> para mover datos de una tabla a otra en la misma base de datos en una aplicación de producción.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Cadena que define la conexión que se abrirá para que la pueda usar la instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Si la cadena de conexión no usa <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, puede usar <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> o <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> y <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Inicializa y abre una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> basándose en el parámetro <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The constructor uses the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">El constructor utiliza <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> para inicializar una nueva instancia de la clase <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed at the end of the bulk copy operation.</source>
          <target state="translated">La conexión se cierra automáticamente al final de la operación de copia masiva.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Si <ph id="ph1">`connectionString`</ph> es null, un <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is an empty string, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Si <ph id="ph1">`connectionString`</ph> es una cadena vacía, un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The following console application demonstrates how to bulk load data by using a connection specified as a string.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos mediante una conexión especificada como una cadena.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">La conexión se cierra automáticamente cuando el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instancia está cerrada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, primero se leen los datos de origen de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Cadena que define la conexión que se abrirá para que la pueda usar la instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Si la cadena de conexión no usa <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, puede usar <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> o <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> y <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Combinación de valores de la enumeración <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> que determina las filas del origen de datos que se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Inicializa y abre una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> basándose en el parámetro <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The constructor uses that <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">El constructor utiliza esa conexión <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> para inicializar una nueva instancia de la clase <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">La instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se comporta según las opciones proporcionadas en el parámetro <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>You can obtain detailed information about all the bulk copy options in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> topic.</source>
          <target state="translated">Puede obtener información detallada sobre todas las opciones de copia masiva en el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> tema.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo realizar una carga masiva mediante una conexión especificada como una cadena.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An option is set to use the value in the identity column of the source table when you load the destination table.</source>
          <target state="translated">Se establece una opción para usar el valor de la columna de identidad de la tabla de origen al cargar la tabla de destino.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, primero se leen los datos de origen de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The source table and destination table each include an Identity column.</source>
          <target state="translated">La tabla de origen como tabla de destino incluyen una columna de identidad.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>By default, a new value for the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column is generated in the destination table for each row added.</source>
          <target state="translated">De forma predeterminada, un nuevo valor para el <bpt id="p1">**</bpt>identidad<ept id="p1">**</ept> se genera una columna en la tabla de destino para cada fila agregada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, an option is set when the connection is opened that forces the bulk load process to use the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> values from the source table instead.</source>
          <target state="translated">En este ejemplo, se establece una opción cuando se abre la conexión que obliga al proceso de carga masiva a utilizar el <bpt id="p1">**</bpt>identidad<ept id="p1">**</ept> en su lugar, los valores de la tabla de origen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">Para ver cómo la opción cambia la manera las obras de carga masiva, ejecute el ejemplo con el <bpt id="p1">**</bpt>dbo. BulkCopyDemoMatchingColumns<ept id="p1">**</ept> tabla vacía.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>All rows load from the source.</source>
          <target state="translated">Todas las filas que se cargan desde el origen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Then run the sample again without emptying the table.</source>
          <target state="translated">A continuación, ejecute de nuevo el ejemplo sin vaciar la tabla.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</source>
          <target state="translated">Se produce una excepción y el código escribe un mensaje en la consola le notifica que no se han agregado filas debido a infracciones de restricción de clave principal.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy.</source>
          <target state="translated">Instancia ya abierta de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> que se utilizará para realizar la copia masiva.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Si la cadena de conexión no usa <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, puede usar <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para pasar el identificador de usuario y la contraseña de forma más segura que si especifica el identificador de usuario y la contraseña como texto en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Combinación de valores de la enumeración <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> que determina las filas del origen de datos que se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>An existing <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> instance under which the bulk copy will occur.</source>
          <target state="translated">Instancia existente de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> en la que se va a realizar la copia masiva.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the supplied existing open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> utilizando la instancia abierta proporcionada de <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">La instancia de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se comporta según las opciones proporcionadas en el parámetro <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If a non-null <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> is supplied, the copy operations will be performed within that transaction.</source>
          <target state="translated">Si se proporciona una transacción <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> no nula, las operaciones de copia se realizarán dentro de esa transacción.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If options include <ph id="ph1">`UseInternalTransaction`</ph> and the <ph id="ph2">`externalTransaction`</ph> argument is not null, an <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> is thrown.</source>
          <target state="translated">Si las opciones incluyen <ph id="ph1">`UseInternalTransaction`</ph> y <ph id="ph2">`externalTransaction`</ph> argumento no es null, un <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> se produce.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>For examples demonstrating how to use <ph id="ph1">`SqlBulkCopy`</ph> in a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Para obtener ejemplos que muestran cómo usar <ph id="ph1">`SqlBulkCopy`</ph> en una transacción, vea <bpt id="p1">[</bpt>transacciones y operaciones de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Number of rows in each batch.</source>
          <target state="translated">Número de filas de cada lote.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>At the end of each batch, the rows in the batch are sent to the server.</source>
          <target state="translated">Al final de cada lote, las filas del lote se envían al servidor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> property, or zero if no value has been set.</source>
          <target state="translated">Valor entero de la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> o cero si no se ha establecido ningún valor.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>A batch is complete when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows have been processed or there are no more rows to send to the destination data source.</source>
          <target state="translated">Un lote estará completo cuando <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> filas se han procesado o no haya más filas para enviar al origen de datos de destino.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Zero (the default) indicates that each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is a single batch.</source>
          <target state="translated">Cero (el valor predeterminado) indica que cada <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operación es un lote único.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance has been declared without the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> option in effect, rows are sent to the server <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows at a time, but no transaction-related action is taken.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instancia se ha declarado sin el <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> opción en la práctica, las filas se envían al servidor <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> filas en un momento, pero ninguna acción relacionada con la transacción se realiza.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is in effect, each batch of rows is inserted as a separate transaction.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> está en vigor, cada lote de filas se inserta como una transacción independiente.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> property can be set at any time.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> propiedad puede establecerse en cualquier momento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</source>
          <target state="translated">Si una copia masiva ya está en curso, el lote actual tiene un tamaño según el tamaño del lote anterior.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Subsequent batches use the new size.</source>
          <target state="translated">Los lotes subsiguientes utilizan el nuevo tamaño.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> is initially zero and changed while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is already in progress, that operation loads the data as a single batch.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> inicialmente es cero o que han cambiado durante una <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operación ya está en curso, que la operación de carga los datos como un único lote.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Any subsequent <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operations on the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance use the new <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">Las subsiguientes <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operaciones en la misma <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> utilizar la nueva instancia <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The following console application demonstrates how to bulk load data in batches of 50 rows.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos en lotes de 50 filas.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>For an example illustrating how <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> works with a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Para un ejemplo que ilustra cómo <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> con una transacción, vea <bpt id="p1">[</bpt>transacciones y operaciones de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, primero se leen los datos de origen de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>Number of seconds for the operation to complete before it times out.</source>
          <target state="translated">Número de segundos para que la operación se complete antes de que se agote el tiempo de espera.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> property.</source>
          <target state="translated">El valor entero de la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">El valor predeterminado es 30 segundos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>A value of 0 indicates no limit; the bulk copy will wait indefinitely.</source>
          <target state="translated">Un valor de 0 indica sin límite; la copia masiva esperará indefinidamente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</source>
          <target state="translated">Si la operación tiene tiempo de espera, no se confirma la transacción y se quitan todas las filas copiadas de la tabla de destino.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</source>
          <target state="translated">La siguiente aplicación de consola demuestra cómo modificar el tiempo de espera de 60 segundos de forma masiva al cargar los datos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>In this example, the source data is first read from a <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> table to a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, primero se leen los datos de origen de un <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> tabla a un <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The source data does not have to be located on <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; you can use any data source that can be read to an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Los datos de origen no tienen que estar ubicado en <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the source and destination tables are in the same <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> instance, it is easier and faster to use a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph3">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> instancia, que es más fácil y rápido usar una <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> <ph id="ph3">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Cierra la instancia <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>After you call a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object, no other operation will succeed.</source>
          <target state="translated">Después de llamar a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> en la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> del objeto, ninguna otra operación se realizará correctamente.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Llamadas a la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> método producirá una <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method from the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> to be thrown.</source>
          <target state="translated">Llamar a la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> método desde el <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> evento hace una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> que se produzca.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Note that open <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instances are closed implicitly at the end of a <ph id="ph2">`using`</ph> block.</source>
          <target state="translated">Tenga en cuenta que abra <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instancias se cierran implícitamente al final de una <ph id="ph2">`using`</ph> bloque.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The following example uses the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to add sales orders and their associated details to two destination tables.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la misma <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instancia para agregar pedidos de ventas y la información asociada a dos tablas de destino.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Because the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</source>
          <target state="translated">Dado que la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> tablas de pedido de ventas son grandes, el ejemplo lee sólo los pedidos realizados por un determinado número de cuenta y los pedidos y detalles de la copia de forma masiva a las tablas de destino.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method is used only after both bulk copy operations are complete.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> se utiliza el método solo cuando ambas operaciones de copia masiva se completen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> devuelve una colección de elementos.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Column mappings define the relationships between columns in the data source and columns in the destination.</source>
          <target state="translated">Las asignaciones de columnas definen las relaciones entre las columnas del origen de datos y las columnas del destino.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>A collection of column mappings.</source>
          <target state="translated">Colección de asignaciones de columna.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>By default, it is an empty collection.</source>
          <target state="translated">De manera predeterminada, es una colección vacía.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is unnecessary.</source>
          <target state="translated">Si el origen de datos y la tabla de destino tienen el mismo número de columnas y la posición ordinal de cada columna de origen dentro del origen de datos coincide con la posición ordinal de la columna de destino correspondiente, la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> colección no es necesario.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>However, if the column counts differ, or the ordinal positions are not consistent, you must use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> to make sure that data is copied into the correct columns.</source>
          <target state="translated">Sin embargo, si difieren de los recuentos de columna, o las posiciones ordinales no son coherentes, deberá usar <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> para asegurarse de que los datos se copian en las columnas correctas.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</source>
          <target state="translated">Durante la ejecución de una operación de copia masiva, puede tener acceso a esta colección, pero no se puede cambiar.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Any attempt to change it will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Cualquier intento de cambiarla producirá una <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>Name of the destination table on the server.</source>
          <target state="translated">Nombre de la tabla de destino en el servidor.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The string value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property, or null if none as been supplied.</source>
          <target state="translated">El valor de cadena de la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> o null si no se ha proporcionado ningún valor.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> has not been set when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> is called, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> no se estableció cuando <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> se llama, un <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is modified while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is running, the change does not affect the current operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> se modifica mientras un <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> se está ejecutando la operación, el cambio no afecta a la operación actual.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> value is used the next time a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called.</source>
          <target state="translated">El nuevo <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> valor se utiliza la próxima vez que un <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is a three-part name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> es un nombre de tres partes (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can qualify the table name with its database and owning schema if you choose.</source>
          <target state="translated">Puede calificar el nombre de tabla con su base de datos y esquema propietario si elige.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</source>
          <target state="translated">Sin embargo, si el nombre de tabla usa un carácter de subrayado ("_") o cualquier otro carácter especial, se debe omitir el nombre entre corchetes, como en (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>For more information, see "Identifiers" in SQL Server Books Online.</source>
          <target state="translated">Para obtener más información, vea "Identificadores" en los libros en pantalla de SQL Server.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can bulk-copy data to a temporary table by using a value such as <ph id="ph1">`tempdb..#table`</ph> or <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> property.</source>
          <target state="translated">Puede datos de copia masiva en una tabla temporal con un valor como <ph id="ph1">`tempdb..#table`</ph> o <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> para el <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos mediante una conexión que ya está abierta.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">La tabla de destino es una tabla en la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> base de datos.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, la conexión en primer lugar se utiliza para leer datos de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>Enables or disables a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object to stream data from an <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object</source>
          <target state="translated">Habilita o deshabilita un objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> para transmitir datos de un objeto <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object can stream data from an <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un objeto <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> puede transmitir datos desde un objeto <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>; en caso contrario, false.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> reads from an <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> object using <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizing memory usage by using the <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> streaming capabilities.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> es <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> lee desde un <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> objeto mediante la <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizar el uso de memoria utilizando la <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> capacidades de transmisión.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When it’s set to false, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class loads all the data returned by the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object into memory before sending it to <ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or SQL Azure.</source>
          <target state="translated">Cuando se establece en false, el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> clase carga todos los datos devueltos por la <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> objeto en la memoria antes de enviarlo a <ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> o SQL Azure.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Defines the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Define el número de filas que se deben procesar antes de generar un evento de notificación.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property, or zero if the property has not been set.</source>
          <target state="translated">El valor entero de la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> o cero si no se ha establecido ningún valor para la propiedad.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This property is designed for user interface components that illustrate the progress of a bulk copy operation.</source>
          <target state="translated">Esta propiedad está diseñada para componentes de la interfaz de usuario que muestran el progreso de una operación de copia masiva.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>It indicates the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Indica el número de filas que se va a procesar antes de generar un evento de notificación.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property can be set at any time, even while a bulk copy operation is underway.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propiedad puede establecerse en cualquier momento, incluso mientras una operación de copia masiva se realiza.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Changes made during a bulk copy operation take effect after the next notification.</source>
          <target state="translated">Los cambios realizados durante una operación de copia masiva surten efecto después de la siguiente notificación.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The new setting applies to all subsequent operations on the same instance.</source>
          <target state="translated">La nueva configuración se aplica a todas las operaciones subsiguientes en la misma instancia.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> is set to a number less than zero, an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> está establecido en un número menor que cero, una <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos mediante una conexión que ya está abierta.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propiedad se establece para que se llama al controlador de eventos una vez cada 50 filas se copian en la tabla.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, la conexión en primer lugar se utiliza para leer datos de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Then a second connection is opened to bulk copy the data.</source>
          <target state="translated">A continuación, se abre una segunda conexión para copiar los datos de forma masiva.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Occurs every time that the number of rows specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property have been processed.</source>
          <target state="translated">Se produce cada vez que se ha procesado el número de filas especificado por la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the settings of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> are independent.</source>
          <target state="translated">Tenga en cuenta que la configuración de <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> son independientes.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Receipt of a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event does not imply that any rows have been sent to the server or committed.</source>
          <target state="translated">Recepción de un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> eventos no implican que todas las filas se han enviado al servidor o confirmado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>You cannot call SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) or SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) from this event.</source>
          <target state="translated">No se puede llamar a SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) o SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) de este evento.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Doing this will cause an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state will not change.</source>
          <target state="translated">Si lo hace esto hará que un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> que se producen y el <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> no se cambiará el estado del objeto.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the user wants to cancel the operation from the event, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> can be used.</source>
          <target state="translated">Si el usuario desea cancelar la operación desde el evento, el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> puede utilizarse.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>(See <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> for examples that use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property.)</source>
          <target state="translated">(Consulte <bpt id="p1">[</bpt>transacciones y operaciones de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> para obtener ejemplos que utilizan el <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> propiedad.)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event.</source>
          <target state="translated">Ninguna acción, como la actividad de transacciones, se admite en la conexión durante la ejecución de la operación de copia masiva, y se recomienda que no usan la misma conexión que se usa durante la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>However, you can open a different connection.</source>
          <target state="translated">Sin embargo, puede abrir otra conexión.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos mediante una conexión que ya está abierta.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propiedad se establece para que se llama al controlador de eventos una vez cada 50 filas se copian en la tabla.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">En este ejemplo, la conexión en primer lugar se utiliza para leer datos de una tabla de SQL Server a un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que los datos de origen no tienen que estar ubicado en SQL Server; Puede utilizar cualquier origen de datos que se pueden leer a una <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> o cargados para un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Libera todos los recursos usados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">`Dispose`</ph> cuando haya terminado de usar <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> in an unusable state.</source>
          <target state="translated">El método <ph id="ph1">`Dispose`</ph> deja el <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> en un estado no utilizable.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> was occupying.</source>
          <target state="translated">Después de llamar a <ph id="ph1">`Dispose`</ph>, debe liberar todas las referencias a la <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> estaba ocupando.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>implementa un método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Realice siempre una llamada a <ph id="ph1">`Dispose`</ph> antes de liberar la última referencia al objeto <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> del objeto <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Copies all rows from a data source to a destination table specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas las filas de un origen de datos a una tabla de destino especificada por la propiedad <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Si los conjuntos de resultados activos múltiples (MARS) está deshabilitado, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> realiza la conexión ocupado.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Si MARS está habilitado, se pueden intercalar las llamadas a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> con otros comandos en la misma conexión.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas las filas de la matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> proporcionada a una tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que se va a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas las filas de la matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> proporcionada a una tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Mientras la operación de copia masiva está en curso, el destino asociado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado dándole servicio y no se puede realizar ninguna otra operación en la conexión.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columns to the destination database table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> colección se asigna desde el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columnas a la tabla de base de datos de destino.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos desde un <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> matriz.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">La tabla de destino es una tabla en la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> base de datos.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> se crea en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>A single row is selected from the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to copy to the destination table.</source>
          <target state="translated">Se selecciona una única fila de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> para copiar en la tabla de destino.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas las filas de la <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> proporcionada a una tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>All rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> are copied to the destination table except those that have been deleted.</source>
          <target state="translated">Todas las filas de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> se copian en la tabla de destino excepto aquellos que se han eliminado.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Mientras la operación de copia masiva está en curso, el destino asociado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado dándole servicio y no se puede realizar ninguna otra operación en la conexión.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> colección se asigna desde el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columnas a la tabla de base de datos de destino.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The following Console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos desde un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">La tabla de destino es una tabla en la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> base de datos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and is the source of the <ph id="ph2">`SqlBulkCopy`</ph> operation.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> se crea en tiempo de ejecución y es el origen de la <ph id="ph2">`SqlBulkCopy`</ph> operación.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas las filas de la <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> proporcionada a una tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The copy operation starts at the next available row in the reader.</source>
          <target state="translated">La operación de copia se inicia en la siguiente fila disponible en el lector.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Most of the time, the reader was just returned by <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> or a similar call, so the next available row is the first row.</source>
          <target state="translated">La mayoría de los casos, el lector simplemente devolvió <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> o una llamada similar, por lo que la siguiente fila disponible es la primera fila.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>To process multiple results, call <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> on the data reader and call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> again.</source>
          <target state="translated">Para procesar varios resultados, llame a <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> en el lector de datos y llamar a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> nuevo.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Note that using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifies the state of the reader.</source>
          <target state="translated">Tenga en cuenta que el uso <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifica el estado del lector.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The method will call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> until it returns false, the operation is aborted, or an error occurs.</source>
          <target state="translated">El método llamará <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> hasta que devuelve false, se anula la operación o se produce un error.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This means that the data reader will be in a different state, probably at the end of the result set, when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is complete.</source>
          <target state="translated">Esto significa que el lector de datos estará en un estado diferente, probablemente al final del conjunto de resultados, cuando la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operación es completa.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Mientras la operación de copia masiva está en curso, el destino asociado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado dándole servicio y no se puede realizar ninguna otra operación en la conexión.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the data reader columns to the destination database table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> colección asigna de los datos de las columnas de lectura en la tabla de base de datos de destino.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo cargar masivamente datos desde un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">La tabla de destino es una tabla en la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> base de datos.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Un valor de la enumeración <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Solo se copian en el destino las filas que coinciden con el estado de la fila.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Copies only rows that match the supplied row state in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia sólo las filas que coinciden con el estado de fila proporcionado en la <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> proporcionada a una tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that are in the states indicated in the <ph id="ph2">`rowState`</ph> argument and have not been deleted are copied to the destination table.</source>
          <target state="translated">Solo las filas de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que se encuentran en los Estados que se indica en la <ph id="ph2">`rowState`</ph> argumento y no se han eliminado se copian en la tabla de destino.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> is specified, any <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> rows will also be copied to the server.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> se especifica, cualquier <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, y <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> filas se copiarán al servidor.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>No exception will be raised.</source>
          <target state="translated">No se generará ninguna excepción.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Mientras la operación de copia masiva está en curso, el destino asociado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado dándole servicio y no se puede realizar ninguna otra operación en la conexión.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> colección se asigna desde el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columnas a la tabla de base de datos de destino.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The following Console application demonstrates how to bulk load only the rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that match a specified state.</source>
          <target state="translated">La siguiente aplicación de consola muestra cómo masiva cargar solamente las filas en un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que coinciden con un estado especificado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this case, only unchanged rows are added.</source>
          <target state="translated">En este caso, se agregan sólo las filas sin cambios.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">La tabla de destino es una tabla en la <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> base de datos.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and three rows are added to it.</source>
          <target state="translated">En este ejemplo, un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> se crea en tiempo de ejecución y tres filas se agregan a él.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Before the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is executed, one of the rows is edited.</source>
          <target state="translated">Antes de la <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> se ejecuta el método, una de las filas se edita.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called with a <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argument, so only the two unchanged rows are bulk copied to the destination.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> método se llama con un <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argumento, por lo que solo las dos filas sin cambios están copiado masivamente en el destino.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este ejemplo no se ejecutará a menos que haya creado las tablas de trabajo como se describe en <bpt id="p1">[</bpt>configuración de ejemplo de copia masiva<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Este código se proporciona para mostrar la sintaxis para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> solo.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Si las tablas de origen y destino están en la misma instancia de SQL Server, resulta más fácil y rápido usar Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrucción que se va a copiar los datos.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, which copies all rows from a data source to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph> que copia todas las filas de un origen de datos en la tabla de destino especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Si los conjuntos de resultados activos múltiples (MARS) está deshabilitado, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> realiza la conexión ocupado.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Si MARS está habilitado, se pueden intercalar las llamadas a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> con otros comandos en la misma conexión.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The number of rows that are rolled back when one fails depends on several things:</source>
          <target state="translated">El número de filas que se revierte cuando se produce un error depende de varios aspectos:</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is specified.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If you have your own transaction.</source>
          <target state="translated">Si tiene su propia transacción.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>When there is an error while sending data to the server, the current batch (as specified by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) will be rolled back.</source>
          <target state="translated">Cuando se produce un error al enviar datos al servidor, el lote actual (tal y como especifica <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) se revertirá.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> no se ha especificado y tiene su propia transacción, toda la transacción se revertirá (que incluye todos los lotes anteriores).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> to know how many rows were copied to the server.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> saber cuántas filas se copiaron en el servidor.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> que copia todas las finales de la matriz de <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que se va a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> que copia todas las finales de la matriz de <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> que copia todas las finales en la <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> que copia todas las finales en la <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> se cerró antes de que volviera la <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> completada.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">La conexión asociada de <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> se cerró antes de que volviera la <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> completada.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Instrucción de cancelación.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</source>
          <target state="translated">Un valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> en este parámetro hace que este método sea equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> que copia todas las finales de la matriz de <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que se va a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Instrucción de cancelación.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Un valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> en este parámetro hace que este método sea equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> que copia todas las finales de la matriz de <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Token de cancelación que se puede usar para solicitar que se abandone la operación antes de que transcurra el tiempo de espera del comando.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Las excepciones se mostrarán a través del objeto de tarea devuelto.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Un valor de la enumeración <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Solo se copian en el destino las filas que coinciden con el estado de la fila.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> que copia solamente filas que coinciden con el estado de fila proporcionado en la tabla de <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Instrucción de cancelación.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Un valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> en este parámetro hace que este método sea equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> que copia todas las finales en la <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Token de cancelación que se puede usar para solicitar que se abandone la operación antes de que transcurra el tiempo de espera del comando.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Las excepciones se mostrarán a través del objeto de tarea devuelto.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Instrucción de cancelación.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Un valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> en este parámetro hace que este método sea equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> que copia todas las finales en la <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Token de cancelación que se puede usar para solicitar que se abandone la operación antes de que transcurra el tiempo de espera del comando.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Las excepciones se mostrarán a través del objeto de tarea devuelto.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> se cerró antes de que volviera la <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> completada.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">La conexión asociada de <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> se cerró antes de que volviera la <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> completada.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cuyas filas se van a copiar a la tabla de destino.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Un valor de la enumeración <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Solo se copian en el destino las filas que coinciden con el estado de la fila.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Instrucción de cancelación.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Un valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> en este parámetro hace que este método sea equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Versión asincrónica de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> que copia solamente filas que coinciden con el estado de fila proporcionado en la tabla de <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> suministrada a una tabla de destino que especifica la propiedad <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> del objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Token de cancelación que se puede usar para solicitar que se abandone la operación antes de que transcurra el tiempo de espera del comando.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Las excepciones se mostrarán a través del objeto de tarea devuelto.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la programación asincrónica en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> proveedor de datos para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programación asincrónica<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> varias veces para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Llamar a <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> y a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> para la misma instancia antes de la finalización de la tarea.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">La conexión se interrumpe o se cierra durante la ejecución de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se cerró durante la ejecución del método.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Devuelto en el objeto de tarea, hubo un tiempo de espera de agrupación de conexiones.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Se devuelve en el objeto Task; el objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se cierra antes de la ejecución del método.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> se especifica en la cadena de conexión.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Se devuelve en el objeto Task; cualquier error devuelto por <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que se produjo al abrir la conexión.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>