<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ac639919ee79ffda2953f4722c072b9004a5075" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65155893" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una propiedad y un método para obtener acceso a los puertos serie del equipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports` objeto proporciona un punto de entrada sencillo para tener acceso a la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] clase de puerto serie <xref:System.IO.Ports.SerialPort>.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports` objeto.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena a un puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|Mostrar los puertos serie disponibles|[Cómo: Mostrar los puertos serie disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Procedimiento para mostrar los puertos serie disponibles en Visual Basic</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatorio. Nombre del puerto para abrir.</param>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
        <returns>Una apertura <see cref="T:System.IO.Ports.SerialPort" /> objeto, configurado con los argumentos proporcionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.OpenSerialPort` método crea y abre un <xref:System.IO.Ports.SerialPort> objeto. Los argumentos para el `OpenSerialPort` método para determinar la configuración de la <xref:System.IO.Ports.SerialPort> objeto.  
  
 El código debe cerrar la <xref:System.IO.Ports.SerialPort> objeto cuando haya finalizado con el objeto. Puede usar el <xref:System.IO.Ports.SerialPort.Close%2A> método para cerrar explícitamente el objeto o el `Using` instrucción para cerrarlo implícitamente. Vea el ejemplo de este tema para obtener más información.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports.OpenSerialPort` método.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena al puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatorio. Nombre del puerto para abrir.</param>
        <param name="baudRate"><see langword="Integer" />. Velocidad en baudios del puerto.</param>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
        <returns>Una apertura <see cref="T:System.IO.Ports.SerialPort" /> objeto, configurado con los argumentos proporcionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.OpenSerialPort` método crea y abre un <xref:System.IO.Ports.SerialPort> objeto. Los argumentos para el `OpenSerialPort` método para determinar la configuración de la <xref:System.IO.Ports.SerialPort> objeto.  
  
 El código debe cerrar la <xref:System.IO.Ports.SerialPort> objeto cuando haya finalizado con el objeto. Puede usar el <xref:System.IO.Ports.SerialPort.Close%2A> método para cerrar explícitamente el objeto o el `Using` instrucción para cerrarlo implícitamente. Vea el ejemplo de este tema para obtener más información.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports.OpenSerialPort` método.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena al puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> es menor o igual que cero.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatorio. Nombre del puerto para abrir.</param>
        <param name="baudRate"><see langword="Integer" />. Velocidad en baudios del puerto.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.</param>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
        <returns>Una apertura <see cref="T:System.IO.Ports.SerialPort" /> objeto, configurado con los argumentos proporcionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.OpenSerialPort` método crea y abre un <xref:System.IO.Ports.SerialPort> objeto. Los argumentos para el `OpenSerialPort` método para determinar la configuración de la <xref:System.IO.Ports.SerialPort> objeto.  
  
 El código debe cerrar la <xref:System.IO.Ports.SerialPort> objeto cuando haya finalizado con el objeto. Puede usar el <xref:System.IO.Ports.SerialPort.Close%2A> método para cerrar explícitamente el objeto o el `Using` instrucción para cerrarlo implícitamente. Vea el ejemplo de este tema para obtener más información.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports.OpenSerialPort` método.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena al puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> no es uno de los <see cref="T:System.IO.Ports.Parity" /> valores de enumeración.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataBits" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatorio. Nombre del puerto para abrir.</param>
        <param name="baudRate"><see langword="Integer" />. Velocidad en baudios del puerto.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.</param>
        <param name="dataBits"><see langword="Integer" />. Configuración de bits de datos del puerto.</param>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
        <returns>Una apertura <see cref="T:System.IO.Ports.SerialPort" /> objeto, configurado con los argumentos proporcionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.OpenSerialPort` método crea y abre un <xref:System.IO.Ports.SerialPort> objeto. Los argumentos para el `OpenSerialPort` método para determinar la configuración de la <xref:System.IO.Ports.SerialPort> objeto.  
  
 El código debe cerrar la <xref:System.IO.Ports.SerialPort> objeto cuando haya finalizado con el objeto. Puede usar el <xref:System.IO.Ports.SerialPort.Close%2A> método para cerrar explícitamente el objeto o el `Using` instrucción para cerrarlo implícitamente. Vea el ejemplo de este tema para obtener más información.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports.OpenSerialPort` método.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena al puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> no es uno de los <see cref="T:System.IO.Ports.Parity" /> valores de enumeración.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataBits" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatorio. Nombre del puerto para abrir.</param>
        <param name="baudRate"><see langword="Integer" />. Velocidad en baudios del puerto.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Paridad del puerto.</param>
        <param name="dataBits"><see langword="Integer" />. Configuración de bits de datos del puerto.</param>
        <param name="stopBits"><see cref="T:System.IO.Ports.StopBits" />. Configuración de bits de parada del puerto.</param>
        <summary>Crea y abre un <see cref="T:System.IO.Ports.SerialPort" /> objeto.</summary>
        <returns>Una apertura <see cref="T:System.IO.Ports.SerialPort" /> objeto, configurado con los argumentos proporcionados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.OpenSerialPort` método crea y abre un <xref:System.IO.Ports.SerialPort> objeto. Los argumentos para el `OpenSerialPort` método para determinar la configuración de la <xref:System.IO.Ports.SerialPort> objeto.  
  
 El código debe cerrar la <xref:System.IO.Ports.SerialPort> objeto cuando haya finalizado con el objeto. Puede usar el <xref:System.IO.Ports.SerialPort.Close%2A> método para cerrar explícitamente el objeto o el `Using` instrucción para cerrarlo implícitamente. Vea el ejemplo de este tema para obtener más información.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Ports.OpenSerialPort` método.  
  
|En|Vea|  
|-|-|  
|Marcar un módem conectado a un puerto serie|[Cómo: Marcar a través de módems conectados a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Enviar una cadena al puerto serie|[Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recibir cadenas de un puerto serie|[Cómo: Recibir cadenas de puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 En este ejemplo se describe cómo enviar cadenas a del equipo `COM1` puerto serie.  
  
 El bloque `Using` permite a la aplicación cerrar el puerto serie aun cuando se genere una excepción. Todo el código que manipula el puerto serie debe aparecer dentro de este bloque o dentro un `Try...Catch...Finally` bloque con una llamada a usar el <xref:System.IO.Ports.SerialPort.Close%2A> método.  
  
 El método <xref:System.IO.Ports.SerialPort.WriteLine%2A> envía los datos al puerto serie.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Para obtener más información, vea [Cómo: Enviar cadenas a puertos serie](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> es menor o igual que cero.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="stopBits" /> no es uno de los <see cref="T:System.IO.Ports.StopBits" /> valores de enumeración.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procedimiento para marcar a través de módems conectados a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procedimiento para enviar cadenas a puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procedimiento para recibir cadenas de puertos serie en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de los nombres de los puertos serie en el equipo.</summary>
        <value>Una colección de los nombres de los puertos serie en el equipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Computer.Ports.SerialPortNames` propiedad obtiene una colección de los nombres de los puertos serie en el equipo.  
  
> [!NOTE]
>  Los nombres de puerto devueltos por `My.Computer.Ports.SerialPortNames` pueden ser incorrectos cuando la ejecución se realiza en Windows 98. Para evitar errores de aplicación, use el control de excepciones, como las instrucciones `Try...Catch...Finally` o `Using`, al usar los nombres de puerto para abrir puertos.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Ports.SerialPortNames` propiedad.  
  
|En|Vea|  
|-|-|  
|Mostrar los puertos serie disponibles|[Cómo: Mostrar los puertos serie disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|-|-|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|No|  
|Servicio de Windows|**Sí**|  
|Sitio web|No|  
  
   
  
## Examples  
 Este ejemplo recorre todas las cadenas que devuelve la propiedad `My.Computer.Ports.SerialPortNames`. Estas cadenas son los nombres de los puertos serie disponibles en el equipo.  
  
 Normalmente, los usuarios seleccionan el puerto serie que la aplicación debe usar en la lista de puertos disponibles. En este ejemplo, los nombres de los puertos serie se almacenan en un control <xref:System.Windows.Forms.ListBox>. Para obtener más información, consulte [ListBox Control](~/docs/framework/winforms/controls/listbox-control-windows-forms.md) (Control ListBox).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 Para este ejemplo se necesita:  
  
-   Una referencia al espacio de nombres <xref:System?displayProperty=nameWithType>.  
  
-   Que su formulario tenga un control <xref:System.Windows.Forms.ListBox> denominado `ListBox1`.  
  
 Para obtener más información, vea [Cómo: Mostrar los puertos serie disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Procedimiento para mostrar los puertos serie disponibles en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">Instrucción Try...Catch...Finally (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using (Instrucción, Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>