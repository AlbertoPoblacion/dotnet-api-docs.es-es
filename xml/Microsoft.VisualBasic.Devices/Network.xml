<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3619962a6e80c25e328becdf9edd22f9ce005d08" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135828" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una propiedad, evento y métodos para interactuar con la red al que está conectado el equipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Network` objeto.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Comprobar el estado de conexión|[Cómo: Comprobar el estado de conexión](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ya existe el archivo de destino, el `DownloadFile` método no sobrescribirá el archivo existente. Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para indicar que se sobrescriba los archivos existentes, proporcionar credenciales de usuario, o especifique un valor de tiempo de espera específico.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ya existe el archivo de destino, el `DownloadFile` método no sobrescribirá el archivo existente. Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para indicar que se sobrescriba los archivos existentes, proporcionar credenciales de usuario, o especifique un valor de tiempo de espera específico. `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ya existe el archivo de destino, el `DownloadFile` método no sobrescribirá el archivo existente. Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para indicar que se sobrescriba los archivos existentes o especificar un valor de tiempo de espera concreto.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ya existe el archivo de destino, el `DownloadFile` método no sobrescribirá el archivo existente. Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para indicar que se sobrescriba los archivos existentes o especificar un valor de tiempo de espera concreto.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> o <see cref="T:System.Uri" />. Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName"><see langword="String" />. Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. Credenciales que se proporcione.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="networkCredentials">Credenciales que se proporcione.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="onUserCancel">Especifica el comportamiento que se produce cuando el usuario hace clic en **Cancelar** o en **No** en el cuadro de diálogo que se muestra cuando el valor de <paramref name="showUI" /> se establece en <see langword="True" />. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="onUserCancel">Especifica el comportamiento que se produce cuando el usuario hace clic en **Cancelar** o en **No** en el cuadro de diálogo que se muestra cuando el valor de <c>ShowUI</c> se establece en <see langword="True" />. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Ruta de acceso del archivo para descargar, incluidos la dirección del host y de nombre de archivo.</param>
        <param name="destinationFileName">Nombre de archivo y ruta de acceso del archivo descargado.</param>
        <param name="userName">Nombre de usuario para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="password">Contraseña para autenticar. Una cadena vacía, el valor predeterminado es "".</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera, en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para sobrescribir archivos existentes; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="onUserCancel">Especifica el comportamiento que se produce cuando el usuario hace clic en **Cancelar** o en **No** en el cuadro de diálogo que se muestra cuando el valor de <c>ShowUI</c> se establece en <see langword="True" />. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Descarga el archivo remoto especificado y lo guarda en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, aparece un cuadro de diálogo que muestra el progreso de la operación; el cuadro de diálogo contiene un **cancelar** botón que puede utilizarse para cancelar la operación. El cuadro de diálogo no es modal y, por lo tanto, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro de lo especificado `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `DownloadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El `DownloadFile` método no envía encabezados HTTP opcionales. Algunos servidores pueden devolver 500 (Error interno del servidor) si falta el encabezado de agente de usuario opcional. Para enviar encabezados opcionales, debe construir una solicitud mediante la <xref:System.Net.WebClient> clase.  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.DownloadFile` método.  
  
|En|Vea|  
|-|-|  
|Descargar un archivo|[Cómo: Descargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este ejemplo descarga el archivo `WineList.txt` desde `http://www.cohowinery.com/downloads` y lo guarda en `C:\Documents and Settings\All Users\Documents`, especificando un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> finaliza con una barra diagonal final.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> se establece en <see langword="False" /> y el archivo de destino ya existe.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si un equipo está conectado a una red.</summary>
        <value><see langword="True" /> Si el equipo está conectado a una red. en caso contrario <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` siempre devuelve `False` cuando se llama desde un `Click Once` aplicación o si el usuario no tiene <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Network.IsAvailable` propiedad.  
  
|En|Vea|  
|-|-|  
|Comprobar si un equipo está conectado a una red|[Cómo: Comprobar el estado de conexión](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 En este ejemplo se comprueba el estado de la propiedad y se lo notifica.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia la disponibilidad de la red.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación provoca la `NetworkAvailabilityChanged` evento cada vez que cambia la disponibilidad de la red. Puede usar el <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> propiedad de la `e` para obtener el nuevo estado de la conexión de red. Para obtener el estado actual de la conexión de red, use el <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propiedad.  
  
 En una aplicación Windows Forms, este evento se genera en el subproceso principal de la aplicación con los otros eventos de interfaz de usuario. Esto permite que el controlador de eventos obtener acceso a la interfaz de usuario de la aplicación directamente. Sin embargo, si la aplicación está ocupada con otro evento de interfaz de usuario cuando se genera este evento, este evento no se puede procesar hasta que el otro controlador de eventos finaliza o se llama a la <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> método.  
  
 No puede usar el `Handles` instrucción para controlar la `NetworkAvailabilityChanged` evento; se debe utilizar el `AddHandler` instrucción.  
  
 En las aplicaciones de Windows Forms, el `MyApplication` objeto expone un `NetworkAvailabilityChanged` eventos que proporciona la misma funcionalidad que este evento, pero pueden controlar con el `Handles` instrucción.  
  
> [!NOTE]
>  Muchos de los concentradores de red proporcionan una conexión de red, incluso si el concentrador se desconecta de una red más grande. Por lo tanto, para las conexiones con cable, este evento indica un cambio en la conexión entre el equipo y un concentrador.  
  
> [!NOTE]
>  El `NetworkAvailabilityChanged` evento no se produce por las aplicaciones que se ejecutan en Windows 95 y Windows 98 o las aplicaciones que se ejecutan en Windows 2000 por un usuario no administrador. Si se puede ejecutar la aplicación en estas plataformas, utilice el <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propiedad.  
  
   
  
## Examples  
 Este ejemplo se usa el `My.Computer.Network.NetworkAvailabilityChanged` eventos para actualizar la interfaz de usuario de un formulario o control.  
  
 Este código debe para estar en un formulario o control que tiene un <xref:System.Windows.Forms.Label> denominado `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Hace ping en el servidor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">La dirección URL, nombre de equipo o número IP del servidor para hacer ping.</param>
        <summary>Hace ping en el servidor especificado.</summary>
        <returns><see langword="True" /> si el resultado de la operación es correcto; en el caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Ping` método no es un método a prueba de errores para determinar la disponibilidad de un equipo remoto: el puerto ping del equipo de destino puede desactivarse o la solicitud de ping puede estar bloqueada por un firewall o enrutador.  
  
 La dirección se pasa a la `Ping` método debe poder resolverse mediante DNS y no puede ir precedido por 'http://'.  
  
   
  
## Examples  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelve del método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Reemplace `"198.01.01.01"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelto del método `True` y especifica un intervalo de tiempo de espera de 1000 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Reemplace `"www.cohowinery.com"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ninguna conexión de red está disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Dirección URL no era válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describe un conjunto de permisos de seguridad aplicados al código. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla los derechos para realizar o Aceptar conexiones en una dirección de transporte. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla el acceso a un componente de contador de rendimiento de Windows NT. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla el acceso a información de red y las estadísticas de tráfico para el equipo local. Enumeración asociada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">El URI del servidor para hacer ping.</param>
        <summary>Hace ping en el servidor especificado.</summary>
        <returns><see langword="True" /> si el resultado de la operación es correcto; en el caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Ping` método no es un método a prueba de errores para determinar la disponibilidad de un equipo remoto: el puerto ping del equipo de destino puede desactivarse o la solicitud de ping puede estar bloqueada por un firewall o enrutador.  
  
 La dirección se pasa a la `Ping` método debe poder resolverse mediante DNS y no puede ir precedido por 'http://'.  
  
   
  
## Examples  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelve del método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Reemplace `"198.01.01.01"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelto del método `True` y especifica un intervalo de tiempo de espera de 1000 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Reemplace `"www.cohowinery.com"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ninguna conexión de red está disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Dirección URL no era válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describe un conjunto de permisos de seguridad aplicados al código. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla los derechos para realizar o Aceptar conexiones en una dirección de transporte. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla el acceso a un componente de contador de rendimiento de Windows NT. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla el acceso a información de red y las estadísticas de tráfico para el equipo local. Enumeración asociada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">La dirección URL, nombre de equipo o número IP del servidor para hacer ping.</param>
        <param name="timeout">Umbral de tiempo en milisegundos para ponerse en contacto con el destino. El valor predeterminado es 500.</param>
        <summary>Hace ping en el servidor especificado.</summary>
        <returns><see langword="True" /> si el resultado de la operación es correcto; en el caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Ping` método no es un método a prueba de errores para determinar la disponibilidad de un equipo remoto: el puerto ping del equipo de destino puede desactivarse o la solicitud de ping puede estar bloqueada por un firewall o enrutador.  
  
 La dirección se pasa a la `Ping` método debe poder resolverse mediante DNS y no puede ir precedido por 'http://'.  
  
   
  
## Examples  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelve del método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Reemplace `"198.01.01.01"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelto del método `True` y especifica un intervalo de tiempo de espera de 1000 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Reemplace `"www.cohowinery.com"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ninguna conexión de red está disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Dirección URL no era válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describe un conjunto de permisos de seguridad aplicados al código. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla los derechos para realizar o Aceptar conexiones en una dirección de transporte. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla el acceso a un componente de contador de rendimiento de Windows NT. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla el acceso a información de red y las estadísticas de tráfico para el equipo local. Enumeración asociada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">El URI del servidor para hacer ping.</param>
        <param name="timeout">Umbral de tiempo en milisegundos para ponerse en contacto con el destino. El valor predeterminado es 500.</param>
        <summary>Hace ping en el servidor especificado.</summary>
        <returns><see langword="True" /> si el resultado de la operación es correcto; en el caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Ping` método no es un método a prueba de errores para determinar la disponibilidad de un equipo remoto: el puerto ping del equipo de destino puede desactivarse o la solicitud de ping puede estar bloqueada por un firewall o enrutador.  
  
 La dirección se pasa a la `Ping` método debe poder resolverse mediante DNS y no puede ir precedido por 'http://'.  
  
   
  
## Examples  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelve del método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Reemplace `"198.01.01.01"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 En este ejemplo informa de si se puede hacer ping en el servidor mediante la determinación de si el `Ping` devuelto del método `True` y especifica un intervalo de tiempo de espera de 1000 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Reemplace `"www.cohowinery.com"` con el nombre de equipo, dirección URL o dirección IP del servidor para hacer ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ninguna conexión de red está disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Dirección URL no era válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describe un conjunto de permisos de seguridad aplicados al código. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla los derechos para realizar o Aceptar conexiones en una dirección de transporte. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla el acceso a un componente de contador de rendimiento de Windows NT. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla el acceso a información de red y las estadísticas de tráfico para el equipo local. Enumeración asociada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para proporcionar credenciales de usuario o especificar un valor de tiempo de espera específico.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La ruta de acceso del archivo de origen no es válido.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para proporcionar credenciales de usuario o especificar un valor de tiempo de espera específico.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La ruta de acceso del archivo de origen no es válido.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para especificar un valor de tiempo de espera específico.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar una de las demás sobrecargas de los <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para especificar un valor de tiempo de espera específico.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde en el tiempo de espera predeterminado (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="networkCredentials">Credenciales de autenticación.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="networkCredentials">Credenciales de autenticación.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="onUserCancel">Acción que realiza cuando el usuario hace clic en **Cancelar**. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> para mostrar el progreso de la operación; en caso contrario <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="showUI">Si se debe mostrar el progreso de la operación. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="onUserCancel">Acción que realiza cuando el usuario hace clic en **Cancelar**. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ruta de acceso y nombre de archivo para cargarlo.</param>
        <param name="address">Dirección URL, dirección IP o identificador URI del servidor de destino.</param>
        <param name="userName">Nombre de usuario para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="password">Contraseña para autenticar. El valor predeterminado es una cadena vacía: <c>""</c>.</param>
        <param name="showUI">Si se debe mostrar el progreso de la operación. El valor predeterminado es <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tiempo de espera en milisegundos. Valor predeterminado es 100 segundos.</param>
        <param name="onUserCancel">Acción que realiza cuando el usuario hace clic en **Cancelar**. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envía el archivo especificado a la dirección de host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` está establecido en `True`, un cuadro de diálogo muestra el progreso de la operación e incluye un **cancelar** botón que el usuario puede hacer clic para cancelar la operación. Dado que el cuadro de diálogo no es modal, no bloquea la entrada del usuario a otras ventanas en el programa.  
  
 Si el servidor no responde dentro del intervalo especificado en `connectionTimeout`, la operación se cancela y se produce una excepción.  
  
 `My.Computer.Network.UploadFile` genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación. Para obtener más información, consulte [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  El protocolo FTP envía información, incluidas las contraseñas, en texto sin formato y no debe usarse para transmitir información confidencial.  
  
 La tabla siguiente muestra un ejemplo de una tarea que implica la `My.Computer.Network.UploadFile` método.  
  
|En|Vea|  
|-|-|  
|Cargar un archivo|[Cómo: Cargar un archivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este ejemplo carga el archivo `Order.txt` a `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 En este ejemplo se carga el archivo `Order.txt` en `http://www.cohowinery.com/uploads` sin indicar un nombre de usuario ni contraseña, se muestra el progreso de la carga y se cuenta con un intervalo de tiempo de espera de 500 milisegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> es menor o igual que cero.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> no incluye un nombre de archivo.</exception>
        <exception cref="T:System.Security.SecurityException">Usuario no tiene los permisos necesarios para realizar una operación de red.</exception>
        <exception cref="T:System.TimeoutException">El servidor no responde dentro de lo especificado <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Se deniega la solicitud al servidor web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla los permisos relacionados con las interfaces de usuario y al Portapapeles. Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla los derechos de acceso a los recursos HTTP de Internet. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procedimiento para descargar un archivo en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procedimiento para analizar rutas de acceso a archivos en Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>