<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b644441a905b59facf2927aa31ccc6cfcebf8aa1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4862e-101">Proporciona propiedades para obtener información sobre la memoria, los ensamblados cargados, el nombre y el sistema operativo del equipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4862e-101">Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-102">Las propiedades expuestas por el `My.Computer.Info` objeto devuelven información sobre el equipo desde el que se implementó la aplicación, tal y como se determina en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="4862e-102">The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time.</span></span> <span data-ttu-id="4862e-103">Normalmente, estos datos difieren de lo que estaba disponible en el equipo de desarrollo.</span><span class="sxs-lookup"><span data-stu-id="4862e-103">Typically, this data differs from what was available on the development computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-104">Este ejemplo se utiliza la `My.Computer.Info.AvailablePhysicalMemory` propiedad para mostrar la cantidad de memoria física disponible para el equipo en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="4862e-104">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4862e-105">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-105">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-106">Obtiene la cantidad total de memoria física disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-106">Gets the total amount of free physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-107">Un valor de tipo <see langword="ULong" /> que contiene el número de bytes de la memoria física disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-107">A <see langword="ULong" /> containing the number of bytes of free physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-108">El `My.Computer.Info.AvailablePhysicalMemory` propiedad requiere Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="4862e-108">The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-109">Este ejemplo se utiliza la `My.Computer.Info.AvailablePhysicalMemory` propiedad para mostrar la cantidad de memoria física disponible para el equipo en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="4862e-109">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="4862e-110">La aplicación no puede obtener el estado de la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-110">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-111">Obtiene la cantidad total del espacio de direcciones virtual que está disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-111">Gets the total amount of the computer's free virtual address space.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-112">Un valor de tipo <see langword="ULong" /> que contiene el número de bytes correspondientes al espacio de direcciones virtual que está disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-112">A <see langword="ULong" /> containing the number of bytes of the computer's free virtual address space.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-113">El `My.Computer.Info.AvailableVirtualMemory` propiedad requiere Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="4862e-113">The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-114">Este ejemplo se utiliza la `My.Computer.Info.AvailableVirtualMemory` propiedad para mostrar la cantidad de memoria virtual disponible para el equipo en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="4862e-114">This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="4862e-115">La aplicación no puede obtener el estado de la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-115">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-116">Obtiene la actual referencia cultural de la interfaz de usuario que está instalada con el sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-116">Gets the current UI culture installed with the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-117">Un objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural de la interfaz de usuario instalada en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-117">A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-118">El `My.Computer.Info.InstalledUICulture` propiedad tiene el mismo comportamiento que el <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4862e-118">The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="4862e-119">En un sistema operativo localizado, como el japonés de Windows 2000 Professional, esta propiedad devuelve la referencia cultural del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="4862e-119">In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-120">Este ejemplo se utiliza la `My.Computer.Info.InstalledUICulture` propiedad para mostrar el nombre de referencia cultural de interfaz de usuario del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="4862e-120">This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-121">Obtiene el nombre completo del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-121">Gets the full operating system name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-122">Un valor de tipo <see langword="String" /> que contiene el nombre del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-122">A <see langword="String" /> containing the operating-system name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-123">Esta propiedad devuelve información detallada sobre el nombre del sistema operativo si Instrumental de administración de Windows (WMI) está instalado en el equipo.</span><span class="sxs-lookup"><span data-stu-id="4862e-123">This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.</span></span> <span data-ttu-id="4862e-124">En caso contrario, esta propiedad devuelve la misma cadena que la `My.Computer.Info.OSPlatform` propiedad, que proporciona menos información detallada que WMI puede proporcionar.</span><span class="sxs-lookup"><span data-stu-id="4862e-124">Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-125">Este ejemplo se utiliza la `My.Computer.Info.OSFullName` propiedad para mostrar el nombre del equipo del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="4862e-125">This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4862e-126">El código de llamada no tiene plena confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-126">The calling code does not have full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="4862e-127">Controla la capacidad para tener acceso a archivos y carpetas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-127">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="4862e-128">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-128">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-129">Obtiene el identificador de plataforma correspondiente al sistema operativo del equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-129">Gets the platform identifier for the operating system of the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-130">Un valor de tipo <see langword="String" /> que contiene el identificador de plataforma correspondiente al sistema operativo del equipo, el cual se elige entre los nombres de los miembros de la enumeración <see cref="T:System.PlatformID" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-130">A <see langword="String" /> containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-131">El `My.Computer.Info.OSPlatform` propiedad proporciona una funcionalidad similar a la <xref:System.OperatingSystem.Platform%2A> propiedad del objeto devuelto por la <xref:System.Environment.OSVersion%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4862e-131">The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-132">Este ejemplo se utiliza la `My.Computer.Info.OSPlatform` propiedad para mostrar la plataforma del equipo del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="4862e-132">This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="4862e-133">La aplicación no puede obtener la información de la plataforma del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-133">The application cannot obtain the operating-system platform information.</span>
          </span>
        </exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-134">Obtiene la versión del sistema operativo del equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-134">Gets the version of the computer's operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-135">Un valor de tipo <see langword="String" /> que contiene el actual número de versión del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-135">A <see langword="String" /> containing the current version number of the operating system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-136">El `My.Computer.Info.OSVersion` propiedad da formato a la versión como "principal.secundaria.compilación.revisión".</span><span class="sxs-lookup"><span data-stu-id="4862e-136">The `My.Computer.Info.OSVersion` property formats the version as "major.minor.build.revision".</span></span>  
  
 <span data-ttu-id="4862e-137">El `My.Computer.Info.OSVersion` propiedad proporciona una funcionalidad similar a la <xref:System.OperatingSystem.Version%2A> propiedad del objeto devuelto por la <xref:System.Environment.OSVersion%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4862e-137">The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-138">Este ejemplo se utiliza la `My.Computer.Info.OSVersion` propiedad para mostrar la versión del equipo del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="4862e-138">This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="4862e-139">La aplicación no puede obtener la información de versión del sistema operativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-139">The application cannot obtain the operating-system version information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-140">Obtiene la cantidad total de memoria física en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-140">Gets the total amount of physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-141">Un valor de tipo <see langword="ULong" /> que contiene el número de bytes de la memoria física en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-141">A <see langword="ULong" /> containing the number of bytes of physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-142">El `My.Computer.Info.TotalPhysicalMemory` propiedad requiere Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="4862e-142">The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-143">Este ejemplo se utiliza la `My.Computer.Info.TotalPhysicalMemory` propiedad para mostrar la cantidad total de memoria física disponible para el equipo en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="4862e-143">This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="4862e-144">La aplicación no puede obtener el estado de la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-144">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4862e-145">Obtiene la cantidad total de espacio de direcciones virtual que está disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-145">Gets the total amount of virtual address space available for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4862e-146">Un valor de tipo <see langword="ULong" /> que contiene el número de bytes correspondientes al espacio de direcciones virtual que está disponible en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-146">A <see langword="ULong" /> containing the number of bytes of virtual address space available for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4862e-147">El `My.Computer.Info.TotalVirtualMemory` propiedad requiere Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server o Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="4862e-147">The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4862e-148">Este ejemplo se utiliza la `My.Computer.Info.TotalVirtualMemory` propiedad para mostrar la cantidad total de memoria virtual para el equipo en el que se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="4862e-148">This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="4862e-149">La aplicación no puede obtener el estado de la memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4862e-149">The application cannot obtain the memory status.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>